<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2013.1.4 (Build 801)" ts="2017-10-31 08:38:20">
<Class name="HTML.js.jquery.v112.jQueryUI">
<Description><![CDATA[
   SystemList={ALL}   
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
Пример вызова из CacheCSP:
     <script src='HTML.js.jquery.v112.jQueryUI.cls'></script>]]></Description>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeChanged>64306,56254.436735</TimeChanged>
<TimeCreated>64188,45896.599868</TimeCreated>

<Parameter name="Frag6980641884580311395830626">
<Default>Y3NzKCAidG9wIiApICk7CgoJCWlmICggby5jb250YWlubWVudCApIHsKCQkJY3VybGVmdCArPSAk
KCBvLmNvbnRhaW5tZW50ICkuc2Nyb2xsTGVmdCgpIHx8IDA7CgkJCWN1cnRvcCArPSAkKCBvLmNv
bnRhaW5tZW50ICkuc2Nyb2xsVG9wKCkgfHwgMDsKCQl9CgoJCXRoaXMub2Zmc2V0ID0gdGhpcy5o
ZWxwZXIub2Zmc2V0KCk7CgkJdGhpcy5wb3NpdGlvbiA9IHsgbGVmdDogY3VybGVmdCwgdG9wOiBj
dXJ0b3AgfTsKCgkJdGhpcy5zaXplID0gdGhpcy5faGVscGVyID8gewoJCQkJd2lkdGg6IHRoaXMu
aGVscGVyLndpZHRoKCksCgkJCQloZWlnaHQ6IHRoaXMuaGVscGVyLmhlaWdodCgpCgkJCX0gOiB7
CgkJCQl3aWR0aDogZWwud2lkdGgoKSwKCQkJCWhlaWdodDogZWwuaGVpZ2h0KCkKCQkJfTsKCgkJ
dGhpcy5vcmlnaW5hbFNpemUgPSB0aGlzLl9oZWxwZXIgPyB7CgkJCQl3aWR0aDogZWwub3V0ZXJX
aWR0aCgpLAoJCQkJaGVpZ2h0OiBlbC5vdXRlckhlaWdodCgpCgkJCX0gOiB7CgkJCQl3aWR0aDog
ZWwud2lkdGgoKSwKCQkJCWhlaWdodDogZWwuaGVpZ2h0KCkKCQkJfTsKCgkJdGhpcy5zaXplRGlm
ZiA9IHsKCQkJd2lkdGg6IGVsLm91dGVyV2lkdGgoKSAtIGVsLndpZHRoKCksCgkJCWhlaWdodDog
ZWwub3V0ZXJIZWlnaHQoKSAtIGVsLmhlaWdodCgpCgkJfTsKCgkJdGhpcy5vcmlnaW5hbFBvc2l0
aW9uID0geyBsZWZ0OiBjdXJsZWZ0LCB0b3A6IGN1cnRvcCB9OwoJCXRoaXMub3JpZ2luYWxNb3Vz
ZVBvc2l0aW9uID0geyBsZWZ0OiBldmVudC5wYWdlWCwgdG9wOiBldmVudC5wYWdlWSB9OwoKCQl0
aGlzLmFzcGVjdFJhdGlvID0gKCB0eXBlb2Ygby5hc3BlY3RSYXRpbyA9PT0gIm51bWJlciIgKSA/
CgkJCW8uYXNwZWN0UmF0aW8gOgoJCQkoICggdGhpcy5vcmlnaW5hbFNpemUud2lkdGggLyB0aGlz
Lm9yaWdpbmFsU2l6ZS5oZWlnaHQgKSB8fCAxICk7CgoJCWN1cnNvciA9ICQoICIudWktcmVzaXph
YmxlLSIgKyB0aGlzLmF4aXMgKS5jc3MoICJjdXJzb3IiICk7CgkJJCggImJvZHkiICkuY3NzKCAi
Y3Vyc29yIiwgY3Vyc29yID09PSAiYXV0byIgPyB0aGlzLmF4aXMgKyAiLXJlc2l6ZSIgOiBjdXJz
b3IgKTsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1yZXNpemFibGUtcmVzaXppbmciICk7CgkJdGhp
cy5fcHJvcGFnYXRlKCAic3RhcnQiLCBldmVudCApOwoJCXJldHVybiB0cnVlOwoJfSwKCglfbW91
c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBkYXRhLCBwcm9wcywKCQkJc21wID0g
dGhpcy5vcmlnaW5hbE1vdXNlUG9zaXRpb24sCgkJCWEgPSB0aGlzLmF4aXMsCgkJCWR4ID0gKCBl
dmVudC5wYWdlWCAtIHNtcC5sZWZ0ICkgfHwgMCwKCQkJZHkgPSAoIGV2ZW50LnBhZ2VZIC0gc21w
LnRvcCApIHx8IDAsCgkJCXRyaWdnZXIgPSB0aGlzLl9jaGFuZ2VbIGEgXTsKCgkJdGhpcy5fdXBk
YXRlUHJldlByb3BlcnRpZXMoKTsKCgkJaWYgKCAhdHJpZ2dlciApIHsKCQkJcmV0dXJuIGZhbHNl
OwoJCX0KCgkJZGF0YSA9IHRyaWdnZXIuYXBwbHkoIHRoaXMsIFsgZXZlbnQsIGR4LCBkeSBdICk7
CgoJCXRoaXMuX3VwZGF0ZVZpcnR1YWxCb3VuZGFyaWVzKCBldmVudC5zaGlmdEtleSApOwoJCWlm
ICggdGhpcy5fYXNwZWN0UmF0aW8gfHwgZXZlbnQuc2hpZnRLZXkgKSB7CgkJCWRhdGEgPSB0aGlz
Ll91cGRhdGVSYXRpbyggZGF0YSwgZXZlbnQgKTsKCQl9CgoJCWRhdGEgPSB0aGlzLl9yZXNwZWN0
U2l6ZSggZGF0YSwgZXZlbnQgKTsKCgkJdGhpcy5fdXBkYXRlQ2FjaGUoIGRhdGEgKTsKCgkJdGhp
cy5fcHJvcGFnYXRlKCAicmVzaXplIiwgZXZlbnQgKTsKCgkJcHJvcHMgPSB0aGlzLl9hcHBseUNo
YW5nZXMoKTsKCgkJaWYgKCAhdGhpcy5faGVscGVyICYmIHRoaXMuX3Byb3BvcnRpb25hbGx5UmVz
aXplRWxlbWVudHMubGVuZ3RoICkgewoJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOwoJ
CX0KCgkJaWYgKCAhJC5pc0VtcHR5T2JqZWN0KCBwcm9wcyApICkgewoJCQl0aGlzLl91cGRhdGVQ
cmV2UHJvcGVydGllcygpOwoJCQl0aGlzLl90cmlnZ2VyKCAicmVzaXplIiwgZXZlbnQsIHRoaXMu
dWkoKSApOwoJCQl0aGlzLl9hcHBseUNoYW5nZXMoKTsKCQl9CgoJCXJldHVybiBmYWxzZTsKCX0s
CgoJX21vdXNlU3RvcDogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQl0aGlzLnJlc2l6aW5nID0gZmFs
c2U7CgkJdmFyIHByLCBpc3RhLCBzb2Zmc2V0aCwgc29mZnNldHcsIHMsIGxlZnQsIHRvcCwKCQkJ
byA9IHRoaXMub3B0aW9ucywgdGhhdCA9IHRoaXM7CgoJCWlmICggdGhpcy5faGVscGVyICkgewoK
CQkJcHIgPSB0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzOwoJCQlpc3RhID0gcHIu
bGVuZ3RoICYmICggL3RleHRhcmVhL2kgKS50ZXN0KCBwclsgMCBdLm5vZGVOYW1lICk7CgkJCXNv
ZmZzZXRoID0gaXN0YSAmJiB0aGlzLl9oYXNTY3JvbGwoIHByWyAwIF0sICJsZWZ0IiApID8gMCA6
IHRoYXQuc2l6ZURpZmYuaGVpZ2h0OwoJCQlzb2Zmc2V0dyA9IGlzdGEgPyAwIDogdGhhdC5zaXpl
RGlmZi53aWR0aDsKCgkJCXMgPSB7CgkJCQl3aWR0aDogKCB0aGF0LmhlbHBlci53aWR0aCgpICAt
IHNvZmZzZXR3ICksCgkJCQloZWlnaHQ6ICggdGhhdC5oZWxwZXIuaGVpZ2h0KCkgLSBzb2Zmc2V0
aCApCgkJCX07CgkJCWxlZnQgPSAoIHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJsZWZ0
IiApICkgKwoJCQkJKCB0aGF0LnBvc2l0aW9uLmxlZnQgLSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24u
bGVmdCApICkgfHwgbnVsbDsKCQkJdG9wID0gKCBwYXJzZUZsb2F0KCB0aGF0LmVsZW1lbnQuY3Nz
KCAidG9wIiApICkgKwoJCQkJKCB0aGF0LnBvc2l0aW9uLnRvcCAtIHRoYXQub3JpZ2luYWxQb3Np
dGlvbi50b3AgKSApIHx8IG51bGw7CgoJCQlpZiAoICFvLmFuaW1hdGUgKSB7CgkJCQl0aGlzLmVs
ZW1lbnQuY3NzKCAkLmV4dGVuZCggcywgeyB0b3A6IHRvcCwgbGVmdDogbGVmdCB9ICkgKTsKCQkJ
fQoKCQkJdGhhdC5oZWxwZXIuaGVpZ2h0KCB0aGF0LnNpemUuaGVpZ2h0ICk7CgkJCXRoYXQuaGVs
cGVyLndpZHRoKCB0aGF0LnNpemUud2lkdGggKTsKCgkJCWlmICggdGhpcy5faGVscGVyICYmICFv
LmFuaW1hdGUgKSB7CgkJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOwoJCQl9CgkJfQoK
CQkkKCAiYm9keSIgKS5jc3MoICJjdXJzb3IiLCAiYXV0byIgKTsKCgkJdGhpcy5fcmVtb3ZlQ2xh
c3MoICJ1aS1yZXNpemFibGUtcmVzaXppbmciICk7CgoJCXRoaXMuX3Byb3BhZ2F0ZSggInN0b3Ai
LCBldmVudCApOwoKCQlpZiAoIHRoaXMuX2hlbHBlciApIHsKCQkJdGhpcy5oZWxwZXIucmVtb3Zl
KCk7CgkJfQoKCQlyZXR1cm4gZmFsc2U7CgoJfSwKCglfdXBkYXRlUHJldlByb3BlcnRpZXM6IGZ1
bmN0aW9uKCkgewoJCXRoaXMucHJldlBvc2l0aW9uID0gewoJCQl0b3A6IHRoaXMucG9zaXRpb24u
dG9wLAoJCQlsZWZ0OiB0aGlzLnBvc2l0aW9uLmxlZnQKCQl9OwoJCXRoaXMucHJldlNpemUgPSB7
CgkJCXdpZHRoOiB0aGlzLnNpemUud2lkdGgsCgkJCWhlaWdodDogdGhpcy5zaXplLmhlaWdodAoJ
CX07Cgl9LAoKCV9hcHBseUNoYW5nZXM6IGZ1bmN0aW9uKCkgewoJCXZhciBwcm9wcyA9IHt9OwoK
CQlpZiAoIHRoaXMucG9zaXRpb24udG9wICE9PSB0aGlzLnByZXZQb3NpdGlvbi50b3AgKSB7CgkJ
CXByb3BzLnRvcCA9IHRoaXMucG9zaXRpb24udG9wICsgInB4IjsKCQl9CgkJaWYgKCB0aGlzLnBv
c2l0aW9uLmxlZnQgIT09IHRoaXMucHJldlBvc2l0aW9uLmxlZnQgKSB7CgkJCXByb3BzLmxlZnQg
PSB0aGlzLnBvc2l0aW9uLmxlZnQgKyAicHgiOwoJCX0KCQlpZiAoIHRoaXMuc2l6ZS53aWR0aCAh
PT0gdGhpcy5wcmV2U2l6ZS53aWR0aCApIHsKCQkJcHJvcHMud2lkdGggPSB0aGlzLnNpemUud2lk
dGggKyAicHgiOwoJCX0KCQlpZiAoIHRoaXMuc2l6ZS5oZWlnaHQgIT09IHRoaXMucHJldlNpemUu
aGVpZ2h0ICkgewoJCQlwcm9wcy5oZWlnaHQgPSB0aGlzLnNpemUuaGVpZ2h0ICsgInB4IjsKCQl9
CgoJCXRoaXMuaGVscGVyLmNzcyggcHJvcHMgKTsKCgkJcmV0dXJuIHByb3BzOwoJfSwKCglfdXBk
YXRlVmlydHVhbEJvdW5kYXJpZXM6IGZ1bmN0aW9uKCBmb3JjZUFzcGVjdFJhdGlvICkgewoJCXZh
ciBwTWluV2lkdGgsIHBNYXhXaWR0aCwgcE1pbkhlaWdodCwgcE1heEhlaWdodCwgYiwKCQkJbyA9
IHRoaXMub3B0aW9uczsKCgkJYiA9IHsKCQkJbWluV2lkdGg6IHRoaXMuX2lzTnVtYmVyKCBvLm1p
bldpZHRoICkgPyBvLm1pbldpZHRoIDogMCwKCQkJbWF4V2lkdGg6IHRoaXMuX2lzTnVtYmVyKCBv
Lm1heFdpZHRoICkgPyBvLm1heFdpZHRoIDogSW5maW5pdHksCgkJCW1pbkhlaWdodDogdGhpcy5f
aXNOdW1iZXIoIG8ubWluSGVpZ2h0ICkgPyBvLm1pbkhlaWdodCA6IDAsCgkJCW1heEhlaWdodDog
dGhpcy5faXNOdW1iZXIoIG8ubWF4SGVpZ2h0ICkgPyBvLm1heEhlaWdodCA6IEluZmluaXR5CgkJ
fTsKCgkJaWYgKCB0aGlzLl9hc3BlY3RSYXRpbyB8fCBmb3JjZUFzcGVjdFJhdGlvICkgewoJCQlw
TWluV2lkdGggPSBiLm1pbkhlaWdodCAqIHRoaXMuYXNwZWN0UmF0aW87CgkJCXBNaW5IZWlnaHQg
PSBiLm1pbldpZHRoIC8gdGhpcy5hc3BlY3RSYXRpbzsKCQkJcE1heFdpZHRoID0gYi5tYXhIZWln
aHQgKiB0aGlzLmFzcGVjdFJhdGlvOwoJCQlwTWF4SGVpZ2h0ID0gYi5tYXhXaWR0aCAvIHRoaXMu
YXNwZWN0UmF0aW87CgoJCQlpZiAoIHBNaW5XaWR0aCA+IGIubWluV2lkdGggKSB7CgkJCQliLm1p
bldpZHRoID0gcE1pbldpZHRoOwoJCQl9CgkJCWlmICggcE1pbkhlaWdodCA+IGIubWluSGVpZ2h0
ICkgewoJCQkJYi5taW5IZWlnaHQgPSBwTWluSGVpZ2h0OwoJCQl9CgkJCWlmICggcE1heFdpZHRo
IDwgYi5tYXhXaWR0aCApIHsKCQkJCWIubWF4V2lkdGggPSBwTWF4V2lkdGg7CgkJCX0KCQkJaWYg
KCBwTWF4SGVpZ2h0IDwgYi5tYXhIZWlnaHQgKSB7CgkJCQliLm1heEhlaWdodCA9IHBNYXhIZWln
aHQ7CgkJCX0KCQl9CgkJdGhpcy5fdkJvdW5kYXJpZXMgPSBiOwoJfSwKCglfdXBkYXRlQ2FjaGU6
IGZ1bmN0aW9uKCBkYXRhICkgewoJCXRoaXMub2Zmc2V0ID0gdGhpcy5oZWxwZXIub2Zmc2V0KCk7
CgkJaWYgKCB0aGlzLl9pc051bWJlciggZGF0YS5sZWZ0ICkgKSB7CgkJCXRoaXMucG9zaXRpb24u
bGVmdCA9IGRhdGEubGVmdDsKCQl9CgkJaWYgKCB0aGlzLl9pc051bWJlciggZGF0YS50b3AgKSAp
IHsKCQkJdGhpcy5wb3NpdGlvbi50b3AgPSBkYXRhLnRvcDsKCQl9CgkJaWYgKCB0aGlzLl9pc051
bWJlciggZGF0YS5oZWlnaHQgKSApIHsKCQkJdGhpcy5zaXplLmhlaWdodCA9IGRhdGEuaGVpZ2h0
OwoJCX0KCQlpZiAoIHRoaXMuX2lzTnVtYmVyKCBkYXRhLndpZHRoICkgKSB7CgkJCXRoaXMuc2l6
ZS53aWR0aCA9IGRhdGEud2lkdGg7CgkJfQoJfSwKCglfdXBkYXRlUmF0aW86IGZ1bmN0aW9uKCBk
YXRhICkgewoKCQl2YXIgY3BvcyA9IHRoaXMucG9zaXRpb24sCgkJCWNzaXplID0gdGhpcy5zaXpl
LAoJCQlhID0gdGhpcy5heGlzOwoKCQlpZiAoIHRoaXMuX2lzTnVtYmVyKCBkYXRhLmhlaWdodCAp
ICkgewoJCQlkYXRhLndpZHRoID0gKCBkYXRhLmhlaWdodCAqIHRoaXMuYXNwZWN0UmF0aW8gKTsK
CQl9IGVsc2UgaWYgKCB0aGlzLl9pc051bWJlciggZGF0YS53aWR0aCApICkgewoJCQlkYXRhLmhl
aWdodCA9ICggZGF0YS53aWR0aCAvIHRoaXMuYXNwZWN0UmF0aW8gKTsKCQl9CgoJCWlmICggYSA9
PT0gInN3IiApIHsKCQkJZGF0YS5sZWZ0ID0gY3Bvcy5sZWZ0ICsgKCBjc2l6ZS53aWR0aCAtIGRh
dGEud2lkdGggKTsKCQkJZGF0YS50b3AgPSBudWxsOwoJCX0KCQlpZiAoIGEgPT09ICJudyIgKSB7
CgkJCWRhdGEudG9wID0gY3Bvcy50b3AgKyAoIGNzaXplLmhlaWdodCAtIGRhdGEuaGVpZ2h0ICk7
CgkJCWRhdGEubGVmdCA9IGNwb3MubGVmdCArICggY3NpemUud2lkdGggLSBkYXRhLndpZHRoICk7
CgkJfQoKCQlyZXR1cm4gZGF0YTsKCX0sCgoJX3Jlc3BlY3RTaXplOiBmdW5jdGlvbiggZGF0YSAp
IHsKCgkJdmFyIG8gPSB0aGlzLl92Qm91bmRhcmllcywKCQkJYSA9IHRoaXMuYXhpcywKCQkJaXNt
YXh3ID0gdGhpcy5faXNOdW1iZXIoIGRhdGEud2lkdGggKSAmJiBvLm1heFdpZHRoICYmICggby5t
YXhXaWR0aCA8IGRhdGEud2lkdGggKSwKCQkJaXNtYXhoID0gdGhpcy5faXNOdW1iZXIoIGRhdGEu
aGVpZ2h0ICkgJiYgby5tYXhIZWlnaHQgJiYgKCBvLm1heEhlaWdodCA8IGRhdGEuaGVpZ2h0ICks
CgkJCWlzbWludyA9IHRoaXMuX2lzTnVtYmVyKCBkYXRhLndpZHRoICkgJiYgby5taW5XaWR0aCAm
JiAoIG8ubWluV2lkdGggPiBkYXRhLndpZHRoICksCgkJCWlzbWluaCA9IHRoaXMuX2lzTnVtYmVy
KCBkYXRhLmhlaWdodCApICYmIG8ubWluSGVpZ2h0ICYmICggby5taW5IZWlnaHQgPiBkYXRhLmhl
aWdodCApLAoJCQlkdyA9IHRoaXMub3JpZ2luYWxQb3NpdGlvbi5sZWZ0ICsgdGhpcy5vcmlnaW5h
bFNpemUud2lkdGgsCgkJCWRoID0gdGhpcy5vcmlnaW5hbFBvc2l0aW9uLnRvcCArIHRoaXMub3Jp
Z2luYWxTaXplLmhlaWdodCwKCQkJY3cgPSAvc3d8bnd8dy8udGVzdCggYSApLCBjaCA9IC9ud3xu
ZXxuLy50ZXN0KCBhICk7CgkJaWYgKCBpc21pbncgKSB7CgkJCWRhdGEud2lkdGggPSBvLm1pbldp
ZHRoOwoJCX0KCQlpZiAoIGlzbWluaCApIHsKCQkJZGF0YS5oZWlnaHQgPSBvLm1pbkhlaWdodDsK
CQl9CgkJaWYgKCBpc21heHcgKSB7CgkJCWRhdGEud2lkdGggPSBvLm1heFdpZHRoOwoJCX0KCQlp
ZiAoIGlzbWF4aCApIHsKCQkJZGF0YS5oZWlnaHQgPSBvLm1heEhlaWdodDsKCQl9CgoJCWlmICgg
aXNtaW53ICYmIGN3ICkgewoJCQlkYXRhLmxlZnQgPSBkdyAtIG8ubWluV2lkdGg7CgkJfQoJCWlm
ICggaXNtYXh3ICYmIGN3ICkgewoJCQlkYXRhLmxlZnQgPSBkdyAtIG8ubWF4V2lkdGg7CgkJfQoJ
CWlmICggaXNtaW5oICYmIGNoICkgewoJCQlkYXRhLnRvcCA9IGRoIC0gby5taW5IZWlnaHQ7CgkJ
fQoJCWlmICggaXNtYXhoICYmIGNoICkgewoJCQlkYXRhLnRvcCA9IGRoIC0gby5tYXhIZWlnaHQ7
CgkJfQoKCQkvLyBGaXhpbmcganVtcCBlcnJvciBvbiB0b3AvbGVmdCAtIGJ1ZyAjMjMzMAoJCWlm
ICggIWRhdGEud2lkdGggJiYgIWRhdGEuaGVpZ2h0ICYmICFkYXRhLmxlZnQgJiYgZGF0YS50b3Ag
KSB7CgkJCWRhdGEudG9wID0gbnVsbDsKCQl9IGVsc2UgaWYgKCAhZGF0YS53aWR0aCAmJiAhZGF0
YS5oZWlnaHQgJiYgIWRhdGEudG9wICYmIGRhdGEubGVmdCApIHsKCQkJZGF0YS5sZWZ0ID0gbnVs
bDsKCQl9CgoJCXJldHVybiBkYXRhOwoJfSwKCglfZ2V0UGFkZGluZ1BsdXNCb3JkZXJEaW1lbnNp
b25zOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQl2YXIgaSA9IDAsCgkJCXdpZHRocyA9IFtdLAoJ
CQlib3JkZXJzID0gWwoJCQkJZWxlbWVudC5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwKCQkJCWVs
ZW1lbnQuY3NzKCAiYm9yZGVyUmlnaHRXaWR0aCIgKSwKCQkJCWVsZW1lbnQuY3NzKCAiYm9yZGVy
Qm90dG9tV2lkdGgiICksCgkJCQllbGVtZW50LmNzcyggImJvcmRlckxlZnRXaWR0aCIgKQoJCQld
LAoJCQlwYWRkaW5ncyA9IFsKCQkJCWVsZW1lbnQuY3NzKCAicGFkZGluZ1RvcCIgKSwKCQkJCWVs
ZW1lbnQuY3NzKCAicGFkZGluZ1JpZ2h0IiApLAoJCQkJZWxlbWVudC5jc3MoICJwYWRkaW5nQm90
dG9tIiApLAoJCQkJZWxlbWVudC5jc3MoICJwYWRkaW5nTGVmdCIgKQoJCQldOwoKCQlmb3IgKCA7
IGkgPCA0OyBpKysgKSB7CgkJCXdpZHRoc1sgaSBdID0gKCBwYXJzZUZsb2F0KCBib3JkZXJzWyBp
IF0gKSB8fCAwICk7CgkJCXdpZHRoc1sgaSBdICs9ICggcGFyc2VGbG9hdCggcGFkZGluZ3NbIGkg
XSApIHx8IDAgKTsKCQl9CgoJCXJldHVybiB7CgkJCWhlaWdodDogd2lkdGhzWyAwIF0gKyB3aWR0
aHNbIDIgXSwKCQkJd2lkdGg6IHdpZHRoc1sgMSBdICsgd2lkdGhzWyAzIF0KCQl9OwoJfSwKCglf
cHJvcG9ydGlvbmFsbHlSZXNpemU6IGZ1bmN0aW9uKCkgewoKCQlpZiAoICF0aGlzLl9wcm9wb3J0
aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdmFyIHBy
ZWwsCgkJCWkgPSAwLAoJCQllbGVtZW50ID0gdGhpcy5oZWxwZXIgfHwgdGhpcy5lbGVtZW50OwoK
CQlmb3IgKCA7IGkgPCB0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aDsg
aSsrICkgewoKCQkJcHJlbCA9IHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHNbIGkg
XTsKCgkJCS8vIFRPRE86IFNlZW1zIGxpa2UgYSBidWcgdG8gY2FjaGUgdGhpcy5vdXRlckRpbWVu
c2lvbnMKCQkJLy8gY29uc2lkZXJpbmcgdGhhdCB3ZSBhcmUgaW4gYSBsb29wLgoJCQlpZiAoICF0
aGlzLm91dGVyRGltZW5zaW9ucyApIHsKCQkJCXRoaXMub3V0ZXJEaW1lbnNpb25zID0gdGhpcy5f
Z2V0UGFkZGluZ1BsdXNCb3JkZXJEaW1lbnNpb25zKCBwcmVsICk7CgkJCX0KCgkJCXByZWwuY3Nz
KCB7CgkJCQloZWlnaHQ6ICggZWxlbWVudC5oZWlnaHQoKSAtIHRoaXMub3V0ZXJEaW1lbnNpb25z
LmhlaWdodCApIHx8IDAsCgkJCQl3aWR0aDogKCBlbGVtZW50LndpZHRoKCkgLSB0aGlzLm91dGVy
RGltZW5zaW9ucy53aWR0aCApIHx8IDAKCQkJfSApOwoKCQl9CgoJfSwKCglfcmVuZGVyUHJveHk6
IGZ1bmN0aW9uKCkgewoKCQl2YXIgZWwgPSB0aGlzLmVsZW1lbnQsIG8gPSB0aGlzLm9wdGlvbnM7
CgkJdGhpcy5lbGVtZW50T2Zmc2V0ID0gZWwub2Zmc2V0KCk7CgoJCWlmICggdGhpcy5faGVscGVy
ICkgewoKCQkJdGhpcy5oZWxwZXIgPSB0aGlzLmhlbHBlciB8fCAkKCAiPGRpdiBzdHlsZT0nb3Zl
cmZsb3c6aGlkZGVuOyc+PC9kaXY+IiApOwoKCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuaGVscGVy
LCB0aGlzLl9oZWxwZXIgKTsKCQkJdGhpcy5oZWxwZXIuY3NzKCB7CgkJCQl3aWR0aDogdGhpcy5l
bGVtZW50Lm91dGVyV2lkdGgoKSwKCQkJCWhlaWdodDogdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0
KCksCgkJCQlwb3NpdGlvbjogImFic29sdXRlIiwKCQkJCWxlZnQ6IHRoaXMuZWxlbWVudE9mZnNl
dC5sZWZ0ICsgInB4IiwKCQkJCXRvcDogdGhpcy5lbGVtZW50T2Zmc2V0LnRvcCArICJweCIsCgkJ
CQl6SW5kZXg6ICsrby56SW5kZXggLy9UT0RPOiBEb24ndCBtb2RpZnkgb3B0aW9uCgkJCX0gKTsK
CgkJCXRoaXMuaGVscGVyCgkJCQkuYXBwZW5kVG8oICJib2R5IiApCgkJCQkuZGlzYWJsZVNlbGVj
dGlvbigpOwoKCQl9IGVsc2UgewoJCQl0aGlzLmhlbHBlciA9IHRoaXMuZWxlbWVudDsKCQl9CgoJ
fSwKCglfY2hhbmdlOiB7CgkJZTogZnVuY3Rpb24oIGV2ZW50LCBkeCApIHsKCQkJcmV0dXJuIHsg
d2lkdGg6IHRoaXMub3JpZ2luYWxTaXplLndpZHRoICsgZHggfTsKCQl9LAoJCXc6IGZ1bmN0aW9u
KCBldmVudCwgZHggKSB7CgkJCXZhciBjcyA9IHRoaXMub3JpZ2luYWxTaXplLCBzcCA9IHRoaXMu
b3JpZ2luYWxQb3NpdGlvbjsKCQkJcmV0dXJuIHsgbGVmdDogc3AubGVmdCArIGR4LCB3aWR0aDog
Y3Mud2lkdGggLSBkeCB9OwoJCX0sCgkJbjogZnVuY3Rpb24oIGV2ZW50LCBkeCwgZHkgKSB7CgkJ
CXZhciBjcyA9IHRoaXMub3JpZ2luYWxTaXplLCBzcCA9IHRoaXMub3JpZ2luYWxQb3NpdGlvbjsK
CQkJcmV0dXJuIHsgdG9wOiBzcC50b3AgKyBkeSwgaGVpZ2h0OiBjcy5oZWlnaHQgLSBkeSB9OwoJ
CX0sCgkJczogZnVuY3Rpb24oIGV2ZW50LCBkeCwgZHkgKSB7CgkJCXJldHVybiB7IGhlaWdodDog
dGhpcy5vcmlnaW5hbFNpemUuaGVpZ2h0ICsgZHkgfTsKCQl9LAoJCXNlOiBmdW5jdGlvbiggZXZl
bnQsIGR4LCBkeSApIHsKCQkJcmV0dXJuICQuZXh0ZW5kKCB0aGlzLl9jaGFuZ2Uucy5hcHBseSgg
dGhpcywgYXJndW1lbnRzICksCgkJCQl0aGlzLl9jaGFuZ2UuZS5hcHBseSggdGhpcywgWyBldmVu
dCwgZHgsIGR5IF0gKSApOwoJCX0sCgkJc3c6IGZ1bmN0aW9uKCBldmVudCwgZHgsIGR5ICkgewoJ
CQlyZXR1cm4gJC5leHRlbmQoIHRoaXMuX2NoYW5nZS5zLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMg
KSwKCQkJCXRoaXMuX2NoYW5nZS53LmFwcGx5KCB0aGlzLCBbIGV2ZW50LCBkeCwgZHkgXSApICk7
CgkJfSwKCQluZTogZnVuY3Rpb24oIGV2ZW50LCBkeCwgZHkgKSB7CgkJCXJldHVybiAkLmV4dGVu
ZCggdGhpcy5fY2hhbmdlLm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApLAoJCQkJdGhpcy5fY2hh
bmdlLmUuYXBwbHkoIHRoaXMsIFsgZXZlbnQsIGR4LCBkeSBdICkgKTsKCQl9LAoJCW53OiBmdW5j
dGlvbiggZXZlbnQsIGR4LCBkeSApIHsKCQkJcmV0dXJuICQuZXh0ZW5kKCB0aGlzLl9jaGFuZ2Uu
bi5hcHBseSggdGhpcywgYXJndW1lbnRzICksCgkJCQl0aGlzLl9jaGFuZ2Uudy5hcHBseSggdGhp
cywgWyBldmVudCwgZHgsIGR5IF0gKSApOwoJCX0KCX0sCgoJX3Byb3BhZ2F0ZTogZnVuY3Rpb24o
IG4sIGV2ZW50ICkgewoJCSQudWkucGx1Z2luLmNhbGwoIHRoaXMsIG4sIFsgZXZlbnQsIHRoaXMu
dWkoKSBdICk7CgkJKCBuICE9PSAicmVzaXplIiAmJiB0aGlzLl90cmlnZ2VyKCBuLCBldmVudCwg
dGhpcy51aSgpICkgKTsKCX0sCgoJcGx1Z2luczoge30sCgoJdWk6IGZ1bmN0aW9uKCkgewoJCXJl
dHVybiB7CgkJCW9yaWdpbmFsRWxlbWVudDogdGhpcy5vcmlnaW5hbEVsZW1lbnQsCgkJCWVsZW1l
bnQ6IHRoaXMuZWxlbWVudCwKCQkJaGVscGVyOiB0aGlzLmhlbHBlciwKCQkJcG9zaXRpb246IHRo
aXMucG9zaXRpb24sCgkJCXNpemU6IHRoaXMuc2l6ZSwKCQkJb3JpZ2luYWxTaXplOiB0aGlzLm9y
aWdpbmFsU2l6ZSwKCQkJb3JpZ2luYWxQb3NpdGlvbjogdGhpcy5vcmlnaW5hbFBvc2l0aW9uCgkJ
fTsKCX0KCn0gKTsKCi8qCiAqIFJlc2l6YWJsZSBFeHRlbnNpb25zCiAqLwoKJC51aS5wbHVnaW4u
YWRkKCAicmVzaXphYmxlIiwgImFuaW1hdGUiLCB7CgoJc3RvcDogZnVuY3Rpb24oIGV2ZW50ICkg
ewoJCXZhciB0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLAoJCQlvID0g
dGhhdC5vcHRpb25zLAoJCQlwciA9IHRoYXQuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMs
CgkJCWlzdGEgPSBwci5sZW5ndGggJiYgKCAvdGV4dGFyZWEvaSApLnRlc3QoIHByWyAwIF0ubm9k
ZU5hbWUgKSwKCQkJc29mZnNldGggPSBpc3RhICYmIHRoYXQuX2hhc1Njcm9sbCggcHJbIDAgXSwg
ImxlZnQiICkgPyAwIDogdGhhdC5zaXplRGlmZi5oZWlnaHQsCgkJCXNvZmZzZXR3ID0gaXN0YSA/
IDAgOiB0aGF0LnNpemVEaWZmLndpZHRoLAoJCQlzdHlsZSA9IHsKCQkJCXdpZHRoOiAoIHRoYXQu
c2l6ZS53aWR0aCAtIHNvZmZzZXR3ICksCgkJCQloZWlnaHQ6ICggdGhhdC5zaXplLmhlaWdodCAt
IHNvZmZzZXRoICkKCQkJfSwKCQkJbGVmdCA9ICggcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNz
cyggImxlZnQiICkgKSArCgkJCQkoIHRoYXQucG9zaXRpb24ubGVmdCAtIHRoYXQub3JpZ2luYWxQ
b3NpdGlvbi5sZWZ0ICkgKSB8fCBudWxsLAoJCQl0b3AgPSAoIHBhcnNlRmxvYXQoIHRoYXQuZWxl
bWVudC5jc3MoICJ0b3AiICkgKSArCgkJCQkoIHRoYXQucG9zaXRpb24udG9wIC0gdGhhdC5vcmln
aW5hbFBvc2l0aW9uLnRvcCApICkgfHwgbnVsbDsKCgkJdGhhdC5lbGVtZW50LmFuaW1hdGUoCgkJ
CSQuZXh0ZW5kKCBzdHlsZSwgdG9wICYmIGxlZnQgPyB7IHRvcDogdG9wLCBsZWZ0OiBsZWZ0IH0g
OiB7fSApLCB7CgkJCQlkdXJhdGlvbjogby5hbmltYXRlRHVyYXRpb24sCgkJCQllYXNpbmc6IG8u
YW5pbWF0ZUVhc2luZywKCQkJCXN0ZXA6IGZ1bmN0aW9uKCkgewoKCQkJCQl2YXIgZGF0YSA9IHsK
CQkJCQkJd2lkdGg6IHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJ3aWR0aCIgKSApLAoJ
CQkJCQloZWlnaHQ6IHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJoZWlnaHQiICkgKSwK
CQkJCQkJdG9wOiBwYXJzZUZsb2F0KCB0aGF0LmVsZW1lbnQuY3NzKCAidG9wIiApICksCgkJCQkJ
CWxlZnQ6IHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJsZWZ0IiApICkKCQkJCQl9OwoK
CQkJCQlpZiAoIHByICYmIHByLmxlbmd0aCApIHsKCQkJCQkJJCggcHJbIDAgXSApLmNzcyggeyB3
aWR0aDogZGF0YS53aWR0aCwgaGVpZ2h0OiBkYXRhLmhlaWdodCB9ICk7CgkJCQkJfQoKCQkJCQkv
LyBQcm9wYWdhdGluZyByZXNpemUsIGFuZCB1cGRhdGluZyB2YWx1ZXMgZm9yIGVhY2ggYW5pbWF0
aW9uIHN0ZXAKCQkJCQl0aGF0Ll91cGRhdGVDYWNoZSggZGF0YSApOwoJCQkJCXRoYXQuX3Byb3Bh
Z2F0ZSggInJlc2l6ZSIsIGV2ZW50ICk7CgoJCQkJfQoJCQl9CgkJKTsKCX0KCn0gKTsKCiQudWku
cGx1Z2luLmFkZCggInJlc2l6YWJsZSIsICJjb250YWlubWVudCIsIHsKCglzdGFydDogZnVuY3Rp
b24oKSB7CgkJdmFyIGVsZW1lbnQsIHAsIGNvLCBjaCwgY3csIHdpZHRoLCBoZWlnaHQsCgkJCXRo
YXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksCgkJCW8gPSB0aGF0Lm9wdGlv
bnMsCgkJCWVsID0gdGhhdC5lbGVtZW50LAoJCQlvYyA9IG8uY29udGFpbm1lbnQsCgkJCWNlID0g
KCBvYyBpbnN0YW5jZW9mICQgKSA/CgkJCQlvYy5nZXQoIDAgKSA6CgkJCQkoIC9wYXJlbnQvLnRl
c3QoIG9jICkgKSA/IGVsLnBhcmVudCgpLmdldCggMCApIDogb2M7CgoJCWlmICggIWNlICkgewoJ
CQlyZXR1cm47CgkJfQoKCQl0aGF0LmNvbnRhaW5lckVsZW1lbnQgPSAkKCBjZSApOwoKCQlpZiAo
IC9kb2N1bWVudC8udGVzdCggb2MgKSB8fCBvYyA9PT0gZG9jdW1lbnQgKSB7CgkJCXRoYXQuY29u
dGFpbmVyT2Zmc2V0ID0gewoJCQkJbGVmdDogMCwKCQkJCXRvcDogMAoJCQl9OwoJCQl0aGF0LmNv
bnRhaW5lclBvc2l0aW9uID0gewoJCQkJbGVmdDogMCwKCQkJCXRvcDogMAoJCQl9OwoKCQkJdGhh
dC5wYXJlbnREYXRhID0gewoJCQkJZWxlbWVudDogJCggZG9jdW1lbnQgKSwKCQkJCWxlZnQ6IDAs
CgkJCQl0b3A6IDAsCgkJCQl3aWR0aDogJCggZG9jdW1lbnQgKS53aWR0aCgpLAoJCQkJaGVpZ2h0
OiAkKCBkb2N1bWVudCApLmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3Jv
bGxIZWlnaHQKCQkJfTsKCQl9IGVsc2UgewoJCQllbGVtZW50ID0gJCggY2UgKTsKCQkJcCA9IFtd
OwoJCQkkKCBbICJUb3AiLCAiUmlnaHQiLCAiTGVmdCIsICJCb3R0b20iIF0gKS5lYWNoKCBmdW5j
dGlvbiggaSwgbmFtZSApIHsKCQkJCXBbIGkgXSA9IHRoYXQuX251bSggZWxlbWVudC5jc3MoICJw
YWRkaW5nIiArIG5hbWUgKSApOwoJCQl9ICk7CgoJCQl0aGF0LmNvbnRhaW5lck9mZnNldCA9IGVs
ZW1lbnQub2Zmc2V0KCk7CgkJCXRoYXQuY29udGFpbmVyUG9zaXRpb24gPSBlbGVtZW50LnBvc2l0
aW9uKCk7CgkJCXRoYXQuY29udGFpbmVyU2l6ZSA9IHsKCQkJCWhlaWdodDogKCBlbGVtZW50Lmlu
bmVySGVpZ2h0KCkgLSBwWyAzIF0gKSwKCQkJCXdpZHRoOiAoIGVsZW1lbnQuaW5uZXJXaWR0aCgp
IC0gcFsgMSBdICkKCQkJfTsKCgkJCWNvID0gdGhhdC5jb250YWluZXJPZmZzZXQ7CgkJCWNoID0g
dGhhdC5jb250YWluZXJTaXplLmhlaWdodDsKCQkJY3cgPSB0aGF0LmNvbnRhaW5lclNpemUud2lk
dGg7CgkJCXdpZHRoID0gKCB0aGF0Ll9oYXNTY3JvbGwgKCBjZSwgImxlZnQiICkgPyBjZS5zY3Jv
bGxXaWR0aCA6IGN3ICk7CgkJCWhlaWdodCA9ICggdGhhdC5faGFzU2Nyb2xsICggY2UgKSA/IGNl
LnNjcm9sbEhlaWdodCA6IGNoICkgOwoKCQkJdGhhdC5wYXJlbnREYXRhID0gewoJCQkJZWxlbWVu
dDogY2UsCgkJCQlsZWZ0OiBjby5sZWZ0LAoJCQkJdG9wOiBjby50b3AsCgkJCQl3aWR0aDogd2lk
dGgsCgkJCQloZWlnaHQ6IGhlaWdodAoJCQl9OwoJCX0KCX0sCgoJcmVzaXplOiBmdW5jdGlvbigg
ZXZlbnQgKSB7CgkJdmFyIHdvc2V0LCBob3NldCwgaXNQYXJlbnQsIGlzT2Zmc2V0UmVsYXRpdmUs
CgkJCXRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksCgkJCW8gPSB0aGF0
Lm9wdGlvbnMsCgkJCWNvID0gdGhhdC5jb250YWluZXJPZmZzZXQsCgkJCWNwID0gdGhhdC5wb3Np
dGlvbiwKCQkJcFJhdGlvID0gdGhhdC5fYXNwZWN0UmF0aW8gfHwgZXZlbnQuc2hpZnRLZXksCgkJ
CWNvcCA9IHsKCQkJCXRvcDogMCwKCQkJCWxlZnQ6IDAKCQkJfSwKCQkJY2UgPSB0aGF0LmNvbnRh
aW5lckVsZW1lbnQsCgkJCWNvbnRpbnVlUmVzaXplID0gdHJ1ZTsKCgkJaWYgKCBjZVsgMCBdICE9
PSBkb2N1bWVudCAmJiAoIC9zdGF0aWMvICkudGVzdCggY2UuY3NzKCAicG9zaXRpb24iICkgKSAp
IHsKCQkJY29wID0gY287CgkJfQoKCQlpZiAoIGNwLmxlZnQgPCAoIHRoYXQuX2hlbHBlciA/IGNv
LmxlZnQgOiAwICkgKSB7CgkJCXRoYXQuc2l6ZS53aWR0aCA9IHRoYXQuc2l6ZS53aWR0aCArCgkJ
CQkoIHRoYXQuX2hlbHBlciA/CgkJCQkJKCB0aGF0LnBvc2l0aW9uLmxlZnQgLSBjby5sZWZ0ICkg
OgoJCQkJCSggdGhhdC5wb3NpdGlvbi5sZWZ0IC0gY29wLmxlZnQgKSApOwoKCQkJaWYgKCBwUmF0
aW8gKSB7CgkJCQl0aGF0LnNpemUuaGVpZ2h0ID0gdGhhdC5zaXplLndpZHRoIC8gdGhhdC5hc3Bl
Y3RSYXRpbzsKCQkJCWNvbnRpbnVlUmVzaXplID0gZmFsc2U7CgkJCX0KCQkJdGhhdC5wb3NpdGlv
bi5sZWZ0ID0gby5oZWxwZXIgPyBjby5sZWZ0IDogMDsKCQl9CgoJCWlmICggY3AudG9wIDwgKCB0
aGF0Ll9oZWxwZXIgPyBjby50b3AgOiAwICkgKSB7CgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0
LnNpemUuaGVpZ2h0ICsKCQkJCSggdGhhdC5faGVscGVyID8KCQkJCQkoIHRoYXQucG9zaXRpb24u
dG9wIC0gY28udG9wICkgOgoJCQkJCXRoYXQucG9zaXRpb24udG9wICk7CgoJCQlpZiAoIHBSYXRp
byApIHsKCQkJCXRoYXQuc2l6ZS53aWR0aCA9IHRoYXQuc2l6ZS5oZWlnaHQgKiB0aGF0LmFzcGVj
dFJhdGlvOwoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsKCQkJfQoJCQl0aGF0LnBvc2l0aW9u
LnRvcCA9IHRoYXQuX2hlbHBlciA/IGNvLnRvcCA6IDA7CgkJfQoKCQlpc1BhcmVudCA9IHRoYXQu
Y29udGFpbmVyRWxlbWVudC5nZXQoIDAgKSA9PT0gdGhhdC5lbGVtZW50LnBhcmVudCgpLmdldCgg
MCApOwoJCWlzT2Zmc2V0UmVsYXRpdmUgPSAvcmVsYXRpdmV8YWJzb2x1dGUvLnRlc3QoIHRoYXQu
Y29udGFpbmVyRWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSApOwoKCQlpZiAoIGlzUGFyZW50ICYm
IGlzT2Zmc2V0UmVsYXRpdmUgKSB7CgkJCXRoYXQub2Zmc2V0LmxlZnQgPSB0aGF0LnBhcmVudERh
dGEubGVmdCArIHRoYXQucG9zaXRpb24ubGVmdDsKCQkJdGhhdC5vZmZzZXQudG9wID0gdGhhdC5w
YXJlbnREYXRhLnRvcCArIHRoYXQucG9zaXRpb24udG9wOwoJCX0gZWxzZSB7CgkJCXRoYXQub2Zm
c2V0LmxlZnQgPSB0aGF0LmVsZW1lbnQub2Zmc2V0KCkubGVmdDsKCQkJdGhhdC5vZmZzZXQudG9w
ID0gdGhhdC5lbGVtZW50Lm9mZnNldCgpLnRvcDsKCQl9CgoJCXdvc2V0ID0gTWF0aC5hYnMoIHRo
YXQuc2l6ZURpZmYud2lkdGggKwoJCQkoIHRoYXQuX2hlbHBlciA/CgkJCQl0aGF0Lm9mZnNldC5s
ZWZ0IC0gY29wLmxlZnQgOgoJCQkJKCB0aGF0Lm9mZnNldC5sZWZ0IC0gY28ubGVmdCApICkgKTsK
CgkJaG9zZXQgPSBNYXRoLmFicyggdGhhdC5zaXplRGlmZi5oZWlnaHQgKwoJCQkoIHRoYXQuX2hl
bHBlciA/CgkJCQl0aGF0Lm9mZnNldC50b3AgLSBjb3AudG9wIDoKCQkJCSggdGhhdC5vZmZzZXQu
dG9wIC0gY28udG9wICkgKSApOwoKCQlpZiAoIHdvc2V0ICsgdGhhdC5zaXplLndpZHRoID49IHRo
YXQucGFyZW50RGF0YS53aWR0aCApIHsKCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5wYXJlbnRE
YXRhLndpZHRoIC0gd29zZXQ7CgkJCWlmICggcFJhdGlvICkgewoJCQkJdGhhdC5zaXplLmhlaWdo
dCA9IHRoYXQuc2l6ZS53aWR0aCAvIHRoYXQuYXNwZWN0UmF0aW87CgkJCQljb250aW51ZVJlc2l6
ZSA9IGZhbHNlOwoJCQl9CgkJfQoKCQlpZiAoIGhvc2V0ICsgdGhhdC5zaXplLmhlaWdodCA+PSB0
aGF0LnBhcmVudERhdGEuaGVpZ2h0ICkgewoJCQl0aGF0LnNpemUuaGVpZ2h0ID0gdGhhdC5wYXJl
bnREYXRhLmhlaWdodCAtIGhvc2V0OwoJCQlpZiAoIHBSYXRpbyApIHsKCQkJCXRoYXQuc2l6ZS53
aWR0aCA9IHRoYXQuc2l6ZS5oZWlnaHQgKiB0aGF0LmFzcGVjdFJhdGlvOwoJCQkJY29udGludWVS
ZXNpemUgPSBmYWxzZTsKCQkJfQoJCX0KCgkJaWYgKCAhY29udGludWVSZXNpemUgKSB7CgkJCXRo
YXQucG9zaXRpb24ubGVmdCA9IHRoYXQucHJldlBvc2l0aW9uLmxlZnQ7CgkJCXRoYXQucG9zaXRp
b24udG9wID0gdGhhdC5wcmV2UG9zaXRpb24udG9wOwoJCQl0aGF0LnNpemUud2lkdGggPSB0aGF0
LnByZXZTaXplLndpZHRoOwoJCQl0aGF0LnNpemUuaGVpZ2h0ID0gdGhhdC5wcmV2U2l6ZS5oZWln
aHQ7CgkJfQoJfSwKCglzdG9wOiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5y
ZXNpemFibGUoICJpbnN0YW5jZSIgKSwKCQkJbyA9IHRoYXQub3B0aW9ucywKCQkJY28gPSB0aGF0
LmNvbnRhaW5lck9mZnNldCwKCQkJY29wID0gdGhhdC5jb250YWluZXJQb3NpdGlvbiwKCQkJY2Ug
PSB0aGF0LmNvbnRhaW5lckVsZW1lbnQsCgkJCWhlbHBlciA9ICQoIHRoYXQuaGVscGVyICksCgkJ
CWhvID0gaGVscGVyLm9mZnNldCgpLAoJCQl3ID0gaGVscGVyLm91dGVyV2lkdGgoKSAtIHRoYXQu
c2l6ZURpZmYud2lkdGgsCgkJCWggPSBoZWxwZXIub3V0ZXJIZWlnaHQoKSAtIHRoYXQuc2l6ZURp
ZmYuaGVpZ2h0OwoKCQlpZiAoIHRoYXQuX2hlbHBlciAmJiAhby5hbmltYXRlICYmICggL3JlbGF0
aXZlLyApLnRlc3QoIGNlLmNzcyggInBvc2l0aW9uIiApICkgKSB7CgkJCSQoIHRoaXMgKS5jc3Mo
IHsKCQkJCWxlZnQ6IGhvLmxlZnQgLSBjb3AubGVmdCAtIGNvLmxlZnQsCgkJCQl3aWR0aDogdywK
CQkJCWhlaWdodDogaAoJCQl9ICk7CgkJfQoKCQlpZiAoIHRoYXQuX2hlbHBlciAmJiAhby5hbmlt
YXRlICYmICggL3N0YXRpYy8gKS50ZXN0KCBjZS5jc3MoICJwb3NpdGlvbiIgKSApICkgewoJCQkk
KCB0aGlzICkuY3NzKCB7CgkJCQlsZWZ0OiBoby5sZWZ0IC0gY29wLmxlZnQgLSBjby5sZWZ0LAoJ
CQkJd2lkdGg6IHcsCgkJCQloZWlnaHQ6IGgKCQkJfSApOwoJCX0KCX0KfSApOwoKJC51aS5wbHVn
aW4uYWRkKCAicmVzaXphYmxlIiwgImFsc29SZXNpemUiLCB7CgoJc3RhcnQ6IGZ1bmN0aW9uKCkg
ewoJCXZhciB0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLAoJCQlvID0g
dGhhdC5vcHRpb25zOwoKCQkkKCBvLmFsc29SZXNpemUgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJ
dmFyIGVsID0gJCggdGhpcyApOwoJCQllbC5kYXRhKCAidWktcmVzaXphYmxlLWFsc29yZXNpemUi
LCB7CgkJCQl3aWR0aDogcGFyc2VGbG9hdCggZWwud2lkdGgoKSApLCBoZWlnaHQ6IHBhcnNlRmxv
YXQoIGVsLmhlaWdodCgpICksCgkJCQlsZWZ0OiBwYXJzZUZsb2F0KCBlbC5jc3MoICJsZWZ0IiAp
ICksIHRvcDogcGFyc2VGbG9hdCggZWwuY3NzKCAidG9wIiApICkKCQkJfSApOwoJCX0gKTsKCX0s
CgoJcmVzaXplOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCXZhciB0aGF0ID0gJCggdGhpcyAp
LnJlc2l6YWJsZSggImluc3RhbmNlIiApLAoJCQlvID0gdGhhdC5vcHRpb25zLAoJCQlvcyA9IHRo
YXQub3JpZ2luYWxTaXplLAoJCQlvcCA9IHRoYXQub3JpZ2luYWxQb3NpdGlvbiwKCQkJZGVsdGEg
PSB7CgkJCQloZWlnaHQ6ICggdGhhdC5zaXplLmhlaWdodCAtIG9zLmhlaWdodCApIHx8IDAsCgkJ
CQl3aWR0aDogKCB0aGF0LnNpemUud2lkdGggLSBvcy53aWR0aCApIHx8IDAsCgkJCQl0b3A6ICgg
dGhhdC5wb3NpdGlvbi50b3AgLSBvcC50b3AgKSB8fCAwLAoJCQkJbGVmdDogKCB0aGF0LnBvc2l0
aW9uLmxlZnQgLSBvcC5sZWZ0ICkgfHwgMAoJCQl9OwoKCQkJJCggby5hbHNvUmVzaXplICkuZWFj
aCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgZWwgPSAkKCB0aGlzICksIHN0YXJ0ID0gJCggdGhpcyAp
LmRhdGEoICJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZSIgKSwgc3R5bGUgPSB7fSwKCQkJCQljc3Mg
PSBlbC5wYXJlbnRzKCB1aS5vcmlnaW5hbEVsZW1lbnRbIDAgXSApLmxlbmd0aCA/CgkJCQkJCQlb
ICJ3aWR0aCIsICJoZWlnaHQiIF0gOgoJCQkJCQkJWyAid2lkdGgiLCAiaGVpZ2h0IiwgInRvcCIs
ICJsZWZ0IiBdOwoKCQkJCSQuZWFjaCggY3NzLCBmdW5jdGlvbiggaSwgcHJvcCApIHsKCQkJCQl2
YXIgc3VtID0gKCBzdGFydFsgcHJvcCBdIHx8IDAgKSArICggZGVsdGFbIHByb3AgXSB8fCAwICk7
CgkJCQkJaWYgKCBzdW0gJiYgc3VtID49IDAgKSB7CgkJCQkJCXN0eWxlWyBwcm9wIF0gPSBzdW0g
fHwgbnVsbDsKCQkJCQl9CgkJCQl9ICk7CgoJCQkJZWwuY3NzKCBzdHlsZSApOwoJCQl9ICk7Cgl9
LAoKCXN0b3A6IGZ1bmN0aW9uKCkgewoJCSQoIHRoaXMgKS5yZW1vdmVEYXRhKCAidWktcmVzaXph
YmxlLWFsc29yZXNpemUiICk7Cgl9Cn0gKTsKCiQudWkucGx1Z2luLmFkZCggInJlc2l6YWJsZSIs
ICJnaG9zdCIsIHsKCglzdGFydDogZnVuY3Rpb24oKSB7CgoJCXZhciB0aGF0ID0gJCggdGhpcyAp
LnJlc2l6YWJsZSggImluc3RhbmNlIiApLCBjcyA9IHRoYXQuc2l6ZTsKCgkJdGhhdC5naG9zdCA9
IHRoYXQub3JpZ2luYWxFbGVtZW50LmNsb25lKCk7CgkJdGhhdC5naG9zdC5jc3MoIHsKCQkJb3Bh
Y2l0eTogMC4yNSwKCQkJZGlzcGxheTogImJsb2NrIiwKCQkJcG9zaXRpb246ICJyZWxhdGl2ZSIs
CgkJCWhlaWdodDogY3MuaGVpZ2h0LAoJCQl3aWR0aDogY3Mud2lkdGgsCgkJCW1hcmdpbjogMCwK
CQkJbGVmdDogMCwKCQkJdG9wOiAwCgkJfSApOwoKCQl0aGF0Ll9hZGRDbGFzcyggdGhhdC5naG9z
dCwgInVpLXJlc2l6YWJsZS1naG9zdCIgKTsKCgkJLy8gREVQUkVDQVRFRAoJCS8vIFRPRE86IHJl
bW92ZSBhZnRlciAxLjEyCgkJaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgJiYgdHlwZW9m
IHRoYXQub3B0aW9ucy5naG9zdCA9PT0gInN0cmluZyIgKSB7CgoJCQkvLyBHaG9zdCBvcHRpb24K
CQkJdGhhdC5naG9zdC5hZGRDbGFzcyggdGhpcy5vcHRpb25zLmdob3N0ICk7CgkJfQoKCQl0aGF0
Lmdob3N0LmFwcGVuZFRvKCB0aGF0LmhlbHBlciApOwoKCX0sCgoJcmVzaXplOiBmdW5jdGlvbigp
IHsKCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKTsKCQlpZiAo
IHRoYXQuZ2hvc3QgKSB7CgkJCXRoYXQuZ2hvc3QuY3NzKCB7CgkJCQlwb3NpdGlvbjogInJlbGF0
aXZlIiwKCQkJCWhlaWdodDogdGhhdC5zaXplLmhlaWdodCwKCQkJCXdpZHRoOiB0aGF0LnNpemUu
d2lkdGgKCQkJfSApOwoJCX0KCX0sCgoJc3RvcDogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSAk
KCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICk7CgkJaWYgKCB0aGF0Lmdob3N0ICYmIHRo
YXQuaGVscGVyICkgewoJCQl0aGF0LmhlbHBlci5nZXQoIDAgKS5yZW1vdmVDaGlsZCggdGhhdC5n
aG9zdC5nZXQoIDAgKSApOwoJCX0KCX0KCn0gKTsKCiQudWkucGx1Z2luLmFkZCggInJlc2l6YWJs
ZSIsICJncmlkIiwgewoKCXJlc2l6ZTogZnVuY3Rpb24oKSB7CgkJdmFyIG91dGVyRGltZW5zaW9u
cywKCQkJdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwKCQkJbyA9IHRo
YXQub3B0aW9ucywKCQkJY3MgPSB0aGF0LnNpemUsCgkJCW9zID0gdGhhdC5vcmlnaW5hbFNpemUs
CgkJCW9wID0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLAoJCQlhID0gdGhhdC5heGlzLAoJCQlncmlk
ID0gdHlwZW9mIG8uZ3JpZCA9PT0gIm51bWJlciIgPyBbIG8uZ3JpZCwgby5ncmlkIF0gOiBvLmdy
aWQsCgkJCWdyaWRYID0gKCBncmlkWyAwIF0gfHwgMSApLAoJCQlncmlkWSA9ICggZ3JpZFsgMSBd
IHx8IDEgKSwKCQkJb3ggPSBNYXRoLnJvdW5kKCAoIGNzLndpZHRoIC0gb3Mud2lkdGggKSAvIGdy
aWRYICkgKiBncmlkWCwKCQkJb3kgPSBNYXRoLnJvdW5kKCAoIGNzLmhlaWdodCAtIG9zLmhlaWdo
dCApIC8gZ3JpZFkgKSAqIGdyaWRZLAoJCQluZXdXaWR0aCA9IG9zLndpZHRoICsgb3gsCgkJCW5l
d0hlaWdodCA9IG9zLmhlaWdodCArIG95LAoJCQlpc01heFdpZHRoID0gby5tYXhXaWR0aCAmJiAo
IG8ubWF4V2lkdGggPCBuZXdXaWR0aCApLAoJCQlpc01heEhlaWdodCA9IG8ubWF4SGVpZ2h0ICYm
ICggby5tYXhIZWlnaHQgPCBuZXdIZWlnaHQgKSwKCQkJaXNNaW5XaWR0aCA9IG8ubWluV2lkdGgg
JiYgKCBvLm1pbldpZHRoID4gbmV3V2lkdGggKSwKCQkJaXNNaW5IZWlnaHQgPSBvLm1pbkhlaWdo
dCAmJiAoIG8ubWluSGVpZ2h0ID4gbmV3SGVpZ2h0ICk7CgoJCW8uZ3JpZCA9IGdyaWQ7CgoJCWlm
ICggaXNNaW5XaWR0aCApIHsKCQkJbmV3V2lkdGggKz0gZ3JpZFg7CgkJfQoJCWlmICggaXNNaW5I
ZWlnaHQgKSB7CgkJCW5ld0hlaWdodCArPSBncmlkWTsKCQl9CgkJaWYgKCBpc01heFdpZHRoICkg
ewoJCQluZXdXaWR0aCAtPSBncmlkWDsKCQl9CgkJaWYgKCBpc01heEhlaWdodCApIHsKCQkJbmV3
SGVpZ2h0IC09IGdyaWRZOwoJCX0KCgkJaWYgKCAvXihzZXxzfGUpJC8udGVzdCggYSApICkgewoJ
CQl0aGF0LnNpemUud2lkdGggPSBuZXdXaWR0aDsKCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hl
aWdodDsKCQl9IGVsc2UgaWYgKCAvXihuZSkkLy50ZXN0KCBhICkgKSB7CgkJCXRoYXQuc2l6ZS53
aWR0aCA9IG5ld1dpZHRoOwoJCQl0aGF0LnNpemUuaGVpZ2h0ID0gbmV3SGVpZ2h0OwoJCQl0aGF0
LnBvc2l0aW9uLnRvcCA9IG9wLnRvcCAtIG95OwoJCX0gZWxzZSBpZiAoIC9eKHN3KSQvLnRlc3Qo
IGEgKSApIHsKCQkJdGhhdC5zaXplLndpZHRoID0gbmV3V2lkdGg7CgkJCXRoYXQuc2l6ZS5oZWln
aHQgPSBuZXdIZWlnaHQ7CgkJCXRoYXQucG9zaXRpb24ubGVmdCA9IG9wLmxlZnQgLSBveDsKCQl9
IGVsc2UgewoJCQlpZiAoIG5ld0hlaWdodCAtIGdyaWRZIDw9IDAgfHwgbmV3V2lkdGggLSBncmlk
WCA8PSAwICkgewoJCQkJb3V0ZXJEaW1lbnNpb25zID0gdGhhdC5fZ2V0UGFkZGluZ1BsdXNCb3Jk
ZXJEaW1lbnNpb25zKCB0aGlzICk7CgkJCX0KCgkJCWlmICggbmV3SGVpZ2h0IC0gZ3JpZFkgPiAw
ICkgewoJCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hlaWdodDsKCQkJCXRoYXQucG9zaXRpb24u
dG9wID0gb3AudG9wIC0gb3k7CgkJCX0gZWxzZSB7CgkJCQluZXdIZWlnaHQgPSBncmlkWSAtIG91
dGVyRGltZW5zaW9ucy5oZWlnaHQ7CgkJCQl0aGF0LnNpemUuaGVpZ2h0ID0gbmV3SGVpZ2h0OwoJ
CQkJdGhhdC5wb3NpdGlvbi50b3AgPSBvcC50b3AgKyBvcy5oZWlnaHQgLSBuZXdIZWlnaHQ7CgkJ
CX0KCQkJaWYgKCBuZXdXaWR0aCAtIGdyaWRYID4gMCApIHsKCQkJCXRoYXQuc2l6ZS53aWR0aCA9
IG5ld1dpZHRoOwoJCQkJdGhhdC5wb3NpdGlvbi5sZWZ0ID0gb3AubGVmdCAtIG94OwoJCQl9IGVs
c2UgewoJCQkJbmV3V2lkdGggPSBncmlkWCAtIG91dGVyRGltZW5zaW9ucy53aWR0aDsKCQkJCXRo
YXQuc2l6ZS53aWR0aCA9IG5ld1dpZHRoOwoJCQkJdGhhdC5wb3NpdGlvbi5sZWZ0ID0gb3AubGVm
dCArIG9zLndpZHRoIC0gbmV3V2lkdGg7CgkJCX0KCQl9Cgl9Cgp9ICk7Cgp2YXIgd2lkZ2V0c1Jl
c2l6YWJsZSA9ICQudWkucmVzaXphYmxlOwoKCi8qIQogKiBqUXVlcnkgVUkgRGlhbG9nIDEuMTIu
MQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlv
biBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5z
ZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogRGlhbG9nCi8v
Pj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IERpc3BsYXlzIGN1c3RvbWl6YWJsZSBk
aWFsb2cgd2luZG93cy4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2RpYWxvZy8K
Ly8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2RpYWxvZy8KLy8+PmNzcy5zdHJ1Y3R1cmU6
IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVt
ZXMvYmFzZS9kaWFsb2cuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1l
LmNzcwoKCgokLndpZGdldCggInVpLmRpYWxvZyIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0
aW9uczogewoJCWFwcGVuZFRvOiAiYm9keSIsCgkJYXV0b09wZW46IHRydWUsCgkJYnV0dG9uczog
W10sCgkJY2xhc3NlczogewoJCQkidWktZGlhbG9nIjogInVpLWNvcm5lci1hbGwiLAoJCQkidWkt
ZGlhbG9nLXRpdGxlYmFyIjogInVpLWNvcm5lci1hbGwiCgkJfSwKCQljbG9zZU9uRXNjYXBlOiB0
cnVlLAoJCWNsb3NlVGV4dDogIkNsb3NlIiwKCQlkcmFnZ2FibGU6IHRydWUsCgkJaGlkZTogbnVs
bCwKCQloZWlnaHQ6ICJhdXRvIiwKCQltYXhIZWlnaHQ6IG51bGwsCgkJbWF4V2lkdGg6IG51bGws
CgkJbWluSGVpZ2h0OiAxNTAsCgkJbWluV2lkdGg6IDE1MCwKCQltb2RhbDogZmFsc2UsCgkJcG9z
aXRpb246IHsKCQkJbXk6ICJjZW50ZXIiLAoJCQlhdDogImNlbnRlciIsCgkJCW9mOiB3aW5kb3cs
CgkJCWNvbGxpc2lvbjogImZpdCIsCgoJCQkvLyBFbnN1cmUgdGhlIHRpdGxlYmFyIGlzIGFsd2F5
cyB2aXNpYmxlCgkJCXVzaW5nOiBmdW5jdGlvbiggcG9zICkgewoJCQkJdmFyIHRvcE9mZnNldCA9
ICQoIHRoaXMgKS5jc3MoIHBvcyApLm9mZnNldCgpLnRvcDsKCQkJCWlmICggdG9wT2Zmc2V0IDwg
MCApIHsKCQkJCQkkKCB0aGlzICkuY3NzKCAidG9wIiwgcG9zLnRvcCAtIHRvcE9mZnNldCApOwoJ
CQkJfQoJCQl9CgkJfSwKCQlyZXNpemFibGU6IHRydWUsCgkJc2hvdzogbnVsbCwKCQl0aXRsZTog
bnVsbCwKCQl3aWR0aDogMzAwLAoKCQkvLyBDYWxsYmFja3MKCQliZWZvcmVDbG9zZTogbnVsbCwK
CQljbG9zZTogbnVsbCwKCQlkcmFnOiBudWxsLAoJCWRyYWdTdGFydDogbnVsbCwKCQlkcmFnU3Rv
cDogbnVsbCwKCQlmb2N1czogbnVsbCwKCQlvcGVuOiBudWxsLAoJCXJlc2l6ZTogbnVsbCwKCQly
ZXNpemVTdGFydDogbnVsbCwKCQlyZXNpemVTdG9wOiBudWxsCgl9LAoKCXNpemVSZWxhdGVkT3B0
aW9uczogewoJCWJ1dHRvbnM6IHRydWUsCgkJaGVpZ2h0OiB0cnVlLAoJCW1heEhlaWdodDogdHJ1
ZSwKCQltYXhXaWR0aDogdHJ1ZSwKCQltaW5IZWlnaHQ6IHRydWUsCgkJbWluV2lkdGg6IHRydWUs
CgkJd2lkdGg6IHRydWUKCX0sCgoJcmVzaXphYmxlUmVsYXRlZE9wdGlvbnM6IHsKCQltYXhIZWln
aHQ6IHRydWUsCgkJbWF4V2lkdGg6IHRydWUsCgkJbWluSGVpZ2h0OiB0cnVlLAoJCW1pbldpZHRo
OiB0cnVlCgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXRoaXMub3JpZ2luYWxDc3MgPSB7
CgkJCWRpc3BsYXk6IHRoaXMuZWxlbWVudFsgMCBdLnN0eWxlLmRpc3BsYXksCgkJCXdpZHRoOiB0
aGlzLmVsZW1lbnRbIDAgXS5zdHlsZS53aWR0aCwKCQkJbWluSGVpZ2h0OiB0aGlzLmVsZW1lbnRb
IDAgXS5zdHlsZS5taW5IZWlnaHQsCgkJCW1heEhlaWdodDogdGhpcy5lbGVtZW50WyAwIF0uc3R5
bGUubWF4SGVpZ2h0LAoJCQloZWlnaHQ6IHRoaXMuZWxlbWVudFsgMCBdLnN0eWxlLmhlaWdodAoJ
CX07CgkJdGhpcy5vcmlnaW5hbFBvc2l0aW9uID0gewoJCQlwYXJlbnQ6IHRoaXMuZWxlbWVudC5w
YXJlbnQoKSwKCQkJaW5kZXg6IHRoaXMuZWxlbWVudC5wYXJlbnQoKS5jaGlsZHJlbigpLmluZGV4
KCB0aGlzLmVsZW1lbnQgKQoJCX07CgkJdGhpcy5vcmlnaW5hbFRpdGxlID0gdGhpcy5lbGVtZW50
LmF0dHIoICJ0aXRsZSIgKTsKCQlpZiAoIHRoaXMub3B0aW9ucy50aXRsZSA9PSBudWxsICYmIHRo
aXMub3JpZ2luYWxUaXRsZSAhPSBudWxsICkgewoJCQl0aGlzLm9wdGlvbnMudGl0bGUgPSB0aGlz
Lm9yaWdpbmFsVGl0bGU7CgkJfQoKCQkvLyBEaWFsb2dzIGNhbid0IGJlIGRpc2FibGVkCgkJaWYg
KCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSB7CgkJCXRoaXMub3B0aW9ucy5kaXNhYmxlZCA9IGZh
bHNlOwoJCX0KCgkJdGhpcy5fY3JlYXRlV3JhcHBlcigpOwoKCQl0aGlzLmVsZW1lbnQKCQkJLnNo
b3coKQoJCQkucmVtb3ZlQXR0ciggInRpdGxlIiApCgkJCS5hcHBlbmRUbyggdGhpcy51aURpYWxv
ZyApOwoKCQl0aGlzLl9hZGRDbGFzcyggInVpLWRpYWxvZy1jb250ZW50IiwgInVpLXdpZGdldC1j
b250ZW50IiApOwoKCQl0aGlzLl9jcmVhdGVUaXRsZWJhcigpOwoJCXRoaXMuX2NyZWF0ZUJ1dHRv
blBhbmUoKTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuZHJhZ2dhYmxlICYmICQuZm4uZHJhZ2dhYmxl
ICkgewoJCQl0aGlzLl9tYWtlRHJhZ2dhYmxlKCk7CgkJfQoJCWlmICggdGhpcy5vcHRpb25zLnJl
c2l6YWJsZSAmJiAkLmZuLnJlc2l6YWJsZSApIHsKCQkJdGhpcy5fbWFrZVJlc2l6YWJsZSgpOwoJ
CX0KCgkJdGhpcy5faXNPcGVuID0gZmFsc2U7CgoJCXRoaXMuX3RyYWNrRm9jdXMoKTsKCX0sCgoJ
X2luaXQ6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy5vcHRpb25zLmF1dG9PcGVuICkgewoJCQl0
aGlzLm9wZW4oKTsKCQl9Cgl9LAoKCV9hcHBlbmRUbzogZnVuY3Rpb24oKSB7CgkJdmFyIGVsZW1l
bnQgPSB0aGlzLm9wdGlvbnMuYXBwZW5kVG87CgkJaWYgKCBlbGVtZW50ICYmICggZWxlbWVudC5q
cXVlcnkgfHwgZWxlbWVudC5ub2RlVHlwZSApICkgewoJCQlyZXR1cm4gJCggZWxlbWVudCApOwoJ
CX0KCQlyZXR1cm4gdGhpcy5kb2N1bWVudC5maW5kKCBlbGVtZW50IHx8ICJib2R5IiApLmVxKCAw
ICk7Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl2YXIgbmV4dCwKCQkJb3JpZ2luYWxQ
b3NpdGlvbiA9IHRoaXMub3JpZ2luYWxQb3NpdGlvbjsKCgkJdGhpcy5fdW50cmFja0luc3RhbmNl
KCk7CgkJdGhpcy5fZGVzdHJveU92ZXJsYXkoKTsKCgkJdGhpcy5lbGVtZW50CgkJCS5yZW1vdmVV
bmlxdWVJZCgpCgkJCS5jc3MoIHRoaXMub3JpZ2luYWxDc3MgKQoKCQkJLy8gV2l0aG91dCBkZXRh
Y2hpbmcgZmlyc3QsIHRoZSBmb2xsb3dpbmcgYmVjb21lcyByZWFsbHkgc2xvdwoJCQkuZGV0YWNo
KCk7CgoJCXRoaXMudWlEaWFsb2cucmVtb3ZlKCk7CgoJCWlmICggdGhpcy5vcmlnaW5hbFRpdGxl
ICkgewoJCQl0aGlzLmVsZW1lbnQuYXR0ciggInRpdGxlIiwgdGhpcy5vcmlnaW5hbFRpdGxlICk7
CgkJfQoKCQluZXh0ID0gb3JpZ2luYWxQb3NpdGlvbi5wYXJlbnQuY2hpbGRyZW4oKS5lcSggb3Jp
Z2luYWxQb3NpdGlvbi5pbmRleCApOwoKCQkvLyBEb24ndCB0cnkgdG8gcGxhY2UgdGhlIGRpYWxv
ZyBuZXh0IHRvIGl0c2VsZiAoIzg2MTMpCgkJaWYgKCBuZXh0Lmxlbmd0aCAmJiBuZXh0WyAwIF0g
IT09IHRoaXMuZWxlbWVudFsgMCBdICkgewoJCQluZXh0LmJlZm9yZSggdGhpcy5lbGVtZW50ICk7
CgkJfSBlbHNlIHsKCQkJb3JpZ2luYWxQb3NpdGlvbi5wYXJlbnQuYXBwZW5kKCB0aGlzLmVsZW1l
bnQgKTsKCQl9Cgl9LAoKCXdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMudWlEaWFs
b2c7Cgl9LAoKCWRpc2FibGU6ICQubm9vcCwKCWVuYWJsZTogJC5ub29wLAoKCWNsb3NlOiBmdW5j
dGlvbiggZXZlbnQgKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoKCQlpZiAoICF0aGlzLl9pc09wZW4g
fHwgdGhpcy5fdHJpZ2dlciggImJlZm9yZUNsb3NlIiwgZXZlbnQgKSA9PT0gZmFsc2UgKSB7CgkJ
CXJldHVybjsKCQl9CgoJCXRoaXMuX2lzT3BlbiA9IGZhbHNlOwoJCXRoaXMuX2ZvY3VzZWRFbGVt
ZW50ID0gbnVsbDsKCQl0aGlzLl9kZXN0cm95T3ZlcmxheSgpOwoJCXRoaXMuX3VudHJhY2tJbnN0
YW5jZSgpOwoKCQlpZiAoICF0aGlzLm9wZW5lci5maWx0ZXIoICI6Zm9jdXNhYmxlIiApLnRyaWdn
ZXIoICJmb2N1cyIgKS5sZW5ndGggKSB7CgoJCQkvLyBIaWRpbmcgYSBmb2N1c2VkIGVsZW1lbnQg
ZG9lc24ndCB0cmlnZ2VyIGJsdXIgaW4gV2ViS2l0CgkJCS8vIHNvIGluIGNhc2Ugd2UgaGF2ZSBu
b3RoaW5nIHRvIGZvY3VzIG9uLCBleHBsaWNpdGx5IGJsdXIgdGhlIGFjdGl2ZSBlbGVtZW50CgkJ
CS8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD00NzE4MgoJCQkkLnVp
LnNhZmVCbHVyKCAkLnVpLnNhZmVBY3RpdmVFbGVtZW50KCB0aGlzLmRvY3VtZW50WyAwIF0gKSAp
OwoJCX0KCgkJdGhpcy5faGlkZSggdGhpcy51aURpYWxvZywgdGhpcy5vcHRpb25zLmhpZGUsIGZ1
bmN0aW9uKCkgewoJCQl0aGF0Ll90cmlnZ2VyKCAiY2xvc2UiLCBldmVudCApOwoJCX0gKTsKCX0s
CgoJaXNPcGVuOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5faXNPcGVuOwoJfSwKCgltb3Zl
VG9Ub3A6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX21vdmVUb1RvcCgpOwoJfSwKCglfbW92ZVRvVG9w
OiBmdW5jdGlvbiggZXZlbnQsIHNpbGVudCApIHsKCQl2YXIgbW92ZWQgPSBmYWxzZSwKCQkJeklu
ZGljZXMgPSB0aGlzLnVpRGlhbG9nLnNpYmxpbmdzKCAiLnVpLWZyb250OnZpc2libGUiICkubWFw
KCBmdW5jdGlvbigpIHsKCQkJCXJldHVybiArJCggdGhpcyApLmNzcyggInotaW5kZXgiICk7CgkJ
CX0gKS5nZXQoKSwKCQkJekluZGV4TWF4ID0gTWF0aC5tYXguYXBwbHkoIG51bGwsIHpJbmRpY2Vz
ICk7CgoJCWlmICggekluZGV4TWF4ID49ICt0aGlzLnVpRGlhbG9nLmNzcyggInotaW5kZXgiICkg
KSB7CgkJCXRoaXMudWlEaWFsb2cuY3NzKCAiei1pbmRleCIsIHpJbmRleE1heCArIDEgKTsKCQkJ
bW92ZWQgPSB0cnVlOwoJCX0KCgkJaWYgKCBtb3ZlZCAmJiAhc2lsZW50ICkgewoJCQl0aGlzLl90
cmlnZ2VyKCAiZm9jdXMiLCBldmVudCApOwoJCX0KCQlyZXR1cm4gbW92ZWQ7Cgl9LAoKCW9wZW46
IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpczsKCQlpZiAoIHRoaXMuX2lzT3BlbiApIHsK
CQkJaWYgKCB0aGlzLl9tb3ZlVG9Ub3AoKSApIHsKCQkJCXRoaXMuX2ZvY3VzVGFiYmFibGUoKTsK
CQkJfQoJCQlyZXR1cm47CgkJfQoKCQl0aGlzLl9pc09wZW4gPSB0cnVlOwoJCXRoaXMub3BlbmVy
ID0gJCggJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBdICkgKTsKCgkJ
dGhpcy5fc2l6ZSgpOwoJCXRoaXMuX3Bvc2l0aW9uKCk7CgkJdGhpcy5fY3JlYXRlT3ZlcmxheSgp
OwoJCXRoaXMuX21vdmVUb1RvcCggbnVsbCwgdHJ1ZSApOwoKCQkvLyBFbnN1cmUgdGhlIG92ZXJs
YXkgaXMgbW92ZWQgdG8gdGhlIHRvcCB3aXRoIHRoZSBkaWFsb2csIGJ1dCBvbmx5IHdoZW4KCQkv
LyBvcGVuaW5nLiBUaGUgb3ZlcmxheSBzaG91bGRuJ3QgbW92ZSBhZnRlciB0aGUgZGlhbG9nIGlz
IG9wZW4gc28gdGhhdAoJCS8vIG1vZGVsZXNzIGRpYWxvZ3Mgb3BlbmVkIGFmdGVyIHRoZSBtb2Rh
bCBkaWFsb2cgc3RhY2sgcHJvcGVybHkuCgkJaWYgKCB0aGlzLm92ZXJsYXkgKSB7CgkJCXRoaXMu
b3ZlcmxheS5jc3MoICJ6LWluZGV4IiwgdGhpcy51aURpYWxvZy5jc3MoICJ6LWluZGV4IiApIC0g
MSApOwoJCX0KCgkJdGhpcy5fc2hvdyggdGhpcy51aURpYWxvZywgdGhpcy5vcHRpb25zLnNob3cs
IGZ1bmN0aW9uKCkgewoJCQl0aGF0Ll9mb2N1c1RhYmJhYmxlKCk7CgkJCXRoYXQuX3RyaWdnZXIo
ICJmb2N1cyIgKTsKCQl9ICk7CgoJCS8vIFRyYWNrIHRoZSBkaWFsb2cgaW1tZWRpYXRlbHkgdXBv
biBvcGVuZW5pbmcgaW4gY2FzZSBhIGZvY3VzIGV2ZW50CgkJLy8gc29tZWhvdyBvY2N1cnMgb3V0
c2lkZSBvZiB0aGUgZGlhbG9nIGJlZm9yZSBhbiBlbGVtZW50IGluc2lkZSB0aGUKCQkvLyBkaWFs
b2cgaXMgZm9jdXNlZCAoIzEwMTUyKQoJCXRoaXMuX21ha2VGb2N1c1RhcmdldCgpOwoKCQl0aGlz
Ll90cmlnZ2VyKCAib3BlbiIgKTsKCX0sCgoJX2ZvY3VzVGFiYmFibGU6IGZ1bmN0aW9uKCkgewoK
CQkvLyBTZXQgZm9jdXMgdG8gdGhlIGZpcnN0IG1hdGNoOgoJCS8vIDEuIEFuIGVsZW1lbnQgdGhh
dCB3YXMgZm9jdXNlZCBwcmV2aW91c2x5CgkJLy8gMi4gRmlyc3QgZWxlbWVudCBpbnNpZGUgdGhl
IGRpYWxvZyBtYXRjaGluZyBbYXV0b2ZvY3VzXQoJCS8vIDMuIFRhYmJhYmxlIGVsZW1lbnQgaW5z
aWRlIHRoZSBjb250ZW50IGVsZW1lbnQKCQkvLyA0LiBUYWJiYWJsZSBlbGVtZW50IGluc2lkZSB0
aGUgYnV0dG9ucGFuZQoJCS8vIDUuIFRoZSBjbG9zZSBidXR0b24KCQkvLyA2LiBUaGUgZGlhbG9n
IGl0c2VsZgoJCXZhciBoYXNGb2N1cyA9IHRoaXMuX2ZvY3VzZWRFbGVtZW50OwoJCWlmICggIWhh
c0ZvY3VzICkgewoJCQloYXNGb2N1cyA9IHRoaXMuZWxlbWVudC5maW5kKCAiW2F1dG9mb2N1c10i
ICk7CgkJfQoJCWlmICggIWhhc0ZvY3VzLmxlbmd0aCApIHsKCQkJaGFzRm9jdXMgPSB0aGlzLmVs
ZW1lbnQuZmluZCggIjp0YWJiYWJsZSIgKTsKCQl9CgkJaWYgKCAhaGFzRm9jdXMubGVuZ3RoICkg
ewoJCQloYXNGb2N1cyA9IHRoaXMudWlEaWFsb2dCdXR0b25QYW5lLmZpbmQoICI6dGFiYmFibGUi
ICk7CgkJfQoJCWlmICggIWhhc0ZvY3VzLmxlbmd0aCApIHsKCQkJaGFzRm9jdXMgPSB0aGlzLnVp
RGlhbG9nVGl0bGViYXJDbG9zZS5maWx0ZXIoICI6dGFiYmFibGUiICk7CgkJfQoJCWlmICggIWhh
c0ZvY3VzLmxlbmd0aCApIHsKCQkJaGFzRm9jdXMgPSB0aGlzLnVpRGlhbG9nOwoJCX0KCQloYXNG
b2N1cy5lcSggMCApLnRyaWdnZXIoICJmb2N1cyIgKTsKCX0sCgoJX2tlZXBGb2N1czogZnVuY3Rp
b24oIGV2ZW50ICkgewoJCWZ1bmN0aW9uIGNoZWNrRm9jdXMoKSB7CgkJCXZhciBhY3RpdmVFbGVt
ZW50ID0gJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBdICksCgkJCQlp
c0FjdGl2ZSA9IHRoaXMudWlEaWFsb2dbIDAgXSA9PT0gYWN0aXZlRWxlbWVudCB8fAoJCQkJCSQu
Y29udGFpbnMoIHRoaXMudWlEaWFsb2dbIDAgXSwgYWN0aXZlRWxlbWVudCApOwoJCQlpZiAoICFp
c0FjdGl2ZSApIHsKCQkJCXRoaXMuX2ZvY3VzVGFiYmFibGUoKTsKCQkJfQoJCX0KCQlldmVudC5w
cmV2ZW50RGVmYXVsdCgpOwoJCWNoZWNrRm9jdXMuY2FsbCggdGhpcyApOwoKCQkvLyBzdXBwb3J0
OiBJRQoJCS8vIElFIDw9IDggZG9lc24ndCBwcmV2ZW50IG1vdmluZyBmb2N1cyBldmVuIHdpdGgg
ZXZlbnQucHJldmVudERlZmF1bHQoKQoJCS8vIHNvIHdlIGNoZWNrIGFnYWluIGxhdGVyCgkJdGhp
cy5fZGVsYXkoIGNoZWNrRm9jdXMgKTsKCX0sCgoJX2NyZWF0ZVdyYXBwZXI6IGZ1bmN0aW9uKCkg
ewoJCXRoaXMudWlEaWFsb2cgPSAkKCAiPGRpdj4iICkKCQkJLmhpZGUoKQoJCQkuYXR0ciggewoK
CQkJCS8vIFNldHRpbmcgdGFiSW5kZXggbWFrZXMgdGhlIGRpdiBmb2N1c2FibGUKCQkJCXRhYklu
ZGV4OiAtMSwKCQkJCXJvbGU6ICJkaWFsb2ciCgkJCX0gKQoJCQkuYXBwZW5kVG8oIHRoaXMuX2Fw
cGVuZFRvKCkgKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudWlEaWFsb2csICJ1aS1kaWFsb2ci
LCAidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWZyb250IiApOwoJCXRoaXMuX29uKCB0
aGlzLnVpRGlhbG9nLCB7CgkJCWtleWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWlmICgg
dGhpcy5vcHRpb25zLmNsb3NlT25Fc2NhcGUgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgp
ICYmIGV2ZW50LmtleUNvZGUgJiYKCQkJCQkJZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2Rl
LkVTQ0FQRSApIHsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCXRoaXMuY2xvc2Uo
IGV2ZW50ICk7CgkJCQkJcmV0dXJuOwoJCQkJfQoKCQkJCS8vIFByZXZlbnQgdGFiYmluZyBvdXQg
b2YgZGlhbG9ncwoJCQkJaWYgKCBldmVudC5rZXlDb2RlICE9PSAkLnVpLmtleUNvZGUuVEFCIHx8
IGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCXZh
ciB0YWJiYWJsZXMgPSB0aGlzLnVpRGlhbG9nLmZpbmQoICI6dGFiYmFibGUiICksCgkJCQkJZmly
c3QgPSB0YWJiYWJsZXMuZmlsdGVyKCAiOmZpcnN0IiApLAoJCQkJCWxhc3QgPSB0YWJiYWJsZXMu
ZmlsdGVyKCAiOmxhc3QiICk7CgoJCQkJaWYgKCAoIGV2ZW50LnRhcmdldCA9PT0gbGFzdFsgMCBd
IHx8IGV2ZW50LnRhcmdldCA9PT0gdGhpcy51aURpYWxvZ1sgMCBdICkgJiYKCQkJCQkJIWV2ZW50
LnNoaWZ0S2V5ICkgewoJCQkJCXRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCQkJZmlyc3Qu
dHJpZ2dlciggImZvY3VzIiApOwoJCQkJCX0gKTsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgp
OwoJCQkJfSBlbHNlIGlmICggKCBldmVudC50YXJnZXQgPT09IGZpcnN0WyAwIF0gfHwKCQkJCQkJ
ZXZlbnQudGFyZ2V0ID09PSB0aGlzLnVpRGlhbG9nWyAwIF0gKSAmJiBldmVudC5zaGlmdEtleSAp
IHsKCQkJCQl0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgkJCQkJCWxhc3QudHJpZ2dlciggImZv
Y3VzIiApOwoJCQkJCX0gKTsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJfQoJCQl9
LAoJCQltb3VzZWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWlmICggdGhpcy5fbW92ZVRv
VG9wKCBldmVudCApICkgewoJCQkJCXRoaXMuX2ZvY3VzVGFiYmFibGUoKTsKCQkJCX0KCQkJfQoJ
CX0gKTsKCgkJLy8gV2UgYXNzdW1lIHRoYXQgYW55IGV4aXN0aW5nIGFyaWEtZGVzY3JpYmVkYnkg
YXR0cmlidXRlIG1lYW5zCgkJLy8gdGhhdCB0aGUgZGlhbG9nIGNvbnRlbnQgaXMgbWFya2VkIHVw
IHByb3Blcmx5CgkJLy8gb3RoZXJ3aXNlIHdlIGJydXRlIGZvcmNlIHRoZSBjb250ZW50IGFzIHRo
ZSBkZXNjcmlwdGlvbgoJCWlmICggIXRoaXMuZWxlbWVudC5maW5kKCAiW2FyaWEtZGVzY3JpYmVk
YnldIiApLmxlbmd0aCApIHsKCQkJdGhpcy51aURpYWxvZy5hdHRyKCB7CgkJCQkiYXJpYS1kZXNj
cmliZWRieSI6IHRoaXMuZWxlbWVudC51bmlxdWVJZCgpLmF0dHIoICJpZCIgKQoJCQl9ICk7CgkJ
fQoJfSwKCglfY3JlYXRlVGl0bGViYXI6IGZ1bmN0aW9uKCkgewoJCXZhciB1aURpYWxvZ1RpdGxl
OwoKCQl0aGlzLnVpRGlhbG9nVGl0bGViYXIgPSAkKCAiPGRpdj4iICk7CgkJdGhpcy5fYWRkQ2xh
c3MoIHRoaXMudWlEaWFsb2dUaXRsZWJhciwKCQkJInVpLWRpYWxvZy10aXRsZWJhciIsICJ1aS13
aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeCIgKTsKCQl0aGlzLl9vbiggdGhpcy51aURp
YWxvZ1RpdGxlYmFyLCB7CgkJCW1vdXNlZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkJCS8v
IERvbid0IHByZXZlbnQgY2xpY2sgb24gY2xvc2UgYnV0dG9uICgjODgzOCkKCQkJCS8vIEZvY3Vz
aW5nIGEgZGlhbG9nIHRoYXQgaXMgcGFydGlhbGx5IHNjcm9sbGVkIG91dCBvZiB2aWV3CgkJCQkv
LyBjYXVzZXMgdGhlIGJyb3dzZXIgdG8gc2Nyb2xsIGl0IGludG8gdmlldywgcHJldmVudGluZyB0
aGUgY2xpY2sgZXZlbnQKCQkJCWlmICggISQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWkt
ZGlhbG9nLXRpdGxlYmFyLWNsb3NlIiApICkgewoKCQkJCQkvLyBEaWFsb2cgaXNuJ3QgZ2V0dGlu
ZyBmb2N1cyB3aGVuIGRyYWdnaW5nICgjODA2MykKCQkJCQl0aGlzLnVpRGlhbG9nLnRyaWdnZXIo
ICJmb2N1cyIgKTsKCQkJCX0KCQkJfQoJCX0gKTsKCgkJLy8gU3VwcG9ydDogSUUKCQkvLyBVc2Ug
dHlwZT0iYnV0dG9uIiB0byBwcmV2ZW50IGVudGVyIGtleXByZXNzZXMgaW4gdGV4dGJveGVzIGZy
b20gY2xvc2luZyB0aGUKCQkvLyBkaWFsb2cgaW4gSUUgKCM5MzEyKQoJCXRoaXMudWlEaWFsb2dU
aXRsZWJhckNsb3NlID0gJCggIjxidXR0b24gdHlwZT0nYnV0dG9uJz48L2J1dHRvbj4iICkKCQkJ
LmJ1dHRvbiggewoJCQkJbGFiZWw6ICQoICI8YT4iICkudGV4dCggdGhpcy5vcHRpb25zLmNsb3Nl
VGV4dCApLmh0bWwoKSwKCQkJCWljb246ICJ1aS1pY29uLWNsb3NldGhpY2siLAoJCQkJc2hvd0xh
YmVsOiBmYWxzZQoJCQl9ICkKCQkJLmFwcGVuZFRvKCB0aGlzLnVpRGlhbG9nVGl0bGViYXIgKTsK
CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLCAidWktZGlhbG9n
LXRpdGxlYmFyLWNsb3NlIiApOwoJCXRoaXMuX29uKCB0aGlzLnVpRGlhbG9nVGl0bGViYXJDbG9z
ZSwgewoJCQljbGljazogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJZXZlbnQucHJldmVudERlZmF1
bHQoKTsKCQkJCXRoaXMuY2xvc2UoIGV2ZW50ICk7CgkJCX0KCQl9ICk7CgoJCXVpRGlhbG9nVGl0
bGUgPSAkKCAiPHNwYW4+IiApLnVuaXE=</Default>
</Parameter>

<Parameter name="Frag698064188458031339150884">
<Default>YWJzKCBvZmZzZXQubGVmdCArIGRwV2lkdGggLSB2aWV3V2lkdGggKSA6IDAgKTsKCQlvZmZzZXQu
dG9wIC09IE1hdGgubWluKCBvZmZzZXQudG9wLCAoIG9mZnNldC50b3AgKyBkcEhlaWdodCA+IHZp
ZXdIZWlnaHQgJiYgdmlld0hlaWdodCA+IGRwSGVpZ2h0ICkgPwoJCQlNYXRoLmFicyggZHBIZWln
aHQgKyBpbnB1dEhlaWdodCApIDogMCApOwoKCQlyZXR1cm4gb2Zmc2V0OwoJfSwKCgkvKiBGaW5k
IGFuIG9iamVjdCdzIHBvc2l0aW9uIG9uIHRoZSBzY3JlZW4uICovCglfZmluZFBvczogZnVuY3Rp
b24oIG9iaiApIHsKCQl2YXIgcG9zaXRpb24sCgkJCWluc3QgPSB0aGlzLl9nZXRJbnN0KCBvYmog
KSwKCQkJaXNSVEwgPSB0aGlzLl9nZXQoIGluc3QsICJpc1JUTCIgKTsKCgkJd2hpbGUgKCBvYmog
JiYgKCBvYmoudHlwZSA9PT0gImhpZGRlbiIgfHwgb2JqLm5vZGVUeXBlICE9PSAxIHx8ICQuZXhw
ci5maWx0ZXJzLmhpZGRlbiggb2JqICkgKSApIHsKCQkJb2JqID0gb2JqWyBpc1JUTCA/ICJwcmV2
aW91c1NpYmxpbmciIDogIm5leHRTaWJsaW5nIiBdOwoJCX0KCgkJcG9zaXRpb24gPSAkKCBvYmog
KS5vZmZzZXQoKTsKCQlyZXR1cm4gWyBwb3NpdGlvbi5sZWZ0LCBwb3NpdGlvbi50b3AgXTsKCX0s
CgoJLyogSGlkZSB0aGUgZGF0ZSBwaWNrZXIgZnJvbSB2aWV3LgoJICogQHBhcmFtICBpbnB1dCAg
ZWxlbWVudCAtIHRoZSBpbnB1dCBmaWVsZCBhdHRhY2hlZCB0byB0aGUgZGF0ZSBwaWNrZXIKCSAq
LwoJX2hpZGVEYXRlcGlja2VyOiBmdW5jdGlvbiggaW5wdXQgKSB7CgkJdmFyIHNob3dBbmltLCBk
dXJhdGlvbiwgcG9zdFByb2Nlc3MsIG9uQ2xvc2UsCgkJCWluc3QgPSB0aGlzLl9jdXJJbnN0OwoK
CQlpZiAoICFpbnN0IHx8ICggaW5wdXQgJiYgaW5zdCAhPT0gJC5kYXRhKCBpbnB1dCwgImRhdGVw
aWNrZXIiICkgKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCB0aGlzLl9kYXRlcGlja2VyU2hv
d2luZyApIHsKCQkJc2hvd0FuaW0gPSB0aGlzLl9nZXQoIGluc3QsICJzaG93QW5pbSIgKTsKCQkJ
ZHVyYXRpb24gPSB0aGlzLl9nZXQoIGluc3QsICJkdXJhdGlvbiIgKTsKCQkJcG9zdFByb2Nlc3Mg
PSBmdW5jdGlvbigpIHsKCQkJCSQuZGF0ZXBpY2tlci5fdGlkeURpYWxvZyggaW5zdCApOwoJCQl9
OwoKCQkJLy8gREVQUkVDQVRFRDogYWZ0ZXIgQkMgZm9yIDEuOC54ICQuZWZmZWN0c1sgc2hvd0Fu
aW0gXSBpcyBub3QgbmVlZGVkCgkJCWlmICggJC5lZmZlY3RzICYmICggJC5lZmZlY3RzLmVmZmVj
dFsgc2hvd0FuaW0gXSB8fCAkLmVmZmVjdHNbIHNob3dBbmltIF0gKSApIHsKCQkJCWluc3QuZHBE
aXYuaGlkZSggc2hvd0FuaW0sICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic2hvd09wdGlvbnMi
ICksIGR1cmF0aW9uLCBwb3N0UHJvY2VzcyApOwoJCQl9IGVsc2UgewoJCQkJaW5zdC5kcERpdlsg
KCBzaG93QW5pbSA9PT0gInNsaWRlRG93biIgPyAic2xpZGVVcCIgOgoJCQkJCSggc2hvd0FuaW0g
PT09ICJmYWRlSW4iID8gImZhZGVPdXQiIDogImhpZGUiICkgKSBdKCAoIHNob3dBbmltID8gZHVy
YXRpb24gOiBudWxsICksIHBvc3RQcm9jZXNzICk7CgkJCX0KCgkJCWlmICggIXNob3dBbmltICkg
ewoJCQkJcG9zdFByb2Nlc3MoKTsKCQkJfQoJCQl0aGlzLl9kYXRlcGlja2VyU2hvd2luZyA9IGZh
bHNlOwoKCQkJb25DbG9zZSA9IHRoaXMuX2dldCggaW5zdCwgIm9uQ2xvc2UiICk7CgkJCWlmICgg
b25DbG9zZSApIHsKCQkJCW9uQ2xvc2UuYXBwbHkoICggaW5zdC5pbnB1dCA/IGluc3QuaW5wdXRb
IDAgXSA6IG51bGwgKSwgWyAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0LnZhbCgpIDogIiIgKSwg
aW5zdCBdICk7CgkJCX0KCgkJCXRoaXMuX2xhc3RJbnB1dCA9IG51bGw7CgkJCWlmICggdGhpcy5f
aW5EaWFsb2cgKSB7CgkJCQl0aGlzLl9kaWFsb2dJbnB1dC5jc3MoIHsgcG9zaXRpb246ICJhYnNv
bHV0ZSIsIGxlZnQ6ICIwIiwgdG9wOiAiLTEwMHB4IiB9ICk7CgkJCQlpZiAoICQuYmxvY2tVSSAp
IHsKCQkJCQkkLnVuYmxvY2tVSSgpOwoJCQkJCSQoICJib2R5IiApLmFwcGVuZCggdGhpcy5kcERp
diApOwoJCQkJfQoJCQl9CgkJCXRoaXMuX2luRGlhbG9nID0gZmFsc2U7CgkJfQoJfSwKCgkvKiBU
aWR5IHVwIGFmdGVyIGEgZGlhbG9nIGRpc3BsYXkuICovCglfdGlkeURpYWxvZzogZnVuY3Rpb24o
IGluc3QgKSB7CgkJaW5zdC5kcERpdi5yZW1vdmVDbGFzcyggdGhpcy5fZGlhbG9nQ2xhc3MgKS5v
ZmYoICIudWktZGF0ZXBpY2tlci1jYWxlbmRhciIgKTsKCX0sCgoJLyogQ2xvc2UgZGF0ZSBwaWNr
ZXIgaWYgY2xpY2tlZCBlbHNld2hlcmUuICovCglfY2hlY2tFeHRlcm5hbENsaWNrOiBmdW5jdGlv
biggZXZlbnQgKSB7CgkJaWYgKCAhJC5kYXRlcGlja2VyLl9jdXJJbnN0ICkgewoJCQlyZXR1cm47
CgkJfQoKCQl2YXIgJHRhcmdldCA9ICQoIGV2ZW50LnRhcmdldCApLAoJCQlpbnN0ID0gJC5kYXRl
cGlja2VyLl9nZXRJbnN0KCAkdGFyZ2V0WyAwIF0gKTsKCgkJaWYgKCAoICggJHRhcmdldFsgMCBd
LmlkICE9PSAkLmRhdGVwaWNrZXIuX21haW5EaXZJZCAmJgoJCQkJJHRhcmdldC5wYXJlbnRzKCAi
IyIgKyAkLmRhdGVwaWNrZXIuX21haW5EaXZJZCApLmxlbmd0aCA9PT0gMCAmJgoJCQkJISR0YXJn
ZXQuaGFzQ2xhc3MoICQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUgKSAmJgoJCQkJISR0YXJn
ZXQuY2xvc2VzdCggIi4iICsgJC5kYXRlcGlja2VyLl90cmlnZ2VyQ2xhc3MgKS5sZW5ndGggJiYK
CQkJCSQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgISggJC5kYXRlcGlja2VyLl9p
bkRpYWxvZyAmJiAkLmJsb2NrVUkgKSApICkgfHwKCQkJKCAkdGFyZ2V0Lmhhc0NsYXNzKCAkLmRh
dGVwaWNrZXIubWFya2VyQ2xhc3NOYW1lICkgJiYgJC5kYXRlcGlja2VyLl9jdXJJbnN0ICE9PSBp
bnN0ICkgKSB7CgkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7CgkJfQoJfSwKCgkv
KiBBZGp1c3Qgb25lIG9mIHRoZSBkYXRlIHN1Yi1maWVsZHMuICovCglfYWRqdXN0RGF0ZTogZnVu
Y3Rpb24oIGlkLCBvZmZzZXQsIHBlcmlvZCApIHsKCQl2YXIgdGFyZ2V0ID0gJCggaWQgKSwKCQkJ
aW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsgMCBdICk7CgoJCWlmICggdGhpcy5faXNEaXNh
YmxlZERhdGVwaWNrZXIoIHRhcmdldFsgMCBdICkgKSB7CgkJCXJldHVybjsKCQl9CgkJdGhpcy5f
YWRqdXN0SW5zdERhdGUoIGluc3QsIG9mZnNldCArCgkJCSggcGVyaW9kID09PSAiTSIgPyB0aGlz
Ll9nZXQoIGluc3QsICJzaG93Q3VycmVudEF0UG9zIiApIDogMCApLCAvLyB1bmRvIHBvc2l0aW9u
aW5nCgkJCXBlcmlvZCApOwoJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoIGluc3QgKTsKCX0sCgoJ
LyogQWN0aW9uIGZvciBjdXJyZW50IGxpbmsuICovCglfZ290b1RvZGF5OiBmdW5jdGlvbiggaWQg
KSB7CgkJdmFyIGRhdGUsCgkJCXRhcmdldCA9ICQoIGlkICksCgkJCWluc3QgPSB0aGlzLl9nZXRJ
bnN0KCB0YXJnZXRbIDAgXSApOwoKCQlpZiAoIHRoaXMuX2dldCggaW5zdCwgImdvdG9DdXJyZW50
IiApICYmIGluc3QuY3VycmVudERheSApIHsKCQkJaW5zdC5zZWxlY3RlZERheSA9IGluc3QuY3Vy
cmVudERheTsKCQkJaW5zdC5kcmF3TW9udGggPSBpbnN0LnNlbGVjdGVkTW9udGggPSBpbnN0LmN1
cnJlbnRNb250aDsKCQkJaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyID0gaW5zdC5j
dXJyZW50WWVhcjsKCQl9IGVsc2UgewoJCQlkYXRlID0gbmV3IERhdGUoKTsKCQkJaW5zdC5zZWxl
Y3RlZERheSA9IGRhdGUuZ2V0RGF0ZSgpOwoJCQlpbnN0LmRyYXdNb250aCA9IGluc3Quc2VsZWN0
ZWRNb250aCA9IGRhdGUuZ2V0TW9udGgoKTsKCQkJaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0
ZWRZZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwoJCX0KCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGlu
c3QgKTsKCQl0aGlzLl9hZGp1c3REYXRlKCB0YXJnZXQgKTsKCX0sCgoJLyogQWN0aW9uIGZvciBz
ZWxlY3RpbmcgYSBuZXcgbW9udGgveWVhci4gKi8KCV9zZWxlY3RNb250aFllYXI6IGZ1bmN0aW9u
KCBpZCwgc2VsZWN0LCBwZXJpb2QgKSB7CgkJdmFyIHRhcmdldCA9ICQoIGlkICksCgkJCWluc3Qg
PSB0aGlzLl9nZXRJbnN0KCB0YXJnZXRbIDAgXSApOwoKCQlpbnN0WyAic2VsZWN0ZWQiICsgKCBw
ZXJpb2QgPT09ICJNIiA/ICJNb250aCIgOiAiWWVhciIgKSBdID0KCQlpbnN0WyAiZHJhdyIgKyAo
IHBlcmlvZCA9PT0gIk0iID8gIk1vbnRoIiA6ICJZZWFyIiApIF0gPQoJCQlwYXJzZUludCggc2Vs
ZWN0Lm9wdGlvbnNbIHNlbGVjdC5zZWxlY3RlZEluZGV4IF0udmFsdWUsIDEwICk7CgoJCXRoaXMu
X25vdGlmeUNoYW5nZSggaW5zdCApOwoJCXRoaXMuX2FkanVzdERhdGUoIHRhcmdldCApOwoJfSwK
CgkvKiBBY3Rpb24gZm9yIHNlbGVjdGluZyBhIGRheS4gKi8KCV9zZWxlY3REYXk6IGZ1bmN0aW9u
KCBpZCwgbW9udGgsIHllYXIsIHRkICkgewoJCXZhciBpbnN0LAoJCQl0YXJnZXQgPSAkKCBpZCAp
OwoKCQlpZiAoICQoIHRkICkuaGFzQ2xhc3MoIHRoaXMuX3Vuc2VsZWN0YWJsZUNsYXNzICkgfHwg
dGhpcy5faXNEaXNhYmxlZERhdGVwaWNrZXIoIHRhcmdldFsgMCBdICkgKSB7CgkJCXJldHVybjsK
CQl9CgoJCWluc3QgPSB0aGlzLl9nZXRJbnN0KCB0YXJnZXRbIDAgXSApOwoJCWluc3Quc2VsZWN0
ZWREYXkgPSBpbnN0LmN1cnJlbnREYXkgPSAkKCAiYSIsIHRkICkuaHRtbCgpOwoJCWluc3Quc2Vs
ZWN0ZWRNb250aCA9IGluc3QuY3VycmVudE1vbnRoID0gbW9udGg7CgkJaW5zdC5zZWxlY3RlZFll
YXIgPSBpbnN0LmN1cnJlbnRZZWFyID0geWVhcjsKCQl0aGlzLl9zZWxlY3REYXRlKCBpZCwgdGhp
cy5fZm9ybWF0RGF0ZSggaW5zdCwKCQkJaW5zdC5jdXJyZW50RGF5LCBpbnN0LmN1cnJlbnRNb250
aCwgaW5zdC5jdXJyZW50WWVhciApICk7Cgl9LAoKCS8qIEVyYXNlIHRoZSBpbnB1dCBmaWVsZCBh
bmQgaGlkZSB0aGUgZGF0ZSBwaWNrZXIuICovCglfY2xlYXJEYXRlOiBmdW5jdGlvbiggaWQgKSB7
CgkJdmFyIHRhcmdldCA9ICQoIGlkICk7CgkJdGhpcy5fc2VsZWN0RGF0ZSggdGFyZ2V0LCAiIiAp
OwoJfSwKCgkvKiBVcGRhdGUgdGhlIGlucHV0IGZpZWxkIHdpdGggdGhlIHNlbGVjdGVkIGRhdGUu
ICovCglfc2VsZWN0RGF0ZTogZnVuY3Rpb24oIGlkLCBkYXRlU3RyICkgewoJCXZhciBvblNlbGVj
dCwKCQkJdGFyZ2V0ID0gJCggaWQgKSwKCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsg
MCBdICk7CgoJCWRhdGVTdHIgPSAoIGRhdGVTdHIgIT0gbnVsbCA/IGRhdGVTdHIgOiB0aGlzLl9m
b3JtYXREYXRlKCBpbnN0ICkgKTsKCQlpZiAoIGluc3QuaW5wdXQgKSB7CgkJCWluc3QuaW5wdXQu
dmFsKCBkYXRlU3RyICk7CgkJfQoJCXRoaXMuX3VwZGF0ZUFsdGVybmF0ZSggaW5zdCApOwoKCQlv
blNlbGVjdCA9IHRoaXMuX2dldCggaW5zdCwgIm9uU2VsZWN0IiApOwoJCWlmICggb25TZWxlY3Qg
KSB7CgkJCW9uU2VsZWN0LmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WyAwIF0gOiBu
dWxsICksIFsgZGF0ZVN0ciwgaW5zdCBdICk7ICAvLyB0cmlnZ2VyIGN1c3RvbSBjYWxsYmFjawoJ
CX0gZWxzZSBpZiAoIGluc3QuaW5wdXQgKSB7CgkJCWluc3QuaW5wdXQudHJpZ2dlciggImNoYW5n
ZSIgKTsgLy8gZmlyZSB0aGUgY2hhbmdlIGV2ZW50CgkJfQoKCQlpZiAoIGluc3QuaW5saW5lICkg
ewoJCQl0aGlzLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7CgkJfSBlbHNlIHsKCQkJdGhpcy5f
aGlkZURhdGVwaWNrZXIoKTsKCQkJdGhpcy5fbGFzdElucHV0ID0gaW5zdC5pbnB1dFsgMCBdOwoJ
CQlpZiAoIHR5cGVvZiggaW5zdC5pbnB1dFsgMCBdICkgIT09ICJvYmplY3QiICkgewoJCQkJaW5z
dC5pbnB1dC50cmlnZ2VyKCAiZm9jdXMiICk7IC8vIHJlc3RvcmUgZm9jdXMKCQkJfQoJCQl0aGlz
Ll9sYXN0SW5wdXQgPSBudWxsOwoJCX0KCX0sCgoJLyogVXBkYXRlIGFueSBhbHRlcm5hdGUgZmll
bGQgdG8gc3luY2hyb25pc2Ugd2l0aCB0aGUgbWFpbiBmaWVsZC4gKi8KCV91cGRhdGVBbHRlcm5h
dGU6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXZhciBhbHRGb3JtYXQsIGRhdGUsIGRhdGVTdHIsCgkJ
CWFsdEZpZWxkID0gdGhpcy5fZ2V0KCBpbnN0LCAiYWx0RmllbGQiICk7CgoJCWlmICggYWx0Rmll
bGQgKSB7IC8vIHVwZGF0ZSBhbHRlcm5hdGUgZmllbGQgdG9vCgkJCWFsdEZvcm1hdCA9IHRoaXMu
X2dldCggaW5zdCwgImFsdEZvcm1hdCIgKSB8fCB0aGlzLl9nZXQoIGluc3QsICJkYXRlRm9ybWF0
IiApOwoJCQlkYXRlID0gdGhpcy5fZ2V0RGF0ZSggaW5zdCApOwoJCQlkYXRlU3RyID0gdGhpcy5m
b3JtYXREYXRlKCBhbHRGb3JtYXQsIGRhdGUsIHRoaXMuX2dldEZvcm1hdENvbmZpZyggaW5zdCAp
ICk7CgkJCSQoIGFsdEZpZWxkICkudmFsKCBkYXRlU3RyICk7CgkJfQoJfSwKCgkvKiBTZXQgYXMg
YmVmb3JlU2hvd0RheSBmdW5jdGlvbiB0byBwcmV2ZW50IHNlbGVjdGlvbiBvZiB3ZWVrZW5kcy4K
CSAqIEBwYXJhbSAgZGF0ZSAgRGF0ZSAtIHRoZSBkYXRlIHRvIGN1c3RvbWlzZQoJICogQHJldHVy
biBbYm9vbGVhbiwgc3RyaW5nXSAtIGlzIHRoaXMgZGF0ZSBzZWxlY3RhYmxlPywgd2hhdCBpcyBp
dHMgQ1NTIGNsYXNzPwoJICovCglub1dlZWtlbmRzOiBmdW5jdGlvbiggZGF0ZSApIHsKCQl2YXIg
ZGF5ID0gZGF0ZS5nZXREYXkoKTsKCQlyZXR1cm4gWyAoIGRheSA+IDAgJiYgZGF5IDwgNiApLCAi
IiBdOwoJfSwKCgkvKiBTZXQgYXMgY2FsY3VsYXRlV2VlayB0byBkZXRlcm1pbmUgdGhlIHdlZWsg
b2YgdGhlIHllYXIgYmFzZWQgb24gdGhlIElTTyA4NjAxIGRlZmluaXRpb24uCgkgKiBAcGFyYW0g
IGRhdGUgIERhdGUgLSB0aGUgZGF0ZSB0byBnZXQgdGhlIHdlZWsgZm9yCgkgKiBAcmV0dXJuICBu
dW1iZXIgLSB0aGUgbnVtYmVyIG9mIHRoZSB3ZWVrIHdpdGhpbiB0aGUgeWVhciB0aGF0IGNvbnRh
aW5zIHRoaXMgZGF0ZQoJICovCglpc284NjAxV2VlazogZnVuY3Rpb24oIGRhdGUgKSB7CgkJdmFy
IHRpbWUsCgkJCWNoZWNrRGF0ZSA9IG5ldyBEYXRlKCBkYXRlLmdldFRpbWUoKSApOwoKCQkvLyBG
aW5kIFRodXJzZGF5IG9mIHRoaXMgd2VlayBzdGFydGluZyBvbiBNb25kYXkKCQljaGVja0RhdGUu
c2V0RGF0ZSggY2hlY2tEYXRlLmdldERhdGUoKSArIDQgLSAoIGNoZWNrRGF0ZS5nZXREYXkoKSB8
fCA3ICkgKTsKCgkJdGltZSA9IGNoZWNrRGF0ZS5nZXRUaW1lKCk7CgkJY2hlY2tEYXRlLnNldE1v
bnRoKCAwICk7IC8vIENvbXBhcmUgd2l0aCBKYW4gMQoJCWNoZWNrRGF0ZS5zZXREYXRlKCAxICk7
CgkJcmV0dXJuIE1hdGguZmxvb3IoIE1hdGgucm91bmQoICggdGltZSAtIGNoZWNrRGF0ZSApIC8g
ODY0MDAwMDAgKSAvIDcgKSArIDE7Cgl9LAoKCS8qIFBhcnNlIGEgc3RyaW5nIHZhbHVlIGludG8g
YSBkYXRlIG9iamVjdC4KCSAqIFNlZSBmb3JtYXREYXRlIGJlbG93IGZvciB0aGUgcG9zc2libGUg
Zm9ybWF0cy4KCSAqCgkgKiBAcGFyYW0gIGZvcm1hdCBzdHJpbmcgLSB0aGUgZXhwZWN0ZWQgZm9y
bWF0IG9mIHRoZSBkYXRlCgkgKiBAcGFyYW0gIHZhbHVlIHN0cmluZyAtIHRoZSBkYXRlIGluIHRo
ZSBhYm92ZSBmb3JtYXQKCSAqIEBwYXJhbSAgc2V0dGluZ3MgT2JqZWN0IC0gYXR0cmlidXRlcyBp
bmNsdWRlOgoJICoJCQkJCXNob3J0WWVhckN1dG9mZiAgbnVtYmVyIC0gdGhlIGN1dG9mZiB5ZWFy
IGZvciBkZXRlcm1pbmluZyB0aGUgY2VudHVyeSAob3B0aW9uYWwpCgkgKgkJCQkJZGF5TmFtZXNT
aG9ydAlzdHJpbmdbN10gLSBhYmJyZXZpYXRlZCBuYW1lcyBvZiB0aGUgZGF5cyBmcm9tIFN1bmRh
eSAob3B0aW9uYWwpCgkgKgkJCQkJZGF5TmFtZXMJCXN0cmluZ1s3XSAtIG5hbWVzIG9mIHRoZSBk
YXlzIGZyb20gU3VuZGF5IChvcHRpb25hbCkKCSAqCQkJCQltb250aE5hbWVzU2hvcnQgc3RyaW5n
WzEyXSAtIGFiYnJldmlhdGVkIG5hbWVzIG9mIHRoZSBtb250aHMgKG9wdGlvbmFsKQoJICoJCQkJ
CW1vbnRoTmFtZXMJCXN0cmluZ1sxMl0gLSBuYW1lcyBvZiB0aGUgbW9udGhzIChvcHRpb25hbCkK
CSAqIEByZXR1cm4gIERhdGUgLSB0aGUgZXh0cmFjdGVkIGRhdGUgdmFsdWUgb3IgbnVsbCBpZiB2
YWx1ZSBpcyBibGFuawoJICovCglwYXJzZURhdGU6IGZ1bmN0aW9uKCBmb3JtYXQsIHZhbHVlLCBz
ZXR0aW5ncyApIHsKCQlpZiAoIGZvcm1hdCA9PSBudWxsIHx8IHZhbHVlID09IG51bGwgKSB7CgkJ
CXRocm93ICJJbnZhbGlkIGFyZ3VtZW50cyI7CgkJfQoKCQl2YWx1ZSA9ICggdHlwZW9mIHZhbHVl
ID09PSAib2JqZWN0IiA/IHZhbHVlLnRvU3RyaW5nKCkgOiB2YWx1ZSArICIiICk7CgkJaWYgKCB2
YWx1ZSA9PT0gIiIgKSB7CgkJCXJldHVybiBudWxsOwoJCX0KCgkJdmFyIGlGb3JtYXQsIGRpbSwg
ZXh0cmEsCgkJCWlWYWx1ZSA9IDAsCgkJCXNob3J0WWVhckN1dG9mZlRlbXAgPSAoIHNldHRpbmdz
ID8gc2V0dGluZ3Muc2hvcnRZZWFyQ3V0b2ZmIDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLnNo
b3J0WWVhckN1dG9mZiwKCQkJc2hvcnRZZWFyQ3V0b2ZmID0gKCB0eXBlb2Ygc2hvcnRZZWFyQ3V0
b2ZmVGVtcCAhPT0gInN0cmluZyIgPyBzaG9ydFllYXJDdXRvZmZUZW1wIDoKCQkJCW5ldyBEYXRl
KCkuZ2V0RnVsbFllYXIoKSAlIDEwMCArIHBhcnNlSW50KCBzaG9ydFllYXJDdXRvZmZUZW1wLCAx
MCApICksCgkJCWRheU5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MuZGF5TmFtZXNT
aG9ydCA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LAoJCQlkYXlOYW1l
cyA9ICggc2V0dGluZ3MgPyBzZXR0aW5ncy5kYXlOYW1lcyA6IG51bGwgKSB8fCB0aGlzLl9kZWZh
dWx0cy5kYXlOYW1lcywKCQkJbW9udGhOYW1lc1Nob3J0ID0gKCBzZXR0aW5ncyA/IHNldHRpbmdz
Lm1vbnRoTmFtZXNTaG9ydCA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzU2hv
cnQsCgkJCW1vbnRoTmFtZXMgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lcyA6IG51
bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLAoJCQl5ZWFyID0gLTEsCgkJCW1vbnRo
ID0gLTEsCgkJCWRheSA9IC0xLAoJCQlkb3kgPSAtMSwKCQkJbGl0ZXJhbCA9IGZhbHNlLAoJCQlk
YXRlLAoKCQkJLy8gQ2hlY2sgd2hldGhlciBhIGZvcm1hdCBjaGFyYWN0ZXIgaXMgZG91YmxlZAoJ
CQlsb29rQWhlYWQgPSBmdW5jdGlvbiggbWF0Y2ggKSB7CgkJCQl2YXIgbWF0Y2hlcyA9ICggaUZv
cm1hdCArIDEgPCBmb3JtYXQubGVuZ3RoICYmIGZvcm1hdC5jaGFyQXQoIGlGb3JtYXQgKyAxICkg
PT09IG1hdGNoICk7CgkJCQlpZiAoIG1hdGNoZXMgKSB7CgkJCQkJaUZvcm1hdCsrOwoJCQkJfQoJ
CQkJcmV0dXJuIG1hdGNoZXM7CgkJCX0sCgoJCQkvLyBFeHRyYWN0IGEgbnVtYmVyIGZyb20gdGhl
IHN0cmluZyB2YWx1ZQoJCQlnZXROdW1iZXIgPSBmdW5jdGlvbiggbWF0Y2ggKSB7CgkJCQl2YXIg
aXNEb3VibGVkID0gbG9va0FoZWFkKCBtYXRjaCApLAoJCQkJCXNpemUgPSAoIG1hdGNoID09PSAi
QCIgPyAxNCA6ICggbWF0Y2ggPT09ICIhIiA/IDIwIDoKCQkJCQkoIG1hdGNoID09PSAieSIgJiYg
aXNEb3VibGVkID8gNCA6ICggbWF0Y2ggPT09ICJvIiA/IDMgOiAyICkgKSApICksCgkJCQkJbWlu
U2l6ZSA9ICggbWF0Y2ggPT09ICJ5IiA/IHNpemUgOiAxICksCgkJCQkJZGlnaXRzID0gbmV3IFJl
Z0V4cCggIl5cXGR7IiArIG1pblNpemUgKyAiLCIgKyBzaXplICsgIn0iICksCgkJCQkJbnVtID0g
dmFsdWUuc3Vic3RyaW5nKCBpVmFsdWUgKS5tYXRjaCggZGlnaXRzICk7CgkJCQlpZiAoICFudW0g
KSB7CgkJCQkJdGhyb3cgIk1pc3NpbmcgbnVtYmVyIGF0IHBvc2l0aW9uICIgKyBpVmFsdWU7CgkJ
CQl9CgkJCQlpVmFsdWUgKz0gbnVtWyAwIF0ubGVuZ3RoOwoJCQkJcmV0dXJuIHBhcnNlSW50KCBu
dW1bIDAgXSwgMTAgKTsKCQkJfSwKCgkJCS8vIEV4dHJhY3QgYSBuYW1lIGZyb20gdGhlIHN0cmlu
ZyB2YWx1ZSBhbmQgY29udmVydCB0byBhbiBpbmRleAoJCQlnZXROYW1lID0gZnVuY3Rpb24oIG1h
dGNoLCBzaG9ydE5hbWVzLCBsb25nTmFtZXMgKSB7CgkJCQl2YXIgaW5kZXggPSAtMSwKCQkJCQlu
YW1lcyA9ICQubWFwKCBsb29rQWhlYWQoIG1hdGNoICkgPyBsb25nTmFtZXMgOiBzaG9ydE5hbWVz
LCBmdW5jdGlvbiggdiwgayApIHsKCQkJCQkJcmV0dXJuIFsgWyBrLCB2IF0gXTsKCQkJCQl9ICku
c29ydCggZnVuY3Rpb24oIGEsIGIgKSB7CgkJCQkJCXJldHVybiAtKCBhWyAxIF0ubGVuZ3RoIC0g
YlsgMSBdLmxlbmd0aCApOwoJCQkJCX0gKTsKCgkJCQkkLmVhY2goIG5hbWVzLCBmdW5jdGlvbigg
aSwgcGFpciApIHsKCQkJCQl2YXIgbmFtZSA9IHBhaXJbIDEgXTsKCQkJCQlpZiAoIHZhbHVlLnN1
YnN0ciggaVZhbHVlLCBuYW1lLmxlbmd0aCApLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dl
ckNhc2UoKSApIHsKCQkJCQkJaW5kZXggPSBwYWlyWyAwIF07CgkJCQkJCWlWYWx1ZSArPSBuYW1l
Lmxlbmd0aDsKCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCX0KCQkJCX0gKTsKCQkJCWlmICggaW5k
ZXggIT09IC0xICkgewoJCQkJCXJldHVybiBpbmRleCArIDE7CgkJCQl9IGVsc2UgewoJCQkJCXRo
cm93ICJVbmtub3duIG5hbWUgYXQgcG9zaXRpb24gIiArIGlWYWx1ZTsKCQkJCX0KCQkJfSwKCgkJ
CS8vIENvbmZpcm0gdGhhdCBhIGxpdGVyYWwgY2hhcmFjdGVyIG1hdGNoZXMgdGhlIHN0cmluZyB2
YWx1ZQoJCQljaGVja0xpdGVyYWwgPSBmdW5jdGlvbigpIHsKCQkJCWlmICggdmFsdWUuY2hhckF0
KCBpVmFsdWUgKSAhPT0gZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApICkgewoJCQkJCXRocm93ICJV
bmV4cGVjdGVkIGxpdGVyYWwgYXQgcG9zaXRpb24gIiArIGlWYWx1ZTsKCQkJCX0KCQkJCWlWYWx1
ZSsrOwoJCQl9OwoKCQlmb3IgKCBpRm9ybWF0ID0gMDsgaUZvcm1hdCA8IGZvcm1hdC5sZW5ndGg7
IGlGb3JtYXQrKyApIHsKCQkJaWYgKCBsaXRlcmFsICkgewoJCQkJaWYgKCBmb3JtYXQuY2hhckF0
KCBpRm9ybWF0ICkgPT09ICInIiAmJiAhbG9va0FoZWFkKCAiJyIgKSApIHsKCQkJCQlsaXRlcmFs
ID0gZmFsc2U7CgkJCQl9IGVsc2UgewoJCQkJCWNoZWNrTGl0ZXJhbCgpOwoJCQkJfQoJCQl9IGVs
c2UgewoJCQkJc3dpdGNoICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApICkgewoJCQkJCWNhc2Ug
ImQiOgoJCQkJCQlkYXkgPSBnZXROdW1iZXIoICJkIiApOwoJCQkJCQlicmVhazsKCQkJCQljYXNl
ICJEIjoKCQkJCQkJZ2V0TmFtZSggIkQiLCBkYXlOYW1lc1Nob3J0LCBkYXlOYW1lcyApOwoJCQkJ
CQlicmVhazsKCQkJCQljYXNlICJvIjoKCQkJCQkJZG95ID0gZ2V0TnVtYmVyKCAibyIgKTsKCQkJ
CQkJYnJlYWs7CgkJCQkJY2FzZSAibSI6CgkJCQkJCW1vbnRoID0gZ2V0TnVtYmVyKCAibSIgKTsK
CQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiTSI6CgkJCQkJCW1vbnRoID0gZ2V0TmFtZSggIk0iLCBt
b250aE5hbWVzU2hvcnQsIG1vbnRoTmFtZXMgKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAieSI6
CgkJCQkJCXllYXIgPSBnZXROdW1iZXIoICJ5IiApOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJA
IjoKCQkJCQkJZGF0ZSA9IG5ldyBEYXRlKCBnZXROdW1iZXIoICJAIiApICk7CgkJCQkJCXllYXIg
PSBkYXRlLmdldEZ1bGxZZWFyKCk7CgkJCQkJCW1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTsK
CQkJCQkJZGF5ID0gZGF0ZS5nZXREYXRlKCk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIiEiOgoJ
CQkJCQlkYXRlID0gbmV3IERhdGUoICggZ2V0TnVtYmVyKCAiISIgKSAtIHRoaXMuX3RpY2tzVG8x
OTcwICkgLyAxMDAwMCApOwoJCQkJCQl5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwoJCQkJCQlt
b250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7CgkJCQkJCWRheSA9IGRhdGUuZ2V0RGF0ZSgpOwoJ
CQkJCQlicmVhazsKCQkJCQljYXNlICInIjoKCQkJCQkJaWYgKCBsb29rQWhlYWQoICInIiApICkg
ewoJCQkJCQkJY2hlY2tMaXRlcmFsKCk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlsaXRlcmFsID0g
dHJ1ZTsKCQkJCQkJfQoJCQkJCQlicmVhazsKCQkJCQlkZWZhdWx0OgoJCQkJCQljaGVja0xpdGVy
YWwoKTsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKCBpVmFsdWUgPCB2YWx1ZS5sZW5ndGggKSB7CgkJ
CWV4dHJhID0gdmFsdWUuc3Vic3RyKCBpVmFsdWUgKTsKCQkJaWYgKCAhL15ccysvLnRlc3QoIGV4
dHJhICkgKSB7CgkJCQl0aHJvdyAiRXh0cmEvdW5wYXJzZWQgY2hhcmFjdGVycyBmb3VuZCBpbiBk
YXRlOiAiICsgZXh0cmE7CgkJCX0KCQl9CgoJCWlmICggeWVhciA9PT0gLTEgKSB7CgkJCXllYXIg
PSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7CgkJfSBlbHNlIGlmICggeWVhciA8IDEwMCApIHsK
CQkJeWVhciArPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgLSBuZXcgRGF0ZSgpLmdldEZ1bGxZ
ZWFyKCkgJSAxMDAgKwoJCQkJKCB5ZWFyIDw9IHNob3J0WWVhckN1dG9mZiA/IDAgOiAtMTAwICk7
CgkJfQoKCQlpZiAoIGRveSA+IC0xICkgewoJCQltb250aCA9IDE7CgkJCWRheSA9IGRveTsKCQkJ
ZG8gewoJCQkJZGltID0gdGhpcy5fZ2V0RGF5c0luTW9udGgoIHllYXIsIG1vbnRoIC0gMSApOwoJ
CQkJaWYgKCBkYXkgPD0gZGltICkgewoJCQkJCWJyZWFrOwoJCQkJfQoJCQkJbW9udGgrKzsKCQkJ
CWRheSAtPSBkaW07CgkJCX0gd2hpbGUgKCB0cnVlICk7CgkJfQoKCQlkYXRlID0gdGhpcy5fZGF5
bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCB5ZWFyLCBtb250aCAtIDEsIGRheSApICk7CgkJ
aWYgKCBkYXRlLmdldEZ1bGxZZWFyKCkgIT09IHllYXIgfHwgZGF0ZS5nZXRNb250aCgpICsgMSAh
PT0gbW9udGggfHwgZGF0ZS5nZXREYXRlKCkgIT09IGRheSApIHsKCQkJdGhyb3cgIkludmFsaWQg
ZGF0ZSI7IC8vIEUuZy4gMzEvMDIvMDAKCQl9CgkJcmV0dXJuIGRhdGU7Cgl9LAoKCS8qIFN0YW5k
YXJkIGRhdGUgZm9ybWF0cy4gKi8KCUFUT006ICJ5eS1tbS1kZCIsIC8vIFJGQyAzMzM5IChJU08g
ODYwMSkKCUNPT0tJRTogIkQsIGRkIE0geXkiLAoJSVNPXzg2MDE6ICJ5eS1tbS1kZCIsCglSRkNf
ODIyOiAiRCwgZCBNIHkiLAoJUkZDXzg1MDogIkRELCBkZC1NLXkiLAoJUkZDXzEwMzY6ICJELCBk
IE0geSIsCglSRkNfMTEyMzogIkQsIGQgTSB5eSIsCglSRkNfMjgyMjogIkQsIGQgTSB5eSIsCglS
U1M6ICJELCBkIE0geSIsIC8vIFJGQyA4MjIKCVRJQ0tTOiAiISIsCglUSU1FU1RBTVA6ICJAIiwK
CVczQzogInl5LW1tLWRkIiwgLy8gSVNPIDg2MDEKCglfdGlja3NUbzE5NzA6ICggKCAoIDE5NzAg
LSAxICkgKiAzNjUgKyBNYXRoLmZsb29yKCAxOTcwIC8gNCApIC0gTWF0aC5mbG9vciggMTk3MCAv
IDEwMCApICsKCQlNYXRoLmZsb29yKCAxOTcwIC8gNDAwICkgKSAqIDI0ICogNjAgKiA2MCAqIDEw
MDAwMDAwICksCgoJLyogRm9ybWF0IGEgZGF0ZSBvYmplY3QgaW50byBhIHN0cmluZyB2YWx1ZS4K
CSAqIFRoZSBmb3JtYXQgY2FuIGJlIGNvbWJpbmF0aW9ucyBvZiB0aGUgZm9sbG93aW5nOgoJICog
ZCAgLSBkYXkgb2YgbW9udGggKG5vIGxlYWRpbmcgemVybykKCSAqIGRkIC0gZGF5IG9mIG1vbnRo
ICh0d28gZGlnaXQpCgkgKiBvICAtIGRheSBvZiB5ZWFyIChubyBsZWFkaW5nIHplcm9zKQoJICog
b28gLSBkYXkgb2YgeWVhciAodGhyZWUgZGlnaXQpCgkgKiBEICAtIGRheSBuYW1lIHNob3J0Cgkg
KiBERCAtIGRheSBuYW1lIGxvbmcKCSAqIG0gIC0gbW9udGggb2YgeWVhciAobm8gbGVhZGluZyB6
ZXJvKQoJICogbW0gLSBtb250aCBvZiB5ZWFyICh0d28gZGlnaXQpCgkgKiBNICAtIG1vbnRoIG5h
bWUgc2hvcnQKCSAqIE1NIC0gbW9udGggbmFtZSBsb25nCgkgKiB5ICAtIHllYXIgKHR3byBkaWdp
dCkKCSAqIHl5IC0geWVhciAoZm91ciBkaWdpdCkKCSAqIEAgLSBVbml4IHRpbWVzdGFtcCAobXMg
c2luY2UgMDEvMDEvMTk3MCkKCSAqICEgLSBXaW5kb3dzIHRpY2tzICgxMDBucyBzaW5jZSAwMS8w
MS8wMDAxKQoJICogIi4uLiIgLSBsaXRlcmFsIHRleHQKCSAqICcnIC0gc2luZ2xlIHF1b3RlCgkg
KgoJICogQHBhcmFtICBmb3JtYXQgc3RyaW5nIC0gdGhlIGRlc2lyZWQgZm9ybWF0IG9mIHRoZSBk
YXRlCgkgKiBAcGFyYW0gIGRhdGUgRGF0ZSAtIHRoZSBkYXRlIHZhbHVlIHRvIGZvcm1hdAoJICog
QHBhcmFtICBzZXR0aW5ncyBPYmplY3QgLSBhdHRyaWJ1dGVzIGluY2x1ZGU6CgkgKgkJCQkJZGF5
TmFtZXNTaG9ydAlzdHJpbmdbN10gLSBhYmJyZXZpYXRlZCBuYW1lcyBvZiB0aGUgZGF5cyBmcm9t
IFN1bmRheSAob3B0aW9uYWwpCgkgKgkJCQkJZGF5TmFtZXMJCXN0cmluZ1s3XSAtIG5hbWVzIG9m
IHRoZSBkYXlzIGZyb20gU3VuZGF5IChvcHRpb25hbCkKCSAqCQkJCQltb250aE5hbWVzU2hvcnQg
c3RyaW5nWzEyXSAtIGFiYnJldmlhdGVkIG5hbWVzIG9mIHRoZSBtb250aHMgKG9wdGlvbmFsKQoJ
ICoJCQkJCW1vbnRoTmFtZXMJCXN0cmluZ1sxMl0gLSBuYW1lcyBvZiB0aGUgbW9udGhzIChvcHRp
b25hbCkKCSAqIEByZXR1cm4gIHN0cmluZyAtIHRoZSBkYXRlIGluIHRoZSBhYm92ZSBmb3JtYXQK
CSAqLwoJZm9ybWF0RGF0ZTogZnVuY3Rpb24oIGZvcm1hdCwgZGF0ZSwgc2V0dGluZ3MgKSB7CgkJ
aWYgKCAhZGF0ZSApIHsKCQkJcmV0dXJuICIiOwoJCX0KCgkJdmFyIGlGb3JtYXQsCgkJCWRheU5h
bWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MuZGF5TmFtZXNTaG9ydCA6IG51bGwgKSB8
fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LAoJCQlkYXlOYW1lcyA9ICggc2V0dGluZ3Mg
PyBzZXR0aW5ncy5kYXlOYW1lcyA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5kYXlOYW1lcywK
CQkJbW9udGhOYW1lc1Nob3J0ID0gKCBzZXR0aW5ncyA/IHNldHRpbmdzLm1vbnRoTmFtZXNTaG9y
dCA6IG51bGwgKSB8fCB0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzU2hvcnQsCgkJCW1vbnRoTmFt
ZXMgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lcyA6IG51bGwgKSB8fCB0aGlzLl9k
ZWZhdWx0cy5tb250aE5hbWVzLAoKCQkJLy8gQ2hlY2sgd2hldGhlciBhIGZvcm1hdCBjaGFyYWN0
ZXIgaXMgZG91YmxlZAoJCQlsb29rQWhlYWQgPSBmdW5jdGlvbiggbWF0Y2ggKSB7CgkJCQl2YXIg
bWF0Y2hlcyA9ICggaUZvcm1hdCArIDEgPCBmb3JtYXQubGVuZ3RoICYmIGZvcm1hdC5jaGFyQXQo
IGlGb3JtYXQgKyAxICkgPT09IG1hdGNoICk7CgkJCQlpZiAoIG1hdGNoZXMgKSB7CgkJCQkJaUZv
cm1hdCsrOwoJCQkJfQoJCQkJcmV0dXJuIG1hdGNoZXM7CgkJCX0sCgoJCQkvLyBGb3JtYXQgYSBu
dW1iZXIsIHdpdGggbGVhZGluZyB6ZXJvIGlmIG5lY2Vzc2FyeQoJCQlmb3JtYXROdW1iZXIgPSBm
dW5jdGlvbiggbWF0Y2gsIHZhbHVlLCBsZW4gKSB7CgkJCQl2YXIgbnVtID0gIiIgKyB2YWx1ZTsK
CQkJCWlmICggbG9va0FoZWFkKCBtYXRjaCApICkgewoJCQkJCXdoaWxlICggbnVtLmxlbmd0aCA8
IGxlbiApIHsKCQkJCQkJbnVtID0gIjAiICsgbnVtOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiBu
dW07CgkJCX0sCgoJCQkvLyBGb3JtYXQgYSBuYW1lLCBzaG9ydCBvciBsb25nIGFzIHJlcXVlc3Rl
ZAoJCQlmb3JtYXROYW1lID0gZnVuY3Rpb24oIG1hdGNoLCB2YWx1ZSwgc2hvcnROYW1lcywgbG9u
Z05hbWVzICkgewoJCQkJcmV0dXJuICggbG9va0FoZWFkKCBtYXRjaCApID8gbG9uZ05hbWVzWyB2
YWx1ZSBdIDogc2hvcnROYW1lc1sgdmFsdWUgXSApOwoJCQl9LAoJCQlvdXRwdXQgPSAiIiwKCQkJ
bGl0ZXJhbCA9IGZhbHNlOwoKCQlpZiAoIGRhdGUgKSB7CgkJCWZvciAoIGlGb3JtYXQgPSAwOyBp
Rm9ybWF0IDwgZm9ybWF0Lmxlbmd0aDsgaUZvcm1hdCsrICkgewoJCQkJaWYgKCBsaXRlcmFsICkg
ewoJCQkJCWlmICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApID09PSAiJyIgJiYgIWxvb2tBaGVh
ZCggIiciICkgKSB7CgkJCQkJCWxpdGVyYWwgPSBmYWxzZTsKCQkJCQl9IGVsc2UgewoJCQkJCQlv
dXRwdXQgKz0gZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApOwoJCQkJCX0KCQkJCX0gZWxzZSB7CgkJ
CQkJc3dpdGNoICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApICkgewoJCQkJCQljYXNlICJkIjoK
CQkJCQkJCW91dHB1dCArPSBmb3JtYXROdW1iZXIoICJkIiwgZGF0ZS5nZXREYXRlKCksIDIgKTsK
CQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlICJEIjoKCQkJCQkJCW91dHB1dCArPSBmb3JtYXROYW1l
KCAiRCIsIGRhdGUuZ2V0RGF5KCksIGRheU5hbWVzU2hvcnQsIGRheU5hbWVzICk7CgkJCQkJCQli
cmVhazsKCQkJCQkJY2FzZSAibyI6CgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0TnVtYmVyKCAibyIs
CgkJCQkJCQkJTWF0aC5yb3VuZCggKCBuZXcgRGF0ZSggZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRl
LmdldE1vbnRoKCksIGRhdGUuZ2V0RGF0ZSgpICkuZ2V0VGltZSgpIC0gbmV3IERhdGUoIGRhdGUu
Z2V0RnVsbFllYXIoKSwgMCwgMCApLmdldFRpbWUoKSApIC8gODY0MDAwMDAgKSwgMyApOwoJCQkJ
CQkJYnJlYWs7CgkJCQkJCWNhc2UgIm0iOgoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdE51bWJlcigg
Im0iLCBkYXRlLmdldE1vbnRoKCkgKyAxLCAyICk7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSAi
TSI6CgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0TmFtZSggIk0iLCBkYXRlLmdldE1vbnRoKCksIG1v
bnRoTmFtZXNTaG9ydCwgbW9udGhOYW1lcyApOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgInki
OgoJCQkJCQkJb3V0cHV0ICs9ICggbG9va0FoZWFkKCAieSIgKSA/IGRhdGUuZ2V0RnVsbFllYXIo
KSA6CgkJCQkJCQkJKCBkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDAgPCAxMCA/ICIwIiA6ICIiICkg
KyBkYXRlLmdldEZ1bGxZZWFyKCkgJSAxMDAgKTsKCQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlICJA
IjoKCQkJCQkJCW91dHB1dCArPSBkYXRlLmdldFRpbWUoKTsKCQkJCQkJCWJyZWFrOwoJCQkJCQlj
YXNlICIhIjoKCQkJCQkJCW91dHB1dCArPSBkYXRlLmdldFRpbWUoKSAqIDEwMDAwICsgdGhpcy5f
dGlja3NUbzE5NzA7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSAiJyI6CgkJCQkJCQlpZiAoIGxv
b2tBaGVhZCggIiciICkgKSB7CgkJCQkJCQkJb3V0cHV0ICs9ICInIjsKCQkJCQkJCX0gZWxzZSB7
CgkJCQkJCQkJbGl0ZXJhbCA9IHRydWU7CgkJCQkJCQl9CgkJCQkJCQlicmVhazsKCQkJCQkJZGVm
YXVsdDoKCQkJCQkJCW91dHB1dCArPSBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICk7CgkJCQkJfQoJ
CQkJfQoJCQl9CgkJfQoJCXJldHVybiBvdXRwdXQ7Cgl9LAoKCS8qIEV4dHJhY3QgYWxsIHBvc3Np
YmxlIGNoYXJhY3RlcnMgZnJvbSB0aGUgZGF0ZSBmb3JtYXQuICovCglfcG9zc2libGVDaGFyczog
ZnVuY3Rpb24oIGZvcm1hdCApIHsKCQl2YXIgaUZvcm1hdCwKCQkJY2hhcnMgPSAiIiwKCQkJbGl0
ZXJhbCA9IGZhbHNlLAoKCQkJLy8gQ2hlY2sgd2hldGhlciBhIGZvcm1hdCBjaGFyYWN0ZXIgaXMg
ZG91YmxlZAoJCQlsb29rQWhlYWQgPSBmdW5jdGlvbiggbWF0Y2ggKSB7CgkJCQl2YXIgbWF0Y2hl
cyA9ICggaUZvcm1hdCArIDEgPCBmb3JtYXQubGVuZ3RoICYmIGZvcm1hdC5jaGFyQXQoIGlGb3Jt
YXQgKyAxICkgPT09IG1hdGNoICk7CgkJCQlpZiAoIG1hdGNoZXMgKSB7CgkJCQkJaUZvcm1hdCsr
OwoJCQkJfQoJCQkJcmV0dXJuIG1hdGNoZXM7CgkJCX07CgoJCWZvciAoIGlGb3JtYXQgPSAwOyBp
Rm9ybWF0IDwgZm9ybWF0Lmxlbmd0aDsgaUZvcm1hdCsrICkgewoJCQlpZiAoIGxpdGVyYWwgKSB7
CgkJCQlpZiAoIGZvcm1hdC5jaGFyQXQoIGlGb3JtYXQgKSA9PT0gIiciICYmICFsb29rQWhlYWQo
ICInIiApICkgewoJCQkJCWxpdGVyYWwgPSBmYWxzZTsKCQkJCX0gZWxzZSB7CgkJCQkJY2hhcnMg
Kz0gZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApOwoJCQkJfQoJCQl9IGVsc2UgewoJCQkJc3dpdGNo
ICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApICkgewoJCQkJCWNhc2UgImQiOiBjYXNlICJtIjog
Y2FzZSAieSI6IGNhc2UgIkAiOgoJCQkJCQljaGFycyArPSAiMDEyMzQ1Njc4OSI7CgkJCQkJCWJy
ZWFrOwoJCQkJCWNhc2UgIkQiOiBjYXNlICJNIjoKCQkJCQkJcmV0dXJuIG51bGw7IC8vIEFjY2Vw
dCBhbnl0aGluZwoJCQkJCWNhc2UgIiciOgoJCQkJCQlpZiAoIGxvb2tBaGVhZCggIiciICkgKSB7
CgkJCQkJCQljaGFycyArPSAiJyI7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlsaXRlcmFsID0gdHJ1
ZTsKCQkJCQkJfQoJCQkJCQlicmVhazsKCQkJCQlkZWZhdWx0OgoJCQkJCQljaGFycyArPSBmb3Jt
YXQuY2hhckF0KCBpRm9ybWF0ICk7CgkJCQl9CgkJCX0KCQl9CgkJcmV0dXJuIGNoYXJzOwoJfSwK
CgkvKiBHZXQgYSBzZXR0aW5nIHZhbHVlLCBkZWZhdWx0aW5nIGlmIG5lY2Vzc2FyeS4gKi8KCV9n
ZXQ6IGZ1bmN0aW9uKCBpbnN0LCBuYW1lICkgewoJCXJldHVybiBpbnN0LnNldHRpbmdzWyBuYW1l
IF0gIT09IHVuZGVmaW5lZCA/CgkJCWluc3Quc2V0dGluZ3NbIG5hbWUgXSA6IHRoaXMuX2RlZmF1
bHRzWyBuYW1lIF07Cgl9LAoKCS8qIFBhcnNlIGV4aXN0aW5nIGRhdGUgYW5kIGluaXRpYWxpc2Ug
ZGF0ZSBwaWNrZXIuICovCglfc2V0RGF0ZUZyb21GaWVsZDogZnVuY3Rpb24oIGluc3QsIG5vRGVm
YXVsdCApIHsKCQlpZiAoIGluc3QuaW5wdXQudmFsKCkgPT09IGluc3QubGFzdFZhbCApIHsKCQkJ
cmV0dXJuOwoJCX0KCgkJdmFyIGRhdGVGb3JtYXQgPSB0aGlzLl9nZXQoIGluc3QsICJkYXRlRm9y
bWF0IiApLAoJCQlkYXRlcyA9IGluc3QubGFzdFZhbCA9IGluc3QuaW5wdXQgPyBpbnN0LmlucHV0
LnZhbCgpIDogbnVsbCwKCQkJZGVmYXVsdERhdGUgPSB0aGlzLl9nZXREZWZhdWx0RGF0ZSggaW5z
dCApLAoJCQlkYXRlID0gZGVmYXVsdERhdGUsCgkJCXNldHRpbmdzID0gdGhpcy5fZ2V0Rm9ybWF0
Q29uZmlnKCBpbnN0ICk7CgoJCXRyeSB7CgkJCWRhdGUgPSB0aGlzLnBhcnNlRGF0ZSggZGF0ZUZv
cm1hdCwgZGF0ZXMsIHNldHRpbmdzICkgfHwgZGVmYXVsdERhdGU7CgkJfSBjYXRjaCAoIGV2ZW50
ICkgewoJCQlkYXRlcyA9ICggbm9EZWZhdWx0ID8gIiIgOiBkYXRlcyApOwoJCX0KCQlpbnN0LnNl
bGVjdGVkRGF5ID0gZGF0ZS5nZXREYXRlKCk7CgkJaW5zdC5kcmF3TW9udGggPSBpbnN0LnNlbGVj
dGVkTW9udGggPSBkYXRlLmdldE1vbnRoKCk7CgkJaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0
ZWRZZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwoJCWluc3QuY3VycmVudERheSA9ICggZGF0ZXMg
PyBkYXRlLmdldERhdGUoKSA6IDAgKTsKCQlpbnN0LmN1cnJlbnRNb250aCA9ICggZGF0ZXMgPyBk
YXRlLmdldE1vbnRoKCkgOiAwICk7CgkJaW5zdC5jdXJyZW50WWVhciA9ICggZGF0ZXMgPyBkYXRl
LmdldEZ1bGxZZWFyKCkgOiAwICk7CgkJdGhpcy5fYWRqdXN0SW5zdERhdGUoIGluc3QgKTsKCX0s
CgoJLyogUmV0cmlldmUgdGhlIGRlZmF1bHQgZGF0ZSBzaG93biBvbiBvcGVuaW5nLiAqLwoJX2dl
dERlZmF1bHREYXRlOiBmdW5jdGlvbiggaW5zdCApIHsKCQlyZXR1cm4gdGhpcy5fcmVzdHJpY3RN
aW5NYXgoIGluc3QsCgkJCXRoaXMuX2RldGVybWluZURhdGUoIGluc3QsIHRoaXMuX2dldCggaW5z
dCwgImRlZmF1bHREYXRlIiApLCBuZXcgRGF0ZSgpICkgKTsKCX0sCgoJLyogQSBkYXRlIG1heSBi
ZSBzcGVjaWZpZWQgYXMgYW4gZXhhY3QgdmFsdWUgb3IgYSByZWxhdGl2ZSBvbmUuICovCglfZGV0
ZXJtaW5lRGF0ZTogZnVuY3Rpb24oIGluc3QsIGRhdGUsIGRlZmF1bHREYXRlICkgewoJCXZhciBv
ZmZzZXROdW1lcmljID0gZnVuY3Rpb24oIG9mZnNldCApIHsKCQkJCXZhciBkYXRlID0gbmV3IERh
dGUoKTsKCQkJCWRhdGUuc2V0RGF0ZSggZGF0ZS5nZXREYXRlKCkgKyBvZmZzZXQgKTsKCQkJCXJl
dHVybiBkYXRlOwoJCQl9LAoJCQlvZmZzZXRTdHJpbmcgPSBmdW5jdGlvbiggb2Zmc2V0ICkgewoJ
CQkJdHJ5IHsKCQkJCQlyZXR1cm4gJC5kYXRlcGlja2VyLnBhcnNlRGF0ZSggJC5kYXRlcGlja2Vy
Ll9nZXQoIGluc3QsICJkYXRlRm9ybWF0IiApLAoJCQkJCQlvZmZzZXQsICQuZGF0ZXBpY2tlci5f
Z2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICkgKTsKCQkJCX0KCQkJCWNhdGNoICggZSApIHsKCgkJCQkJ
Ly8gSWdub3JlCgkJCQl9CgoJCQkJdmFyIGRhdGUgPSAoIG9mZnNldC50b0xvd2VyQ2FzZSgpLm1h
dGNoKCAvXmMvICkgPwoJCQkJCSQuZGF0ZXBpY2tlci5fZ2V0RGF0ZSggaW5zdCApIDogbnVsbCAp
IHx8IG5ldyBEYXRlKCksCgkJCQkJeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKSwKCQkJCQltb250
aCA9IGRhdGUuZ2V0TW9udGgoKSwKCQkJCQlkYXkgPSBkYXRlLmdldERhdGUoKSwKCQkJCQlwYXR0
ZXJuID0gLyhbK1wtXT9bMC05XSspXHMqKGR8RHx3fFd8bXxNfHl8WSk/L2csCgkJCQkJbWF0Y2hl
cyA9IHBhdHRlcm4uZXhlYyggb2Zmc2V0ICk7CgoJCQkJd2hpbGUgKCBtYXRjaGVzICkgewoJCQkJ
CXN3aXRjaCAoIG1hdGNoZXNbIDIgXSB8fCAiZCIgKSB7CgkJCQkJCWNhc2UgImQiIDogY2FzZSAi
RCIgOgoJCQkJCQkJZGF5ICs9IHBhcnNlSW50KCBtYXRjaGVzWyAxIF0sIDEwICk7IGJyZWFrOwoJ
CQkJCQljYXNlICJ3IiA6IGNhc2UgIlciIDoKCQkJCQkJCWRheSArPSBwYXJzZUludCggbWF0Y2hl
c1sgMSBdLCAxMCApICogNzsgYnJlYWs7CgkJCQkJCWNhc2UgIm0iIDogY2FzZSAiTSIgOgoJCQkJ
CQkJbW9udGggKz0gcGFyc2VJbnQoIG1hdGNoZXNbIDEgXSwgMTAgKTsKCQkJCQkJCWRheSA9IE1h
dGgubWluKCBkYXksICQuZGF0ZXBpY2tlci5fZ2V0RGF5c0luTW9udGgoIHllYXIsIG1vbnRoICkg
KTsKCQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlICJ5IjogY2FzZSAiWSIgOgoJCQkJCQkJeWVhciAr
PSBwYXJzZUludCggbWF0Y2hlc1sgMSBdLCAxMCApOwoJCQkJCQkJZGF5ID0gTWF0aC5taW4oIGRh
eSwgJC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aCggeWVhciwgbW9udGggKSApOwoJCQkJCQkJ
YnJlYWs7CgkJCQkJfQoJCQkJCW1hdGNoZXMgPSBwYXR0ZXJuLmV4ZWMoIG9mZnNldCApOwoJCQkJ
fQoJCQkJcmV0dXJuIG5ldyBEYXRlKCB5ZWFyLCBtb250aCwgZGF5ICk7CgkJCX0sCgkJCW5ld0Rh
dGUgPSAoIGRhdGUgPT0gbnVsbCB8fCBkYXRlID09PSAiIiA/IGRlZmF1bHREYXRlIDogKCB0eXBl
b2YgZGF0ZSA9PT0gInN0cmluZyIgPyBvZmZzZXRTdHJpbmcoIGRhdGUgKSA6CgkJCQkoIHR5cGVv
ZiBkYXRlID09PSAibnVtYmVyIiA/ICggaXNOYU4oIGRhdGUgKSA/IGRlZmF1bHREYXRlIDogb2Zm
c2V0TnVtZXJpYyggZGF0ZSApICkgOiBuZXcgRGF0ZSggZGF0ZS5nZXRUaW1lKCkgKSApICkgKTsK
CgkJbmV3RGF0ZSA9ICggbmV3RGF0ZSAmJiBuZXdEYXRlLnRvU3RyaW5nKCkgPT09ICJJbnZhbGlk
IERhdGUiID8gZGVmYXVsdERhdGUgOiBuZXdEYXRlICk7CgkJaWYgKCBuZXdEYXRlICkgewoJCQlu
ZXdEYXRlLnNldEhvdXJzKCAwICk7CgkJCW5ld0RhdGUuc2V0TWludXRlcyggMCApOwoJCQluZXdE
YXRlLnNldFNlY29uZHMoIDAgKTsKCQkJbmV3RGF0ZS5zZXRNaWxsaXNlY29uZHMoIDAgKTsKCQl9
CgkJcmV0dXJuIHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXdEYXRlICk7Cgl9LAoKCS8q
IEhhbmRsZSBzd2l0Y2ggdG8vZnJvbSBkYXlsaWdodCBzYXZpbmcuCgkgKiBIb3VycyBtYXkgYmUg
bm9uLXplcm8gb24gZGF5bGlnaHQgc2F2aW5nIGN1dC1vdmVyOgoJICogPiAxMiB3aGVuIG1pZG5p
Z2h0IGNoYW5nZW92ZXIsIGJ1dCB0aGVuIGNhbm5vdCBnZW5lcmF0ZQoJICogbWlkbmlnaHQgZGF0
ZXRpbWUsIHNvIGp1bXAgdG8gMUFNLCBvdGhlcndpc2UgcmVzZXQuCgkgKiBAcGFyYW0gIGRhdGUg
IChEYXRlKSB0aGUgZGF0ZSB0byBjaGVjawoJICogQHJldHVybiAgKERhdGUpIHRoZSBjb3JyZWN0
ZWQgZGF0ZQoJICovCglfZGF5bGlnaHRTYXZpbmdBZGp1c3Q6IGZ1bmN0aW9uKCBkYXRlICkgewoJ
CWlmICggIWRhdGUgKSB7CgkJCXJldHVybiBudWxsOwoJCX0KCQlkYXRlLnNldEhvdXJzKCBkYXRl
LmdldEhvdXJzKCkgPiAxMiA/IGRhdGUuZ2V0SG91cnMoKSArIDIgOiAwICk7CgkJcmV0dXJuIGRh
dGU7Cgl9LAoKCS8qIFNldCB0aGUgZGF0ZShzKSBkaXJlY3RseS4gKi8KCV9zZXREYXRlOiBmdW5j
dGlvbiggaW5zdCwgZGF0ZSwgbm9DaGFuZ2UgKSB7CgkJdmFyIGNsZWFyID0gIWRhdGUsCgkJCW9y
aWdNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCwKCQkJb3JpZ1llYXIgPSBpbnN0LnNlbGVjdGVk
WWVhciwKCQkJbmV3RGF0ZSA9IHRoaXMuX3Jlc3RyaWN0TWluTWF4KCBpbnN0LCB0aGlzLl9kZXRl
cm1pbmVEYXRlKCBpbnN0LCBkYXRlLCBuZXcgRGF0ZSgpICkgKTsKCgkJaW5zdC5zZWxlY3RlZERh
eSA9IGluc3QuY3VycmVudERheSA9IG5ld0RhdGUuZ2V0RGF0ZSgpOwoJCWluc3QuZHJhd01vbnRo
ID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gaW5zdC5jdXJyZW50TW9udGggPSBuZXdEYXRlLmdldE1v
bnRoKCk7CgkJaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyID0gaW5zdC5jdXJyZW50
WWVhciA9IG5ld0RhdGUuZ2V0RnVsbFllYXIoKTsKCQlpZiAoICggb3JpZ01vbnRoICE9PSBpbnN0
LnNlbGVjdGVkTW9udGggfHwgb3JpZ1llYXIgIT09IGluc3Quc2VsZWN0ZWRZZWFyICkgJiYgIW5v
Q2hhbmdlICkgewoJCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGluc3QgKTsKCQl9CgkJdGhpcy5fYWRq
dXN0SW5zdERhdGUoIGluc3QgKTsKCQlpZiAoIGluc3QuaW5wdXQgKSB7CgkJCWluc3QuaW5wdXQu
dmFsKCBjbGVhciA/ICIiIDogdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCApICk7CgkJfQoJfSwKCgkv
KiBSZXRyaWV2ZSB0aGUgZGF0ZShzKSBkaXJlY3RseS4gKi8KCV9nZXREYXRlOiBmdW5jdGlvbigg
aW5zdCApIHsKCQl2YXIgc3RhcnREYXRlID0gKCAhaW5zdC5jdXJyZW50WWVhciB8fCAoIGluc3Qu
aW5wdXQgJiYgaW5zdC5pbnB1dC52YWwoKSA9PT0gIiIgKSA/IG51bGwgOgoJCQl0aGlzLl9kYXls
aWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoCgkJCWluc3QuY3VycmVudFllYXIsIGluc3QuY3Vy
cmVudE1vbnRoLCBpbnN0LmN1cnJlbnREYXkgKSApICk7CgkJCXJldHVybiBzdGFydERhdGU7Cgl9
LAoKCS8qIEF0dGFjaCB0aGUgb254eHggaGFuZGxlcnMuICBUaGVzZSBhcmUgZGVjbGFyZWQgc3Rh
dGljYWxseSBzbwoJICogdGhleSB3b3JrIHdpdGggc3RhdGljIGNvZGUgdHJhbnNmb3JtZXJzIGxp
a2UgQ2FqYS4KCSAqLwoJX2F0dGFjaEhhbmRsZXJzOiBmdW5jdGlvbiggaW5zdCApIHsKCQl2YXIg
c3RlcE1vbnRocyA9IHRoaXMuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICksCgkJCWlkID0gIiMi
ICsgaW5zdC5pZC5yZXBsYWNlKCAvXFxcXC9nLCAiXFwiICk7CgkJaW5zdC5kcERpdi5maW5kKCAi
W2RhdGEtaGFuZGxlcl0iICkubWFwKCBmdW5jdGlvbigpIHsKCQkJdmFyIGhhbmRsZXIgPSB7CgkJ
CQlwcmV2OiBmdW5jdGlvbigpIHsKCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGlkLCAt
c3RlcE1vbnRocywgIk0iICk7CgkJCQl9LAoJCQkJbmV4dDogZnVuY3Rpb24oKSB7CgkJCQkJJC5k
YXRlcGlja2VyLl9hZGp1c3REYXRlKCBpZCwgK3N0ZXBNb250aHMsICJNIiApOwoJCQkJfSwKCQkJ
CWhpZGU6IGZ1bmN0aW9uKCkgewoJCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsK
CQkJCX0sCgkJCQl0b2RheTogZnVuY3Rpb24oKSB7CgkJCQkJJC5kYXRlcGlja2VyLl9nb3RvVG9k
YXkoIGlkICk7CgkJCQl9LAoJCQkJc2VsZWN0RGF5OiBmdW5jdGlvbigpIHsKCQkJCQkkLmRhdGVw
aWNrZXIuX3NlbGVjdERheSggaWQsICt0aGlzLmdldEF0dHJpYnV0ZSggImRhdGEtbW9udGgiICks
ICt0aGlzLmdldEF0dHJpYnV0ZSggImRhdGEteWVhciIgKSwgdGhpcyApOwoJCQkJCXJldHVybiBm
YWxzZTsKCQkJCX0sCgkJCQlzZWxlY3RNb250aDogZnVuY3Rpb24oKSB7CgkJCQkJJC5kYXRlcGlj
a2VyLl9zZWxlY3RNb250aFllYXIoIGlkLCB0aGlzLCAiTSIgKTsKCQkJCQlyZXR1cm4gZmFsc2U7
CgkJCQl9LAoJCQkJc2VsZWN0WWVhcjogZnVuY3Rpb24oKSB7CgkJCQkJJC5kYXRlcGlja2VyLl9z
ZWxlY3RNb250aFllYXIoIGlkLCB0aGlzLCAiWSIgKTsKCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQl9
CgkJCX07CgkJCSQoIHRoaXMgKS5vbiggdGhpcy5nZXRBdHRyaWJ1dGUoICJkYXRhLWV2ZW50IiAp
LCBoYW5kbGVyWyB0aGlzLmdldEF0dHJpYnV0ZSggImRhdGEtaGFuZGxlciIgKSBdICk7CgkJfSAp
OwoJfSwKCgkvKiBHZW5lcmF0ZSB0aGUgSFRNTCBmb3IgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhl
IGRhdGUgcGlja2VyLiAqLwoJX2dlbmVyYXRlSFRNTDogZnVuY3Rpb24oIGluc3QgKSB7CgkJdmFy
IG1heERyYXcsIHByZXZUZXh0LCBwcmV2LCBuZXh0VGV4dCwgbmV4dCwgY3VycmVudFRleHQsIGdv
dG9EYXRlLAoJCQljb250cm9scywgYnV0dG9uUGFuZWwsIGZpcnN0RGF5LCBzaG93V2VlaywgZGF5
TmFtZXMsIGRheU5hbWVzTWluLAoJCQltb250aE5hbWVzLCBtb250aE5hbWVzU2hvcnQsIGJlZm9y
ZVNob3dEYXksIHNob3dPdGhlck1vbnRocywKCQkJc2VsZWN0T3RoZXJNb250aHMsIGRlZmF1bHRE
YXRlLCBodG1sLCBkb3csIHJvdywgZ3JvdXAsIGNvbCwgc2VsZWN0ZWREYXRlLAoJCQljb3JuZXJD
bGFzcywgY2FsZW5kZXIsIHRoZWFkLCBkYXksIGRheXNJbk1vbnRoLCBsZWFkRGF5cywgY3VyUm93
cywgbnVtUm93cywKCQkJcHJpbnREYXRlLCBkUm93LCB0Ym9keSwgZGF5U2V0dGluZ3MsIG90aGVy
TW9udGgsIHVuc2VsZWN0YWJsZSwKCQkJdGVtcERhdGUgPSBuZXcgRGF0ZSgpLAoJCQl0b2RheSA9
IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KAoJCQkJbmV3IERhdGUoIHRlbXBEYXRlLmdldEZ1
bGxZZWFyKCksIHRlbXBEYXRlLmdldE1vbnRoKCksIHRlbXBEYXRlLmdldERhdGUoKSApICksIC8v
IGNsZWFyIHRpbWUKCQkJaXNSVEwgPSB0aGlzLl9nZXQoIGluc3QsICJpc1JUTCIgKSwKCQkJc2hv
d0J1dHRvblBhbmVsID0gdGhpcy5fZ2V0KCBpbnN0LCAic2hvd0J1dHRvblBhbmVsIiApLAoJCQlo
aWRlSWZOb1ByZXZOZXh0ID0gdGhpcy5fZ2V0KCBpbnN0LCAiaGlkZUlmTm9QcmV2TmV4dCIgKSwK
CQkJbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCA9IHRoaXMuX2dldCggaW5zdCwgIm5hdmlnYXRpb25B
c0RhdGVGb3JtYXQiICksCgkJCW51bU1vbnRocyA9IHRoaXMuX2dldE51bWJlck9mTW9udGhzKCBp
bnN0ICksCgkJCXNob3dDdXJyZW50QXRQb3MgPSB0aGlzLl9nZXQoIGluc3QsICJzaG93Q3VycmVu
dEF0UG9zIiApLAoJCQlzdGVwTW9udGhzID0gdGhpcy5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIg
KSwKCQkJaXNNdWx0aU1vbnRoID0gKCBudW1Nb250aHNbIDAgXSAhPT0gMSB8fCBudW1Nb250aHNb
IDEgXSAhPT0gMSApLAoJCQljdXJyZW50RGF0ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0
KCAoICFpbnN0LmN1cnJlbnREYXkgPyBuZXcgRGF0ZSggOTk5OSwgOSwgOSApIDoKCQkJCW5ldyBE
YXRlKCBpbnN0LmN1cnJlbnRZZWFyLCBpbnN0LmN1cnJlbnRNb250aCwgaW5zdC5jdXJyZW50RGF5
ICkgKSApLAoJCQltaW5EYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1pbiIgKSwK
CQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtYXgiICksCgkJCWRyYXdN
b250aCA9IGluc3QuZHJhd01vbnRoIC0gc2hvd0N1cnJlbnRBdFBvcywKCQkJZHJhd1llYXIgPSBp
bnN0LmRyYXdZZWFyOwoKCQlpZiAoIGRyYXdNb250aCA8IDAgKSB7CgkJCWRyYXdNb250aCArPSAx
MjsKCQkJZHJhd1llYXItLTsKCQl9CgkJaWYgKCBtYXhEYXRlICkgewoJCQltYXhEcmF3ID0gdGhp
cy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBtYXhEYXRlLmdldEZ1bGxZZWFyKCks
CgkJCQltYXhEYXRlLmdldE1vbnRoKCkgLSAoIG51bU1vbnRoc1sgMCBdICogbnVtTW9udGhzWyAx
IF0gKSArIDEsIG1heERhdGUuZ2V0RGF0ZSgpICkgKTsKCQkJbWF4RHJhdyA9ICggbWluRGF0ZSAm
JiBtYXhEcmF3IDwgbWluRGF0ZSA/IG1pbkRhdGUgOiBtYXhEcmF3ICk7CgkJCXdoaWxlICggdGhp
cy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBkcmF3WWVhciwgZHJhd01vbnRoLCAx
ICkgKSA+IG1heERyYXcgKSB7CgkJCQlkcmF3TW9udGgtLTsKCQkJCWlmICggZHJhd01vbnRoIDwg
MCApIHsKCQkJCQlkcmF3TW9udGggPSAxMTsKCQkJCQlkcmF3WWVhci0tOwoJCQkJfQoJCQl9CgkJ
fQoJCWluc3QuZHJhd01vbnRoID0gZHJhd01vbnRoOwoJCWluc3QuZHJhd1llYXIgPSBkcmF3WWVh
cjsKCgkJcHJldlRleHQgPSB0aGlzLl9nZXQoIGluc3QsICJwcmV2VGV4dCIgKTsKCQlwcmV2VGV4
dCA9ICggIW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQgPyBwcmV2VGV4dCA6IHRoaXMuZm9ybWF0RGF0
ZSggcHJldlRleHQsCgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggZHJh
d1llYXIsIGRyYXdNb250aCAtIHN0ZXBNb250aHMsIDEgKSApLAoJCQl0aGlzLl9nZXRGb3JtYXRD
b25maWcoIGluc3QgKSApICk7CgoJCXByZXYgPSAoIHRoaXMuX2NhbkFkanVzdE1vbnRoKCBpbnN0
LCAtMSwgZHJhd1llYXIsIGRyYXdNb250aCApID8KCQkJIjxhIGNsYXNzPSd1aS1kYXRlcGlja2Vy
LXByZXYgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSdwcmV2JyBkYXRhLWV2ZW50PSdjbGlj
ayciICsKCQkJIiB0aXRsZT0nIiArIHByZXZUZXh0ICsgIic+PHNwYW4gY2xhc3M9J3VpLWljb24g
dWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtIiArICggaXNSVEwgPyAiZSIgOiAidyIgKSArICInPiIg
KyBwcmV2VGV4dCArICI8L3NwYW4+PC9hPiIgOgoJCQkoIGhpZGVJZk5vUHJldk5leHQgPyAiIiA6
ICI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1wcmV2IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlz
YWJsZWQnIHRpdGxlPSciICsgcHJldlRleHQgKyAiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1p
Y29uLWNpcmNsZS10cmlhbmdsZS0iICsgKCBpc1JUTCA/ICJlIiA6ICJ3IiApICsgIic+IiArIHBy
ZXZUZXh0ICsgIjwvc3Bhbj48L2E+IiApICk7CgoJCW5leHRUZXh0ID0gdGhpcy5fZ2V0KCBpbnN0
LCAibmV4dFRleHQiICk7CgkJbmV4dFRleHQgPSAoICFuYXZpZ2F0aW9uQXNEYXRlRm9ybWF0ID8g
bmV4dFRleHQgOiB0aGlzLmZvcm1hdERhdGUoIG5leHRUZXh0LAoJCQl0aGlzLl9kYXlsaWdodFNh
dmluZ0FkanVzdCggbmV3IERhdGUoIGRyYXdZZWFyLCBkcmF3TW9udGggKyBzdGVwTW9udGhzLCAx
ICkgKSwKCQkJdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICkgKSApOwoKCQluZXh0ID0gKCB0
aGlzLl9jYW5BZGp1c3RNb250aCggaW5zdCwgKzEsIGRyYXdZZWFyLCBkcmF3TW9udGggKSA/CgkJ
CSI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwnIGRhdGEtaGFuZGxl
cj0nbmV4dCcgZGF0YS1ldmVudD0nY2xpY2snIiArCgkJCSIgdGl0bGU9JyIgKyBuZXh0VGV4dCAr
ICInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLSIgKyAoIGlz
UlRMID8gInciIDogImUiICkgKyAiJz4iICsgbmV4dFRleHQgKyAiPC9zcGFuPjwvYT4iIDoKCQkJ
KCBoaWRlSWZOb1ByZXZOZXh0ID8gIiIgOiAiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItbmV4dCB1
aS1jb3JuZXItYWxsIHVpLXN0YXRlLWRpc2FibGVkJyB0aXRsZT0nIiArIG5leHRUZXh0ICsgIic+
PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtIiArICggaXNSVEwg
PyAidyIgOiAiZSIgKSArICInPiIgKyBuZXh0VGV4dCArICI8L3NwYW4+PC9hPiIgKSApOwoKCQlj
dXJyZW50VGV4dCA9IHRoaXMuX2dldCggaW5zdCwgImN1cnJlbnRUZXh0IiApOwoJCWdvdG9EYXRl
ID0gKCB0aGlzLl9nZXQoIGluc3QsICJnb3RvQ3VycmVudCIgKSAmJiBpbnN0LmN1cnJlbnREYXkg
PyBjdXJyZW50RGF0ZSA6IHRvZGF5ICk7CgkJY3VycmVudFRleHQgPSAoICFuYXZpZ2F0aW9uQXNE
YXRlRm9ybWF0ID8gY3VycmVudFRleHQgOgoJCQl0aGlzLmZvcm1hdERhdGUoIGN1cnJlbnRUZXh0
LCBnb3RvRGF0ZSwgdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICkgKSApOwoKCQljb250cm9s
cyA9ICggIWluc3QuaW5saW5lID8gIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0ndWktZGF0
ZXBpY2tlci1jbG9zZSB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXByaW1hcnkgdWktY29y
bmVyLWFsbCcgZGF0YS1oYW5kbGVyPSdoaWRlJyBkYXRhLWV2ZW50PSdjbGljayc+IiArCgkJCXRo
aXMuX2dldCggaW5zdCwgImNsb3NlVGV4dCIgKSArICI8L2J1dHRvbj4iIDogIiIgKTsKCgkJYnV0
dG9uUGFuZWwgPSAoIHNob3dCdXR0b25QYW5lbCApID8gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNr
ZXItYnV0dG9ucGFuZSB1aS13aWRnZXQtY29udGVudCc+IiArICggaXNSVEwgPyBjb250cm9scyA6
ICIiICkgKwoJCQkoIHRoaXMuX2lzSW5SYW5nZSggaW5zdCwgZ290b0RhdGUgKSA/ICI8YnV0dG9u
IHR5cGU9J2J1dHRvbicgY2xhc3M9J3VpLWRhdGVwaWNrZXItY3VycmVudCB1aS1zdGF0ZS1kZWZh
dWx0IHVpLXByaW9yaXR5LXNlY29uZGFyeSB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3Rv
ZGF5JyBkYXRhLWV2ZW50PSdjbGljayciICsKCQkJIj4iICsgY3VycmVudFRleHQgKyAiPC9idXR0
b24+IiA6ICIiICkgKyAoIGlzUlRMID8gIiIgOiBjb250cm9scyApICsgIjwvZGl2PiIgOiAiIjsK
CgkJZmlyc3REYXkgPSBwYXJzZUludCggdGhpcy5fZ2V0KCBpbnN0LCAiZmlyc3REYXkiICksIDEw
ICk7CgkJZmlyc3REYXkgPSAoIGlzTmFOKCBmaXJzdERheSApID8gMCA6IGZpcnN0RGF5ICk7CgoJ
CXNob3dXZWVrID0gdGhpcy5fZ2V0KCBpbnN0LCAic2hvd1dlZWsiICk7CgkJZGF5TmFtZXMgPSB0
aGlzLl9nZXQoIGluc3QsICJkYXlOYW1lcyIgKTsKCQlkYXlOYW1lc01pbiA9IHRoaXMuX2dldCgg
aW5zdCwgImRheU5hbWVzTWluIiApOwoJCW1vbnRoTmFtZXMgPSB0aGlzLl9nZXQoIGluc3QsICJt
b250aE5hbWVzIiApOwoJCW1vbnRoTmFtZXNTaG9ydCA9IHRoaXMuX2dldCggaW5zdCwgIm1vbnRo
TmFtZXNTaG9ydCIgKTsKCQliZWZvcmVTaG93RGF5ID0gdGhpcy5fZ2V0KCBpbnN0LCAiYmVmb3Jl
U2hvd0RheSIgKTsKCQlzaG93T3RoZXJNb250aHMgPSB0aGlzLl9nZXQoIGluc3QsICJzaG93T3Ro
ZXJNb250aHMiICk7CgkJc2VsZWN0T3RoZXJNb250aHMgPSB0aGlzLl9nZXQoIGluc3QsICJzZWxl
Y3RPdGhlck1vbnRocyIgKTsKCQlkZWZhdWx0RGF0ZSA9IHRoaXMuX2dldERlZmF1bHREYXRlKCBp
bnN0ICk7CgkJaHRtbCA9ICIiOwoKCQlmb3IgKCByb3cgPSAwOyByb3cgPCBudW1Nb250aHNbIDAg
XTsgcm93KysgKSB7CgkJCWdyb3VwID0gIiI7CgkJCXRoaXMubWF4Um93cyA9IDQ7CgkJCWZvciAo
IGNvbCA9IDA7IGNvbCA8IG51bU1vbnRoc1sgMSBdOyBjb2wrKyApIHsKCQkJCXNlbGVjdGVkRGF0
ZSA9IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggZHJhd1llYXIsIGRyYXdN
b250aCwgaW5zdC5zZWxlY3RlZERheSApICk7CgkJCQljb3JuZXJDbGFzcyA9ICIgdWktY29ybmVy
LWFsbCI7CgkJCQljYWxlbmRlciA9ICIiOwoJCQkJaWYgKCBpc011bHRpTW9udGggKSB7CgkJCQkJ
Y2FsZW5kZXIgKz0gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItZ3JvdXAiOwoJCQkJCWlmICgg
bnVtTW9udGhzWyAxIF0gPiAxICkgewoJCQkJCQlzd2l0Y2ggKCBjb2wgKSB7CgkJCQkJCQljYXNl
IDA6IGNhbGVuZGVyICs9ICIgdWktZGF0ZXBpY2tlci1ncm91cC1maXJzdCI7CgkJCQkJCQkJY29y
bmVyQ2xhc3MgPSAiIHVpLWNvcm5lci0iICsgKCBpc1JUTCA/ICJyaWdodCIgOiAibGVmdCIgKTsg
YnJlYWs7CgkJCQkJCQljYXNlIG51bU1vbnRoc1sgMSBdIC0gMTogY2FsZW5kZXIgKz0gIiB1aS1k
YXRlcGlja2VyLWdyb3VwLWxhc3QiOwoJCQkJCQkJCWNvcm5lckNsYXNzID0gIiB1aS1jb3JuZXIt
IiArICggaXNSVEwgPyAibGVmdCIgOiAicmlnaHQiICk7IGJyZWFrOwoJCQkJCQkJZGVmYXVsdDog
Y2FsZW5kZXIgKz0gIiB1aS1kYXRlcGlja2VyLWdyb3VwLW1pZGRsZSI7IGNvcm5lckNsYXNzID0g
IiI7IGJyZWFrOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWNhbGVuZGVyICs9ICInPiI7CgkJCQl9CgkJ
CQljYWxlbmRlciArPSAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1oZWFkZXIgdWktd2lkZ2V0
LWhlYWRlciB1aS1oZWxwZXItY2xlYXJmaXgiICsgY29ybmVyQ2xhc3MgKyAiJz4iICsKCQkJCQko
IC9hbGx8bGVmdC8udGVzdCggY29ybmVyQ2xhc3MgKSAmJiByb3cgPT09IDAgPyAoIGlzUlRMID8g
bmV4dCA6IHByZXYgKSA6ICIiICkgKwoJCQkJCSggL2FsbHxyaWdodC8udGVzdCggY29ybmVyQ2xh
c3MgKSAmJiByb3cgPT09IDAgPyAoIGlzUlRMID8gcHJldiA6IG5leHQgKSA6ICIiICkgKwoJCQkJ
CXRoaXMuX2dlbmVyYXRlTW9udGhZZWFySGVhZGVyKCBpbnN0LCBkcmF3TW9udGgsIGRyYXdZZWFy
LCBtaW5EYXRlLCBtYXhEYXRlLAoJCQkJCXJvdyA+IDAgfHwgY29sID4gMCwgbW9udGhOYW1lcywg
bW9udGhOYW1lc1Nob3J0ICkgKyAvLyBkcmF3IG1vbnRoIGhlYWRlcnMKCQkJCQkiPC9kaXY+PHRh
YmxlIGNsYXNzPSd1aS1kYXRlcGlja2VyLWNhbGVuZGFyJz48dGhlYWQ+IiArCgkJCQkJIjx0cj4i
OwoJCQkJdGhlYWQgPSAoIHNob3dXZWVrID8gIjx0aCBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVr
LWNvbCc+IiArIHRoaXMuX2dldCggaW5zdCwgIndlZWtIZWFkZXIiICkgKyAiPC90aD4iIDogIiIg
KTsKCQkJCWZvciAoIGRvdyA9IDA7IGRvdyA8IDc7IGRvdysrICkgeyAvLyBkYXlzIG9mIHRoZSB3
ZWVrCgkJCQkJZGF5ID0gKCBkb3cgKyBmaXJzdERheSApICUgNzsKCQkJCQl0aGVhZCArPSAiPHRo
IHNjb3BlPSdjb2wnIiArICggKCBkb3cgKyBmaXJzdERheSArIDYgKSAlIDcgPj0gNSA/ICIgY2xh
c3M9J3VpLWRhdGVwaWNrZXItd2Vlay1lbmQnIiA6ICIiICkgKyAiPiIgKwoJCQkJCQkiPHNwYW4g
dGl0bGU9JyIgKyBkYXlOYW1lc1sgZGF5IF0gKyAiJz4iICsgZGF5TmFtZXNNaW5bIGRheSBdICsg
Ijwvc3Bhbj48L3RoPiI7CgkJCQl9CgkJCQljYWxlbmRlciArPSB0aGVhZCArICI8L3RyPjwvdGhl
YWQ+PHRib2R5PiI7CgkJCQlkYXlzSW5Nb250aCA9IHRoaXMuX2dldERheXNJbk1vbnRoKCBkcmF3
WWVhciwgZHJhd01vbnRoICk7CgkJCQlpZiAoIGRyYXdZZWFyID09PSBpbnN0LnNlbGVjdGVkWWVh
ciAmJiBkcmF3TW9udGggPT09IGluc3Quc2VsZWN0ZWRNb250aCApIHsKCQkJCQlpbnN0LnNlbGVj
dGVkRGF5ID0gTWF0aC5taW4oIGluc3Quc2VsZWN0ZWREYXksIGRheXNJbk1vbnRoICk7CgkJCQl9
CgkJCQlsZWFkRGF5cyA9ICggdGhpcy5fZ2V0Rmlyc3REYXlPZk1vbnRoKCBkcmF3WWVhciwgZHJh
d01vbnRoICkgLSBmaXJzdERheSArIDcgKSAlIDc7CgkJCQljdXJSb3dzID0gTWF0aC5jZWlsKCAo
IGxlYWREYXlzICsgZGF5c0luTW9udGggKSAvIDcgKTsgLy8gY2FsY3VsYXRlIHRoZSBudW1iZXIg
b2Ygcm93cyB0byBnZW5lcmF0ZQoJCQkJbnVtUm93cyA9ICggaXNNdWx0aU1vbnRoID8gdGhpcy5t
YXhSb3dzID4gY3VyUm93cyA/IHRoaXMubWF4Um93cyA6IGN1clJvd3MgOiBjdXJSb3dzICk7IC8v
SWYgbXVsdGlwbGUgbW9udGhzLCB1c2UgdGhlIGhpZ2hlciBudW1iZXIgb2Ygcm93cyAoc2VlICM3
MDQzKQoJCQkJdGhpcy5tYXhSb3dzID0gbnVtUm93czsKCQkJCXByaW50RGF0ZSA9IHRoaXMuX2Rh
eWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggZHJhd1llYXIsIGRyYXdNb250aCwgMSAtIGxl
YWREYXlzICkgKTsKCQkJCWZvciAoIGRSb3cgPSAwOyBkUm93IDwgbnVtUm93czsgZFJvdysrICkg
eyAvLyBjcmVhdGUgZGF0ZSBwaWNrZXIgcm93cwoJCQkJCWNhbGVuZGVyICs9ICI8dHI+IjsKCQkJ
CQl0Ym9keSA9ICggIXNob3dXZWVrID8gIiIgOiAiPHRkIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdl
ZWstY29sJz4iICsKCQkJCQkJdGhpcy5fZ2V0KCBpbnN0LCAiY2FsY3VsYXRlV2VlayIgKSggcHJp
bnREYXRlICkgKyAiPC90ZD4iICk7Cgk=</Default>
</Parameter>

<Parameter name="Frag6980641884580315844883907">
<Default>ZSIsICJjZW50ZXIiIF0KCQl9LCBvcHRpb25zICk7CgoJLy8gRmFkZSBvcHRpb24gdG8gc3VwcG9y
dCBwdWZmCglpZiAoIG9wdGlvbnMuZmFkZSApIHsKCQluZXdPcHRpb25zLmZyb20ub3BhY2l0eSA9
IDE7CgkJbmV3T3B0aW9ucy50by5vcGFjaXR5ID0gMDsKCX0KCgkkLmVmZmVjdHMuZWZmZWN0LnNp
emUuY2FsbCggdGhpcywgbmV3T3B0aW9ucywgZG9uZSApOwp9ICk7CgoKLyohCiAqIGpRdWVyeSBV
SSBFZmZlY3RzIFB1ZmYgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJp
Z2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQg
dW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoK
Ly8+PmxhYmVsOiBQdWZmIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9u
OiBDcmVhdGVzIGEgcHVmZiBlZmZlY3QgYnkgc2NhbGluZyB0aGUgZWxlbWVudCB1cCBhbmQgaGlk
aW5nIGl0IGF0IHRoZSBzYW1lIHRpbWUuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNv
bS9wdWZmLWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoK
dmFyIGVmZmVjdHNFZmZlY3RQdWZmID0gJC5lZmZlY3RzLmRlZmluZSggInB1ZmYiLCAiaGlkZSIs
IGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoJdmFyIG5ld09wdGlvbnMgPSAkLmV4dGVuZCgg
dHJ1ZSwge30sIG9wdGlvbnMsIHsKCQlmYWRlOiB0cnVlLAoJCXBlcmNlbnQ6IHBhcnNlSW50KCBv
cHRpb25zLnBlcmNlbnQsIDEwICkgfHwgMTUwCgl9ICk7CgoJJC5lZmZlY3RzLmVmZmVjdC5zY2Fs
ZS5jYWxsKCB0aGlzLCBuZXdPcHRpb25zLCBkb25lICk7Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJ
IEVmZmVjdHMgUHVsc2F0ZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5
cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNl
ZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICov
CgovLz4+bGFiZWw6IFB1bHNhdGUgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLz4+ZGVzY3Jp
cHRpb246IFB1bHNhdGVzIGFuIGVsZW1lbnQgbiB0aW1lcyBieSBjaGFuZ2luZyB0aGUgb3BhY2l0
eSB0byB6ZXJvIGFuZCBiYWNrLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcHVs
c2F0ZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZh
ciBlZmZlY3RzRWZmZWN0UHVsc2F0ZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJwdWxzYXRlIiwgInNo
b3ciLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCXZhciBlbGVtZW50ID0gJCggdGhpcyAp
LAoJCW1vZGUgPSBvcHRpb25zLm1vZGUsCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwKCQloaWRl
ID0gbW9kZSA9PT0gImhpZGUiLAoJCXNob3doaWRlID0gc2hvdyB8fCBoaWRlLAoKCQkvLyBTaG93
aW5nIG9yIGhpZGluZyBsZWF2ZXMgb2ZmIHRoZSAibGFzdCIgYW5pbWF0aW9uCgkJYW5pbXMgPSAo
ICggb3B0aW9ucy50aW1lcyB8fCA1ICkgKiAyICkgKyAoIHNob3doaWRlID8gMSA6IDAgKSwKCQlk
dXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24gLyBhbmltcywKCQlhbmltYXRlVG8gPSAwLAoJCWkg
PSAxLAoJCXF1ZXVlbGVuID0gZWxlbWVudC5xdWV1ZSgpLmxlbmd0aDsKCglpZiAoIHNob3cgfHwg
IWVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsKCQllbGVtZW50LmNzcyggIm9wYWNpdHkiLCAw
ICkuc2hvdygpOwoJCWFuaW1hdGVUbyA9IDE7Cgl9CgoJLy8gQW5pbXMgLSAxIG9wYWNpdHkgInRv
Z2dsZXMiCglmb3IgKCA7IGkgPCBhbmltczsgaSsrICkgewoJCWVsZW1lbnQuYW5pbWF0ZSggeyBv
cGFjaXR5OiBhbmltYXRlVG8gfSwgZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICk7CgkJYW5pbWF0
ZVRvID0gMSAtIGFuaW1hdGVUbzsKCX0KCgllbGVtZW50LmFuaW1hdGUoIHsgb3BhY2l0eTogYW5p
bWF0ZVRvIH0sIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApOwoKCWVsZW1lbnQucXVldWUoIGRv
bmUgKTsKCgkkLmVmZmVjdHMudW5zaGlmdCggZWxlbWVudCwgcXVldWVsZW4sIGFuaW1zICsgMSAp
Owp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFNoYWtlIDEuMTIuMQogKiBodHRwOi8v
anF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIg
Y29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDov
L2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogU2hha2UgRWZmZWN0Ci8vPj5ncm91
cDogRWZmZWN0cwovLz4+ZGVzY3JpcHRpb246IFNoYWtlcyBhbiBlbGVtZW50IGhvcml6b250YWxs
eSBvciB2ZXJ0aWNhbGx5IG4gdGltZXMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNv
bS9zaGFrZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoK
CnZhciBlZmZlY3RzRWZmZWN0U2hha2UgPSAkLmVmZmVjdHMuZGVmaW5lKCAic2hha2UiLCBmdW5j
dGlvbiggb3B0aW9ucywgZG9uZSApIHsKCgl2YXIgaSA9IDEsCgkJZWxlbWVudCA9ICQoIHRoaXMg
KSwKCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAibGVmdCIsCgkJZGlzdGFuY2Ug
PSBvcHRpb25zLmRpc3RhbmNlIHx8IDIwLAoJCXRpbWVzID0gb3B0aW9ucy50aW1lcyB8fCAzLAoJ
CWFuaW1zID0gdGltZXMgKiAyICsgMSwKCQlzcGVlZCA9IE1hdGgucm91bmQoIG9wdGlvbnMuZHVy
YXRpb24gLyBhbmltcyApLAoJCXJlZiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlv
biA9PT0gImRvd24iICkgPyAidG9wIiA6ICJsZWZ0IiwKCQlwb3NpdGl2ZU1vdGlvbiA9ICggZGly
ZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImxlZnQiICksCgkJYW5pbWF0aW9uID0g
e30sCgkJYW5pbWF0aW9uMSA9IHt9LAoJCWFuaW1hdGlvbjIgPSB7fSwKCgkJcXVldWVsZW4gPSBl
bGVtZW50LnF1ZXVlKCkubGVuZ3RoOwoKCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxl
bWVudCApOwoKCS8vIEFuaW1hdGlvbgoJYW5pbWF0aW9uWyByZWYgXSA9ICggcG9zaXRpdmVNb3Rp
b24gPyAiLT0iIDogIis9IiApICsgZGlzdGFuY2U7CglhbmltYXRpb24xWyByZWYgXSA9ICggcG9z
aXRpdmVNb3Rpb24gPyAiKz0iIDogIi09IiApICsgZGlzdGFuY2UgKiAyOwoJYW5pbWF0aW9uMlsg
cmVmIF0gPSAoIHBvc2l0aXZlTW90aW9uID8gIi09IiA6ICIrPSIgKSArIGRpc3RhbmNlICogMjsK
CgkvLyBBbmltYXRlCgllbGVtZW50LmFuaW1hdGUoIGFuaW1hdGlvbiwgc3BlZWQsIG9wdGlvbnMu
ZWFzaW5nICk7CgoJLy8gU2hha2VzCglmb3IgKCA7IGkgPCB0aW1lczsgaSsrICkgewoJCWVsZW1l
bnQKCQkJLmFuaW1hdGUoIGFuaW1hdGlvbjEsIHNwZWVkLCBvcHRpb25zLmVhc2luZyApCgkJCS5h
bmltYXRlKCBhbmltYXRpb24yLCBzcGVlZCwgb3B0aW9ucy5lYXNpbmcgKTsKCX0KCgllbGVtZW50
CgkJLmFuaW1hdGUoIGFuaW1hdGlvbjEsIHNwZWVkLCBvcHRpb25zLmVhc2luZyApCgkJLmFuaW1h
dGUoIGFuaW1hdGlvbiwgc3BlZWQgLyAyLCBvcHRpb25zLmVhc2luZyApCgkJLnF1ZXVlKCBkb25l
ICk7CgoJJC5lZmZlY3RzLnVuc2hpZnQoIGVsZW1lbnQsIHF1ZXVlbGVuLCBhbmltcyArIDEgKTsK
fSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTbGlkZSAxLjEyLjEKICogaHR0cDovL2px
dWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNv
bnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9q
cXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFNsaWRlIEVmZmVjdAovLz4+Z3JvdXA6
IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBTbGlkZXMgYW4gZWxlbWVudCBpbiBhbmQgb3V0IG9m
IHRoZSB2aWV3cG9ydC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NsaWRlLWVm
ZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVj
dHNFZmZlY3RTbGlkZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJzbGlkZSIsICJzaG93IiwgZnVuY3Rp
b24oIG9wdGlvbnMsIGRvbmUgKSB7Cgl2YXIgc3RhcnRDbGlwLCBzdGFydFJlZiwKCQllbGVtZW50
ID0gJCggdGhpcyApLAoJCW1hcCA9IHsKCQkJdXA6IFsgImJvdHRvbSIsICJ0b3AiIF0sCgkJCWRv
d246IFsgInRvcCIsICJib3R0b20iIF0sCgkJCWxlZnQ6IFsgInJpZ2h0IiwgImxlZnQiIF0sCgkJ
CXJpZ2h0OiBbICJsZWZ0IiwgInJpZ2h0IiBdCgkJfSwKCQltb2RlID0gb3B0aW9ucy5tb2RlLAoJ
CWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJsZWZ0IiwKCQlyZWYgPSAoIGRpcmVj
dGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIs
CgkJcG9zaXRpdmVNb3Rpb24gPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09
ICJsZWZ0IiApLAoJCWRpc3RhbmNlID0gb3B0aW9ucy5kaXN0YW5jZSB8fAoJCQllbGVtZW50WyBy
ZWYgPT09ICJ0b3AiID8gIm91dGVySGVpZ2h0IiA6ICJvdXRlcldpZHRoIiBdKCB0cnVlICksCgkJ
YW5pbWF0aW9uID0ge307CgoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7
CgoJc3RhcnRDbGlwID0gZWxlbWVudC5jc3NDbGlwKCk7CglzdGFydFJlZiA9IGVsZW1lbnQucG9z
aXRpb24oKVsgcmVmIF07CgoJLy8gRGVmaW5lIGhpZGUgYW5pbWF0aW9uCglhbmltYXRpb25bIHJl
ZiBdID0gKCBwb3NpdGl2ZU1vdGlvbiA/IC0xIDogMSApICogZGlzdGFuY2UgKyBzdGFydFJlZjsK
CWFuaW1hdGlvbi5jbGlwID0gZWxlbWVudC5jc3NDbGlwKCk7CglhbmltYXRpb24uY2xpcFsgbWFw
WyBkaXJlY3Rpb24gXVsgMSBdIF0gPSBhbmltYXRpb24uY2xpcFsgbWFwWyBkaXJlY3Rpb24gXVsg
MCBdIF07CgoJLy8gUmV2ZXJzZSB0aGUgYW5pbWF0aW9uIGlmIHdlJ3JlIHNob3dpbmcKCWlmICgg
bW9kZSA9PT0gInNob3ciICkgewoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0aW9uLmNsaXAgKTsK
CQllbGVtZW50LmNzcyggcmVmLCBhbmltYXRpb25bIHJlZiBdICk7CgkJYW5pbWF0aW9uLmNsaXAg
PSBzdGFydENsaXA7CgkJYW5pbWF0aW9uWyByZWYgXSA9IHN0YXJ0UmVmOwoJfQoKCS8vIEFjdHVh
bGx5IGFuaW1hdGUKCWVsZW1lbnQuYW5pbWF0ZSggYW5pbWF0aW9uLCB7CgkJcXVldWU6IGZhbHNl
LAoJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLAoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcs
CgkJY29tcGxldGU6IGRvbmUKCX0gKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBU
cmFuc2ZlciAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1
ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0
aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFi
ZWw6IFRyYW5zZmVyIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBE
aXNwbGF5cyBhIHRyYW5zZmVyIGVmZmVjdCBmcm9tIG9uZSBlbGVtZW50IHRvIGFub3RoZXIuCi8v
Pj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS90cmFuc2Zlci1lZmZlY3QvCi8vPj5kZW1v
czogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3Q7CmlmICggJC51aUJh
Y2tDb21wYXQgIT09IGZhbHNlICkgewoJZWZmZWN0ID0gJC5lZmZlY3RzLmRlZmluZSggInRyYW5z
ZmVyIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7CgkJJCggdGhpcyApLnRyYW5zZmVyKCBv
cHRpb25zLCBkb25lICk7Cgl9ICk7Cn0KdmFyIGVmZmVjdHNFZmZlY3RUcmFuc2ZlciA9IGVmZmVj
dDsKCgovKiEKICogalF1ZXJ5IFVJIEZvY3VzYWJsZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVp
LmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1
dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnku
b3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IDpmb2N1c2FibGUgU2VsZWN0b3IKLy8+Pmdyb3Vw
OiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogU2VsZWN0cyBlbGVtZW50cyB3aGljaCBjYW4gYmUgZm9j
dXNlZC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2ZvY3VzYWJsZS1zZWxlY3Rv
ci8KCgoKLy8gU2VsZWN0b3JzCiQudWkuZm9jdXNhYmxlID0gZnVuY3Rpb24oIGVsZW1lbnQsIGhh
c1RhYmluZGV4ICkgewoJdmFyIG1hcCwgbWFwTmFtZSwgaW1nLCBmb2N1c2FibGVJZlZpc2libGUs
IGZpZWxkc2V0LAoJCW5vZGVOYW1lID0gZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoK
CWlmICggImFyZWEiID09PSBub2RlTmFtZSApIHsKCQltYXAgPSBlbGVtZW50LnBhcmVudE5vZGU7
CgkJbWFwTmFtZSA9IG1hcC5uYW1lOwoJCWlmICggIWVsZW1lbnQuaHJlZiB8fCAhbWFwTmFtZSB8
fCBtYXAubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gIm1hcCIgKSB7CgkJCXJldHVybiBmYWxz
ZTsKCQl9CgkJaW1nID0gJCggImltZ1t1c2VtYXA9JyMiICsgbWFwTmFtZSArICInXSIgKTsKCQly
ZXR1cm4gaW1nLmxlbmd0aCA+IDAgJiYgaW1nLmlzKCAiOnZpc2libGUiICk7Cgl9CgoJaWYgKCAv
XihpbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkLy50ZXN0KCBub2RlTmFtZSAp
ICkgewoJCWZvY3VzYWJsZUlmVmlzaWJsZSA9ICFlbGVtZW50LmRpc2FibGVkOwoKCQlpZiAoIGZv
Y3VzYWJsZUlmVmlzaWJsZSApIHsKCgkJCS8vIEZvcm0gY29udHJvbHMgd2l0aGluIGEgZGlzYWJs
ZWQgZmllbGRzZXQgYXJlIGRpc2FibGVkLgoJCQkvLyBIb3dldmVyLCBjb250cm9scyB3aXRoaW4g
dGhlIGZpZWxkc2V0J3MgbGVnZW5kIGRvIG5vdCBnZXQgZGlzYWJsZWQuCgkJCS8vIFNpbmNlIGNv
bnRyb2xzIGdlbmVyYWxseSBhcmVuJ3QgcGxhY2VkIGluc2lkZSBsZWdlbmRzLCB3ZSBza2lwCgkJ
CS8vIHRoaXMgcG9ydGlvbiBvZiB0aGUgY2hlY2suCgkJCWZpZWxkc2V0ID0gJCggZWxlbWVudCAp
LmNsb3Nlc3QoICJmaWVsZHNldCIgKVsgMCBdOwoJCQlpZiAoIGZpZWxkc2V0ICkgewoJCQkJZm9j
dXNhYmxlSWZWaXNpYmxlID0gIWZpZWxkc2V0LmRpc2FibGVkOwoJCQl9CgkJfQoJfSBlbHNlIGlm
ICggImEiID09PSBub2RlTmFtZSApIHsKCQlmb2N1c2FibGVJZlZpc2libGUgPSBlbGVtZW50Lmhy
ZWYgfHwgaGFzVGFiaW5kZXg7Cgl9IGVsc2UgewoJCWZvY3VzYWJsZUlmVmlzaWJsZSA9IGhhc1Rh
YmluZGV4OwoJfQoKCXJldHVybiBmb2N1c2FibGVJZlZpc2libGUgJiYgJCggZWxlbWVudCApLmlz
KCAiOnZpc2libGUiICkgJiYgdmlzaWJsZSggJCggZWxlbWVudCApICk7Cn07CgovLyBTdXBwb3J0
OiBJRSA4IG9ubHkKLy8gSUUgOCBkb2Vzbid0IHJlc29sdmUgaW5oZXJpdCB0byB2aXNpYmxlL2hp
ZGRlbiBmb3IgY29tcHV0ZWQgdmFsdWVzCmZ1bmN0aW9uIHZpc2libGUoIGVsZW1lbnQgKSB7Cgl2
YXIgdmlzaWJpbGl0eSA9IGVsZW1lbnQuY3NzKCAidmlzaWJpbGl0eSIgKTsKCXdoaWxlICggdmlz
aWJpbGl0eSA9PT0gImluaGVyaXQiICkgewoJCWVsZW1lbnQgPSBlbGVtZW50LnBhcmVudCgpOwoJ
CXZpc2liaWxpdHkgPSBlbGVtZW50LmNzcyggInZpc2liaWxpdHkiICk7Cgl9CglyZXR1cm4gdmlz
aWJpbGl0eSAhPT0gImhpZGRlbiI7Cn0KCiQuZXh0ZW5kKCAkLmV4cHJbICI6IiBdLCB7Cglmb2N1
c2FibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCXJldHVybiAkLnVpLmZvY3VzYWJsZSggZWxl
bWVudCwgJC5hdHRyKCBlbGVtZW50LCAidGFiaW5kZXgiICkgIT0gbnVsbCApOwoJfQp9ICk7Cgp2
YXIgZm9jdXNhYmxlID0gJC51aS5mb2N1c2FibGU7CgoKCgovLyBTdXBwb3J0OiBJRTggT25seQov
LyBJRTggZG9lcyBub3Qgc3VwcG9ydCB0aGUgZm9ybSBhdHRyaWJ1dGUgYW5kIHdoZW4gaXQgaXMg
c3VwcGxpZWQuIEl0IG92ZXJ3cml0ZXMgdGhlIGZvcm0gcHJvcAovLyB3aXRoIGEgc3RyaW5nLCBz
byB3ZSBuZWVkIHRvIGZpbmQgdGhlIHByb3BlciBmb3JtLgp2YXIgZm9ybSA9ICQuZm4uZm9ybSA9
IGZ1bmN0aW9uKCkgewoJcmV0dXJuIHR5cGVvZiB0aGlzWyAwIF0uZm9ybSA9PT0gInN0cmluZyIg
PyB0aGlzLmNsb3Nlc3QoICJmb3JtIiApIDogJCggdGhpc1sgMCBdLmZvcm0gKTsKfTsKCgovKiEK
ICogalF1ZXJ5IFVJIEZvcm0gUmVzZXQgTWl4aW4gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5j
b20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRv
cnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9y
Zy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBGb3JtIFJlc2V0IE1peGluCi8vPj5ncm91cDogQ29y
ZQovLz4+ZGVzY3JpcHRpb246IFJlZnJlc2ggaW5wdXQgd2lkZ2V0cyB3aGVuIHRoZWlyIGZvcm0g
aXMgcmVzZXQKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2Zvcm0tcmVzZXQtbWl4
aW4vCgoKCnZhciBmb3JtUmVzZXRNaXhpbiA9ICQudWkuZm9ybVJlc2V0TWl4aW4gPSB7CglfZm9y
bVJlc2V0SGFuZGxlcjogZnVuY3Rpb24oKSB7CgkJdmFyIGZvcm0gPSAkKCB0aGlzICk7CgoJCS8v
IFdhaXQgZm9yIHRoZSBmb3JtIHJlc2V0IHRvIGFjdHVhbGx5IGhhcHBlbiBiZWZvcmUgcmVmcmVz
aGluZwoJCXNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgewoJCQl2YXIgaW5zdGFuY2VzID0gZm9ybS5k
YXRhKCAidWktZm9ybS1yZXNldC1pbnN0YW5jZXMiICk7CgkJCSQuZWFjaCggaW5zdGFuY2VzLCBm
dW5jdGlvbigpIHsKCQkJCXRoaXMucmVmcmVzaCgpOwoJCQl9ICk7CgkJfSApOwoJfSwKCglfYmlu
ZEZvcm1SZXNldEhhbmRsZXI6IGZ1bmN0aW9uKCkgewoJCXRoaXMuZm9ybSA9IHRoaXMuZWxlbWVu
dC5mb3JtKCk7CgkJaWYgKCAhdGhpcy5mb3JtLmxlbmd0aCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJ
dmFyIGluc3RhbmNlcyA9IHRoaXMuZm9ybS5kYXRhKCAidWktZm9ybS1yZXNldC1pbnN0YW5jZXMi
ICkgfHwgW107CgkJaWYgKCAhaW5zdGFuY2VzLmxlbmd0aCApIHsKCgkJCS8vIFdlIGRvbid0IHVz
ZSBfb24oKSBoZXJlIGJlY2F1c2Ugd2UgdXNlIGEgc2luZ2xlIGV2ZW50IGhhbmRsZXIgcGVyIGZv
cm0KCQkJdGhpcy5mb3JtLm9uKCAicmVzZXQudWktZm9ybS1yZXNldCIsIHRoaXMuX2Zvcm1SZXNl
dEhhbmRsZXIgKTsKCQl9CgkJaW5zdGFuY2VzLnB1c2goIHRoaXMgKTsKCQl0aGlzLmZvcm0uZGF0
YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiwgaW5zdGFuY2VzICk7Cgl9LAoKCV91bmJpbmRG
b3JtUmVzZXRIYW5kbGVyOiBmdW5jdGlvbigpIHsKCQlpZiAoICF0aGlzLmZvcm0ubGVuZ3RoICkg
ewoJCQlyZXR1cm47CgkJfQoKCQl2YXIgaW5zdGFuY2VzID0gdGhpcy5mb3JtLmRhdGEoICJ1aS1m
b3JtLXJlc2V0LWluc3RhbmNlcyIgKTsKCQlpbnN0YW5jZXMuc3BsaWNlKCAkLmluQXJyYXkoIHRo
aXMsIGluc3RhbmNlcyApLCAxICk7CgkJaWYgKCBpbnN0YW5jZXMubGVuZ3RoICkgewoJCQl0aGlz
LmZvcm0uZGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiwgaW5zdGFuY2VzICk7CgkJfSBl
bHNlIHsKCQkJdGhpcy5mb3JtCgkJCQkucmVtb3ZlRGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFu
Y2VzIiApCgkJCQkub2ZmKCAicmVzZXQudWktZm9ybS1yZXNldCIgKTsKCQl9Cgl9Cn07CgoKLyoh
CiAqIGpRdWVyeSBVSSBTdXBwb3J0IGZvciBqUXVlcnkgY29yZSAxLjcueCAxLjEyLjEKICogaHR0
cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90
aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0
dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICovCgovLz4+bGFiZWw6IGpRdWVyeSAxLjcgU3Vw
cG9ydAovLz4+Z3JvdXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBTdXBwb3J0IHZlcnNpb24gMS43
Lnggb2YgalF1ZXJ5IGNvcmUKCgoKLy8gU3VwcG9ydDogalF1ZXJ5IDEuNyBvbmx5Ci8vIE5vdCBh
IGdyZWF0IHdheSB0byBjaGVjayB2ZXJzaW9ucywgYnV0IHNpbmNlIHdlIG9ubHkgc3VwcG9ydCAx
LjcrIGFuZCBvbmx5Ci8vIG5lZWQgdG8gZGV0ZWN0IDwxLjgsIHRoaXMgaXMgYSBzaW1wbGUgY2hl
Y2sgdGhhdCBzaG91bGQgc3VmZmljZS4gQ2hlY2tpbmcKLy8gZm9yICIxLjcuIiB3b3VsZCBiZSBh
IGJpdCBzYWZlciwgYnV0IHRoZSB2ZXJzaW9uIHN0cmluZyBpcyAxLjcsIG5vdCAxLjcuMAovLyBh
bmQgd2UnbGwgbmV2ZXIgcmVhY2ggMS43MC4wIChpZiB3ZSBkbywgd2UgY2VydGFpbmx5IHdvbid0
IGJlIHN1cHBvcnRpbmcKLy8gMS43IGFueW1vcmUpLiBTZWUgIzExMTk3IGZvciB3aHkgd2UncmUg
bm90IHVzaW5nIGZlYXR1cmUgZGV0ZWN0aW9uLgppZiAoICQuZm4uanF1ZXJ5LnN1YnN0cmluZygg
MCwgMyApID09PSAiMS43IiApIHsKCgkvLyBTZXR0ZXJzIGZvciAuaW5uZXJXaWR0aCgpLCAuaW5u
ZXJIZWlnaHQoKSwgLm91dGVyV2lkdGgoKSwgLm91dGVySGVpZ2h0KCkKCS8vIFVubGlrZSBqUXVl
cnkgQ29yZSAxLjgrLCB0aGVzZSBvbmx5IHN1cHBvcnQgbnVtZXJpYyB2YWx1ZXMgdG8gc2V0IHRo
ZQoJLy8gZGltZW5zaW9ucyBpbiBwaXhlbHMKCSQuZWFjaCggWyAiV2lkdGgiLCAiSGVpZ2h0IiBd
LCBmdW5jdGlvbiggaSwgbmFtZSApIHsKCQl2YXIgc2lkZSA9IG5hbWUgPT09ICJXaWR0aCIgPyBb
ICJMZWZ0IiwgIlJpZ2h0IiBdIDogWyAiVG9wIiwgIkJvdHRvbSIgXSwKCQkJdHlwZSA9IG5hbWUu
dG9Mb3dlckNhc2UoKSwKCQkJb3JpZyA9IHsKCQkJCWlubmVyV2lkdGg6ICQuZm4uaW5uZXJXaWR0
aCwKCQkJCWlubmVySGVpZ2h0OiAkLmZuLmlubmVySGVpZ2h0LAoJCQkJb3V0ZXJXaWR0aDogJC5m
bi5vdXRlcldpZHRoLAoJCQkJb3V0ZXJIZWlnaHQ6ICQuZm4ub3V0ZXJIZWlnaHQKCQkJfTsKCgkJ
ZnVuY3Rpb24gcmVkdWNlKCBlbGVtLCBzaXplLCBib3JkZXIsIG1hcmdpbiApIHsKCQkJJC5lYWNo
KCBzaWRlLCBmdW5jdGlvbigpIHsKCQkJCXNpemUgLT0gcGFyc2VGbG9hdCggJC5jc3MoIGVsZW0s
ICJwYWRkaW5nIiArIHRoaXMgKSApIHx8IDA7CgkJCQlpZiAoIGJvcmRlciApIHsKCQkJCQlzaXpl
IC09IHBhcnNlRmxvYXQoICQuY3NzKCBlbGVtLCAiYm9yZGVyIiArIHRoaXMgKyAiV2lkdGgiICkg
KSB8fCAwOwoJCQkJfQoJCQkJaWYgKCBtYXJnaW4gKSB7CgkJCQkJc2l6ZSAtPSBwYXJzZUZsb2F0
KCAkLmNzcyggZWxlbSwgIm1hcmdpbiIgKyB0aGlzICkgKSB8fCAwOwoJCQkJfQoJCQl9ICk7CgkJ
CXJldHVybiBzaXplOwoJCX0KCgkJJC5mblsgImlubmVyIiArIG5hbWUgXSA9IGZ1bmN0aW9uKCBz
aXplICkgewoJCQlpZiAoIHNpemUgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiBvcmlnWyAi
aW5uZXIiICsgbmFtZSBdLmNhbGwoIHRoaXMgKTsKCQkJfQoKCQkJcmV0dXJuIHRoaXMuZWFjaCgg
ZnVuY3Rpb24oKSB7CgkJCQkkKCB0aGlzICkuY3NzKCB0eXBlLCByZWR1Y2UoIHRoaXMsIHNpemUg
KSArICJweCIgKTsKCQkJfSApOwoJCX07CgoJCSQuZm5bICJvdXRlciIgKyBuYW1lIF0gPSBmdW5j
dGlvbiggc2l6ZSwgbWFyZ2luICkgewoJCQlpZiAoIHR5cGVvZiBzaXplICE9PSAibnVtYmVyIiAp
IHsKCQkJCXJldHVybiBvcmlnWyAib3V0ZXIiICsgbmFtZSBdLmNhbGwoIHRoaXMsIHNpemUgKTsK
CQkJfQoKCQkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkkKCB0aGlzICkuY3Nz
KCB0eXBlLCByZWR1Y2UoIHRoaXMsIHNpemUsIHRydWUsIG1hcmdpbiApICsgInB4IiApOwoJCQl9
ICk7CgkJfTsKCX0gKTsKCgkkLmZuLmFkZEJhY2sgPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJ
cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID8KCQkJdGhpcy5wcmV2T2JqZWN0IDog
dGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKQoJCSk7Cgl9Owp9Cgo7Ci8qIQogKiBq
UXVlcnkgVUkgS2V5Y29kZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5
cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNl
ZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICov
CgovLz4+bGFiZWw6IEtleWNvZGUKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogUHJv
dmlkZSBrZXljb2RlcyBhcyBrZXluYW1lcwovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5j
b20valF1ZXJ5LnVpLmtleUNvZGUvCgoKdmFyIGtleWNvZGUgPSAkLnVpLmtleUNvZGUgPSB7CglC
QUNLU1BBQ0U6IDgsCglDT01NQTogMTg4LAoJREVMRVRFOiA0NiwKCURPV046IDQwLAoJRU5EOiAz
NSwKCUVOVEVSOiAxMywKCUVTQ0FQRTogMjcsCglIT01FOiAzNiwKCUxFRlQ6IDM3LAoJUEFHRV9E
T1dOOiAzNCwKCVBBR0VfVVA6IDMzLAoJUEVSSU9EOiAxOTAsCglSSUdIVDogMzksCglTUEFDRTog
MzIsCglUQUI6IDksCglVUDogMzgKfTsKCgoKCi8vIEludGVybmFsIHVzZSBvbmx5CnZhciBlc2Nh
cGVTZWxlY3RvciA9ICQudWkuZXNjYXBlU2VsZWN0b3IgPSAoIGZ1bmN0aW9uKCkgewoJdmFyIHNl
bGVjdG9yRXNjYXBlID0gLyhbISIjJCUmJygpKissLi86Ozw9Pj9AW1xdXmB7fH1+XSkvZzsKCXJl
dHVybiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuIHNlbGVjdG9yLnJlcGxhY2UoIHNl
bGVjdG9yRXNjYXBlLCAiXFwkMSIgKTsKCX07Cn0gKSgpOwoKCi8qIQogKiBqUXVlcnkgVUkgTGFi
ZWxzIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkg
Rm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBN
SVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDog
bGFiZWxzCi8vPj5ncm91cDogQ29yZQovLz4+ZGVzY3JpcHRpb246IEZpbmQgYWxsIHRoZSBsYWJl
bHMgYXNzb2NpYXRlZCB3aXRoIGEgZ2l2ZW4gaW5wdXQKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1
ZXJ5dWkuY29tL2xhYmVscy8KCgoKdmFyIGxhYmVscyA9ICQuZm4ubGFiZWxzID0gZnVuY3Rpb24o
KSB7Cgl2YXIgYW5jZXN0b3IsIHNlbGVjdG9yLCBpZCwgbGFiZWxzLCBhbmNlc3RvcnM7CgoJLy8g
Q2hlY2sgY29udHJvbC5sYWJlbHMgZmlyc3QKCWlmICggdGhpc1sgMCBdLmxhYmVscyAmJiB0aGlz
WyAwIF0ubGFiZWxzLmxlbmd0aCApIHsKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHRoaXNbIDAg
XS5sYWJlbHMgKTsKCX0KCgkvLyBTdXBwb3J0OiBJRSA8PSAxMSwgRkYgPD0gMzcsIEFuZHJvaWQg
PD0gMi4zIG9ubHkKCS8vIEFib3ZlIGJyb3dzZXJzIGRvIG5vdCBzdXBwb3J0IGNvbnRyb2wubGFi
ZWxzLiBFdmVyeXRoaW5nIGJlbG93IGlzIHRvIHN1cHBvcnQgdGhlbQoJLy8gYXMgd2VsbCBhcyBk
b2N1bWVudCBmcmFnbWVudHMuIGNvbnRyb2wubGFiZWxzIGRvZXMgbm90IHdvcmsgb24gZG9jdW1l
bnQgZnJhZ21lbnRzCglsYWJlbHMgPSB0aGlzLmVxKCAwICkucGFyZW50cyggImxhYmVsIiApOwoK
CS8vIExvb2sgZm9yIHRoZSBsYWJlbCBiYXNlZCBvbiB0aGUgaWQKCWlkID0gdGhpcy5hdHRyKCAi
aWQiICk7CglpZiAoIGlkICkgewoKCQkvLyBXZSBkb24ndCBzZWFyY2ggYWdhaW5zdCB0aGUgZG9j
dW1lbnQgaW4gY2FzZSB0aGUgZWxlbWVudAoJCS8vIGlzIGRpc2Nvbm5lY3RlZCBmcm9tIHRoZSBE
T00KCQlhbmNlc3RvciA9IHRoaXMuZXEoIDAgKS5wYXJlbnRzKCkubGFzdCgpOwoKCQkvLyBHZXQg
YSBmdWxsIHNldCBvZiB0b3AgbGV2ZWwgYW5jZXN0b3JzCgkJYW5jZXN0b3JzID0gYW5jZXN0b3Iu
YWRkKCBhbmNlc3Rvci5sZW5ndGggPyBhbmNlc3Rvci5zaWJsaW5ncygpIDogdGhpcy5zaWJsaW5n
cygpICk7CgoJCS8vIENyZWF0ZSBhIHNlbGVjdG9yIGZvciB0aGUgbGFiZWwgYmFzZWQgb24gdGhl
IGlkCgkJc2VsZWN0b3IgPSAibGFiZWxbZm9yPSciICsgJC51aS5lc2NhcGVTZWxlY3RvciggaWQg
KSArICInXSI7CgoJCWxhYmVscyA9IGxhYmVscy5hZGQoIGFuY2VzdG9ycy5maW5kKCBzZWxlY3Rv
ciApLmFkZEJhY2soIHNlbGVjdG9yICkgKTsKCgl9CgoJLy8gUmV0dXJuIHdoYXRldmVyIHdlIGhh
dmUgZm91bmQgZm9yIGxhYmVscwoJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBsYWJlbHMgKTsKfTsK
CgovKiEKICogalF1ZXJ5IFVJIFNjcm9sbCBQYXJlbnQgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1
aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmli
dXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5
Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBzY3JvbGxQYXJlbnQKLy8+Pmdyb3VwOiBDb3Jl
Ci8vPj5kZXNjcmlwdGlvbjogR2V0IHRoZSBjbG9zZXN0IGFuY2VzdG9yIGVsZW1lbnQgdGhhdCBp
cyBzY3JvbGxhYmxlLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2Nyb2xsUGFy
ZW50LwoKCgp2YXIgc2Nyb2xsUGFyZW50ID0gJC5mbi5zY3JvbGxQYXJlbnQgPSBmdW5jdGlvbigg
aW5jbHVkZUhpZGRlbiApIHsKCXZhciBwb3NpdGlvbiA9IHRoaXMuY3NzKCAicG9zaXRpb24iICks
CgkJZXhjbHVkZVN0YXRpY1BhcmVudCA9IHBvc2l0aW9uID09PSAiYWJzb2x1dGUiLAoJCW92ZXJm
bG93UmVnZXggPSBpbmNsdWRlSGlkZGVuID8gLyhhdXRvfHNjcm9sbHxoaWRkZW4pLyA6IC8oYXV0
b3xzY3JvbGwpLywKCQlzY3JvbGxQYXJlbnQgPSB0aGlzLnBhcmVudHMoKS5maWx0ZXIoIGZ1bmN0
aW9uKCkgewoJCQl2YXIgcGFyZW50ID0gJCggdGhpcyApOwoJCQlpZiAoIGV4Y2x1ZGVTdGF0aWNQ
YXJlbnQgJiYgcGFyZW50LmNzcyggInBvc2l0aW9uIiApID09PSAic3RhdGljIiApIHsKCQkJCXJl
dHVybiBmYWxzZTsKCQkJfQoJCQlyZXR1cm4gb3ZlcmZsb3dSZWdleC50ZXN0KCBwYXJlbnQuY3Nz
KCAib3ZlcmZsb3ciICkgKyBwYXJlbnQuY3NzKCAib3ZlcmZsb3cteSIgKSArCgkJCQlwYXJlbnQu
Y3NzKCAib3ZlcmZsb3cteCIgKSApOwoJCX0gKS5lcSggMCApOwoKCXJldHVybiBwb3NpdGlvbiA9
PT0gImZpeGVkIiB8fCAhc2Nyb2xsUGFyZW50Lmxlbmd0aCA/CgkJJCggdGhpc1sgMCBdLm93bmVy
RG9jdW1lbnQgfHwgZG9jdW1lbnQgKSA6CgkJc2Nyb2xsUGFyZW50Owp9OwoKCi8qIQogKiBqUXVl
cnkgVUkgVGFiYmFibGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJp
Z2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQg
dW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoK
Ly8+PmxhYmVsOiA6dGFiYmFibGUgU2VsZWN0b3IKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlw
dGlvbjogU2VsZWN0cyBlbGVtZW50cyB3aGljaCBjYW4gYmUgdGFiYmVkIHRvLgovLz4+ZG9jczog
aHR0cDovL2FwaS5qcXVlcnl1aS5jb20vdGFiYmFibGUtc2VsZWN0b3IvCgoKCnZhciB0YWJiYWJs
ZSA9ICQuZXh0ZW5kKCAkLmV4cHJbICI6IiBdLCB7Cgl0YWJiYWJsZTogZnVuY3Rpb24oIGVsZW1l
bnQgKSB7CgkJdmFyIHRhYkluZGV4ID0gJC5hdHRyKCBlbGVtZW50LCAidGFiaW5kZXgiICksCgkJ
CWhhc1RhYmluZGV4ID0gdGFiSW5kZXggIT0gbnVsbDsKCQlyZXR1cm4gKCAhaGFzVGFiaW5kZXgg
fHwgdGFiSW5kZXggPj0gMCApICYmICQudWkuZm9jdXNhYmxlKCBlbGVtZW50LCBoYXNUYWJpbmRl
eCApOwoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBVbmlxdWUgSUQgMS4xMi4xCiAqIGh0dHA6
Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhl
ciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRw
Oi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiB1bmlxdWVJZAovLz4+Z3JvdXA6
IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBGdW5jdGlvbnMgdG8gZ2VuZXJhdGUgYW5kIHJlbW92ZSB1
bmlxdWVJZCdzCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS91bmlxdWVJZC8KCgoK
dmFyIHVuaXF1ZUlkID0gJC5mbi5leHRlbmQoIHsKCXVuaXF1ZUlkOiAoIGZ1bmN0aW9uKCkgewoJ
CXZhciB1dWlkID0gMDsKCgkJcmV0dXJuIGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gdGhpcy5lYWNo
KCBmdW5jdGlvbigpIHsKCQkJCWlmICggIXRoaXMuaWQgKSB7CgkJCQkJdGhpcy5pZCA9ICJ1aS1p
ZC0iICsgKCArK3V1aWQgKTsKCQkJCX0KCQkJfSApOwoJCX07Cgl9ICkoKSwKCglyZW1vdmVVbmlx
dWVJZDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWlm
ICggL151aS1pZC1cZCskLy50ZXN0KCB0aGlzLmlkICkgKSB7CgkJCQkkKCB0aGlzICkucmVtb3Zl
QXR0ciggImlkIiApOwoJCQl9CgkJfSApOwoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBBY2Nv
cmRpb24gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVy
eSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhl
IE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVs
OiBBY2NvcmRpb24KLy8+Pmdyb3VwOiBXaWRnZXRzCi8vIGpzY3M6ZGlzYWJsZSBtYXhpbXVtTGlu
ZUxlbmd0aAovLz4+ZGVzY3JpcHRpb246IERpc3BsYXlzIGNvbGxhcHNpYmxlIGNvbnRlbnQgcGFu
ZWxzIGZvciBwcmVzZW50aW5nIGluZm9ybWF0aW9uIGluIGEgbGltaXRlZCBhbW91bnQgb2Ygc3Bh
Y2UuCi8vIGpzY3M6ZW5hYmxlIG1heGltdW1MaW5lTGVuZ3RoCi8vPj5kb2NzOiBodHRwOi8vYXBp
LmpxdWVyeXVpLmNvbS9hY2NvcmRpb24vCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9h
Y2NvcmRpb24vCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwov
Lz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvYWNjb3JkaW9uLmNzcwovLz4+Y3Nz
LnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKdmFyIHdpZGdldHNBY2NvcmRp
b24gPSAkLndpZGdldCggInVpLmFjY29yZGlvbiIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0
aW9uczogewoJCWFjdGl2ZTogMCwKCQlhbmltYXRlOiB7fSwKCQljbGFzc2VzOiB7CgkJCSJ1aS1h
Y2NvcmRpb24taGVhZGVyIjogInVpLWNvcm5lci10b3AiLAoJCQkidWktYWNjb3JkaW9uLWhlYWRl
ci1jb2xsYXBzZWQiOiAidWktY29ybmVyLWFsbCIsCgkJCSJ1aS1hY2NvcmRpb24tY29udGVudCI6
ICJ1aS1jb3JuZXItYm90dG9tIgoJCX0sCgkJY29sbGFwc2libGU6IGZhbHNlLAoJCWV2ZW50OiAi
Y2xpY2siLAoJCWhlYWRlcjogIj4gbGkgPiA6Zmlyc3QtY2hpbGQsID4gOm5vdChsaSk6ZXZlbiIs
CgkJaGVpZ2h0U3R5bGU6ICJhdXRvIiwKCQlpY29uczogewoJCQlhY3RpdmVIZWFkZXI6ICJ1aS1p
Y29uLXRyaWFuZ2xlLTEtcyIsCgkJCWhlYWRlcjogInVpLWljb24tdHJpYW5nbGUtMS1lIgoJCX0s
CgoJCS8vIENhbGxiYWNrcwoJCWFjdGl2YXRlOiBudWxsLAoJCWJlZm9yZUFjdGl2YXRlOiBudWxs
Cgl9LAoKCWhpZGVQcm9wczogewoJCWJvcmRlclRvcFdpZHRoOiAiaGlkZSIsCgkJYm9yZGVyQm90
dG9tV2lkdGg6ICJoaWRlIiwKCQlwYWRkaW5nVG9wOiAiaGlkZSIsCgkJcGFkZGluZ0JvdHRvbTog
ImhpZGUiLAoJCWhlaWdodDogImhpZGUiCgl9LAoKCXNob3dQcm9wczogewoJCWJvcmRlclRvcFdp
ZHRoOiAic2hvdyIsCgkJYm9yZGVyQm90dG9tV2lkdGg6ICJzaG93IiwKCQlwYWRkaW5nVG9wOiAi
c2hvdyIsCgkJcGFkZGluZ0JvdHRvbTogInNob3ciLAoJCWhlaWdodDogInNob3ciCgl9LAoKCV9j
cmVhdGU6IGZ1bmN0aW9uKCkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQl0aGlz
LnByZXZTaG93ID0gdGhpcy5wcmV2SGlkZSA9ICQoKTsKCQl0aGlzLl9hZGRDbGFzcyggInVpLWFj
Y29yZGlvbiIsICJ1aS13aWRnZXQgdWktaGVscGVyLXJlc2V0IiApOwoJCXRoaXMuZWxlbWVudC5h
dHRyKCAicm9sZSIsICJ0YWJsaXN0IiApOwoKCQkvLyBEb24ndCBhbGxvdyBjb2xsYXBzaWJsZTog
ZmFsc2UgYW5kIGFjdGl2ZTogZmFsc2UgLyBudWxsCgkJaWYgKCAhb3B0aW9ucy5jb2xsYXBzaWJs
ZSAmJiAoIG9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSB8fCBvcHRpb25zLmFjdGl2ZSA9PSBudWxs
ICkgKSB7CgkJCW9wdGlvbnMuYWN0aXZlID0gMDsKCQl9CgoJCXRoaXMuX3Byb2Nlc3NQYW5lbHMo
KTsKCgkJLy8gaGFuZGxlIG5lZ2F0aXZlIHZhbHVlcwoJCWlmICggb3B0aW9ucy5hY3RpdmUgPCAw
ICkgewoJCQlvcHRpb25zLmFjdGl2ZSArPSB0aGlzLmhlYWRlcnMubGVuZ3RoOwoJCX0KCQl0aGlz
Ll9yZWZyZXNoKCk7Cgl9LAoKCV9nZXRDcmVhdGVFdmVudERhdGE6IGZ1bmN0aW9uKCkgewoJCXJl
dHVybiB7CgkJCWhlYWRlcjogdGhpcy5hY3RpdmUsCgkJCXBhbmVsOiAhdGhpcy5hY3RpdmUubGVu
Z3RoID8gJCgpIDogdGhpcy5hY3RpdmUubmV4dCgpCgkJfTsKCX0sCgoJX2NyZWF0ZUljb25zOiBm
dW5jdGlvbigpIHsKCQl2YXIgaWNvbiwgY2hpbGRyZW4sCgkJCWljb25zID0gdGhpcy5vcHRpb25z
Lmljb25zOwoKCQlpZiAoIGljb25zICkgewoJCQlpY29uID0gJCggIjxzcGFuPiIgKTsKCQkJdGhp
cy5fYWRkQ2xhc3MoIGljb24sICJ1aS1hY2NvcmRpb24taGVhZGVyLWljb24iLCAidWktaWNvbiAi
ICsgaWNvbnMuaGVhZGVyICk7CgkJCWljb24ucHJlcGVuZFRvKCB0aGlzLmhlYWRlcnMgKTsKCQkJ
Y2hpbGRyZW4gPSB0aGlzLmFjdGl2ZS5jaGlsZHJlbiggIi51aS1hY2NvcmRpb24taGVhZGVyLWlj
b24iICk7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBjaGlsZHJlbiwgaWNvbnMuaGVhZGVyICkKCQkJ
CS5fYWRkQ2xhc3MoIGNoaWxkcmVuLCBudWxsLCBpY29ucy5hY3RpdmVIZWFkZXIgKQoJCQkJLl9h
ZGRDbGFzcyggdGhpcy5oZWFkZXJzLCAidWktYWNjb3JkaW9uLWljb25zIiApOwoJCX0KCX0sCgoJ
X2Rlc3Ryb3lJY29uczogZnVuY3Rpb24oKSB7CgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuaGVh
ZGVycywgInVpLWFjY29yZGlvbi1pY29ucyIgKTsKCQl0aGlzLmhlYWRlcnMuY2hpbGRyZW4oICIu
dWktYWNjb3JkaW9uLWhlYWRlci1pY29uIiApLnJlbW92ZSgpOwoJfSwKCglfZGVzdHJveTogZnVu
Y3Rpb24oKSB7CgkJdmFyIGNvbnRlbnRzOwoKCQkvLyBDbGVhbiB1cCBtYWluIGVsZW1lbnQKCQl0
aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggInJvbGUiICk7CgoJCS8vIENsZWFuIHVwIGhlYWRlcnMK
CQl0aGlzLmhlYWRlcnMKCQkJLnJlbW92ZUF0dHIoICJyb2xlIGFyaWEtZXhwYW5kZWQgYXJpYS1z
ZWxlY3RlZCBhcmlhLWNvbnRyb2xzIHRhYkluZGV4IiApCgkJCS5yZW1vdmVVbmlxdWVJZCgpOwoK
CQl0aGlzLl9kZXN0cm95SWNvbnMoKTsKCgkJLy8gQ2xlYW4gdXAgY29udGVudCBwYW5lbHMKCQlj
b250ZW50cyA9IHRoaXMuaGVhZGVycy5uZXh0KCkKCQkJLmNzcyggImRpc3BsYXkiLCAiIiApCgkJ
CS5yZW1vdmVBdHRyKCAicm9sZSBhcmlhLWhpZGRlbiBhcmlhLWxhYmVsbGVkYnkiICkKCQkJLnJl
bW92ZVVuaXF1ZUlkKCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmhlaWdodFN0eWxlICE9PSAiY29u
dGVudCIgKSB7CgkJCWNvbnRlbnRzLmNzcyggImhlaWdodCIsICIiICk7CgkJfQoJfSwKCglfc2V0
T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQlpZiAoIGtleSA9PT0gImFjdGl2ZSIg
KSB7CgoJCQkvLyBfYWN0aXZhdGUoKSB3aWxsIGhhbmRsZSBpbnZhbGlkIHZhbHVlcyBhbmQgdXBk
YXRlIHRoaXMub3B0aW9ucwoJCQl0aGlzLl9hY3RpdmF0ZSggdmFsdWUgKTsKCQkJcmV0dXJuOwoJ
CX0KCgkJaWYgKCBrZXkgPT09ICJldmVudCIgKSB7CgkJCWlmICggdGhpcy5vcHRpb25zLmV2ZW50
ICkgewoJCQkJdGhpcy5fb2ZmKCB0aGlzLmhlYWRlcnMsIHRoaXMub3B0aW9ucy5ldmVudCApOwoJ
CQl9CgkJCXRoaXMuX3NldHVwRXZlbnRzKCB2YWx1ZSApOwoJCX0KCgkJdGhpcy5fc3VwZXIoIGtl
eSwgdmFsdWUgKTsKCgkJLy8gU2V0dGluZyBjb2xsYXBzaWJsZTogZmFsc2Ugd2hpbGUgY29sbGFw
c2VkOyBvcGVuIGZpcnN0IHBhbmVsCgkJaWYgKCBrZXkgPT09ICJjb2xsYXBzaWJsZSIgJiYgIXZh
bHVlICYmIHRoaXMub3B0aW9ucy5hY3RpdmUgPT09IGZhbHNlICkgewoJCQl0aGlzLl9hY3RpdmF0
ZSggMCApOwoJCX0KCgkJaWYgKCBrZXkgPT09ICJpY29ucyIgKSB7CgkJCXRoaXMuX2Rlc3Ryb3lJ
Y29ucygpOwoJCQlpZiAoIHZhbHVlICkgewoJCQkJdGhpcy5fY3JlYXRlSWNvbnMoKTsKCQkJfQoJ
CX0KCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpcy5f
c3VwZXIoIHZhbHVlICk7CgoJCXRoaXMuZWxlbWVudC5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsIHZh
bHVlICk7CgoJCS8vIFN1cHBvcnQ6IElFOCBPbmx5CgkJLy8gIzUzMzIgLyAjNjA1OSAtIG9wYWNp
dHkgZG9lc24ndCBjYXNjYWRlIHRvIHBvc2l0aW9uZWQgZWxlbWVudHMgaW4gSUUKCQkvLyBzbyB3
ZSBuZWVkIHRvIGFkZCB0aGUgZGlzYWJsZWQgY2xhc3MgdG8gdGhlIGhlYWRlcnMgYW5kIHBhbmVs
cwoJCXRoaXMuX3RvZ2dsZUNsYXNzKCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVl
ICk7CgkJdGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMuaGVhZGVycy5hZGQoIHRoaXMuaGVhZGVycy5u
ZXh0KCkgKSwgbnVsbCwgInVpLXN0YXRlLWRpc2FibGVkIiwKCQkJISF2YWx1ZSApOwoJfSwKCglf
a2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCWlmICggZXZlbnQuYWx0S2V5IHx8IGV2ZW50
LmN0cmxLZXkgKSB7CgkJCXJldHVybjsKCQl9CgoJCXZhciBrZXlDb2RlID0gJC51aS5rZXlDb2Rl
LAoJCQlsZW5ndGggPSB0aGlzLmhlYWRlcnMubGVuZ3RoLAoJCQljdXJyZW50SW5kZXggPSB0aGlz
LmhlYWRlcnMuaW5kZXgoIGV2ZW50LnRhcmdldCApLAoJCQl0b0ZvY3VzID0gZmFsc2U7CgoJCXN3
aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7CgkJY2FzZSBrZXlDb2RlLlJJR0hUOgoJCWNhc2Uga2V5
Q29kZS5ET1dOOgoJCQl0b0ZvY3VzID0gdGhpcy5oZWFkZXJzWyAoIGN1cnJlbnRJbmRleCArIDEg
KSAlIGxlbmd0aCBdOwoJCQlicmVhazsKCQljYXNlIGtleUNvZGUuTEVGVDoKCQljYXNlIGtleUNv
ZGUuVVA6CgkJCXRvRm9jdXMgPSB0aGlzLmhlYWRlcnNbICggY3VycmVudEluZGV4IC0gMSArIGxl
bmd0aCApICUgbGVuZ3RoIF07CgkJCWJyZWFrOwoJCWNhc2Uga2V5Q29kZS5TUEFDRToKCQljYXNl
IGtleUNvZGUuRU5URVI6CgkJCXRoaXMuX2V2ZW50SGFuZGxlciggZXZlbnQgKTsKCQkJYnJlYWs7
CgkJY2FzZSBrZXlDb2RlLkhPTUU6CgkJCXRvRm9jdXMgPSB0aGlzLmhlYWRlcnNbIDAgXTsKCQkJ
YnJlYWs7CgkJY2FzZSBrZXlDb2RlLkVORDoKCQkJdG9Gb2N1cyA9IHRoaXMuaGVhZGVyc1sgbGVu
Z3RoIC0gMSBdOwoJCQlicmVhazsKCQl9CgoJCWlmICggdG9Gb2N1cyApIHsKCQkJJCggZXZlbnQu
dGFyZ2V0ICkuYXR0ciggInRhYkluZGV4IiwgLTEgKTsKCQkJJCggdG9Gb2N1cyApLmF0dHIoICJ0
YWJJbmRleCIsIDAgKTsKCQkJJCggdG9Gb2N1cyApLnRyaWdnZXIoICJmb2N1cyIgKTsKCQkJZXZl
bnQucHJldmVudERlZmF1bHQoKTsKCQl9Cgl9LAoKCV9wYW5lbEtleURvd246IGZ1bmN0aW9uKCBl
dmVudCApIHsKCQlpZiAoIGV2ZW50LmtleUNvZGUgPT09ICQudWkua2V5Q29kZS5VUCAmJiBldmVu
dC5jdHJsS2V5ICkgewoJCQkkKCBldmVudC5jdXJyZW50VGFyZ2V0ICkucHJldigpLnRyaWdnZXIo
ICJmb2N1cyIgKTsKCQl9Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXZhciBvcHRpb25z
ID0gdGhpcy5vcHRpb25zOwoJCXRoaXMuX3Byb2Nlc3NQYW5lbHMoKTsKCgkJLy8gV2FzIGNvbGxh
cHNlZCBvciBubyBwYW5lbAoJCWlmICggKCBvcHRpb25zLmFjdGl2ZSA9PT0gZmFsc2UgJiYgb3B0
aW9ucy5jb2xsYXBzaWJsZSA9PT0gdHJ1ZSApIHx8CgkJCQkhdGhpcy5oZWFkZXJzLmxlbmd0aCAp
IHsKCQkJb3B0aW9ucy5hY3RpdmUgPSBmYWxzZTsKCQkJdGhpcy5hY3RpdmUgPSAkKCk7CgoJCS8v
IGFjdGl2ZSBmYWxzZSBvbmx5IHdoZW4gY29sbGFwc2libGUgaXMgdHJ1ZQoJCX0gZWxzZSBpZiAo
IG9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSApIHsKCQkJdGhpcy5fYWN0aXZhdGUoIDAgKTsKCgkJ
Ly8gd2FzIGFjdGl2ZSwgYnV0IGFjdGl2ZSBwYW5lbCBpcyBnb25lCgkJfSBlbHNlIGlmICggdGhp
cy5hY3RpdmUubGVuZ3RoICYmICEkLmNvbnRhaW5zKCB0aGlzLmVsZW1lbnRbIDAgXSwgdGhpcy5h
Y3RpdmVbIDAgXSApICkgewoKCQkJLy8gYWxsIHJlbWFpbmluZyBwYW5lbCBhcmUgZGlzYWJsZWQK
CQkJaWYgKCB0aGlzLmhlYWRlcnMubGVuZ3RoID09PSB0aGlzLmhlYWRlcnMuZmluZCggIi51aS1z
dGF0ZS1kaXNhYmxlZCIgKS5sZW5ndGggKSB7CgkJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOwoJ
CQkJdGhpcy5hY3RpdmUgPSAkKCk7CgoJCQkvLyBhY3RpdmF0ZSBwcmV2aW91cyBwYW5lbAoJCQl9
IGVsc2UgewoJCQkJdGhpcy5fYWN0aXZhdGUoIE1hdGgubWF4KCAwLCBvcHRpb25zLmFjdGl2ZSAt
IDEgKSApOwoJCQl9CgoJCS8vIHdhcyBhY3RpdmUsIGFjdGl2ZSBwYW5lbCBzdGlsbCBleGlzdHMK
CQl9IGVsc2UgewoKCQkJLy8gbWFrZSBzdXJlIGFjdGl2ZSBpbmRleCBpcyBjb3JyZWN0CgkJCW9w
dGlvbnMuYWN0aXZlID0gdGhpcy5oZWFkZXJzLmluZGV4KCB0aGlzLmFjdGl2ZSApOwoJCX0KCgkJ
dGhpcy5fZGVzdHJveUljb25zKCk7CgoJCXRoaXMuX3JlZnJlc2goKTsKCX0sCgoJX3Byb2Nlc3NQ
YW5lbHM6IGZ1bmN0aW9uKCkgewoJCXZhciBwcmV2SGVhZGVycyA9IHRoaXMuaGVhZGVycywKCQkJ
cHJldlBhbmVscyA9IHRoaXMucGFuZWxzOwoKCQl0aGlzLmhlYWRlcnMgPSB0aGlzLmVsZW1lbnQu
ZmluZCggdGhpcy5vcHRpb25zLmhlYWRlciApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmhlYWRl
cnMsICJ1aS1hY2NvcmRpb24taGVhZGVyIHVpLWFjY29yZGlvbi1oZWFkZXItY29sbGFwc2VkIiwK
CQkJInVpLXN0YXRlLWRlZmF1bHQiICk7CgoJCXRoaXMucGFuZWxzID0gdGhpcy5oZWFkZXJzLm5l
eHQoKS5maWx0ZXIoICI6bm90KC51aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUpIiApLmhpZGUo
KTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5wYW5lbHMsICJ1aS1hY2NvcmRpb24tY29udGVudCIs
ICJ1aS1oZWxwZXItcmVzZXQgdWktd2lkZ2V0LWNvbnRlbnQiICk7CgoJCS8vIEF2b2lkIG1lbW9y
eSBsZWFrcyAoIzEwMDU2KQoJCWlmICggcHJldlBhbmVscyApIHsKCQkJdGhpcy5fb2ZmKCBwcmV2
SGVhZGVycy5ub3QoIHRoaXMuaGVhZGVycyApICk7CgkJCXRoaXMuX29mZiggcHJldlBhbmVscy5u
b3QoIHRoaXMucGFuZWxzICkgKTsKCQl9Cgl9LAoKCV9yZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl2
YXIgbWF4SGVpZ2h0LAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zLAoJCQloZWlnaHRTdHlsZSA9
IG9wdGlvbnMuaGVpZ2h0U3R5bGUsCgkJCXBhcmVudCA9IHRoaXMuZWxlbWVudC5wYXJlbnQoKTsK
CgkJdGhpcy5hY3RpdmUgPSB0aGlzLl9maW5kQWN0aXZlKCBvcHRpb25zLmFjdGl2ZSApOwoJCXRo
aXMuX2FkZENsYXNzKCB0aGlzLmFjdGl2ZSwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiwg
InVpLXN0YXRlLWFjdGl2ZSIgKQoJCQkuX3JlbW92ZUNsYXNzKCB0aGlzLmFjdGl2ZSwgInVpLWFj
Y29yZGlvbi1oZWFkZXItY29sbGFwc2VkIiApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmFjdGl2
ZS5uZXh0KCksICJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUiICk7CgkJdGhpcy5hY3RpdmUu
bmV4dCgpLnNob3coKTsKCgkJdGhpcy5oZWFkZXJzCgkJCS5hdHRyKCAicm9sZSIsICJ0YWIiICkK
CQkJLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJdmFyIGhlYWRlciA9ICQoIHRoaXMgKSwKCQkJCQlo
ZWFkZXJJZCA9IGhlYWRlci51bmlxdWVJZCgpLmF0dHIoICJpZCIgKSwKCQkJCQlwYW5lbCA9IGhl
YWRlci5uZXh0KCksCgkJCQkJcGFuZWxJZCA9IHBhbmVsLnVuaXF1ZUlkKCkuYXR0ciggImlkIiAp
OwoJCQkJaGVhZGVyLmF0dHIoICJhcmlhLWNvbnRyb2xzIiwgcGFuZWxJZCApOwoJCQkJcGFuZWwu
YXR0ciggImFyaWEtbGFiZWxsZWRieSIsIGhlYWRlcklkICk7CgkJCX0gKQoJCQkubmV4dCgpCgkJ
CQkuYXR0ciggInJvbGUiLCAidGFicGFuZWwiICk7CgoJCXRoaXMuaGVhZGVycwoJCQkubm90KCB0
aGlzLmFjdGl2ZSApCgkJCQkuYXR0ciggewoJCQkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwK
CQkJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIsCgkJCQkJdGFiSW5kZXg6IC0xCgkJCQl9ICkK
CQkJCS5uZXh0KCkKCQkJCQkuYXR0ciggewoJCQkJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKCQkJ
CQl9ICkKCQkJCQkuaGlkZSgpOwoKCQkvLyBNYWtlIHN1cmUgYXQgbGVhc3Qgb25lIGhlYWRlciBp
cyBpbiB0aGUgdGFiIG9yZGVyCgkJaWYgKCAhdGhpcy5hY3RpdmUubGVuZ3RoICkgewoJCQl0aGlz
LmhlYWRlcnMuZXEoIDAgKS5hdHRyKCAidGFiSW5kZXgiLCAwICk7CgkJfSBlbHNlIHsKCQkJdGhp
cy5hY3RpdmUuYXR0ciggewoJCQkJImFyaWEtc2VsZWN0ZWQiOiAidHJ1ZSIsCgkJCQkiYXJpYS1l
eHBhbmRlZCI6ICJ0cnVlIiwKCQkJCXRhYkluZGV4OiAwCgkJCX0gKQoJCQkJLm5leHQoKQoJCQkJ
CS5hdHRyKCB7CgkJCQkJCSJhcmlhLWhpZGRlbiI6ICJmYWxzZSIKCQkJCQl9ICk7CgkJfQoKCQl0
aGlzLl9jcmVhdGVJY29ucygpOwoKCQl0aGlzLl9zZXR1cEV2ZW50cyggb3B0aW9ucy5ldmVudCAp
OwoKCQlpZiAoIGhlaWdodFN0eWxlID09PSAiZmlsbCIgKSB7CgkJCW1heEhlaWdodCA9IHBhcmVu
dC5oZWlnaHQoKTsKCQkJdGhpcy5lbGVtZW50LnNpYmxpbmdzKCAiOnZpc2libGUiICkuZWFjaCgg
ZnVuY3Rpb24oKSB7CgkJCQl2YXIgZWxlbSA9ICQoIHRoaXMgKSwKCQkJCQlwb3NpdGlvbiA9IGVs
ZW0uY3NzKCAicG9zaXRpb24iICk7CgoJCQkJaWYgKCBwb3NpdGlvbiA9PT0gImFic29sdXRlIiB8
fCBwb3NpdGlvbiA9PT0gImZpeGVkIiApIHsKCQkJCQlyZXR1cm47CgkJCQl9CgkJCQltYXhIZWln
aHQgLT0gZWxlbS5vdXRlckhlaWdodCggdHJ1ZSApOwoJCQl9ICk7CgoJCQl0aGlzLmhlYWRlcnMu
ZWFjaCggZnVuY3Rpb24oKSB7CgkJCQltYXhIZWlnaHQgLT0gJCggdGhpcyApLm91dGVySGVpZ2h0
KCB0cnVlICk7CgkJCX0gKTsKCgkJCXRoaXMuaGVhZGVycy5uZXh0KCkKCQkJCS5lYWNoKCBmdW5j
dGlvbigpIHsKCQkJCQkkKCB0aGlzICkuaGVpZ2h0KCBNYXRoLm1heCggMCwgbWF4SGVpZ2h0IC0K
CQkJCQkJJCggdGhpcyApLmlubmVySGVpZ2h0KCkgKyAkKCB0aGlzICkuaGVpZ2h0KCkgKSApOwoJ
CQkJfSApCgkJCQkuY3NzKCAib3ZlcmZsb3ciLCAiYXV0byIgKTsKCQl9IGVsc2UgaWYgKCBoZWln
aHRTdHlsZSA9PT0gImF1dG8iICkgewoJCQltYXhIZWlnaHQgPSAwOwoJCQl0aGlzLmhlYWRlcnMu
bmV4dCgpCgkJCQkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkJdmFyIGlzVmlzaWJsZSA9ICQoIHRo
aXMgKS5pcyggIjp2aXNpYmxlIiApOwoJCQkJCWlmICggIWlzVmlzaWJsZSApIHsKCQkJCQkJJCgg
dGhpcyApLnNob3coKTsKCQkJCQl9CgkJCQkJbWF4SGVpZ2h0ID0gTWF0aC5tYXgoIG1heEhlaWdo
dCwgJCggdGhpcyApLmNzcyggImhlaWdodCIsICIiICkuaGVpZ2h0KCkgKTsKCQkJCQlpZiAoICFp
c1Zpc2libGUgKSB7CgkJCQkJCSQoIHRoaXMgKS5oaWRlKCk7CgkJCQkJfQoJCQkJfSApCgkJCQku
aGVpZ2h0KCBtYXhIZWlnaHQgKTsKCQl9Cgl9LAoKCV9hY3RpdmF0ZTogZnVuY3Rpb24oIGluZGV4
ICkgewoJCXZhciBhY3RpdmUgPSB0aGlzLl9maW5kQWN0aXZlKCBpbmRleCApWyAwIF07CgoJCS8v
IFRyeWluZyB0byBhY3RpdmF0ZSB0aGUgYWxyZWFkeSBhY3RpdmUgcGFuZWwKCQlpZiAoIGFjdGl2
ZSA9PT0gdGhpcy5hY3RpdmVbIDAgXSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gVHJ5aW5nIHRv
IGNvbGxhcHNlLCBzaW11bGF0ZSBhIGNsaWNrIG9uIHRoZSBjdXJyZW50bHkgYWN0aXZlIGhlYWRl
cgoJCWFjdGl2ZSA9IGFjdGl2ZSB8fCB0aGlzLmFjdGl2ZVsgMCBdOwoKCQl0aGlzLl9ldmVudEhh
bmRsZXIoIHsKCQkJdGFyZ2V0OiBhY3RpdmUsCgkJCWN1cnJlbnRUYXJnZXQ6IGFjdGl2ZSwKCQkJ
cHJldmVudERlZmF1bHQ6ICQubm9vcAoJCX0gKTsKCX0sCgoJX2ZpbmRBY3RpdmU6IGZ1bmN0aW9u
KCBzZWxlY3RvciApIHsKCQlyZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSAibnVtYmVyIiA/IHRo
aXMuaGVhZGVycy5lcSggc2VsZWN0b3IgKSA6ICQoKTsKCX0sCgoJX3NldHVwRXZlbnRzOiBmdW5j
dGlvbiggZXZlbnQgKSB7CgkJdmFyIGV2ZW50cyA9IHsKCQkJa2V5ZG93bjogIl9rZXlkb3duIgoJ
CX07CgkJaWYgKCBldmVudCApIHsKCQkJJC5lYWNoKCBldmVudC5zcGxpdCggIiAiICksIGZ1bmN0
aW9uKCBpbmRleCwgZXZlbnROYW1lICkgewoJCQkJZXZlbnRzWyBldmVudE5hbWUgXSA9ICJfZXZl
bnRIYW5kbGVyIjsKCQkJfSApOwoJCX0KCgkJdGhpcy5fb2ZmKCB0aGlzLmhlYWRlcnMuYWRkKCB0
aGlzLmhlYWRlcnMubmV4dCgpICkgKTsKCQl0aGlzLl9vbiggdGhpcy5oZWFkZXJzLCBldmVudHMg
KTsKCQl0aGlzLl9vbiggdGhpcy5oZWFkZXJzLm5leHQoKSwgeyBrZXlkb3duOiAiX3BhbmVsS2V5
RG93biIgfSApOwoJCXRoaXMuX2hvdmVyYWJsZSggdGhpcy5oZWFkZXJzICk7CgkJdGhpcy5fZm9j
dXNhYmxlKCB0aGlzLmhlYWRlcnMgKTsKCX0sCgoJX2V2ZW50SGFuZGxlcjogZnVuY3Rpb24oIGV2
ZW50ICkgewoJCXZhciBhY3RpdmVDaGlsZHJlbiwgY2xpY2tlZENoaWxkcmVuLAoJCQlvcHRpb25z
ID0gdGhpcy5vcHRpb25zLAoJCQlhY3RpdmUgPSB0aGlzLmFjdGl2ZSwKCQkJY2xpY2tlZCA9ICQo
IGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwKCQkJY2xpY2tlZElzQWN0aXZlID0gY2xpY2tlZFsgMCBd
ID09PSBhY3RpdmVbIDAgXSwKCQkJY29sbGFwc2luZyA9IGNsaWNrZWRJc0FjdGl2ZSAmJiBvcHRp
b25zLmNvbGxhcHNpYmxlLAoJCQl0b1Nob3cgPSBjb2xsYXBzaW5nID8gJCgpIDogY2xpY2tlZC5u
ZXh0KCksCgkJCXRvSGlkZSA9IGFjdGl2ZS5uZXh0KCksCgkJCWV2ZW50RGF0YSA9IHsKCQkJCW9s
ZEhlYWRlcjogYWN0aXZlLAoJCQkJb2xkUGFuZWw6IHRvSGlkZSwKCQkJCW5ld0hlYWRlcjogY29s
bGFwc2luZyA/ICQoKSA6IGNsaWNrZWQsCgkJCQluZXdQYW5lbDogdG9TaG93CgkJCX07CgoJCWV2
ZW50LnByZXZlbnREZWZhdWx0KCk7CgoJCWlmICgKCgkJCQkvLyBjbGljayBvbiBhY3RpdmUgaGVh
ZGVyLCBidXQgbm90IGNvbGxhcHNpYmxlCgkJCQkoIGNsaWNrZWRJc0FjdGl2ZSAmJiAhb3B0aW9u
cy5jb2xsYXBzaWJsZSApIHx8CgoJCQkJLy8gYWxsb3cgY2FuY2VsaW5nIGFjdGl2YXRpb24KCQkJ
CSggdGhpcy5fdHJpZ2dlciggImJlZm9yZUFjdGl2YXRlIiwgZXZlbnQsIGV2ZW50RGF0YSApID09
PSBmYWxzZSApICkgewoJCQlyZXR1cm47CgkJfQoKCQlvcHRpb25zLmFjdGl2ZSA9IGNvbGxhcHNp
bmcgPyBmYWxzZSA6IHRoaXMuaGVhZGVycy5pbmRleCggY2xpY2tlZCApOwoKCQkvLyBXaGVuIHRo
ZSBjYWxsIHRvIC5fdG9nZ2xlKCkgY29tZXMgYWZ0ZXIgdGhlIGNsYXNzIGNoYW5nZXMKCQkvLyBp
dCBjYXVzZXMgYSB2ZXJ5IG9kZCBidWcgaW4gSUUgOCAoc2VlICM2NzIwKQoJCXRoaXMuYWN0aXZl
ID0gY2xpY2tlZElzQWN0aXZlID8gJCgpIDogY2xpY2tlZDsKCQl0aGlzLl90b2dnbGUoIGV2ZW50
RGF0YSApOwoKCQkvLyBTd2l0Y2ggY2xhc3NlcwoJCS8vIGNvcm5lciBjbGFzc2VzIG9uIHRoZSBw
cmV2aW91c2x5IGFjdGl2ZSBoZWFkZXIgc3RheSBhZnRlciB0aGUgYW5pbWF0aW9uCgkJdGhpcy5f
cmVtb3ZlQ2xhc3MoIGFjdGl2ZSwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiwgInVpLXN0
YXRlLWFjdGl2ZSIgKTsKCQlpZiAoIG9wdGlvbnMuaWNvbnMgKSB7CgkJCWFjdGl2ZUNoaWxkcmVu
ID0gYWN0aXZlLmNoaWxkcmVuKCAiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvbiIgKTsKCQkJdGhp
cy5fcmVtb3ZlQ2xhc3MoIGFjdGl2ZUNoaWxkcmVuLCBudWxsLCBvcHRpb25zLmljb25zLmFjdGl2
ZUhlYWRlciApCgkJCQkuX2FkZENsYXNzKCBhY3RpdmVDaGlsZHJlbiwgbnVsbCwgb3B0aW9ucy5p
Y29ucy5oZWFkZXIgKTsKCQl9CgoJCWlmICggIWNsaWNrZWRJc0FjdGl2ZSApIHsKCQkJdGhpcy5f
cmVtb3ZlQ2xhc3MoIGNsaWNrZWQsICJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZCIgKQoJ
CQkJLl9hZGRDbGFzcyggY2xpY2tlZCwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiwgInVp
LXN0YXRlLWFjdGl2ZSIgKTsKCQkJaWYgKCBvcHRpb25zLmljb25zICkgewoJCQkJY2xpY2tlZENo
aWxkcmVuID0gY2xpY2tlZC5jaGlsZHJlbiggIi51aS1hY2NvcmRpb24taGVhZGVyLWljb24iICk7
CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggY2xpY2tlZENoaWxkcmVuLCBudWxsLCBvcHRpb25zLmlj
b25zLmhlYWRlciApCgkJCQkJLl9hZGRDbGFzcyggY2xpY2tlZENoaWxkcmVuLCBudWxsLCBvcHRp
b25zLmljb25zLmFjdGl2ZUhlYWRlciApOwoJCQl9CgoJCQl0aGlzLl9hZGRDbGFzcyggY2xpY2tl
ZC5uZXh0KCksICJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUiICk7CgkJfQoJfSwKCglfdG9n
Z2xlOiBmdW5jdGlvbiggZGF0YSApIHsKCQl2YXIgdG9TaG93ID0gZGF0YS5uZXdQYW5lbCwKCQkJ
dG9IaWRlID0gdGhpcy5wcmV2U2hvdy5sZW5ndGggPyB0aGlzLnByZXZTaG93IDogZGF0YS5vbGRQ
YW5lbDsKCgkJLy8gSGFuZGxlIGFjdGl2YXRpbmcgYSBwYW5lbCBkdXJpbmcgdGhlIGFuaW1hdGlv
biBmb3IgYW5vdGhlciBhY3RpdmF0aW9uCgkJdGhpcy5wcmV2U2hvdy5hZGQoIHRoaXMucHJldkhp
ZGUgKS5zdG9wKCB0cnVlLCB0cnVlICk7CgkJdGhpcy5wcmV2U2hvdyA9IHRvU2hvdzsKCQl0aGlz
LnByZXZIaWRlID0gdG9IaWRlOwoKCQlpZiAoIHRoaXMub3B0aW9ucy5hbmltYXRlICkgewoJCQl0
aGlzLl9hbmltYXRlKCB0b1Nob3csIHRvSGlkZSwgZGF0YSApOwoJCX0gZWxzZSB7CgkJCXRvSGlk
ZS5oaWRlKCk7CgkJCXRvU2hvdy5zaG93KCk7CgkJCXRoaXMuX3RvZ2dsZUNvbXBsZXRlKCBkYXRh
ICk7CgkJfQoKCQl0b0hpZGUuYXR0ciggewoJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKCQl9ICk7
CgkJdG9IaWRlLnByZXYoKS5hdHRyKCB7CgkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwKCQkJ
ImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiCgkJfSApOwoKCQkvLyBpZiB3ZSdyZSBzd2l0Y2hpbmcg
cGFuZWxzLCByZW1vdmUgdGhlIG9sZCBoZWFkZXIgZnJvbSB0aGUgdGFiIG9yZGVyCgkJLy8gaWYg
d2UncmUgb3BlbmluZyBmcm9tIGNvbGxhcHNlZCBzdGF0ZSwgcmVtb3ZlIHRoZSBwcmV2aW91cyBo
ZWFkZXIgZnJvbSB0aGUgdGFiIG9yZGVyCgkJLy8gaWYgd2UncmUgY29sbGFwc2luZywgdGhlbiBr
ZWVwIHRoZSBjb2xsYXBzaW5nIGhlYWRlciBpbiB0aGUgdGFiIG9yZGVyCgkJaWYgKCB0b1Nob3cu
bGVuZ3RoICYmIHRvSGlkZS5sZW5ndGggKSB7CgkJCXRvSGlkZS5wcmV2KCkuYXR0ciggewoJCQkJ
InRhYkluZGV4IjogLTEsCgkJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIKCQkJfSApOwoJCX0g
ZWxzZSBpZiAoIHRvU2hvdy5sZW5ndGggKSB7CgkJCXRoaXMuaGVhZGVycy5maWx0ZXIoIGZ1bmN0
aW9uKCkgewoJCQkJcmV0dXJuIHBhcnNlSW50KCAkKCB0aGlzICkuYXR0ciggInRhYkluZGV4IiAp
LCAxMCApID09PSAwOwoJCQl9ICkKCQkJCS5hdHRyKCAidGFiSW5kZXgiLCAtMSApOwoJCX0KCgkJ
dG9TaG93CgkJCS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAiZmFsc2UiICkKCQkJLnByZXYoKQoJCQkJ
LmF0dHIoIHsKCQkJCQkiYXJpYS1zZWxlY3RlZCI6ICJ0cnVlIiwKCQkJCQkiYXJpYS1leHBhbmRl
ZCI6ICJ0cnVlIiwKCQkJCQl0YWJJbmRleDogMAoJCQkJfSApOwoJfSwKCglfYW5pbWF0ZTogZnVu
Y3Rpb24oIHRvU2hvdywgdG9IaWRlLCBkYXRhICkgewoJCXZhciB0b3RhbCwgZWFzaW5nLCBkdXJh
dGlvbiwKCQkJdGhhdCA9IHRoaXMsCgkJCWFkanVzdCA9IDAsCgkJCWJveFNpemluZyA9IHRvU2hv
dy5jc3MoICJib3gtc2l6aW5nIiApLAoJCQlkb3duID0gdG9TaG93Lmxlbmd0aCAmJgoJCQkJKCAh
dG9IaWRlLmxlbmd0aCB8fCAoIHRvU2hvdy5pbmRleCgpIDwgdG9IaWRlLmluZGV4KCkgKSApLAoJ
CQlhbmltYXRlID0gdGhpcy5vcHRpb25zLmFuaW1hdGUgfHwge30sCgkJCW9wdGlvbnMgPSBkb3du
ICYmIGFuaW1hdGUuZG93biB8fCBhbmltYXRlLAoJCQljb21wbGV0ZSA9IGZ1bmN0aW9uKCkgewoJ
CQkJdGhhdC5fdG9nZ2xlQ29tcGxldGUoIGRhdGEgKTsKCQkJfTsKCgkJaWYgKCB0eXBlb2Ygb3B0
aW9ucyA9PT0gIm51bWJlciIgKSB7CgkJCWR1cmF0aW9uID0gb3B0aW9uczsKCQl9CgkJaWYgKCB0
eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgKSB7CgkJCWVhc2luZyA9IG9wdGlvbnM7CgkJfQoK
CQkvLyBmYWxsIGJhY2sgZnJvbSBvcHRpb25zIHRvIGFuaW1hdGlvbiBpbiBjYXNlIG9mIHBhcnRp
YWwgZG93biBzZXR0aW5ncwoJCWVhc2luZyA9IGVhc2luZyB8fCBvcHRpb25zLmVhc2luZyB8fCBh
bmltYXRlLmVhc2luZzsKCQlkdXJhdGlvbiA9IGR1cmF0aW9uIHx8IG9wdGlvbnMuZHVyYXRpb24g
fHwgYW5pbWF0ZS5kdXJhdGlvbjsKCgkJaWYgKCAhdG9IaWRlLmxlbmd0aCApIHsKCQkJcmV0dXJu
IHRvU2hvdy5hbmltYXRlKCB0aGlzLnNob3dQcm9wcywgZHVyYXRpb24sIGVhc2luZywgY29tcGxl
dGUgKTsKCQl9CgkJaWYgKCAhdG9TaG93Lmxlbmd0aCApIHsKCQkJcmV0dXJuIHRvSGlkZS5hbmlt
YXRlKCB0aGlzLmhpZGVQcm9wcywgZHVyYXRpb24sIGVhc2luZywgY29tcGxldGUgKTsKCQl9CgoJ
CXRvdGFsID0gdG9TaG93LnNob3coKS5vdXRlckhlaWdodCgpOwoJCXRvSGlkZS5hbmltYXRlKCB0
aGlzLmhpZGVQcm9wcywgewoJCQlkdXJhdGlvbjogZHVyYXRpb24sCgkJCWVhc2luZzogZWFzaW5n
LAoJCQlzdGVwOiBmdW5jdGlvbiggbm93LCBmeCApIHsKCQkJCWZ4Lm5vdyA9IE1hdGgucm91bmQo
IG5vdyApOwoJCQl9CgkJfSApOwoJCXRvU2hvdwoJCQkuaGlkZSgpCgkJCS5hbmltYXRlKCB0aGlz
LnNob3dQcm9wcywgewoJCQkJZHVyYXRpb246IGR1cmF0aW9uLAoJCQkJZWFzaW5nOiBlYXNpbmcs
CgkJCQljb21wbGV0ZTogY29tcGxldGUsCgkJCQlzdGVwOiBmdW5jdGlvbiggbm93LCBmeCApIHsK
CQkJCQlmeC5ub3cgPSBNYXRoLnJvdW5kKCBub3cgKTsKCQkJCQlpZiAoIGZ4LnByb3AgIT09ICJo
ZWlnaHQiICkgewoJCQkJCQlpZiAoIGJveFNpemluZyA9PT0gImNvbnRlbnQtYm94IiApIHsKCQkJ
CQkJCWFkanVzdCArPSBmeC5ub3c7CgkJCQkJCX0KCQkJCQl9IGVsc2UgaWYgKCB0aGF0Lm9wdGlv
bnMuaGVpZ2h0U3R5bGUgIT09ICJjb250ZW50IiApIHsKCQkJCQkJZngubm93ID0gTWF0aC5yb3Vu
ZCggdG90YWwgLSB0b0hpZGUub3V0ZXJIZWlnaHQoKSAtIGFkanVzdCApOwoJCQkJCQlhZGp1c3Qg
PSAwOwoJCQkJCX0KCQkJCX0KCQkJfSApOwoJfSwKCglfdG9nZ2xlQ29tcGxldGU6IGZ1bmN0aW9u
KCBkYXRhICkgewoJCXZhciB0b0hpZGUgPSBkYXRhLm9sZFBhbmVsLAoJCQlwcmV2ID0gdG9IaWRl
LnByZXYoKTsKCgkJdGhpcy5fcmVtb3Y=</Default>
</Parameter>

<Parameter name="Frag6980641884580322348081360">
<Default>ZmZzZXQ7CgoJCQkJLy8gRWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciBib3RoIHRvcCBhbmQgYm90
dG9tIG9mIHdpdGhpbgoJCQkJfSBlbHNlIHsKCQkJCQlpZiAoIG92ZXJUb3AgPiBvdmVyQm90dG9t
ICkgewoJCQkJCQlwb3NpdGlvbi50b3AgPSB3aXRoaW5PZmZzZXQgKyBvdXRlckhlaWdodCAtIGRh
dGEuY29sbGlzaW9uSGVpZ2h0OwoJCQkJCX0gZWxzZSB7CgkJCQkJCXBvc2l0aW9uLnRvcCA9IHdp
dGhpbk9mZnNldDsKCQkJCQl9CgkJCQl9CgoJCQkvLyBUb28gZmFyIHVwIC0+IGFsaWduIHdpdGgg
dG9wCgkJCX0gZWxzZSBpZiAoIG92ZXJUb3AgPiAwICkgewoJCQkJcG9zaXRpb24udG9wICs9IG92
ZXJUb3A7CgoJCQkvLyBUb28gZmFyIGRvd24gLT4gYWxpZ24gd2l0aCBib3R0b20gZWRnZQoJCQl9
IGVsc2UgaWYgKCBvdmVyQm90dG9tID4gMCApIHsKCQkJCXBvc2l0aW9uLnRvcCAtPSBvdmVyQm90
dG9tOwoKCQkJLy8gQWRqdXN0IGJhc2VkIG9uIHBvc2l0aW9uIGFuZCBtYXJnaW4KCQkJfSBlbHNl
IHsKCQkJCXBvc2l0aW9uLnRvcCA9IG1heCggcG9zaXRpb24udG9wIC0gY29sbGlzaW9uUG9zVG9w
LCBwb3NpdGlvbi50b3AgKTsKCQkJfQoJCX0KCX0sCglmbGlwOiB7CgkJbGVmdDogZnVuY3Rpb24o
IHBvc2l0aW9uLCBkYXRhICkgewoJCQl2YXIgd2l0aGluID0gZGF0YS53aXRoaW4sCgkJCQl3aXRo
aW5PZmZzZXQgPSB3aXRoaW4ub2Zmc2V0LmxlZnQgKyB3aXRoaW4uc2Nyb2xsTGVmdCwKCQkJCW91
dGVyV2lkdGggPSB3aXRoaW4ud2lkdGgsCgkJCQlvZmZzZXRMZWZ0ID0gd2l0aGluLmlzV2luZG93
ID8gd2l0aGluLnNjcm9sbExlZnQgOiB3aXRoaW4ub2Zmc2V0LmxlZnQsCgkJCQljb2xsaXNpb25Q
b3NMZWZ0ID0gcG9zaXRpb24ubGVmdCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVm
dCwKCQkJCW92ZXJMZWZ0ID0gY29sbGlzaW9uUG9zTGVmdCAtIG9mZnNldExlZnQsCgkJCQlvdmVy
UmlnaHQgPSBjb2xsaXNpb25Qb3NMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lk
dGggLSBvZmZzZXRMZWZ0LAoJCQkJbXlPZmZzZXQgPSBkYXRhLm15WyAwIF0gPT09ICJsZWZ0IiA/
CgkJCQkJLWRhdGEuZWxlbVdpZHRoIDoKCQkJCQlkYXRhLm15WyAwIF0gPT09ICJyaWdodCIgPwoJ
CQkJCQlkYXRhLmVsZW1XaWR0aCA6CgkJCQkJCTAsCgkJCQlhdE9mZnNldCA9IGRhdGEuYXRbIDAg
XSA9PT0gImxlZnQiID8KCQkJCQlkYXRhLnRhcmdldFdpZHRoIDoKCQkJCQlkYXRhLmF0WyAwIF0g
PT09ICJyaWdodCIgPwoJCQkJCQktZGF0YS50YXJnZXRXaWR0aCA6CgkJCQkJCTAsCgkJCQlvZmZz
ZXQgPSAtMiAqIGRhdGEub2Zmc2V0WyAwIF0sCgkJCQluZXdPdmVyUmlnaHQsCgkJCQluZXdPdmVy
TGVmdDsKCgkJCWlmICggb3ZlckxlZnQgPCAwICkgewoJCQkJbmV3T3ZlclJpZ2h0ID0gcG9zaXRp
b24ubGVmdCArIG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQgKyBkYXRhLmNvbGxpc2lvbldp
ZHRoIC0KCQkJCQlvdXRlcldpZHRoIC0gd2l0aGluT2Zmc2V0OwoJCQkJaWYgKCBuZXdPdmVyUmln
aHQgPCAwIHx8IG5ld092ZXJSaWdodCA8IGFicyggb3ZlckxlZnQgKSApIHsKCQkJCQlwb3NpdGlv
bi5sZWZ0ICs9IG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQ7CgkJCQl9CgkJCX0gZWxzZSBp
ZiAoIG92ZXJSaWdodCA+IDAgKSB7CgkJCQluZXdPdmVyTGVmdCA9IHBvc2l0aW9uLmxlZnQgLSBk
YXRhLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQgKyBteU9mZnNldCArCgkJCQkJYXRPZmZz
ZXQgKyBvZmZzZXQgLSBvZmZzZXRMZWZ0OwoJCQkJaWYgKCBuZXdPdmVyTGVmdCA+IDAgfHwgYWJz
KCBuZXdPdmVyTGVmdCApIDwgb3ZlclJpZ2h0ICkgewoJCQkJCXBvc2l0aW9uLmxlZnQgKz0gbXlP
ZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldDsKCQkJCX0KCQkJfQoJCX0sCgkJdG9wOiBmdW5jdGlv
biggcG9zaXRpb24sIGRhdGEgKSB7CgkJCXZhciB3aXRoaW4gPSBkYXRhLndpdGhpbiwKCQkJCXdp
dGhpbk9mZnNldCA9IHdpdGhpbi5vZmZzZXQudG9wICsgd2l0aGluLnNjcm9sbFRvcCwKCQkJCW91
dGVySGVpZ2h0ID0gd2l0aGluLmhlaWdodCwKCQkJCW9mZnNldFRvcCA9IHdpdGhpbi5pc1dpbmRv
dyA/IHdpdGhpbi5zY3JvbGxUb3AgOiB3aXRoaW4ub2Zmc2V0LnRvcCwKCQkJCWNvbGxpc2lvblBv
c1RvcCA9IHBvc2l0aW9uLnRvcCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLAoJ
CQkJb3ZlclRvcCA9IGNvbGxpc2lvblBvc1RvcCAtIG9mZnNldFRvcCwKCQkJCW92ZXJCb3R0b20g
PSBjb2xsaXNpb25Qb3NUb3AgKyBkYXRhLmNvbGxpc2lvbkhlaWdodCAtIG91dGVySGVpZ2h0IC0g
b2Zmc2V0VG9wLAoJCQkJdG9wID0gZGF0YS5teVsgMSBdID09PSAidG9wIiwKCQkJCW15T2Zmc2V0
ID0gdG9wID8KCQkJCQktZGF0YS5lbGVtSGVpZ2h0IDoKCQkJCQlkYXRhLm15WyAxIF0gPT09ICJi
b3R0b20iID8KCQkJCQkJZGF0YS5lbGVtSGVpZ2h0IDoKCQkJCQkJMCwKCQkJCWF0T2Zmc2V0ID0g
ZGF0YS5hdFsgMSBdID09PSAidG9wIiA/CgkJCQkJZGF0YS50YXJnZXRIZWlnaHQgOgoJCQkJCWRh
dGEuYXRbIDEgXSA9PT0gImJvdHRvbSIgPwoJCQkJCQktZGF0YS50YXJnZXRIZWlnaHQgOgoJCQkJ
CQkwLAoJCQkJb2Zmc2V0ID0gLTIgKiBkYXRhLm9mZnNldFsgMSBdLAoJCQkJbmV3T3ZlclRvcCwK
CQkJCW5ld092ZXJCb3R0b207CgkJCWlmICggb3ZlclRvcCA8IDAgKSB7CgkJCQluZXdPdmVyQm90
dG9tID0gcG9zaXRpb24udG9wICsgbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldCArIGRhdGEu
Y29sbGlzaW9uSGVpZ2h0IC0KCQkJCQlvdXRlckhlaWdodCAtIHdpdGhpbk9mZnNldDsKCQkJCWlm
ICggbmV3T3ZlckJvdHRvbSA8IDAgfHwgbmV3T3ZlckJvdHRvbSA8IGFicyggb3ZlclRvcCApICkg
ewoJCQkJCXBvc2l0aW9uLnRvcCArPSBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0OwoJCQkJ
fQoJCQl9IGVsc2UgaWYgKCBvdmVyQm90dG9tID4gMCApIHsKCQkJCW5ld092ZXJUb3AgPSBwb3Np
dGlvbi50b3AgLSBkYXRhLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpblRvcCArIG15T2Zmc2V0ICsg
YXRPZmZzZXQgKwoJCQkJCW9mZnNldCAtIG9mZnNldFRvcDsKCQkJCWlmICggbmV3T3ZlclRvcCA+
IDAgfHwgYWJzKCBuZXdPdmVyVG9wICkgPCBvdmVyQm90dG9tICkgewoJCQkJCXBvc2l0aW9uLnRv
cCArPSBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0OwoJCQkJfQoJCQl9CgkJfQoJfSwKCWZs
aXBmaXQ6IHsKCQlsZWZ0OiBmdW5jdGlvbigpIHsKCQkJJC51aS5wb3NpdGlvbi5mbGlwLmxlZnQu
YXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQkkLnVpLnBvc2l0aW9uLmZpdC5sZWZ0LmFwcGx5
KCB0aGlzLCBhcmd1bWVudHMgKTsKCQl9LAoJCXRvcDogZnVuY3Rpb24oKSB7CgkJCSQudWkucG9z
aXRpb24uZmxpcC50b3AuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQkkLnVpLnBvc2l0aW9u
LmZpdC50b3AuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCX0KCX0KfTsKCn0gKSgpOwoKdmFy
IHBvc2l0aW9uID0gJC51aS5wb3NpdGlvbjsKCgovKiEKICogalF1ZXJ5IFVJIDpkYXRhIDEuMTIu
MQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlv
biBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5z
ZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogOmRhdGEgU2Vs
ZWN0b3IKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogU2VsZWN0cyBlbGVtZW50cyB3
aGljaCBoYXZlIGRhdGEgc3RvcmVkIHVuZGVyIHRoZSBzcGVjaWZpZWQga2V5LgovLz4+ZG9jczog
aHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGF0YS1zZWxlY3Rvci8KCgp2YXIgZGF0YSA9ICQuZXh0
ZW5kKCAkLmV4cHJbICI6IiBdLCB7CglkYXRhOiAkLmV4cHIuY3JlYXRlUHNldWRvID8KCQkkLmV4
cHIuY3JlYXRlUHNldWRvKCBmdW5jdGlvbiggZGF0YU5hbWUgKSB7CgkJCXJldHVybiBmdW5jdGlv
biggZWxlbSApIHsKCQkJCXJldHVybiAhISQuZGF0YSggZWxlbSwgZGF0YU5hbWUgKTsKCQkJfTsK
CQl9ICkgOgoKCQkvLyBTdXBwb3J0OiBqUXVlcnkgPDEuOAoJCWZ1bmN0aW9uKCBlbGVtLCBpLCBt
YXRjaCApIHsKCQkJcmV0dXJuICEhJC5kYXRhKCBlbGVtLCBtYXRjaFsgMyBdICk7CgkJfQp9ICk7
CgovKiEKICogalF1ZXJ5IFVJIERpc2FibGUgU2VsZWN0aW9uIDEuMTIuMQogKiBodHRwOi8vanF1
ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29u
dHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2px
dWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogZGlzYWJsZVNlbGVjdGlvbgovLz4+Z3Jv
dXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBEaXNhYmxlIHNlbGVjdGlvbiBvZiB0ZXh0IGNvbnRl
bnQgd2l0aGluIHRoZSBzZXQgb2YgbWF0Y2hlZCBlbGVtZW50cy4KLy8+PmRvY3M6IGh0dHA6Ly9h
cGkuanF1ZXJ5dWkuY29tL2Rpc2FibGVTZWxlY3Rpb24vCgovLyBUaGlzIGZpbGUgaXMgZGVwcmVj
YXRlZAoKCnZhciBkaXNhYmxlU2VsZWN0aW9uID0gJC5mbi5leHRlbmQoIHsKCWRpc2FibGVTZWxl
Y3Rpb246ICggZnVuY3Rpb24oKSB7CgkJdmFyIGV2ZW50VHlwZSA9ICJvbnNlbGVjdHN0YXJ0IiBp
biBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiZGl2IiApID8KCQkJInNlbGVjdHN0YXJ0IiA6CgkJ
CSJtb3VzZWRvd24iOwoKCQlyZXR1cm4gZnVuY3Rpb24oKSB7CgkJCXJldHVybiB0aGlzLm9uKCBl
dmVudFR5cGUgKyAiLnVpLWRpc2FibGVTZWxlY3Rpb24iLCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJ
CQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQl9ICk7CgkJfTsKCX0gKSgpLAoKCWVuYWJsZVNl
bGVjdGlvbjogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMub2ZmKCAiLnVpLWRpc2FibGVTZWxl
Y3Rpb24iICk7Cgl9Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgMS4xMi4xCiAqIGh0
dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBv
dGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBo
dHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBFZmZlY3RzIENvcmUKLy8+
Pmdyb3VwOiBFZmZlY3RzCi8vIGpzY3M6ZGlzYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovLz4+ZGVz
Y3JpcHRpb246IEV4dGVuZHMgdGhlIGludGVybmFsIGpRdWVyeSBlZmZlY3RzLiBJbmNsdWRlcyBt
b3JwaGluZyBhbmQgZWFzaW5nLiBSZXF1aXJlZCBieSBhbGwgb3RoZXIgZWZmZWN0cy4KLy8ganNj
czplbmFibGUgbWF4aW11bUxpbmVMZW5ndGgKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWku
Y29tL2NhdGVnb3J5L2VmZmVjdHMtY29yZS8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29t
L2VmZmVjdC8KCgoKdmFyIGRhdGFTcGFjZSA9ICJ1aS1lZmZlY3RzLSIsCglkYXRhU3BhY2VTdHls
ZSA9ICJ1aS1lZmZlY3RzLXN0eWxlIiwKCWRhdGFTcGFjZUFuaW1hdGVkID0gInVpLWVmZmVjdHMt
YW5pbWF0ZWQiLAoKCS8vIENyZWF0ZSBhIGxvY2FsIGpRdWVyeSBiZWNhdXNlIGpRdWVyeSBDb2xv
ciByZWxpZXMgb24gaXQgYW5kIHRoZQoJLy8gZ2xvYmFsIG1heSBub3QgZXhpc3Qgd2l0aCBBTUQg
YW5kIGEgY3VzdG9tIGJ1aWxkICgjMTAxOTkpCglqUXVlcnkgPSAkOwoKJC5lZmZlY3RzID0gewoJ
ZWZmZWN0OiB7fQp9OwoKLyohCiAqIGpRdWVyeSBDb2xvciBBbmltYXRpb25zIHYyLjEuMgogKiBo
dHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS1jb2xvcgogKgogKiBDb3B5cmlnaHQgMjAx
NCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVu
ZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBE
YXRlOiBXZWQgSmFuIDE2IDA4OjQ3OjA5IDIwMTMgLTA2MDAKICovCiggZnVuY3Rpb24oIGpRdWVy
eSwgdW5kZWZpbmVkICkgewoKCXZhciBzdGVwSG9va3MgPSAiYmFja2dyb3VuZENvbG9yIGJvcmRl
ckJvdHRvbUNvbG9yIGJvcmRlckxlZnRDb2xvciBib3JkZXJSaWdodENvbG9yICIgKwoJCSJib3Jk
ZXJUb3BDb2xvciBjb2xvciBjb2x1bW5SdWxlQ29sb3Igb3V0bGluZUNvbG9yIHRleHREZWNvcmF0
aW9uQ29sb3IgdGV4dEVtcGhhc2lzQ29sb3IiLAoKCS8vIFBsdXNlcXVhbHMgdGVzdCBmb3IgKz0g
MTAwIC09IDEwMAoJcnBsdXNlcXVhbHMgPSAvXihbXC0rXSk9XHMqKFxkK1wuP1xkKikvLAoKCS8v
IEEgc2V0IG9mIFJFJ3MgdGhhdCBjYW4gbWF0Y2ggc3RyaW5ncyBhbmQgZ2VuZXJhdGUgY29sb3Ig
dHVwbGVzLgoJc3RyaW5nUGFyc2VycyA9IFsgewoJCQlyZTogL3JnYmE/XChccyooXGR7MSwzfSlc
cyosXHMqKFxkezEsM30pXHMqLFxzKihcZHsxLDN9KVxzKig/OixccyooXGQ/KD86XC5cZCspPylc
cyopP1wpLywKCQkJcGFyc2U6IGZ1bmN0aW9uKCBleGVjUmVzdWx0ICkgewoJCQkJcmV0dXJuIFsK
CQkJCQlleGVjUmVzdWx0WyAxIF0sCgkJCQkJZXhlY1Jlc3VsdFsgMiBdLAoJCQkJCWV4ZWNSZXN1
bHRbIDMgXSwKCQkJCQlleGVjUmVzdWx0WyA0IF0KCQkJCV07CgkJCX0KCQl9LCB7CgkJCXJlOiAv
cmdiYT9cKFxzKihcZCsoPzpcLlxkKyk/KVwlXHMqLFxzKihcZCsoPzpcLlxkKyk/KVwlXHMqLFxz
KihcZCsoPzpcLlxkKyk/KVwlXHMqKD86LFxzKihcZD8oPzpcLlxkKyk/KVxzKik/XCkvLAoJCQlw
YXJzZTogZnVuY3Rpb24oIGV4ZWNSZXN1bHQgKSB7CgkJCQlyZXR1cm4gWwoJCQkJCWV4ZWNSZXN1
bHRbIDEgXSAqIDIuNTUsCgkJCQkJZXhlY1Jlc3VsdFsgMiBdICogMi41NSwKCQkJCQlleGVjUmVz
dWx0WyAzIF0gKiAyLjU1LAoJCQkJCWV4ZWNSZXN1bHRbIDQgXQoJCQkJXTsKCQkJfQoJCX0sIHsK
CgkJCS8vIFRoaXMgcmVnZXggaWdub3JlcyBBLUYgYmVjYXVzZSBpdCdzIGNvbXBhcmVkIGFnYWlu
c3QgYW4gYWxyZWFkeSBsb3dlcmNhc2VkIHN0cmluZwoJCQlyZTogLyMoW2EtZjAtOV17Mn0pKFth
LWYwLTldezJ9KShbYS1mMC05XXsyfSkvLAoJCQlwYXJzZTogZnVuY3Rpb24oIGV4ZWNSZXN1bHQg
KSB7CgkJCQlyZXR1cm4gWwoJCQkJCXBhcnNlSW50KCBleGVjUmVzdWx0WyAxIF0sIDE2ICksCgkJ
CQkJcGFyc2VJbnQoIGV4ZWNSZXN1bHRbIDIgXSwgMTYgKSwKCQkJCQlwYXJzZUludCggZXhlY1Jl
c3VsdFsgMyBdLCAxNiApCgkJCQldOwoJCQl9CgkJfSwgewoKCQkJLy8gVGhpcyByZWdleCBpZ25v
cmVzIEEtRiBiZWNhdXNlIGl0J3MgY29tcGFyZWQgYWdhaW5zdCBhbiBhbHJlYWR5IGxvd2VyY2Fz
ZWQgc3RyaW5nCgkJCXJlOiAvIyhbYS1mMC05XSkoW2EtZjAtOV0pKFthLWYwLTldKS8sCgkJCXBh
cnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsKCQkJCXJldHVybiBbCgkJCQkJcGFyc2VJbnQo
IGV4ZWNSZXN1bHRbIDEgXSArIGV4ZWNSZXN1bHRbIDEgXSwgMTYgKSwKCQkJCQlwYXJzZUludCgg
ZXhlY1Jlc3VsdFsgMiBdICsgZXhlY1Jlc3VsdFsgMiBdLCAxNiApLAoJCQkJCXBhcnNlSW50KCBl
eGVjUmVzdWx0WyAzIF0gKyBleGVjUmVzdWx0WyAzIF0sIDE2ICkKCQkJCV07CgkJCX0KCQl9LCB7
CgkJCXJlOiAvaHNsYT9cKFxzKihcZCsoPzpcLlxkKyk/KVxzKixccyooXGQrKD86XC5cZCspPylc
JVxzKixccyooXGQrKD86XC5cZCspPylcJVxzKig/OixccyooXGQ/KD86XC5cZCspPylccyopP1wp
LywKCQkJc3BhY2U6ICJoc2xhIiwKCQkJcGFyc2U6IGZ1bmN0aW9uKCBleGVjUmVzdWx0ICkgewoJ
CQkJcmV0dXJuIFsKCQkJCQlleGVjUmVzdWx0WyAxIF0sCgkJCQkJZXhlY1Jlc3VsdFsgMiBdIC8g
MTAwLAoJCQkJCWV4ZWNSZXN1bHRbIDMgXSAvIDEwMCwKCQkJCQlleGVjUmVzdWx0WyA0IF0KCQkJ
CV07CgkJCX0KCQl9IF0sCgoJLy8gSlF1ZXJ5LkNvbG9yKCApCgljb2xvciA9IGpRdWVyeS5Db2xv
ciA9IGZ1bmN0aW9uKCBjb2xvciwgZ3JlZW4sIGJsdWUsIGFscGhhICkgewoJCXJldHVybiBuZXcg
alF1ZXJ5LkNvbG9yLmZuLnBhcnNlKCBjb2xvciwgZ3JlZW4sIGJsdWUsIGFscGhhICk7Cgl9LAoJ
c3BhY2VzID0gewoJCXJnYmE6IHsKCQkJcHJvcHM6IHsKCQkJCXJlZDogewoJCQkJCWlkeDogMCwK
CQkJCQl0eXBlOiAiYnl0ZSIKCQkJCX0sCgkJCQlncmVlbjogewoJCQkJCWlkeDogMSwKCQkJCQl0
eXBlOiAiYnl0ZSIKCQkJCX0sCgkJCQlibHVlOiB7CgkJCQkJaWR4OiAyLAoJCQkJCXR5cGU6ICJi
eXRlIgoJCQkJfQoJCQl9CgkJfSwKCgkJaHNsYTogewoJCQlwcm9wczogewoJCQkJaHVlOiB7CgkJ
CQkJaWR4OiAwLAoJCQkJCXR5cGU6ICJkZWdyZWVzIgoJCQkJfSwKCQkJCXNhdHVyYXRpb246IHsK
CQkJCQlpZHg6IDEsCgkJCQkJdHlwZTogInBlcmNlbnQiCgkJCQl9LAoJCQkJbGlnaHRuZXNzOiB7
CgkJCQkJaWR4OiAyLAoJCQkJCXR5cGU6ICJwZXJjZW50IgoJCQkJfQoJCQl9CgkJfQoJfSwKCXBy
b3BUeXBlcyA9IHsKCQkiYnl0ZSI6IHsKCQkJZmxvb3I6IHRydWUsCgkJCW1heDogMjU1CgkJfSwK
CQkicGVyY2VudCI6IHsKCQkJbWF4OiAxCgkJfSwKCQkiZGVncmVlcyI6IHsKCQkJbW9kOiAzNjAs
CgkJCWZsb29yOiB0cnVlCgkJfQoJfSwKCXN1cHBvcnQgPSBjb2xvci5zdXBwb3J0ID0ge30sCgoJ
Ly8gRWxlbWVudCBmb3Igc3VwcG9ydCB0ZXN0cwoJc3VwcG9ydEVsZW0gPSBqUXVlcnkoICI8cD4i
IClbIDAgXSwKCgkvLyBDb2xvcnMgPSBqUXVlcnkuQ29sb3IubmFtZXMKCWNvbG9ycywKCgkvLyBM
b2NhbCBhbGlhc2VzIG9mIGZ1bmN0aW9ucyBjYWxsZWQgb2Z0ZW4KCWVhY2ggPSBqUXVlcnkuZWFj
aDsKCi8vIERldGVybWluZSByZ2JhIHN1cHBvcnQgaW1tZWRpYXRlbHkKc3VwcG9ydEVsZW0uc3R5
bGUuY3NzVGV4dCA9ICJiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMSwxLDEsLjUpIjsKc3VwcG9ydC5y
Z2JhID0gc3VwcG9ydEVsZW0uc3R5bGUuYmFja2dyb3VuZENvbG9yLmluZGV4T2YoICJyZ2JhIiAp
ID4gLTE7CgovLyBEZWZpbmUgY2FjaGUgbmFtZSBhbmQgYWxwaGEgcHJvcGVydGllcwovLyBmb3Ig
cmdiYSBhbmQgaHNsYSBzcGFjZXMKZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggc3BhY2VOYW1lLCBz
cGFjZSApIHsKCXNwYWNlLmNhY2hlID0gIl8iICsgc3BhY2VOYW1lOwoJc3BhY2UucHJvcHMuYWxw
aGEgPSB7CgkJaWR4OiAzLAoJCXR5cGU6ICJwZXJjZW50IiwKCQlkZWY6IDEKCX07Cn0gKTsKCmZ1
bmN0aW9uIGNsYW1wKCB2YWx1ZSwgcHJvcCwgYWxsb3dFbXB0eSApIHsKCXZhciB0eXBlID0gcHJv
cFR5cGVzWyBwcm9wLnR5cGUgXSB8fCB7fTsKCglpZiAoIHZhbHVlID09IG51bGwgKSB7CgkJcmV0
dXJuICggYWxsb3dFbXB0eSB8fCAhcHJvcC5kZWYgKSA/IG51bGwgOiBwcm9wLmRlZjsKCX0KCgkv
LyB+fiBpcyBhbiBzaG9ydCB3YXkgb2YgZG9pbmcgZmxvb3IgZm9yIHBvc2l0aXZlIG51bWJlcnMK
CXZhbHVlID0gdHlwZS5mbG9vciA/IH5+dmFsdWUgOiBwYXJzZUZsb2F0KCB2YWx1ZSApOwoKCS8v
IElFIHdpbGwgcGFzcyBpbiBlbXB0eSBzdHJpbmdzIGFzIHZhbHVlIGZvciBhbHBoYSwKCS8vIHdo
aWNoIHdpbGwgaGl0IHRoaXMgY2FzZQoJaWYgKCBpc05hTiggdmFsdWUgKSApIHsKCQlyZXR1cm4g
cHJvcC5kZWY7Cgl9CgoJaWYgKCB0eXBlLm1vZCApIHsKCgkJLy8gV2UgYWRkIG1vZCBiZWZvcmUg
bW9kZGluZyB0byBtYWtlIHN1cmUgdGhhdCBuZWdhdGl2ZXMgdmFsdWVzCgkJLy8gZ2V0IGNvbnZl
cnRlZCBwcm9wZXJseTogLTEwIC0+IDM1MAoJCXJldHVybiAoIHZhbHVlICsgdHlwZS5tb2QgKSAl
IHR5cGUubW9kOwoJfQoKCS8vIEZvciBub3cgYWxsIHByb3BlcnR5IHR5cGVzIHdpdGhvdXQgbW9k
IGhhdmUgbWluIGFuZCBtYXgKCXJldHVybiAwID4gdmFsdWUgPyAwIDogdHlwZS5tYXggPCB2YWx1
ZSA/IHR5cGUubWF4IDogdmFsdWU7Cn0KCmZ1bmN0aW9uIHN0cmluZ1BhcnNlKCBzdHJpbmcgKSB7
Cgl2YXIgaW5zdCA9IGNvbG9yKCksCgkJcmdiYSA9IGluc3QuX3JnYmEgPSBbXTsKCglzdHJpbmcg
PSBzdHJpbmcudG9Mb3dlckNhc2UoKTsKCgllYWNoKCBzdHJpbmdQYXJzZXJzLCBmdW5jdGlvbigg
aSwgcGFyc2VyICkgewoJCXZhciBwYXJzZWQsCgkJCW1hdGNoID0gcGFyc2VyLnJlLmV4ZWMoIHN0
cmluZyApLAoJCQl2YWx1ZXMgPSBtYXRjaCAmJiBwYXJzZXIucGFyc2UoIG1hdGNoICksCgkJCXNw
YWNlTmFtZSA9IHBhcnNlci5zcGFjZSB8fCAicmdiYSI7CgoJCWlmICggdmFsdWVzICkgewoJCQlw
YXJzZWQgPSBpbnN0WyBzcGFjZU5hbWUgXSggdmFsdWVzICk7CgoJCQkvLyBJZiB0aGlzIHdhcyBh
biByZ2JhIHBhcnNlIHRoZSBhc3NpZ25tZW50IG1pZ2h0IGhhcHBlbiB0d2ljZQoJCQkvLyBvaCB3
ZWxsLi4uLgoJCQlpbnN0WyBzcGFjZXNbIHNwYWNlTmFtZSBdLmNhY2hlIF0gPSBwYXJzZWRbIHNw
YWNlc1sgc3BhY2VOYW1lIF0uY2FjaGUgXTsKCQkJcmdiYSA9IGluc3QuX3JnYmEgPSBwYXJzZWQu
X3JnYmE7CgoJCQkvLyBFeGl0IGVhY2goIHN0cmluZ1BhcnNlcnMgKSBoZXJlIGJlY2F1c2Ugd2Ug
bWF0Y2hlZAoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJfSApOwoKCS8vIEZvdW5kIGEgc3RyaW5nUGFy
c2VyIHRoYXQgaGFuZGxlZCBpdAoJaWYgKCByZ2JhLmxlbmd0aCApIHsKCgkJLy8gSWYgdGhpcyBj
YW1lIGZyb20gYSBwYXJzZWQgc3RyaW5nLCBmb3JjZSAidHJhbnNwYXJlbnQiIHdoZW4gYWxwaGEg
aXMgMAoJCS8vIGNocm9tZSwgKGFuZCBtYXliZSBvdGhlcnMpIHJldHVybiAidHJhbnNwYXJlbnQi
IGFzIHJnYmEoMCwwLDAsMCkKCQlpZiAoIHJnYmEuam9pbigpID09PSAiMCwwLDAsMCIgKSB7CgkJ
CWpRdWVyeS5leHRlbmQoIHJnYmEsIGNvbG9ycy50cmFuc3BhcmVudCApOwoJCX0KCQlyZXR1cm4g
aW5zdDsKCX0KCgkvLyBOYW1lZCBjb2xvcnMKCXJldHVybiBjb2xvcnNbIHN0cmluZyBdOwp9Cgpj
b2xvci5mbiA9IGpRdWVyeS5leHRlbmQoIGNvbG9yLnByb3RvdHlwZSwgewoJcGFyc2U6IGZ1bmN0
aW9uKCByZWQsIGdyZWVuLCBibHVlLCBhbHBoYSApIHsKCQlpZiAoIHJlZCA9PT0gdW5kZWZpbmVk
ICkgewoJCQl0aGlzLl9yZ2JhID0gWyBudWxsLCBudWxsLCBudWxsLCBudWxsIF07CgkJCXJldHVy
biB0aGlzOwoJCX0KCQlpZiAoIHJlZC5qcXVlcnkgfHwgcmVkLm5vZGVUeXBlICkgewoJCQlyZWQg
PSBqUXVlcnkoIHJlZCApLmNzcyggZ3JlZW4gKTsKCQkJZ3JlZW4gPSB1bmRlZmluZWQ7CgkJfQoK
CQl2YXIgaW5zdCA9IHRoaXMsCgkJCXR5cGUgPSBqUXVlcnkudHlwZSggcmVkICksCgkJCXJnYmEg
PSB0aGlzLl9yZ2JhID0gW107CgoJCS8vIE1vcmUgdGhhbiAxIGFyZ3VtZW50IHNwZWNpZmllZCAt
IGFzc3VtZSAoIHJlZCwgZ3JlZW4sIGJsdWUsIGFscGhhICkKCQlpZiAoIGdyZWVuICE9PSB1bmRl
ZmluZWQgKSB7CgkJCXJlZCA9IFsgcmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEgXTsKCQkJdHlwZSA9
ICJhcnJheSI7CgkJfQoKCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICkgewoJCQlyZXR1cm4gdGhp
cy5wYXJzZSggc3RyaW5nUGFyc2UoIHJlZCApIHx8IGNvbG9ycy5fZGVmYXVsdCApOwoJCX0KCgkJ
aWYgKCB0eXBlID09PSAiYXJyYXkiICkgewoJCQllYWNoKCBzcGFjZXMucmdiYS5wcm9wcywgZnVu
Y3Rpb24oIGtleSwgcHJvcCApIHsKCQkJCXJnYmFbIHByb3AuaWR4IF0gPSBjbGFtcCggcmVkWyBw
cm9wLmlkeCBdLCBwcm9wICk7CgkJCX0gKTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoKCQlpZiAoIHR5
cGUgPT09ICJvYmplY3QiICkgewoJCQlpZiAoIHJlZCBpbnN0YW5jZW9mIGNvbG9yICkgewoJCQkJ
ZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggc3BhY2VOYW1lLCBzcGFjZSApIHsKCQkJCQlpZiAoIHJl
ZFsgc3BhY2UuY2FjaGUgXSApIHsKCQkJCQkJaW5zdFsgc3BhY2UuY2FjaGUgXSA9IHJlZFsgc3Bh
Y2UuY2FjaGUgXS5zbGljZSgpOwoJCQkJCX0KCQkJCX0gKTsKCQkJfSBlbHNlIHsKCQkJCWVhY2go
IHNwYWNlcywgZnVuY3Rpb24oIHNwYWNlTmFtZSwgc3BhY2UgKSB7CgkJCQkJdmFyIGNhY2hlID0g
c3BhY2UuY2FjaGU7CgkJCQkJZWFjaCggc3BhY2UucHJvcHMsIGZ1bmN0aW9uKCBrZXksIHByb3Ag
KSB7CgoJCQkJCQkvLyBJZiB0aGUgY2FjaGUgZG9lc24ndCBleGlzdCwgYW5kIHdlIGtub3cgaG93
IHRvIGNvbnZlcnQKCQkJCQkJaWYgKCAhaW5zdFsgY2FjaGUgXSAmJiBzcGFjZS50byApIHsKCgkJ
CQkJCQkvLyBJZiB0aGUgdmFsdWUgd2FzIG51bGwsIHdlIGRvbid0IG5lZWQgdG8gY29weSBpdAoJ
CQkJCQkJLy8gaWYgdGhlIGtleSB3YXMgYWxwaGEsIHdlIGRvbid0IG5lZWQgdG8gY29weSBpdCBl
aXRoZXIKCQkJCQkJCWlmICgga2V5ID09PSAiYWxwaGEiIHx8IHJlZFsga2V5IF0gPT0gbnVsbCAp
IHsKCQkJCQkJCQlyZXR1cm47CgkJCQkJCQl9CgkJCQkJCQlpbnN0WyBjYWNoZSBdID0gc3BhY2Uu
dG8oIGluc3QuX3JnYmEgKTsKCQkJCQkJfQoKCQkJCQkJLy8gVGhpcyBpcyB0aGUgb25seSBjYXNl
IHdoZXJlIHdlIGFsbG93IG51bGxzIGZvciBBTEwgcHJvcGVydGllcy4KCQkJCQkJLy8gY2FsbCBj
bGFtcCB3aXRoIGFsd2F5c0FsbG93RW1wdHkKCQkJCQkJaW5zdFsgY2FjaGUgXVsgcHJvcC5pZHgg
XSA9IGNsYW1wKCByZWRbIGtleSBdLCBwcm9wLCB0cnVlICk7CgkJCQkJfSApOwoKCQkJCQkvLyBF
dmVyeXRoaW5nIGRlZmluZWQgYnV0IGFscGhhPwoJCQkJCWlmICggaW5zdFsgY2FjaGUgXSAmJgoJ
CQkJCQkJalF1ZXJ5LmluQXJyYXkoIG51bGwsIGluc3RbIGNhY2hlIF0uc2xpY2UoIDAsIDMgKSAp
IDwgMCApIHsKCgkJCQkJCS8vIFVzZSB0aGUgZGVmYXVsdCBvZiAxCgkJCQkJCWluc3RbIGNhY2hl
IF1bIDMgXSA9IDE7CgkJCQkJCWlmICggc3BhY2UuZnJvbSApIHsKCQkJCQkJCWluc3QuX3JnYmEg
PSBzcGFjZS5mcm9tKCBpbnN0WyBjYWNoZSBdICk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9ICk7CgkJ
CX0KCQkJcmV0dXJuIHRoaXM7CgkJfQoJfSwKCWlzOiBmdW5jdGlvbiggY29tcGFyZSApIHsKCQl2
YXIgaXMgPSBjb2xvciggY29tcGFyZSApLAoJCQlzYW1lID0gdHJ1ZSwKCQkJaW5zdCA9IHRoaXM7
CgoJCWVhY2goIHNwYWNlcywgZnVuY3Rpb24oIF8sIHNwYWNlICkgewoJCQl2YXIgbG9jYWxDYWNo
ZSwKCQkJCWlzQ2FjaGUgPSBpc1sgc3BhY2UuY2FjaGUgXTsKCQkJaWYgKCBpc0NhY2hlICkgewoJ
CQkJbG9jYWxDYWNoZSA9IGluc3RbIHNwYWNlLmNhY2hlIF0gfHwgc3BhY2UudG8gJiYgc3BhY2Uu
dG8oIGluc3QuX3JnYmEgKSB8fCBbXTsKCQkJCWVhY2goIHNwYWNlLnByb3BzLCBmdW5jdGlvbigg
XywgcHJvcCApIHsKCQkJCQlpZiAoIGlzQ2FjaGVbIHByb3AuaWR4IF0gIT0gbnVsbCApIHsKCQkJ
CQkJc2FtZSA9ICggaXNDYWNoZVsgcHJvcC5pZHggXSA9PT0gbG9jYWxDYWNoZVsgcHJvcC5pZHgg
XSApOwoJCQkJCQlyZXR1cm4gc2FtZTsKCQkJCQl9CgkJCQl9ICk7CgkJCX0KCQkJcmV0dXJuIHNh
bWU7CgkJfSApOwoJCXJldHVybiBzYW1lOwoJfSwKCV9zcGFjZTogZnVuY3Rpb24oKSB7CgkJdmFy
IHVzZWQgPSBbXSwKCQkJaW5zdCA9IHRoaXM7CgkJZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggc3Bh
Y2VOYW1lLCBzcGFjZSApIHsKCQkJaWYgKCBpbnN0WyBzcGFjZS5jYWNoZSBdICkgewoJCQkJdXNl
ZC5wdXNoKCBzcGFjZU5hbWUgKTsKCQkJfQoJCX0gKTsKCQlyZXR1cm4gdXNlZC5wb3AoKTsKCX0s
Cgl0cmFuc2l0aW9uOiBmdW5jdGlvbiggb3RoZXIsIGRpc3RhbmNlICkgewoJCXZhciBlbmQgPSBj
b2xvciggb3RoZXIgKSwKCQkJc3BhY2VOYW1lID0gZW5kLl9zcGFjZSgpLAoJCQlzcGFjZSA9IHNw
YWNlc1sgc3BhY2VOYW1lIF0sCgkJCXN0YXJ0Q29sb3IgPSB0aGlzLmFscGhhKCkgPT09IDAgPyBj
b2xvciggInRyYW5zcGFyZW50IiApIDogdGhpcywKCQkJc3RhcnQgPSBzdGFydENvbG9yWyBzcGFj
ZS5jYWNoZSBdIHx8IHNwYWNlLnRvKCBzdGFydENvbG9yLl9yZ2JhICksCgkJCXJlc3VsdCA9IHN0
YXJ0LnNsaWNlKCk7CgoJCWVuZCA9IGVuZFsgc3BhY2UuY2FjaGUgXTsKCQllYWNoKCBzcGFjZS5w
cm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsKCQkJdmFyIGluZGV4ID0gcHJvcC5pZHgsCgkJ
CQlzdGFydFZhbHVlID0gc3RhcnRbIGluZGV4IF0sCgkJCQllbmRWYWx1ZSA9IGVuZFsgaW5kZXgg
XSwKCQkJCXR5cGUgPSBwcm9wVHlwZXNbIHByb3AudHlwZSBdIHx8IHt9OwoKCQkJLy8gSWYgbnVs
bCwgZG9uJ3Qgb3ZlcnJpZGUgc3RhcnQgdmFsdWUKCQkJaWYgKCBlbmRWYWx1ZSA9PT0gbnVsbCAp
IHsKCQkJCXJldHVybjsKCQkJfQoKCQkJLy8gSWYgbnVsbCAtIHVzZSBlbmQKCQkJaWYgKCBzdGFy
dFZhbHVlID09PSBudWxsICkgewoJCQkJcmVzdWx0WyBpbmRleCBdID0gZW5kVmFsdWU7CgkJCX0g
ZWxzZSB7CgkJCQlpZiAoIHR5cGUubW9kICkgewoJCQkJCWlmICggZW5kVmFsdWUgLSBzdGFydFZh
bHVlID4gdHlwZS5tb2QgLyAyICkgewoJCQkJCQlzdGFydFZhbHVlICs9IHR5cGUubW9kOwoJCQkJ
CX0gZWxzZSBpZiAoIHN0YXJ0VmFsdWUgLSBlbmRWYWx1ZSA+IHR5cGUubW9kIC8gMiApIHsKCQkJ
CQkJc3RhcnRWYWx1ZSAtPSB0eXBlLm1vZDsKCQkJCQl9CgkJCQl9CgkJCQlyZXN1bHRbIGluZGV4
IF0gPSBjbGFtcCggKCBlbmRWYWx1ZSAtIHN0YXJ0VmFsdWUgKSAqIGRpc3RhbmNlICsgc3RhcnRW
YWx1ZSwgcHJvcCApOwoJCQl9CgkJfSApOwoJCXJldHVybiB0aGlzWyBzcGFjZU5hbWUgXSggcmVz
dWx0ICk7Cgl9LAoJYmxlbmQ6IGZ1bmN0aW9uKCBvcGFxdWUgKSB7CgoJCS8vIElmIHdlIGFyZSBh
bHJlYWR5IG9wYXF1ZSAtIHJldHVybiBvdXJzZWxmCgkJaWYgKCB0aGlzLl9yZ2JhWyAzIF0gPT09
IDEgKSB7CgkJCXJldHVybiB0aGlzOwoJCX0KCgkJdmFyIHJnYiA9IHRoaXMuX3JnYmEuc2xpY2Uo
KSwKCQkJYSA9IHJnYi5wb3AoKSwKCQkJYmxlbmQgPSBjb2xvciggb3BhcXVlICkuX3JnYmE7CgoJ
CXJldHVybiBjb2xvciggalF1ZXJ5Lm1hcCggcmdiLCBmdW5jdGlvbiggdiwgaSApIHsKCQkJcmV0
dXJuICggMSAtIGEgKSAqIGJsZW5kWyBpIF0gKyBhICogdjsKCQl9ICkgKTsKCX0sCgl0b1JnYmFT
dHJpbmc6IGZ1bmN0aW9uKCkgewoJCXZhciBwcmVmaXggPSAicmdiYSgiLAoJCQlyZ2JhID0galF1
ZXJ5Lm1hcCggdGhpcy5fcmdiYSwgZnVuY3Rpb24oIHYsIGkgKSB7CgkJCQlyZXR1cm4gdiA9PSBu
dWxsID8gKCBpID4gMiA/IDEgOiAwICkgOiB2OwoJCQl9ICk7CgoJCWlmICggcmdiYVsgMyBdID09
PSAxICkgewoJCQlyZ2JhLnBvcCgpOwoJCQlwcmVmaXggPSAicmdiKCI7CgkJfQoKCQlyZXR1cm4g
cHJlZml4ICsgcmdiYS5qb2luKCkgKyAiKSI7Cgl9LAoJdG9Ic2xhU3RyaW5nOiBmdW5jdGlvbigp
IHsKCQl2YXIgcHJlZml4ID0gImhzbGEoIiwKCQkJaHNsYSA9IGpRdWVyeS5tYXAoIHRoaXMuaHNs
YSgpLCBmdW5jdGlvbiggdiwgaSApIHsKCQkJCWlmICggdiA9PSBudWxsICkgewoJCQkJCXYgPSBp
ID4gMiA/IDEgOiAwOwoJCQkJfQoKCQkJCS8vIENhdGNoIDEgYW5kIDIKCQkJCWlmICggaSAmJiBp
IDwgMyApIHsKCQkJCQl2ID0gTWF0aC5yb3VuZCggdiAqIDEwMCApICsgIiUiOwoJCQkJfQoJCQkJ
cmV0dXJuIHY7CgkJCX0gKTsKCgkJaWYgKCBoc2xhWyAzIF0gPT09IDEgKSB7CgkJCWhzbGEucG9w
KCk7CgkJCXByZWZpeCA9ICJoc2woIjsKCQl9CgkJcmV0dXJuIHByZWZpeCArIGhzbGEuam9pbigp
ICsgIikiOwoJfSwKCXRvSGV4U3RyaW5nOiBmdW5jdGlvbiggaW5jbHVkZUFscGhhICkgewoJCXZh
ciByZ2JhID0gdGhpcy5fcmdiYS5zbGljZSgpLAoJCQlhbHBoYSA9IHJnYmEucG9wKCk7CgoJCWlm
ICggaW5jbHVkZUFscGhhICkgewoJCQlyZ2JhLnB1c2goIH5+KCBhbHBoYSAqIDI1NSApICk7CgkJ
fQoKCQlyZXR1cm4gIiMiICsgalF1ZXJ5Lm1hcCggcmdiYSwgZnVuY3Rpb24oIHYgKSB7CgoJCQkv
LyBEZWZhdWx0IHRvIDAgd2hlbiBudWxscyBleGlzdAoJCQl2ID0gKCB2IHx8IDAgKS50b1N0cmlu
ZyggMTYgKTsKCQkJcmV0dXJuIHYubGVuZ3RoID09PSAxID8gIjAiICsgdiA6IHY7CgkJfSApLmpv
aW4oICIiICk7Cgl9LAoJdG9TdHJpbmc6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLl9yZ2Jh
WyAzIF0gPT09IDAgPyAidHJhbnNwYXJlbnQiIDogdGhpcy50b1JnYmFTdHJpbmcoKTsKCX0KfSAp
Owpjb2xvci5mbi5wYXJzZS5wcm90b3R5cGUgPSBjb2xvci5mbjsKCi8vIEhzbGEgY29udmVyc2lv
bnMgYWRhcHRlZCBmcm9tOgovLyBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL21hYXNoYWFjay9z
b3VyY2UvYnJvd3NlL3BhY2thZ2VzL2dyYXBoaWNzL3RydW5rL3NyYy9ncmFwaGljcy9jb2xvcnMv
SFVFMlJHQi5hcz9yPTUwMjEKCmZ1bmN0aW9uIGh1ZTJyZ2IoIHAsIHEsIGggKSB7CgloID0gKCBo
ICsgMSApICUgMTsKCWlmICggaCAqIDYgPCAxICkgewoJCXJldHVybiBwICsgKCBxIC0gcCApICog
aCAqIDY7Cgl9CglpZiAoIGggKiAyIDwgMSApIHsKCQlyZXR1cm4gcTsKCX0KCWlmICggaCAqIDMg
PCAyICkgewoJCXJldHVybiBwICsgKCBxIC0gcCApICogKCAoIDIgLyAzICkgLSBoICkgKiA2OwoJ
fQoJcmV0dXJuIHA7Cn0KCnNwYWNlcy5oc2xhLnRvID0gZnVuY3Rpb24oIHJnYmEgKSB7CglpZiAo
IHJnYmFbIDAgXSA9PSBudWxsIHx8IHJnYmFbIDEgXSA9PSBudWxsIHx8IHJnYmFbIDIgXSA9PSBu
dWxsICkgewoJCXJldHVybiBbIG51bGwsIG51bGwsIG51bGwsIHJnYmFbIDMgXSBdOwoJfQoJdmFy
IHIgPSByZ2JhWyAwIF0gLyAyNTUsCgkJZyA9IHJnYmFbIDEgXSAvIDI1NSwKCQliID0gcmdiYVsg
MiBdIC8gMjU1LAoJCWEgPSByZ2JhWyAzIF0sCgkJbWF4ID0gTWF0aC5tYXgoIHIsIGcsIGIgKSwK
CQltaW4gPSBNYXRoLm1pbiggciwgZywgYiApLAoJCWRpZmYgPSBtYXggLSBtaW4sCgkJYWRkID0g
bWF4ICsgbWluLAoJCWwgPSBhZGQgKiAwLjUsCgkJaCwgczsKCglpZiAoIG1pbiA9PT0gbWF4ICkg
ewoJCWggPSAwOwoJfSBlbHNlIGlmICggciA9PT0gbWF4ICkgewoJCWggPSAoIDYwICogKCBnIC0g
YiApIC8gZGlmZiApICsgMzYwOwoJfSBlbHNlIGlmICggZyA9PT0gbWF4ICkgewoJCWggPSAoIDYw
ICogKCBiIC0gciApIC8gZGlmZiApICsgMTIwOwoJfSBlbHNlIHsKCQloID0gKCA2MCAqICggciAt
IGcgKSAvIGRpZmYgKSArIDI0MDsKCX0KCgkvLyBDaHJvbWEgKGRpZmYpID09IDAgbWVhbnMgZ3Jl
eXNjYWxlIHdoaWNoLCBieSBkZWZpbml0aW9uLCBzYXR1cmF0aW9uID0gMCUKCS8vIG90aGVyd2lz
ZSwgc2F0dXJhdGlvbiBpcyBiYXNlZCBvbiB0aGUgcmF0aW8gb2YgY2hyb21hIChkaWZmKSB0byBs
aWdodG5lc3MgKGFkZCkKCWlmICggZGlmZiA9PT0gMCApIHsKCQlzID0gMDsKCX0gZWxzZSBpZiAo
IGwgPD0gMC41ICkgewoJCXMgPSBkaWZmIC8gYWRkOwoJfSBlbHNlIHsKCQlzID0gZGlmZiAvICgg
MiAtIGFkZCApOwoJfQoJcmV0dXJuIFsgTWF0aC5yb3VuZCggaCApICUgMzYwLCBzLCBsLCBhID09
IG51bGwgPyAxIDogYSBdOwp9OwoKc3BhY2VzLmhzbGEuZnJvbSA9IGZ1bmN0aW9uKCBoc2xhICkg
ewoJaWYgKCBoc2xhWyAwIF0gPT0gbnVsbCB8fCBoc2xhWyAxIF0gPT0gbnVsbCB8fCBoc2xhWyAy
IF0gPT0gbnVsbCApIHsKCQlyZXR1cm4gWyBudWxsLCBudWxsLCBudWxsLCBoc2xhWyAzIF0gXTsK
CX0KCXZhciBoID0gaHNsYVsgMCBdIC8gMzYwLAoJCXMgPSBoc2xhWyAxIF0sCgkJbCA9IGhzbGFb
IDIgXSwKCQlhID0gaHNsYVsgMyBdLAoJCXEgPSBsIDw9IDAuNSA/IGwgKiAoIDEgKyBzICkgOiBs
ICsgcyAtIGwgKiBzLAoJCXAgPSAyICogbCAtIHE7CgoJcmV0dXJuIFsKCQlNYXRoLnJvdW5kKCBo
dWUycmdiKCBwLCBxLCBoICsgKCAxIC8gMyApICkgKiAyNTUgKSwKCQlNYXRoLnJvdW5kKCBodWUy
cmdiKCBwLCBxLCBoICkgKiAyNTUgKSwKCQlNYXRoLnJvdW5kKCBodWUycmdiKCBwLCBxLCBoIC0g
KCAxIC8gMyApICkgKiAyNTUgKSwKCQlhCgldOwp9OwoKZWFjaCggc3BhY2VzLCBmdW5jdGlvbigg
c3BhY2VOYW1lLCBzcGFjZSApIHsKCXZhciBwcm9wcyA9IHNwYWNlLnByb3BzLAoJCWNhY2hlID0g
c3BhY2UuY2FjaGUsCgkJdG8gPSBzcGFjZS50bywKCQlmcm9tID0gc3BhY2UuZnJvbTsKCgkvLyBN
YWtlcyByZ2JhKCkgYW5kIGhzbGEoKQoJY29sb3IuZm5bIHNwYWNlTmFtZSBdID0gZnVuY3Rpb24o
IHZhbHVlICkgewoKCQkvLyBHZW5lcmF0ZSBhIGNhY2hlIGZvciB0aGlzIHNwYWNlIGlmIGl0IGRv
ZXNuJ3QgZXhpc3QKCQlpZiAoIHRvICYmICF0aGlzWyBjYWNoZSBdICkgewoJCQl0aGlzWyBjYWNo
ZSBdID0gdG8oIHRoaXMuX3JnYmEgKTsKCQl9CgkJaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICkg
ewoJCQlyZXR1cm4gdGhpc1sgY2FjaGUgXS5zbGljZSgpOwoJCX0KCgkJdmFyIHJldCwKCQkJdHlw
ZSA9IGpRdWVyeS50eXBlKCB2YWx1ZSApLAoJCQlhcnIgPSAoIHR5cGUgPT09ICJhcnJheSIgfHwg
dHlwZSA9PT0gIm9iamVjdCIgKSA/IHZhbHVlIDogYXJndW1lbnRzLAoJCQlsb2NhbCA9IHRoaXNb
IGNhY2hlIF0uc2xpY2UoKTsKCgkJZWFjaCggcHJvcHMsIGZ1bmN0aW9uKCBrZXksIHByb3AgKSB7
CgkJCXZhciB2YWwgPSBhcnJbIHR5cGUgPT09ICJvYmplY3QiID8ga2V5IDogcHJvcC5pZHggXTsK
CQkJaWYgKCB2YWwgPT0gbnVsbCApIHsKCQkJCXZhbCA9IGxvY2FsWyBwcm9wLmlkeCBdOwoJCQl9
CgkJCWxvY2FsWyBwcm9wLmlkeCBdID0gY2xhbXAoIHZhbCwgcHJvcCApOwoJCX0gKTsKCgkJaWYg
KCBmcm9tICkgewoJCQlyZXQgPSBjb2xvciggZnJvbSggbG9jYWwgKSApOwoJCQlyZXRbIGNhY2hl
IF0gPSBsb2NhbDsKCQkJcmV0dXJuIHJldDsKCQl9IGVsc2UgewoJCQlyZXR1cm4gY29sb3IoIGxv
Y2FsICk7CgkJfQoJfTsKCgkvLyBNYWtlcyByZWQoKSBncmVlbigpIGJsdWUoKSBhbHBoYSgpIGh1
ZSgpIHNhdHVyYXRpb24oKSBsaWdodG5lc3MoKQoJZWFjaCggcHJvcHMsIGZ1bmN0aW9uKCBrZXks
IHByb3AgKSB7CgoJCS8vIEFscGhhIGlzIGluY2x1ZGVkIGluIG1vcmUgdGhhbiBvbmUgc3BhY2UK
CQlpZiAoIGNvbG9yLmZuWyBrZXkgXSApIHsKCQkJcmV0dXJuOwoJCX0KCQljb2xvci5mblsga2V5
IF0gPSBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCXZhciB2dHlwZSA9IGpRdWVyeS50eXBlKCB2YWx1
ZSApLAoJCQkJZm4gPSAoIGtleSA9PT0gImFscGhhIiA/ICggdGhpcy5faHNsYSA/ICJoc2xhIiA6
ICJyZ2JhIiApIDogc3BhY2VOYW1lICksCgkJCQlsb2NhbCA9IHRoaXNbIGZuIF0oKSwKCQkJCWN1
ciA9IGxvY2FsWyBwcm9wLmlkeCBdLAoJCQkJbWF0Y2g7CgoJCQlpZiAoIHZ0eXBlID09PSAidW5k
ZWZpbmVkIiApIHsKCQkJCXJldHVybiBjdXI7CgkJCX0KCgkJCWlmICggdnR5cGUgPT09ICJmdW5j
dGlvbiIgKSB7CgkJCQl2YWx1ZSA9IHZhbHVlLmNhbGwoIHRoaXMsIGN1ciApOwoJCQkJdnR5cGUg
PSBqUXVlcnkudHlwZSggdmFsdWUgKTsKCQkJfQoJCQlpZiAoIHZhbHVlID09IG51bGwgJiYgcHJv
cC5lbXB0eSApIHsKCQkJCXJldHVybiB0aGlzOwoJCQl9CgkJCWlmICggdnR5cGUgPT09ICJzdHJp
bmciICkgewoJCQkJbWF0Y2ggPSBycGx1c2VxdWFscy5leGVjKCB2YWx1ZSApOwoJCQkJaWYgKCBt
YXRjaCApIHsKCQkJCQl2YWx1ZSA9IGN1ciArIHBhcnNlRmxvYXQoIG1hdGNoWyAyIF0gKSAqICgg
bWF0Y2hbIDEgXSA9PT0gIisiID8gMSA6IC0xICk7CgkJCQl9CgkJCX0KCQkJbG9jYWxbIHByb3Au
aWR4IF0gPSB2YWx1ZTsKCQkJcmV0dXJuIHRoaXNbIGZuIF0oIGxvY2FsICk7CgkJfTsKCX0gKTsK
fSApOwoKLy8gQWRkIGNzc0hvb2sgYW5kIC5meC5zdGVwIGZ1bmN0aW9uIGZvciBlYWNoIG5hbWVk
IGhvb2suCi8vIGFjY2VwdCBhIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2YgcHJvcGVydGllcwpj
b2xvci5ob29rID0gZnVuY3Rpb24oIGhvb2sgKSB7Cgl2YXIgaG9va3MgPSBob29rLnNwbGl0KCAi
ICIgKTsKCWVhY2goIGhvb2tzLCBmdW5jdGlvbiggaSwgaG9vayApIHsKCQlqUXVlcnkuY3NzSG9v
a3NbIGhvb2sgXSA9IHsKCQkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCQl2YXIg
cGFyc2VkLCBjdXJFbGVtLAoJCQkJCWJhY2tncm91bmRDb2xvciA9ICIiOwoKCQkJCWlmICggdmFs
dWUgIT09ICJ0cmFuc3BhcmVudCIgJiYgKCBqUXVlcnkudHlwZSggdmFsdWUgKSAhPT0gInN0cmlu
ZyIgfHwKCQkJCQkJKCBwYXJzZWQgPSBzdHJpbmdQYXJzZSggdmFsdWUgKSApICkgKSB7CgkJCQkJ
dmFsdWUgPSBjb2xvciggcGFyc2VkIHx8IHZhbHVlICk7CgkJCQkJaWYgKCAhc3VwcG9ydC5yZ2Jh
ICYmIHZhbHVlLl9yZ2JhWyAzIF0gIT09IDEgKSB7CgkJCQkJCWN1ckVsZW0gPSBob29rID09PSAi
YmFja2dyb3VuZENvbG9yIiA/IGVsZW0ucGFyZW50Tm9kZSA6IGVsZW07CgkJCQkJCXdoaWxlICgK
CQkJCQkJCSggYmFja2dyb3VuZENvbG9yID09PSAiIiB8fCBiYWNrZ3JvdW5kQ29sb3IgPT09ICJ0
cmFuc3BhcmVudCIgKSAmJgoJCQkJCQkJY3VyRWxlbSAmJiBjdXJFbGVtLnN0eWxlCgkJCQkJCSkg
ewoJCQkJCQkJdHJ5IHsKCQkJCQkJCQliYWNrZ3JvdW5kQ29sb3IgPSBqUXVlcnkuY3NzKCBjdXJF
bGVtLCAiYmFja2dyb3VuZENvbG9yIiApOwoJCQkJCQkJCWN1ckVsZW0gPSBjdXJFbGVtLnBhcmVu
dE5vZGU7CgkJCQkJCQl9IGNhdGNoICggZSApIHsKCQkJCQkJCX0KCQkJCQkJfQoKCQkJCQkJdmFs
dWUgPSB2YWx1ZS5ibGVuZCggYmFja2dyb3VuZENvbG9yICYmIGJhY2tncm91bmRDb2xvciAhPT0g
InRyYW5zcGFyZW50IiA/CgkJCQkJCQliYWNrZ3JvdW5kQ29sb3IgOgoJCQkJCQkJIl9kZWZhdWx0
IiApOwoJCQkJCX0KCgkJCQkJdmFsdWUgPSB2YWx1ZS50b1JnYmFTdHJpbmcoKTsKCQkJCX0KCQkJ
CXRyeSB7CgkJCQkJZWxlbS5zdHlsZVsgaG9vayBdID0gdmFsdWU7CgkJCQl9IGNhdGNoICggZSAp
IHsKCgkJCQkJLy8gV3JhcHBlZCB0byBwcmV2ZW50IElFIGZyb20gdGhyb3dpbmcgZXJyb3JzIG9u
ICJpbnZhbGlkIiB2YWx1ZXMgbGlrZQoJCQkJCS8vICdhdXRvJyBvciAnaW5oZXJpdCcKCQkJCX0K
CQkJfQoJCX07CgkJalF1ZXJ5LmZ4LnN0ZXBbIGhvb2sgXSA9IGZ1bmN0aW9uKCBmeCApIHsKCQkJ
aWYgKCAhZnguY29sb3JJbml0ICkgewoJCQkJZnguc3RhcnQgPSBjb2xvciggZnguZWxlbSwgaG9v
ayApOwoJCQkJZnguZW5kID0gY29sb3IoIGZ4LmVuZCApOwoJCQkJZnguY29sb3JJbml0ID0gdHJ1
ZTsKCQkJfQoJCQlqUXVlcnkuY3NzSG9va3NbIGhvb2sgXS5zZXQoIGZ4LmVsZW0sIGZ4LnN0YXJ0
LnRyYW5zaXRpb24oIGZ4LmVuZCwgZngucG9zICkgKTsKCQl9OwoJfSApOwoKfTsKCmNvbG9yLmhv
b2soIHN0ZXBIb29rcyApOwoKalF1ZXJ5LmNzc0hvb2tzLmJvcmRlckNvbG9yID0gewoJZXhwYW5k
OiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGV4cGFuZGVkID0ge307CgoJCWVhY2goIFsgIlRv
cCIsICJSaWdodCIsICJCb3R0b20iLCAiTGVmdCIgXSwgZnVuY3Rpb24oIGksIHBhcnQgKSB7CgkJ
CWV4cGFuZGVkWyAiYm9yZGVyIiArIHBhcnQgKyAiQ29sb3IiIF0gPSB2YWx1ZTsKCQl9ICk7CgkJ
cmV0dXJuIGV4cGFuZGVkOwoJfQp9OwoKLy8gQmFzaWMgY29sb3IgbmFtZXMgb25seS4KLy8gVXNh
Z2Ugb2YgYW55IG9mIHRoZSBvdGhlciBjb2xvciBuYW1lcyByZXF1aXJlcyBhZGRpbmcgeW91cnNl
bGYgb3IgaW5jbHVkaW5nCi8vIGpxdWVyeS5jb2xvci5zdmctbmFtZXMuanMuCmNvbG9ycyA9IGpR
dWVyeS5Db2xvci5uYW1lcyA9IHsKCgkvLyA0LjEuIEJhc2ljIGNvbG9yIGtleXdvcmRzCglhcXVh
OiAiIzAwZmZmZiIsCglibGFjazogIiMwMDAwMDAiLAoJYmx1ZTogIiMwMDAwZmYiLAoJZnVjaHNp
YTogIiNmZjAwZmYiLAoJZ3JheTogIiM4MDgwODAiLAoJZ3JlZW46ICIjMDA4MDAwIiwKCWxpbWU6
ICIjMDBmZjAwIiwKCW1hcm9vbjogIiM4MDAwMDAiLAoJbmF2eTogIiMwMDAwODAiLAoJb2xpdmU6
ICIjODA4MDAwIiwKCXB1cnBsZTogIiM4MDAwODAiLAoJcmVkOiAiI2ZmMDAwMCIsCglzaWx2ZXI6
ICIjYzBjMGMwIiwKCXRlYWw6ICIjMDA4MDgwIiwKCXdoaXRlOiAiI2ZmZmZmZiIsCgl5ZWxsb3c6
ICIjZmZmZjAwIiwKCgkvLyA0LjIuMy4gInRyYW5zcGFyZW50IiBjb2xvciBrZXl3b3JkCgl0cmFu
c3BhcmVudDogWyBudWxsLCBudWxsLCBudWxsLCAwIF0sCgoJX2RlZmF1bHQ6ICIjZmZmZmZmIgp9
OwoKfSApKCBqUXVlcnkgKTsKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiogQ0xBU1MgQU5JTUFUSU9OUyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKiovCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiggZnVuY3Rpb24oKSB7Cgp2YXIgY2xh
c3NBbmltYXRpb25BY3Rpb25zID0gWyAiYWRkIiwgInJlbW92ZSIsICJ0b2dnbGUiIF0sCglzaG9y
dGhhbmRTdHlsZXMgPSB7CgkJYm9yZGVyOiAxLAoJCWJvcmRlckJvdHRvbTogMSwKCQlib3JkZXJD
b2xvcjogMSwKCQlib3JkZXJMZWZ0OiAxLAoJCWJvcmRlclJpZ2h0OiAxLAoJCWJvcmRlclRvcDog
MSwKCQlib3JkZXJXaWR0aDogMSwKCQltYXJnaW46IDEsCgkJcGFkZGluZzogMQoJfTsKCiQuZWFj
aCgKCVsgImJvcmRlckxlZnRTdHlsZSIsICJib3JkZXJSaWdodFN0eWxlIiwgImJvcmRlckJvdHRv
bVN0eWxlIiwgImJvcmRlclRvcFN0eWxlIiBdLAoJZnVuY3Rpb24oIF8sIHByb3AgKSB7CgkJJC5m
eC5zdGVwWyBwcm9wIF0gPSBmdW5jdGlvbiggZnggKSB7CgkJCWlmICggZnguZW5kICE9PSAibm9u
ZSIgJiYgIWZ4LnNldEF0dHIgfHwgZngucG9zID09PSAxICYmICFmeC5zZXRBdHRyICkgewoJCQkJ
alF1ZXJ5LnN0eWxlKCBmeC5lbGVtLCBwcm9wLCBmeC5lbmQgKTsKCQkJCWZ4LnNldEF0dHIgPSB0
cnVlOwoJCQl9CgkJfTsKCX0KKTsKCmZ1bmN0aW9uIGdldEVsZW1lbnRTdHlsZXMoIGVsZW0gKSB7
Cgl2YXIga2V5LCBsZW4sCgkJc3R5bGUgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcg
PwoJCQllbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSggZWxl
bSwgbnVsbCApIDoKCQkJZWxlbS5jdXJyZW50U3R5bGUsCgkJc3R5bGVzID0ge307CgoJaWYgKCBz
dHlsZSAmJiBzdHlsZS5sZW5ndGggJiYgc3R5bGVbIDAgXSAmJiBzdHlsZVsgc3R5bGVbIDAgXSBd
ICkgewoJCWxlbiA9IHN0eWxlLmxlbmd0aDsKCQl3aGlsZSAoIGxlbi0tICkgewoJCQlrZXkgPSBz
dHlsZVsgbGVuIF07CgkJCWlmICggdHlwZW9mIHN0eWxlWyBrZXkgXSA9PT0gInN0cmluZyIgKSB7
CgkJCQlzdHlsZXNbICQuY2FtZWxDYXNlKCBrZXkgKSBdID0gc3R5bGVbIGtleSBdOwoJCQl9CgkJ
fQoKCS8vIFN1cHBvcnQ6IE9wZXJhLCBJRSA8OQoJfSBlbHNlIHsKCQlmb3IgKCBrZXkgaW4gc3R5
bGUgKSB7CgkJCWlmICggdHlwZW9mIHN0eWxlWyBrZXkgXSA9PT0gInN0cmluZyIgKSB7CgkJCQlz
dHlsZXNbIGtleSBdID0gc3R5bGVbIGtleSBdOwoJCQl9CgkJfQoJfQoKCXJldHVybiBzdHlsZXM7
Cn0KCmZ1bmN0aW9uIHN0eWxlRGlmZmVyZW5jZSggb2xkU3R5bGUsIG5ld1N0eWxlICkgewoJdmFy
IGRpZmYgPSB7fSwKCQluYW1lLCB2YWx1ZTsKCglmb3IgKCBuYW1lIGluIG5ld1N0eWxlICkgewoJ
CXZhbHVlID0gbmV3U3R5bGVbIG5hbWUgXTsKCQlpZiAoIG9sZFN0eWxlWyBuYW1lIF0gIT09IHZh
bHVlICkgewoJCQlpZiAoICFzaG9ydGhhbmRTdHlsZXNbIG5hbWUgXSApIHsKCQkJCWlmICggJC5m
eC5zdGVwWyBuYW1lIF0gfHwgIWlzTmFOKCBwYXJzZUZsb2F0KCB2YWx1ZSApICkgKSB7CgkJCQkJ
ZGlmZlsgbmFtZSBdID0gdmFsdWU7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJcmV0dXJuIGRpZmY7Cn0K
Ci8vIFN1cHBvcnQ6IGpRdWVyeSA8MS44CmlmICggISQuZm4uYWRkQmFjayApIHsKCSQuZm4uYWRk
QmFjayA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQlyZXR1cm4gdGhpcy5hZGQoIHNlbGVjdG9y
ID09IG51bGwgPwoJCQl0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBz
ZWxlY3RvciApCgkJKTsKCX07Cn0KCiQuZWZmZWN0cy5hbmltYXRlQ2xhc3MgPSBmdW5jdGlvbigg
dmFsdWUsIGR1cmF0aW9uLCBlYXNpbmcsIGNhbGxiYWNrICkgewoJdmFyIG8gPSAkLnNwZWVkKCBk
dXJhdGlvbiwgZWFzaW5nLCBjYWxsYmFjayApOwoKCXJldHVybiB0aGlzLnF1ZXVlKCBmdW5jdGlv
bigpIHsKCQl2YXIgYW5pbWF0ZWQgPSAkKCB0aGlzICksCgkJCWJhc2VDbGFzcyA9IGFuaW1hdGVk
LmF0dHIoICJjbGFzcyIgKSB8fCAiIiwKCQkJYXBwbHlDbGFzc0NoYW5nZSwKCQkJYWxsQW5pbWF0
aW9ucyA9IG8uY2hpbGRyZW4gPyBhbmltYXRlZC5maW5kKCAiKiIgKS5hZGRCYWNrKCkgOiBhbmlt
YXRlZDsKCgkJLy8gTWFwIHRoZSBhbmltYXRlZCBvYmplY3RzIHRvIHN0b3JlIHRoZSBvcmlnaW5h
bCBzdHlsZXMuCgkJYWxsQW5pbWF0aW9ucyA9IGFsbEFuaW1hdGlvbnMubWFwKCBmdW5jdGlvbigp
IHsKCQkJdmFyIGVsID0gJCggdGhpcyApOwoJCQlyZXR1cm4gewoJCQkJZWw6IGVsLAoJCQkJc3Rh
cnQ6IGdldEVsZW1lbnRTdHlsZXMoIHRoaXMgKQoJCQl9OwoJCX0gKTsKCgkJLy8gQXBwbHkgY2xh
c3MgY2hhbmdlCgkJYXBwbHlDbGFzc0NoYW5nZSA9IGZ1bmN0aW9uKCkgewoJCQkkLmVhY2goIGNs
YXNzQW5pbWF0aW9uQWN0aW9ucywgZnVuY3Rpb24oIGksIGFjdGlvbiApIHsKCQkJCWlmICggdmFs
dWVbIGFjdGlvbiBdICkgewoJCQkJCWFuaW1hdGVkWyBhY3Rpb24gKyAiQ2xhc3MiIF0oIHZhbHVl
WyBhY3Rpb24gXSApOwoJCQkJfQoJCQl9ICk7CgkJfTsKCQlhcHBseUNsYXNzQ2hhbmdlKCk7CgoJ
CS8vIE1hcCBhbGwgYW5pbWF0ZWQgb2JqZWN0cyBhZ2FpbiAtIGNhbGN1bGF0ZSBuZXcgc3R5bGVz
IGFuZCBkaWZmCgkJYWxsQW5pbWF0aW9ucyA9IGFsbEFuaW1hdGlvbnMubWFwKCBmdW5jdGlvbigp
IHsKCQkJdGhpcy5lbmQgPSBnZXRFbGVtZW50U3R5bGVzKCB0aGlzLmVsWyAwIF0gKTsKCQkJdGhp
cy5kaWZmID0gc3R5bGVEaWZmZXJlbmNlKCB0aGlzLnN0YXJ0LCB0aGlzLmVuZCApOwoJCQlyZXR1
cm4gdGhpczsKCQl9ICk7CgoJCS8vIEFwcGx5IG9yaWdpbmFsIGNsYXNzCgkJYW5pbWF0ZWQuYXR0
ciggImNsYXNzIiwgYmFzZUNsYXNzICk7CgoJCS8vIE1hcCBhbGwgYW5pbWF0ZWQgb2JqZWN0cyBh
Z2FpbiAtIHRoaXMgdGltZSBjb2xsZWN0aW5nIGEgcHJvbWlzZQoJCWFsbEFuaW1hdGlvbnMgPSBh
bGxBbmltYXRpb25zLm1hcCggZnVuY3Rpb24oKSB7CgkJCXZhciBzdHlsZUluZm8gPSB0aGlzLAoJ
CQkJZGZkID0gJC5EZWZlcnJlZCgpLAoJCQkJb3B0cyA9ICQuZXh0ZW5kKCB7fSwgbywgewoJCQkJ
CXF1ZXVlOiBmYWxzZSwKCQkJCQljb21wbGV0ZTogZnVuY3Rpb24oKSB7CgkJCQkJCWRmZC5yZXNv
bHZlKCBzdHlsZUluZm8gKTsKCQkJCQl9CgkJCQl9ICk7CgoJCQl0aGlzLmVsLmFuaW1hdGUoIHRo
aXMuZGlmZiwgb3B0cyApOwoJCQlyZXR1cm4gZGZkLnByb21pc2UoKTsKCQl9ICk7CgoJCS8vIE9u
Y2UgYWxsIGFuaW1hdGlvbnMgaGF2ZSBjb21wbGV0ZWQ6CgkJJC53aGVuLmFwcGx5KCAkLCBhbGxB
bmltYXRpb25zLmdldCgpICkuZG9uZSggZnVuY3Rpb24oKSB7CgoJCQkvLyBTZXQgdGhlIGZpbmFs
IGNsYXNzCgkJCWFwcGx5Q2xhc3NDaGFuZ2UoKTsKCgkJCS8vIEZvciBlYWNoIGFuaW1hdGVkIGVs
ZW1lbnQsCgkJCS8vIGNsZWFyIGFsbCBjc3MgcHJvcGVydGllcyB0aGF0IHdlcmUgYW5pbWF0ZWQK
CQkJJC5lYWNoKCBhcmd1bWVudHMsIGZ1bmN0aW9uKCkgewoJCQkJdmFyIGVsID0gdGhpcy5lbDsK
CQkJCSQuZWFjaCggdGhpcy5kaWZmLCBmdW5jdGlvbigga2V5ICkgewoJCQkJCWVsLmNzcygga2V5
LCAiIiApOwoJCQkJfSApOwoJCQl9ICk7CgoJCQkvLyBUaGlzIGlzIGd1YXJudGVlZCB0byBiZSB0
aGVyZSBpZiB5b3UgdXNlIGpRdWVyeS5zcGVlZCgpCgkJCS8vIGl0IGFsc28gaGFuZGxlcyBkZXF1
ZXVpbmcgdGhlIG5leHQgYW5pbS4uLgoJCQlvLmNvbXBsZXRlLmNhbGwoIGFuaW1hdGVkWyAwIF0g
KTsKCQl9ICk7Cgl9ICk7Cn07CgokLmZuLmV4dGVuZCggewoJYWRkQ2xhc3M6ICggZnVuY3Rpb24o
IG9yaWcgKSB7CgkJcmV0dXJuIGZ1bmN0aW9uKCBjbGFzc05hbWVzLCBzcGVlZCwgZWFzaW5nLCBj
YWxsYmFjayApIHsKCQkJcmV0dXJuIHNwZWVkID8KCQkJCSQuZWZmZWN0cy5hbmltYXRlQ2xhc3Mu
Y2FsbCggdGhpcywKCQkJCQl7IGFkZDogY2xhc3NOYW1lcyB9LCBzcGVlZCwgZWFzaW5nLCBjYWxs
YmFjayApIDoKCQkJCW9yaWcuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCX07Cgl9ICkoICQu
Zm4uYWRkQ2xhc3MgKSwKCglyZW1vdmVDbGFzczogKCBmdW5jdGlvbiggb3JpZyApIHsKCQlyZXR1
cm4gZnVuY3Rpb24oIGNsYXNzTmFtZXMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkgewoJCQly
ZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPwoJCQkJJC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5j
YWxsKCB0aGlzLAoJCQkJCXsgcmVtb3ZlOiBjbGFzc05hbWVzIH0sIHNwZWVkLCBlYXNpbmcsIGNh
bGxiYWNrICkgOgoJCQkJb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJfTsKCX0gKSgg
JC5mbi5yZW1vdmVDbGFzcyApLAoKCXRvZ2dsZUNsYXNzOiAoIGZ1bmN0aW9uKCBvcmlnICkgewoJ
CXJldHVybiBmdW5jdGlvbiggY2xhc3NOYW1lcywgZm9yY2UsIHNwZWVkLCBlYXNpbmcsIGNhbGxi
YWNrICkgewoJCQlpZiAoIHR5cGVvZiBmb3JjZSA9PT0gImJvb2xlYW4iIHx8IGZvcmNlID09PSB1
bmRlZmluZWQgKSB7CgkJCQlpZiAoICFzcGVlZCApIHsKCgkJCQkJLy8gV2l0aG91dCBzcGVlZCBw
YXJhbWV0ZXIKCQkJCQlyZXR1cm4gb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCQl9
IGVsc2UgewoJCQkJCXJldHVybiAkLmVmZmVjdHMuYW5pbWF0ZUNsYXNzLmNhbGwoIHRoaXMsCgkJ
CQkJCSggZm9yY2UgPyB7IGFkZDogY2xhc3NOYW1lcyB9IDogeyByZW1vdmU6IGNsYXNzTmFtZXMg
fSApLAoJCQkJCQlzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApOwoJCQkJfQoJCQl9IGVsc2UgewoK
CQkJCS8vIFdpdGhvdXQgZm9yY2UgcGFyYW1ldGVyCgkJCQlyZXR1cm4gJC5lZmZlY3RzLmFuaW1h
dGVDbGFzcy5jYWxsKCB0aGlzLAoJCQkJCXsgdG9nZ2xlOiBjbGFzc05hbWVzIH0sIGZvcmNlLCBz
cGVlZCwgZWFzaW5nICk7CgkJCX0KCQl9OwoJfSApKCAkLmZuLnRvZ2dsZUNsYXNzICksCgoJc3dp
dGNoQ2xhc3M6IGZ1bmN0aW9uKCByZW1vdmUsIGFkZCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sg
KSB7CgkJcmV0dXJuICQuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCggdGhpcywgewoJCQlhZGQ6
IGFkZCwKCQkJcmVtb3ZlOiByZW1vdmUKCQl9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApOwoJ
fQp9ICk7Cgp9ICkoKTsKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKiBFRkZFQ1RTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKiovCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgooIGZ1bmN0aW9uKCkgewoKaWYgKCAkLmV4
cHIgJiYgJC5leHByLmZpbHRlcnMgJiYgJC5leHByLmZpbHRlcnMuYW5pbWF0ZWQgKSB7CgkkLmV4
cHIuZmlsdGVycy5hbmltYXRlZCA9ICggZnVuY3Rpb24oIG9yaWcgKSB7CgkJcmV0dXJuIGZ1bmN0
aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gISEkKCBlbGVtICkuZGF0YSggZGF0YVNwYWNlQW5pbWF0
ZWQgKSB8fCBvcmlnKCBlbGVtICk7CgkJfTsKCX0gKSggJC5leHByLmZpbHRlcnMuYW5pbWF0ZWQg
KTsKfQoKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgkkLmV4dGVuZCggJC5lZmZl
Y3RzLCB7CgoJCS8vIFNhdmVzIGEgc2V0IG9mIHByb3BlcnRpZXMgaW4gYSBkYXRhIHN0b3JhZ2UK
CQlzYXZlOiBmdW5jdGlvbiggZWxlbWVudCwgc2V0ICkgewoJCQl2YXIgaSA9IDAsIGxlbmd0aCA9
IHNldC5sZW5ndGg7CgkJCWZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQkJaWYgKCBzZXRb
IGkgXSAhPT0gbnVsbCApIHsKCQkJCQllbGVtZW50LmRhdGEoIGRhdGFTcGFjZSArIHNldFsgaSBd
LCBlbGVtZW50WyAwIF0uc3R5bGVbIHNldFsgaSBdIF0gKTsKCQkJCX0KCQkJfQoJCX0sCgoJCS8v
IFJlc3RvcmVzIGEgc2V0IG9mIHByZXZpb3VzbHkgc2F2ZWQgcHJvcGVydGllcyBmcm9tIGEgZGF0
YSBzdG9yYWdlCgkJcmVzdG9yZTogZnVuY3Rpb24oIGVsZW1lbnQsIHNldCApIHsKCQkJdmFyIHZh
bCwgaSA9IDAsIGxlbmd0aCA9IHNldC5sZW5ndGg7CgkJCWZvciAoIDsgaSA8IGxlbmd0aDsgaSsr
ICkgewoJCQkJaWYgKCBzZXRbIGkgXSAhPT0gbnVsbCApIHsKCQkJCQl2YWwgPSBlbGVtZW50LmRh
dGEoIGRhdGFTcGFjZSArIHNldFsgaSBdICk7CgkJCQkJZWxlbWVudC5jc3MoIHNldFsgaSBdLCB2
YWwgKTsKCQkJCX0KCQkJfQoJCX0sCgoJCXNldE1vZGU6IGZ1bmN0aW9uKCBlbCwgbW9kZSApIHsK
CQkJaWYgKCBtb2RlID09PSAidG9nZ2xlIiApIHsKCQkJCW1vZGUgPSBlbC5pcyggIjpoaWRkZW4i
ICkgPyAic2hvdyIgOiAiaGlkZSI7CgkJCX0KCQkJcmV0dXJuIG1vZGU7CgkJfSwKCgkJLy8gV3Jh
cHMgdGhlIGVsZW1lbnQgYXJvdW5kIGEgd3JhcHBlciB0aGF0IGNvcGllcyBwb3NpdGlvbiBwcm9w
ZXJ0aWVzCgkJY3JlYXRlV3JhcHBlcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgoJCQkvLyBJZiB0
aGUgZWxlbWVudCBpcyBhbHJlYWR5IHdyYXBwZWQsIHJldHVybiBpdAoJCQlpZiAoIGVsZW1lbnQu
cGFyZW50KCkuaXMoICIudWktZWZmZWN0cy13cmFwcGVyIiApICkgewoJCQkJcmV0dXJuIGVsZW1l
bnQucGFyZW50KCk7CgkJCX0KCgkJCS8vIFdyYXAgdGhlIGVsZW1lbnQKCQkJdmFyIHByb3BzID0g
ewoJCQkJCXdpZHRoOiBlbGVtZW50Lm91dGVyV2lkdGgoIHRydWUgKSwKCQkJCQloZWlnaHQ6IGVs
ZW1lbnQub3V0ZXJIZWlnaHQoIHRydWUgKSwKCQkJCQkiZmxvYXQiOiBlbGVtZW50LmNzcyggImZs
b2F0IiApCgkJCQl9LAoJCQkJd3JhcHBlciA9ICQoICI8ZGl2PjwvZGl2PiIgKQoJCQkJCS5hZGRD
bGFzcyggInVpLWVmZmVjdHMtd3JhcHBlciIgKQoJCQkJCS5jc3MoIHsKCQkJCQkJZm9udFNpemU6
ICIxMDAlIiwKCQkJCQkJYmFja2dyb3VuZDogInRyYW5zcGFyZW50IiwKCQkJCQkJYm9yZGVyOiAi
bm9uZSIsCgkJCQkJCW1hcmdpbjogMCwKCQkJCQkJcGFkZGluZzogMAoJCQkJCX0gKSwKCgkJCQkv
LyBTdG9yZSB0aGUgc2l6ZSBpbiBjYXNlIHdpZHRoL2hlaWdodCBhcmUgZGVmaW5lZCBpbiAlIC0g
Rml4ZXMgIzUyNDUKCQkJCXNpemUgPSB7CgkJCQkJd2lkdGg6IGVsZW1lbnQud2lkdGgoKSwKCQkJ
CQloZWlnaHQ6IGVsZW1lbnQuaGVpZ2h0KCkKCQkJCX0sCgkJCQlhY3RpdmUgPSBkb2N1bWVudC5h
Y3RpdmVFbGVtZW50OwoKCQkJLy8gU3VwcG9ydDogRmlyZWZveAoJCQkvLyBGaXJlZm94IGluY29y
cmVjdGx5IGV4cG9zZXMgYW5vbnltb3VzIGNvbnRlbnQKCQkJLy8gaHR0cHM6Ly9idWd6aWxsYS5t
b3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NTYxNjY0CgkJCXRyeSB7CgkJCQlhY3RpdmUuaWQ7
CgkJCX0gY2F0Y2ggKCBlICkgewoJCQkJYWN0aXZlID0gZG9jdW1lbnQuYm9keTsKCQkJfQoKCQkJ
ZWxlbWVudC53cmFwKCB3cmFwcGVyICk7CgoJCQkvLyBGaXhlcyAjNzU5NSAtIEVsZW1lbnRzIGxv
c2UgZm9jdXMgd2hlbiB3cmFwcGVkLgoJCQlpZiAoIGVsZW1lbnRbIDAgXSA9PT0gYWN0aXZlIHx8
ICQuY29udGFpbnMoIGVsZW1lbnRbIDAgXSwgYWN0aXZlICkgKSB7CgkJCQkkKCBhY3RpdmUgKS50
cmlnZ2VyKCAiZm9jdXMiICk7CgkJCX0KCgkJCS8vIEhvdGZpeCBmb3IgalF1ZXJ5IDEuNCBzaW5j
ZSBzb21lIGNoYW5nZSBpbiB3cmFwKCkgc2VlbXMgdG8gYWN0dWFsbHkKCQkJLy8gbG9zZSB0aGUg
cmVmZXJlbmNlIHRvIHRoZSB3cmFwcGVkIGVsZW1lbnQKCQkJd3JhcHBlciA9IGVsZW1lbnQucGFy
ZW50KCk7CgoJCQkvLyBUcmFuc2ZlciBwb3NpdGlvbmluZyBwcm9wZXJ0aWVzIHRvIHRoZSB3cmFw
cGVyCgkJCWlmICggZWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSA9PT0gInN0YXRpYyIgKSB7CgkJ
CQl3cmFwcGVyLmNzcyggeyBwb3NpdGlvbjogInJlbGF0aXZlIiB9ICk7CgkJCQllbGVtZW50LmNz
cyggeyBwb3NpdGlvbjogInJlbGF0aXZlIiB9ICk7CgkJCX0gZWxzZSB7CgkJCQkkLmV4dGVuZCgg
cHJvcHMsIHsKCQkJCQlwb3NpdGlvbjogZWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSwKCQkJCQl6
SW5kZXg6IGVsZW1lbnQuY3NzKCAiei1pbmRleCIgKQoJCQkJfSApOwoJCQkJJC5lYWNoKCBbICJ0
b3AiLCAibGVmdCIsICJib3R0b20iLCAicmlnaHQiIF0sIGZ1bmN0aW9uKCBpLCBwb3MgKSB7CgkJ
CQkJcHJvcHNbIHBvcyBdID0gZWxlbWVudC5jc3MoIHBvcyApOwoJCQkJCWlmICggaXNOYU4oIHBh
cnNlSW50KCBwcm9wc1sgcG9zIF0sIDEwICkgKSApIHsKCQkJCQkJcHJvcHNbIHBvcyBdID0gImF1
dG8iOwoJCQkJCX0KCQkJCX0gKTsKCQkJCWVsZW1lbnQuY3NzKCB7CgkJCQkJcG9zaXRpb246ICJy
ZWxhdGl2ZSIsCgkJCQkJdG9wOiAwLAoJCQkJCWxlZnQ6IDAsCgkJCQkJcmlnaHQ6ICJhdXRvIiwK
CQkJCQlib3R0b206ICJhdXRvIgoJCQkJfSApOwoJCQl9CgkJCWVsZW1lbnQuY3NzKCBzaXplICk7
CgoJCQlyZXR1cm4gd3JhcHBlci5jc3MoIHByb3BzICkuc2hvdygpOwoJCX0sCgoJCXJlbW92ZVdy
YXBwZXI6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCQl2YXIgYWN0aXZlID0gZG9jdW1lbnQuYWN0
aXZlRWxlbWVudDsKCgkJCWlmICggZWxlbWVudC5wYXJlbnQoKS5pcyggIi51aS1lZmZlY3RzLXdy
YXBwZXIiICkgKSB7CgkJCQllbGVtZW50LnBhcmVudCgpLnJlcGxhY2VXaXRoKCBlbGVtZW50ICk7
CgoJCQkJLy8gRml4ZXMgIzc1OTUgLSBFbGVtZW50cyBsb3NlIGZvY3VzIHdoZW4gd3JhcHBlZC4K
CQkJCWlmICggZWxlbWVudFsgMCBdID09PSBhY3RpdmUgfHwgJC5jb250YWlucyggZWxlbWVudFsg
MCBdLCBhY3RpdmUgKSApIHsKCQkJCQkkKCBhY3RpdmUgKS50cmlnZ2VyKCAiZm9jdXMiICk7CgkJ
CQl9CgkJCX0KCgkJCXJldHVybiBlbGVtZW50OwoJCX0KCX0gKTsKfQoKJC5leHRlbmQoICQuZWZm
ZWN0cywgewoJdmVyc2lvbjogIjEuMTIuMSIsCgoJZGVmaW5lOiBmdW5jdGlvbiggbmFtZSwgbW9k
ZSwgZWZmZWN0ICkgewoJCWlmICggIWVmZmVjdCApIHsKCQkJZWZmZWN0ID0gbW9kZTsKCQkJbW9k
ZSA9ICJlZmZlY3QiOwoJCX0KCgkJJC5lZmZlY3RzLmVmZmVjdFsgbmFtZSBdID0gZWZmZWN0OwoJ
CSQuZWZmZWN0cy5lZmZlY3RbIG5hbWUgXS5tb2RlID0gbW9kZTsKCgkJcmV0dXJuIGVmZmVjdDsK
CX0sCgoJc2NhbGVkRGltZW5zaW9uczogZnVuY3Rpb24oIGVsZW1lbnQsIHBlcmNlbnQsIGRpcmVj
dGlvbiApIHsKCQlpZiAoIHBlcmNlbnQgPT09IDAgKSB7CgkJCXJldHVybiB7CgkJCQloZWlnaHQ6
IDAsCgkJCQl3aWR0aDogMCwKCQkJCW91dGVySGVpZ2h0OiAwLAoJCQkJb3V0ZXJXaWR0aDogMAoJ
CQl9OwoJCX0KCgkJdmFyIHggPSBkaXJlY3Rpb24gIT09ICJob3Jpem9udGFsIiA/ICggKCBwZXJj
ZW50IHx8IDEwMCApIC8gMTAwICkgOiAxLAoJCQl5ID0gZGlyZWN0aW9uICE9PSAidmVydGljYWwi
ID8gKCAoIHBlcmNlbnQgfHwgMTAwICkgLyAxMDAgKSA6IDE7CgoJCXJldHVybiB7CgkJCWhlaWdo
dDogZWxlbWVudC5oZWlnaHQoKSAqIHksCgkJCXdpZHRoOiBlbGVtZW50LndpZHRoKCkgKiB4LAoJ
CQlvdXRlckhlaWdodDogZWxlbWVudC5vdXRlckhlaWdodCgpICogeSwKCQkJb3V0ZXJXaWR0aDog
ZWxlbWVudC5vdXRlcldpZHRoKCkgKiA=</Default>
</Parameter>

<Parameter name="Frag6980641884580323083787576">
<Default>Y2FzZSAicmFuZ2UiOgoJCQkJdGhpcy5fYW5pbWF0ZU9mZiA9IHRydWU7CgkJCQl0aGlzLl9yZWZy
ZXNoKCk7CgkJCQl0aGlzLl9hbmltYXRlT2ZmID0gZmFsc2U7CgkJCQlicmVhazsKCQl9Cgl9LAoK
CV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCB2
YWx1ZSApOwoKCQl0aGlzLl90b2dnbGVDbGFzcyggbnVsbCwgInVpLXN0YXRlLWRpc2FibGVkIiwg
ISF2YWx1ZSApOwoJfSwKCgkvL2ludGVybmFsIHZhbHVlIGdldHRlcgoJLy8gX3ZhbHVlKCkgcmV0
dXJucyB2YWx1ZSB0cmltbWVkIGJ5IG1pbiBhbmQgbWF4LCBhbGlnbmVkIGJ5IHN0ZXAKCV92YWx1
ZTogZnVuY3Rpb24oKSB7CgkJdmFyIHZhbCA9IHRoaXMub3B0aW9ucy52YWx1ZTsKCQl2YWwgPSB0
aGlzLl90cmltQWxpZ25WYWx1ZSggdmFsICk7CgoJCXJldHVybiB2YWw7Cgl9LAoKCS8vaW50ZXJu
YWwgdmFsdWVzIGdldHRlcgoJLy8gX3ZhbHVlcygpIHJldHVybnMgYXJyYXkgb2YgdmFsdWVzIHRy
aW1tZWQgYnkgbWluIGFuZCBtYXgsIGFsaWduZWQgYnkgc3RlcAoJLy8gX3ZhbHVlcyggaW5kZXgg
KSByZXR1cm5zIHNpbmdsZSB2YWx1ZSB0cmltbWVkIGJ5IG1pbiBhbmQgbWF4LCBhbGlnbmVkIGJ5
IHN0ZXAKCV92YWx1ZXM6IGZ1bmN0aW9uKCBpbmRleCApIHsKCQl2YXIgdmFsLAoJCQl2YWxzLAoJ
CQlpOwoKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCXZhbCA9IHRoaXMub3B0aW9ucy52
YWx1ZXNbIGluZGV4IF07CgkJCXZhbCA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWwgKTsKCgkJ
CXJldHVybiB2YWw7CgkJfSBlbHNlIGlmICggdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSApIHsK
CgkJCS8vIC5zbGljZSgpIGNyZWF0ZXMgYSBjb3B5IG9mIHRoZSBhcnJheQoJCQkvLyB0aGlzIGNv
cHkgZ2V0cyB0cmltbWVkIGJ5IG1pbiBhbmQgbWF4IGFuZCB0aGVuIHJldHVybmVkCgkJCXZhbHMg
PSB0aGlzLm9wdGlvbnMudmFsdWVzLnNsaWNlKCk7CgkJCWZvciAoIGkgPSAwOyBpIDwgdmFscy5s
ZW5ndGg7IGkgKz0gMSApIHsKCQkJCXZhbHNbIGkgXSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2
YWxzWyBpIF0gKTsKCQkJfQoKCQkJcmV0dXJuIHZhbHM7CgkJfSBlbHNlIHsKCQkJcmV0dXJuIFtd
OwoJCX0KCX0sCgoJLy8gUmV0dXJucyB0aGUgc3RlcC1hbGlnbmVkIHZhbHVlIHRoYXQgdmFsIGlz
IGNsb3Nlc3QgdG8sIGJldHdlZW4gKGluY2x1c2l2ZSkgbWluIGFuZCBtYXgKCV90cmltQWxpZ25W
YWx1ZTogZnVuY3Rpb24oIHZhbCApIHsKCQlpZiAoIHZhbCA8PSB0aGlzLl92YWx1ZU1pbigpICkg
ewoJCQlyZXR1cm4gdGhpcy5fdmFsdWVNaW4oKTsKCQl9CgkJaWYgKCB2YWwgPj0gdGhpcy5fdmFs
dWVNYXgoKSApIHsKCQkJcmV0dXJuIHRoaXMuX3ZhbHVlTWF4KCk7CgkJfQoJCXZhciBzdGVwID0g
KCB0aGlzLm9wdGlvbnMuc3RlcCA+IDAgKSA/IHRoaXMub3B0aW9ucy5zdGVwIDogMSwKCQkJdmFs
TW9kU3RlcCA9ICggdmFsIC0gdGhpcy5fdmFsdWVNaW4oKSApICUgc3RlcCwKCQkJYWxpZ25WYWx1
ZSA9IHZhbCAtIHZhbE1vZFN0ZXA7CgoJCWlmICggTWF0aC5hYnMoIHZhbE1vZFN0ZXAgKSAqIDIg
Pj0gc3RlcCApIHsKCQkJYWxpZ25WYWx1ZSArPSAoIHZhbE1vZFN0ZXAgPiAwICkgPyBzdGVwIDog
KCAtc3RlcCApOwoJCX0KCgkJLy8gU2luY2UgSmF2YVNjcmlwdCBoYXMgcHJvYmxlbXMgd2l0aCBs
YXJnZSBmbG9hdHMsIHJvdW5kCgkJLy8gdGhlIGZpbmFsIHZhbHVlIHRvIDUgZGlnaXRzIGFmdGVy
IHRoZSBkZWNpbWFsIHBvaW50IChzZWUgIzQxMjQpCgkJcmV0dXJuIHBhcnNlRmxvYXQoIGFsaWdu
VmFsdWUudG9GaXhlZCggNSApICk7Cgl9LAoKCV9jYWxjdWxhdGVOZXdNYXg6IGZ1bmN0aW9uKCkg
ewoJCXZhciBtYXggPSB0aGlzLm9wdGlvbnMubWF4LAoJCQltaW4gPSB0aGlzLl92YWx1ZU1pbigp
LAoJCQlzdGVwID0gdGhpcy5vcHRpb25zLnN0ZXAsCgkJCWFib3ZlTWluID0gTWF0aC5yb3VuZCgg
KCBtYXggLSBtaW4gKSAvIHN0ZXAgKSAqIHN0ZXA7CgkJbWF4ID0gYWJvdmVNaW4gKyBtaW47CgkJ
aWYgKCBtYXggPiB0aGlzLm9wdGlvbnMubWF4ICkgewoKCQkJLy9JZiBtYXggaXMgbm90IGRpdmlz
aWJsZSBieSBzdGVwLCByb3VuZGluZyBvZmYgbWF5IGluY3JlYXNlIGl0cyB2YWx1ZQoJCQltYXgg
LT0gc3RlcDsKCQl9CgkJdGhpcy5tYXggPSBwYXJzZUZsb2F0KCBtYXgudG9GaXhlZCggdGhpcy5f
cHJlY2lzaW9uKCkgKSApOwoJfSwKCglfcHJlY2lzaW9uOiBmdW5jdGlvbigpIHsKCQl2YXIgcHJl
Y2lzaW9uID0gdGhpcy5fcHJlY2lzaW9uT2YoIHRoaXMub3B0aW9ucy5zdGVwICk7CgkJaWYgKCB0
aGlzLm9wdGlvbnMubWluICE9PSBudWxsICkgewoJCQlwcmVjaXNpb24gPSBNYXRoLm1heCggcHJl
Y2lzaW9uLCB0aGlzLl9wcmVjaXNpb25PZiggdGhpcy5vcHRpb25zLm1pbiApICk7CgkJfQoJCXJl
dHVybiBwcmVjaXNpb247Cgl9LAoKCV9wcmVjaXNpb25PZjogZnVuY3Rpb24oIG51bSApIHsKCQl2
YXIgc3RyID0gbnVtLnRvU3RyaW5nKCksCgkJCWRlY2ltYWwgPSBzdHIuaW5kZXhPZiggIi4iICk7
CgkJcmV0dXJuIGRlY2ltYWwgPT09IC0xID8gMCA6IHN0ci5sZW5ndGggLSBkZWNpbWFsIC0gMTsK
CX0sCgoJX3ZhbHVlTWluOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5vcHRpb25zLm1pbjsK
CX0sCgoJX3ZhbHVlTWF4OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5tYXg7Cgl9LAoKCV9y
ZWZyZXNoUmFuZ2U6IGZ1bmN0aW9uKCBvcmllbnRhdGlvbiApIHsKCQlpZiAoIG9yaWVudGF0aW9u
ID09PSAidmVydGljYWwiICkgewoJCQl0aGlzLnJhbmdlLmNzcyggeyAid2lkdGgiOiAiIiwgImxl
ZnQiOiAiIiB9ICk7CgkJfQoJCWlmICggb3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiApIHsK
CQkJdGhpcy5yYW5nZS5jc3MoIHsgImhlaWdodCI6ICIiLCAiYm90dG9tIjogIiIgfSApOwoJCX0K
CX0sCgoJX3JlZnJlc2hWYWx1ZTogZnVuY3Rpb24oKSB7CgkJdmFyIGxhc3RWYWxQZXJjZW50LCB2
YWxQZXJjZW50LCB2YWx1ZSwgdmFsdWVNaW4sIHZhbHVlTWF4LAoJCQlvUmFuZ2UgPSB0aGlzLm9w
dGlvbnMucmFuZ2UsCgkJCW8gPSB0aGlzLm9wdGlvbnMsCgkJCXRoYXQgPSB0aGlzLAoJCQlhbmlt
YXRlID0gKCAhdGhpcy5fYW5pbWF0ZU9mZiApID8gby5hbmltYXRlIDogZmFsc2UsCgkJCV9zZXQg
PSB7fTsKCgkJaWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQl0aGlzLmhhbmRs
ZXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7CgkJCQl2YWxQZXJjZW50ID0gKCB0aGF0LnZhbHVlcygg
aSApIC0gdGhhdC5fdmFsdWVNaW4oKSApIC8gKCB0aGF0Ll92YWx1ZU1heCgpIC0KCQkJCQl0aGF0
Ll92YWx1ZU1pbigpICkgKiAxMDA7CgkJCQlfc2V0WyB0aGF0Lm9yaWVudGF0aW9uID09PSAiaG9y
aXpvbnRhbCIgPyAibGVmdCIgOiAiYm90dG9tIiBdID0gdmFsUGVyY2VudCArICIlIjsKCQkJCSQo
IHRoaXMgKS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCBfc2V0
LCBvLmFuaW1hdGUgKTsKCQkJCWlmICggdGhhdC5vcHRpb25zLnJhbmdlID09PSB0cnVlICkgewoJ
CQkJCWlmICggdGhhdC5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiICkgewoJCQkJCQlpZiAo
IGkgPT09IDAgKSB7CgkJCQkJCQl0aGF0LnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJh
bmltYXRlIiA6ICJjc3MiIF0oIHsKCQkJCQkJCQlsZWZ0OiB2YWxQZXJjZW50ICsgIiUiCgkJCQkJ
CQl9LCBvLmFuaW1hdGUgKTsKCQkJCQkJfQoJCQkJCQlpZiAoIGkgPT09IDEgKSB7CgkJCQkJCQl0
aGF0LnJhbmdlWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggewoJCQkJCQkJCXdpZHRo
OiAoIHZhbFBlcmNlbnQgLSBsYXN0VmFsUGVyY2VudCApICsgIiUiCgkJCQkJCQl9LCB7CgkJCQkJ
CQkJcXVldWU6IGZhbHNlLAoJCQkJCQkJCWR1cmF0aW9uOiBvLmFuaW1hdGUKCQkJCQkJCX0gKTsK
CQkJCQkJfQoJCQkJCX0gZWxzZSB7CgkJCQkJCWlmICggaSA9PT0gMCApIHsKCQkJCQkJCXRoYXQu
cmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggewoJCQkJ
CQkJCWJvdHRvbTogKCB2YWxQZXJjZW50ICkgKyAiJSIKCQkJCQkJCX0sIG8uYW5pbWF0ZSApOwoJ
CQkJCQl9CgkJCQkJCWlmICggaSA9PT0gMSApIHsKCQkJCQkJCXRoYXQucmFuZ2VbIGFuaW1hdGUg
PyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7CgkJCQkJCQkJaGVpZ2h0OiAoIHZhbFBlcmNlbnQgLSBs
YXN0VmFsUGVyY2VudCApICsgIiUiCgkJCQkJCQl9LCB7CgkJCQkJCQkJcXVldWU6IGZhbHNlLAoJ
CQkJCQkJCWR1cmF0aW9uOiBvLmFuaW1hdGUKCQkJCQkJCX0gKTsKCQkJCQkJfQoJCQkJCX0KCQkJ
CX0KCQkJCWxhc3RWYWxQZXJjZW50ID0gdmFsUGVyY2VudDsKCQkJfSApOwoJCX0gZWxzZSB7CgkJ
CXZhbHVlID0gdGhpcy52YWx1ZSgpOwoJCQl2YWx1ZU1pbiA9IHRoaXMuX3ZhbHVlTWluKCk7CgkJ
CXZhbHVlTWF4ID0gdGhpcy5fdmFsdWVNYXgoKTsKCQkJdmFsUGVyY2VudCA9ICggdmFsdWVNYXgg
IT09IHZhbHVlTWluICkgPwoJCQkJCSggdmFsdWUgLSB2YWx1ZU1pbiApIC8gKCB2YWx1ZU1heCAt
IHZhbHVlTWluICkgKiAxMDAgOgoJCQkJCTA7CgkJCV9zZXRbIHRoaXMub3JpZW50YXRpb24gPT09
ICJob3Jpem9udGFsIiA/ICJsZWZ0IiA6ICJib3R0b20iIF0gPSB2YWxQZXJjZW50ICsgIiUiOwoJ
CQl0aGlzLmhhbmRsZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBd
KCBfc2V0LCBvLmFuaW1hdGUgKTsKCgkJCWlmICggb1JhbmdlID09PSAibWluIiAmJiB0aGlzLm9y
aWVudGF0aW9uID09PSAiaG9yaXpvbnRhbCIgKSB7CgkJCQl0aGlzLnJhbmdlLnN0b3AoIDEsIDEg
KVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsKCQkJCQl3aWR0aDogdmFsUGVyY2Vu
dCArICIlIgoJCQkJfSwgby5hbmltYXRlICk7CgkJCX0KCQkJaWYgKCBvUmFuZ2UgPT09ICJtYXgi
ICYmIHRoaXMub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiApIHsKCQkJCXRoaXMucmFuZ2Uu
c3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggewoJCQkJCXdpZHRo
OiAoIDEwMCAtIHZhbFBlcmNlbnQgKSArICIlIgoJCQkJfSwgby5hbmltYXRlICk7CgkJCX0KCQkJ
aWYgKCBvUmFuZ2UgPT09ICJtaW4iICYmIHRoaXMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIg
KSB7CgkJCQl0aGlzLnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJj
c3MiIF0oIHsKCQkJCQloZWlnaHQ6IHZhbFBlcmNlbnQgKyAiJSIKCQkJCX0sIG8uYW5pbWF0ZSAp
OwoJCQl9CgkJCWlmICggb1JhbmdlID09PSAibWF4IiAmJiB0aGlzLm9yaWVudGF0aW9uID09PSAi
dmVydGljYWwiICkgewoJCQkJdGhpcy5yYW5nZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyAiYW5p
bWF0ZSIgOiAiY3NzIiBdKCB7CgkJCQkJaGVpZ2h0OiAoIDEwMCAtIHZhbFBlcmNlbnQgKSArICIl
IgoJCQkJfSwgby5hbmltYXRlICk7CgkJCX0KCQl9Cgl9LAoKCV9oYW5kbGVFdmVudHM6IHsKCQlr
ZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXZhciBhbGxvd2VkLCBjdXJWYWwsIG5ld1Zh
bCwgc3RlcCwKCQkJCWluZGV4ID0gJCggZXZlbnQudGFyZ2V0ICkuZGF0YSggInVpLXNsaWRlci1o
YW5kbGUtaW5kZXgiICk7CgoJCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgewoJCQkJY2FzZSAk
LnVpLmtleUNvZGUuSE9NRToKCQkJCWNhc2UgJC51aS5rZXlDb2RlLkVORDoKCQkJCWNhc2UgJC51
aS5rZXlDb2RlLlBBR0VfVVA6CgkJCQljYXNlICQudWkua2V5Q29kZS5QQUdFX0RPV046CgkJCQlj
YXNlICQudWkua2V5Q29kZS5VUDoKCQkJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCQkJY2Fz
ZSAkLnVpLmtleUNvZGUuRE9XTjoKCQkJCWNhc2UgJC51aS5rZXlDb2RlLkxFRlQ6CgkJCQkJZXZl
bnQucHJldmVudERlZmF1bHQoKTsKCQkJCQlpZiAoICF0aGlzLl9rZXlTbGlkaW5nICkgewoJCQkJ
CQl0aGlzLl9rZXlTbGlkaW5nID0gdHJ1ZTsKCQkJCQkJdGhpcy5fYWRkQ2xhc3MoICQoIGV2ZW50
LnRhcmdldCApLCBudWxsLCAidWktc3RhdGUtYWN0aXZlIiApOwoJCQkJCQlhbGxvd2VkID0gdGhp
cy5fc3RhcnQoIGV2ZW50LCBpbmRleCApOwoJCQkJCQlpZiAoIGFsbG93ZWQgPT09IGZhbHNlICkg
ewoJCQkJCQkJcmV0dXJuOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWJyZWFrOwoJCQl9CgoJCQlzdGVw
ID0gdGhpcy5vcHRpb25zLnN0ZXA7CgkJCWlmICggdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSAp
IHsKCQkJCWN1clZhbCA9IG5ld1ZhbCA9IHRoaXMudmFsdWVzKCBpbmRleCApOwoJCQl9IGVsc2Ug
ewoJCQkJY3VyVmFsID0gbmV3VmFsID0gdGhpcy52YWx1ZSgpOwoJCQl9CgoJCQlzd2l0Y2ggKCBl
dmVudC5rZXlDb2RlICkgewoJCQkJY2FzZSAkLnVpLmtleUNvZGUuSE9NRToKCQkJCQluZXdWYWwg
PSB0aGlzLl92YWx1ZU1pbigpOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSAkLnVpLmtleUNvZGUuRU5E
OgoJCQkJCW5ld1ZhbCA9IHRoaXMuX3ZhbHVlTWF4KCk7CgkJCQkJYnJlYWs7CgkJCQljYXNlICQu
dWkua2V5Q29kZS5QQUdFX1VQOgoJCQkJCW5ld1ZhbCA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKAoJ
CQkJCQljdXJWYWwgKyAoICggdGhpcy5fdmFsdWVNYXgoKSAtIHRoaXMuX3ZhbHVlTWluKCkgKSAv
IHRoaXMubnVtUGFnZXMgKQoJCQkJCSk7CgkJCQkJYnJlYWs7CgkJCQljYXNlICQudWkua2V5Q29k
ZS5QQUdFX0RPV046CgkJCQkJbmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoCgkJCQkJCWN1
clZhbCAtICggKCB0aGlzLl92YWx1ZU1heCgpIC0gdGhpcy5fdmFsdWVNaW4oKSApIC8gdGhpcy5u
dW1QYWdlcyApICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlICQudWkua2V5Q29kZS5VUDoKCQkJCWNh
c2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCQkJCWlmICggY3VyVmFsID09PSB0aGlzLl92YWx1ZU1h
eCgpICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCW5ld1ZhbCA9IHRoaXMuX3RyaW1BbGln
blZhbHVlKCBjdXJWYWwgKyBzdGVwICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlICQudWkua2V5Q29k
ZS5ET1dOOgoJCQkJY2FzZSAkLnVpLmtleUNvZGUuTEVGVDoKCQkJCQlpZiAoIGN1clZhbCA9PT0g
dGhpcy5fdmFsdWVNaW4oKSApIHsKCQkJCQkJcmV0dXJuOwoJCQkJCX0KCQkJCQluZXdWYWwgPSB0
aGlzLl90cmltQWxpZ25WYWx1ZSggY3VyVmFsIC0gc3RlcCApOwoJCQkJCWJyZWFrOwoJCQl9CgoJ
CQl0aGlzLl9zbGlkZSggZXZlbnQsIGluZGV4LCBuZXdWYWwgKTsKCQl9LAoJCWtleXVwOiBmdW5j
dGlvbiggZXZlbnQgKSB7CgkJCXZhciBpbmRleCA9ICQoIGV2ZW50LnRhcmdldCApLmRhdGEoICJ1
aS1zbGlkZXItaGFuZGxlLWluZGV4IiApOwoKCQkJaWYgKCB0aGlzLl9rZXlTbGlkaW5nICkgewoJ
CQkJdGhpcy5fa2V5U2xpZGluZyA9IGZhbHNlOwoJCQkJdGhpcy5fc3RvcCggZXZlbnQsIGluZGV4
ICk7CgkJCQl0aGlzLl9jaGFuZ2UoIGV2ZW50LCBpbmRleCApOwoJCQkJdGhpcy5fcmVtb3ZlQ2xh
c3MoICQoIGV2ZW50LnRhcmdldCApLCBudWxsLCAidWktc3RhdGUtYWN0aXZlIiApOwoJCQl9CgkJ
fQoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBTb3J0YWJsZSAxLjEyLjEKICogaHR0cDovL2px
dWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNv
bnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9q
cXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFNvcnRhYmxlCi8vPj5ncm91cDogSW50
ZXJhY3Rpb25zCi8vPj5kZXNjcmlwdGlvbjogRW5hYmxlcyBpdGVtcyBpbiBhIGxpc3QgdG8gYmUg
c29ydGVkIHVzaW5nIHRoZSBtb3VzZS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29t
L3NvcnRhYmxlLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vc29ydGFibGUvCi8vPj5j
c3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9zb3J0YWJsZS5jc3MKCgoKdmFyIHdpZGdl
dHNTb3J0YWJsZSA9ICQud2lkZ2V0KCAidWkuc29ydGFibGUiLCAkLnVpLm1vdXNlLCB7Cgl2ZXJz
aW9uOiAiMS4xMi4xIiwKCXdpZGdldEV2ZW50UHJlZml4OiAic29ydCIsCglyZWFkeTogZmFsc2Us
CglvcHRpb25zOiB7CgkJYXBwZW5kVG86ICJwYXJlbnQiLAoJCWF4aXM6IGZhbHNlLAoJCWNvbm5l
Y3RXaXRoOiBmYWxzZSwKCQljb250YWlubWVudDogZmFsc2UsCgkJY3Vyc29yOiAiYXV0byIsCgkJ
Y3Vyc29yQXQ6IGZhbHNlLAoJCWRyb3BPbkVtcHR5OiB0cnVlLAoJCWZvcmNlUGxhY2Vob2xkZXJT
aXplOiBmYWxzZSwKCQlmb3JjZUhlbHBlclNpemU6IGZhbHNlLAoJCWdyaWQ6IGZhbHNlLAoJCWhh
bmRsZTogZmFsc2UsCgkJaGVscGVyOiAib3JpZ2luYWwiLAoJCWl0ZW1zOiAiPiAqIiwKCQlvcGFj
aXR5OiBmYWxzZSwKCQlwbGFjZWhvbGRlcjogZmFsc2UsCgkJcmV2ZXJ0OiBmYWxzZSwKCQlzY3Jv
bGw6IHRydWUsCgkJc2Nyb2xsU2Vuc2l0aXZpdHk6IDIwLAoJCXNjcm9sbFNwZWVkOiAyMCwKCQlz
Y29wZTogImRlZmF1bHQiLAoJCXRvbGVyYW5jZTogImludGVyc2VjdCIsCgkJekluZGV4OiAxMDAw
LAoKCQkvLyBDYWxsYmFja3MKCQlhY3RpdmF0ZTogbnVsbCwKCQliZWZvcmVTdG9wOiBudWxsLAoJ
CWNoYW5nZTogbnVsbCwKCQlkZWFjdGl2YXRlOiBudWxsLAoJCW91dDogbnVsbCwKCQlvdmVyOiBu
dWxsLAoJCXJlY2VpdmU6IG51bGwsCgkJcmVtb3ZlOiBudWxsLAoJCXNvcnQ6IG51bGwsCgkJc3Rh
cnQ6IG51bGwsCgkJc3RvcDogbnVsbCwKCQl1cGRhdGU6IG51bGwKCX0sCgoJX2lzT3ZlckF4aXM6
IGZ1bmN0aW9uKCB4LCByZWZlcmVuY2UsIHNpemUgKSB7CgkJcmV0dXJuICggeCA+PSByZWZlcmVu
Y2UgKSAmJiAoIHggPCAoIHJlZmVyZW5jZSArIHNpemUgKSApOwoJfSwKCglfaXNGbG9hdGluZzog
ZnVuY3Rpb24oIGl0ZW0gKSB7CgkJcmV0dXJuICggL2xlZnR8cmlnaHQvICkudGVzdCggaXRlbS5j
c3MoICJmbG9hdCIgKSApIHx8CgkJCSggL2lubGluZXx0YWJsZS1jZWxsLyApLnRlc3QoIGl0ZW0u
Y3NzKCAiZGlzcGxheSIgKSApOwoJfSwKCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQl0aGlzLmNv
bnRhaW5lckNhY2hlID0ge307CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1zb3J0YWJsZSIgKTsKCgkJ
Ly9HZXQgdGhlIGl0ZW1zCgkJdGhpcy5yZWZyZXNoKCk7CgoJCS8vTGV0J3MgZGV0ZXJtaW5lIHRo
ZSBwYXJlbnQncyBvZmZzZXQKCQl0aGlzLm9mZnNldCA9IHRoaXMuZWxlbWVudC5vZmZzZXQoKTsK
CgkJLy9Jbml0aWFsaXplIG1vdXNlIGV2ZW50cyBmb3IgaW50ZXJhY3Rpb24KCQl0aGlzLl9tb3Vz
ZUluaXQoKTsKCgkJdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCk7CgoJCS8vV2UncmUgcmVhZHkg
dG8gZ28KCQl0aGlzLnJlYWR5ID0gdHJ1ZTsKCgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBr
ZXksIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCWlmICgga2V5ID09
PSAiaGFuZGxlIiApIHsKCQkJdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCk7CgkJfQoJfSwKCglf
c2V0SGFuZGxlQ2xhc3NOYW1lOiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgkJdGhp
cy5fcmVtb3ZlQ2xhc3MoIHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXNvcnRhYmxlLWhhbmRsZSIg
KSwgInVpLXNvcnRhYmxlLWhhbmRsZSIgKTsKCQkkLmVhY2goIHRoaXMuaXRlbXMsIGZ1bmN0aW9u
KCkgewoJCQl0aGF0Ll9hZGRDbGFzcygKCQkJCXRoaXMuaW5zdGFuY2Uub3B0aW9ucy5oYW5kbGUg
PwoJCQkJCXRoaXMuaXRlbS5maW5kKCB0aGlzLmluc3RhbmNlLm9wdGlvbnMuaGFuZGxlICkgOgoJ
CQkJCXRoaXMuaXRlbSwKCQkJCSJ1aS1zb3J0YWJsZS1oYW5kbGUiCgkJCSk7CgkJfSApOwoJfSwK
CglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhpcy5fbW91c2VEZXN0cm95KCk7CgoJCWZvciAo
IHZhciBpID0gdGhpcy5pdGVtcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJdGhpcy5p
dGVtc1sgaSBdLml0ZW0ucmVtb3ZlRGF0YSggdGhpcy53aWRnZXROYW1lICsgIi1pdGVtIiApOwoJ
CX0KCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKCBldmVudCwg
b3ZlcnJpZGVIYW5kbGUgKSB7CgkJdmFyIGN1cnJlbnRJdGVtID0gbnVsbCwKCQkJdmFsaWRIYW5k
bGUgPSBmYWxzZSwKCQkJdGhhdCA9IHRoaXM7CgoJCWlmICggdGhpcy5yZXZlcnRpbmcgKSB7CgkJ
CXJldHVybiBmYWxzZTsKCQl9CgoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkIHx8IHRoaXMu
b3B0aW9ucy50eXBlID09PSAic3RhdGljIiApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJLy9X
ZSBoYXZlIHRvIHJlZnJlc2ggdGhlIGl0ZW1zIGRhdGEgb25jZSBmaXJzdAoJCXRoaXMuX3JlZnJl
c2hJdGVtcyggZXZlbnQgKTsKCgkJLy9GaW5kIG91dCBpZiB0aGUgY2xpY2tlZCBub2RlIChvciBv
bmUgb2YgaXRzIHBhcmVudHMpIGlzIGEgYWN0dWFsIGl0ZW0gaW4gdGhpcy5pdGVtcwoJCSQoIGV2
ZW50LnRhcmdldCApLnBhcmVudHMoKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJaWYgKCAkLmRhdGEo
IHRoaXMsIHRoYXQud2lkZ2V0TmFtZSArICItaXRlbSIgKSA9PT0gdGhhdCApIHsKCQkJCWN1cnJl
bnRJdGVtID0gJCggdGhpcyApOwoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgkJfSApOwoJCWlmICgg
JC5kYXRhKCBldmVudC50YXJnZXQsIHRoYXQud2lkZ2V0TmFtZSArICItaXRlbSIgKSA9PT0gdGhh
dCApIHsKCQkJY3VycmVudEl0ZW0gPSAkKCBldmVudC50YXJnZXQgKTsKCQl9CgoJCWlmICggIWN1
cnJlbnRJdGVtICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJCWlmICggdGhpcy5vcHRpb25zLmhh
bmRsZSAmJiAhb3ZlcnJpZGVIYW5kbGUgKSB7CgkJCSQoIHRoaXMub3B0aW9ucy5oYW5kbGUsIGN1
cnJlbnRJdGVtICkuZmluZCggIioiICkuYWRkQmFjaygpLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJ
aWYgKCB0aGlzID09PSBldmVudC50YXJnZXQgKSB7CgkJCQkJdmFsaWRIYW5kbGUgPSB0cnVlOwoJ
CQkJfQoJCQl9ICk7CgkJCWlmICggIXZhbGlkSGFuZGxlICkgewoJCQkJcmV0dXJuIGZhbHNlOwoJ
CQl9CgkJfQoKCQl0aGlzLmN1cnJlbnRJdGVtID0gY3VycmVudEl0ZW07CgkJdGhpcy5fcmVtb3Zl
Q3VycmVudHNGcm9tSXRlbXMoKTsKCQlyZXR1cm4gdHJ1ZTsKCgl9LAoKCV9tb3VzZVN0YXJ0OiBm
dW5jdGlvbiggZXZlbnQsIG92ZXJyaWRlSGFuZGxlLCBub0FjdGl2YXRpb24gKSB7CgoJCXZhciBp
LCBib2R5LAoJCQlvID0gdGhpcy5vcHRpb25zOwoKCQl0aGlzLmN1cnJlbnRDb250YWluZXIgPSB0
aGlzOwoKCQkvL1dlIG9ubHkgbmVlZCB0byBjYWxsIHJlZnJlc2hQb3NpdGlvbnMsIGJlY2F1c2Ug
dGhlIHJlZnJlc2hJdGVtcyBjYWxsIGhhcyBiZWVuIG1vdmVkIHRvCgkJLy8gbW91c2VDYXB0dXJl
CgkJdGhpcy5yZWZyZXNoUG9zaXRpb25zKCk7CgoJCS8vQ3JlYXRlIGFuZCBhcHBlbmQgdGhlIHZp
c2libGUgaGVscGVyCgkJdGhpcy5oZWxwZXIgPSB0aGlzLl9jcmVhdGVIZWxwZXIoIGV2ZW50ICk7
CgoJCS8vQ2FjaGUgdGhlIGhlbHBlciBzaXplCgkJdGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9u
cygpOwoKCQkvKgoJCSAqIC0gUG9zaXRpb24gZ2VuZXJhdGlvbiAtCgkJICogVGhpcyBibG9jayBn
ZW5lcmF0ZXMgZXZlcnl0aGluZyBwb3NpdGlvbiByZWxhdGVkIC0gaXQncyB0aGUgY29yZSBvZiBk
cmFnZ2FibGVzLgoJCSAqLwoKCQkvL0NhY2hlIHRoZSBtYXJnaW5zIG9mIHRoZSBvcmlnaW5hbCBl
bGVtZW50CgkJdGhpcy5fY2FjaGVNYXJnaW5zKCk7CgoJCS8vR2V0IHRoZSBuZXh0IHNjcm9sbGlu
ZyBwYXJlbnQKCQl0aGlzLnNjcm9sbFBhcmVudCA9IHRoaXMuaGVscGVyLnNjcm9sbFBhcmVudCgp
OwoKCQkvL1RoZSBlbGVtZW50J3MgYWJzb2x1dGUgcG9zaXRpb24gb24gdGhlIHBhZ2UgbWludXMg
bWFyZ2lucwoJCXRoaXMub2Zmc2V0ID0gdGhpcy5jdXJyZW50SXRlbS5vZmZzZXQoKTsKCQl0aGlz
Lm9mZnNldCA9IHsKCQkJdG9wOiB0aGlzLm9mZnNldC50b3AgLSB0aGlzLm1hcmdpbnMudG9wLAoJ
CQlsZWZ0OiB0aGlzLm9mZnNldC5sZWZ0IC0gdGhpcy5tYXJnaW5zLmxlZnQKCQl9OwoKCQkkLmV4
dGVuZCggdGhpcy5vZmZzZXQsIHsKCQkJY2xpY2s6IHsgLy9XaGVyZSB0aGUgY2xpY2sgaGFwcGVu
ZWQsIHJlbGF0aXZlIHRvIHRoZSBlbGVtZW50CgkJCQlsZWZ0OiBldmVudC5wYWdlWCAtIHRoaXMu
b2Zmc2V0LmxlZnQsCgkJCQl0b3A6IGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQudG9wCgkJCX0s
CgkJCXBhcmVudDogdGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCksCgoJCQkvLyBUaGlzIGlzIGEgcmVs
YXRpdmUgdG8gYWJzb2x1dGUgcG9zaXRpb24gbWludXMgdGhlIGFjdHVhbCBwb3NpdGlvbiBjYWxj
dWxhdGlvbiAtCgkJCS8vIG9ubHkgdXNlZCBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBoZWxwZXIK
CQkJcmVsYXRpdmU6IHRoaXMuX2dldFJlbGF0aXZlT2Zmc2V0KCkKCQl9ICk7CgoJCS8vIE9ubHkg
YWZ0ZXIgd2UgZ290IHRoZSBvZmZzZXQsIHdlIGNhbiBjaGFuZ2UgdGhlIGhlbHBlcidzIHBvc2l0
aW9uIHRvIGFic29sdXRlCgkJLy8gVE9ETzogU3RpbGwgbmVlZCB0byBmaWd1cmUgb3V0IGEgd2F5
IHRvIG1ha2UgcmVsYXRpdmUgc29ydGluZyBwb3NzaWJsZQoJCXRoaXMuaGVscGVyLmNzcyggInBv
c2l0aW9uIiwgImFic29sdXRlIiApOwoJCXRoaXMuY3NzUG9zaXRpb24gPSB0aGlzLmhlbHBlci5j
c3MoICJwb3NpdGlvbiIgKTsKCgkJLy9HZW5lcmF0ZSB0aGUgb3JpZ2luYWwgcG9zaXRpb24KCQl0
aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB0aGlzLl9nZW5lcmF0ZVBvc2l0aW9uKCBldmVudCApOwoJ
CXRoaXMub3JpZ2luYWxQYWdlWCA9IGV2ZW50LnBhZ2VYOwoJCXRoaXMub3JpZ2luYWxQYWdlWSA9
IGV2ZW50LnBhZ2VZOwoKCQkvL0FkanVzdCB0aGUgbW91c2Ugb2Zmc2V0IHJlbGF0aXZlIHRvIHRo
ZSBoZWxwZXIgaWYgImN1cnNvckF0IiBpcyBzdXBwbGllZAoJCSggby5jdXJzb3JBdCAmJiB0aGlz
Ll9hZGp1c3RPZmZzZXRGcm9tSGVscGVyKCBvLmN1cnNvckF0ICkgKTsKCgkJLy9DYWNoZSB0aGUg
Zm9ybWVyIERPTSBwb3NpdGlvbgoJCXRoaXMuZG9tUG9zaXRpb24gPSB7CgkJCXByZXY6IHRoaXMu
Y3VycmVudEl0ZW0ucHJldigpWyAwIF0sCgkJCXBhcmVudDogdGhpcy5jdXJyZW50SXRlbS5wYXJl
bnQoKVsgMCBdCgkJfTsKCgkJLy8gSWYgdGhlIGhlbHBlciBpcyBub3QgdGhlIG9yaWdpbmFsLCBo
aWRlIHRoZSBvcmlnaW5hbCBzbyBpdCdzIG5vdCBwbGF5aW5nIGFueSByb2xlIGR1cmluZwoJCS8v
IHRoZSBkcmFnLCB3b24ndCBjYXVzZSBhbnl0aGluZyBiYWQgdGhpcyB3YXkKCQlpZiAoIHRoaXMu
aGVscGVyWyAwIF0gIT09IHRoaXMuY3VycmVudEl0ZW1bIDAgXSApIHsKCQkJdGhpcy5jdXJyZW50
SXRlbS5oaWRlKCk7CgkJfQoKCQkvL0NyZWF0ZSB0aGUgcGxhY2Vob2xkZXIKCQl0aGlzLl9jcmVh
dGVQbGFjZWhvbGRlcigpOwoKCQkvL1NldCBhIGNvbnRhaW5tZW50IGlmIGdpdmVuIGluIHRoZSBv
cHRpb25zCgkJaWYgKCBvLmNvbnRhaW5tZW50ICkgewoJCQl0aGlzLl9zZXRDb250YWlubWVudCgp
OwoJCX0KCgkJaWYgKCBvLmN1cnNvciAmJiBvLmN1cnNvciAhPT0gImF1dG8iICkgeyAvLyBjdXJz
b3Igb3B0aW9uCgkJCWJvZHkgPSB0aGlzLmRvY3VtZW50LmZpbmQoICJib2R5IiApOwoKCQkJLy8g
U3VwcG9ydDogSUUKCQkJdGhpcy5zdG9yZWRDdXJzb3IgPSBib2R5LmNzcyggImN1cnNvciIgKTsK
CQkJYm9keS5jc3MoICJjdXJzb3IiLCBvLmN1cnNvciApOwoKCQkJdGhpcy5zdG9yZWRTdHlsZXNo
ZWV0ID0KCQkJCSQoICI8c3R5bGU+KnsgY3Vyc29yOiAiICsgby5jdXJzb3IgKyAiICFpbXBvcnRh
bnQ7IH08L3N0eWxlPiIgKS5hcHBlbmRUbyggYm9keSApOwoJCX0KCgkJaWYgKCBvLm9wYWNpdHkg
KSB7IC8vIG9wYWNpdHkgb3B0aW9uCgkJCWlmICggdGhpcy5oZWxwZXIuY3NzKCAib3BhY2l0eSIg
KSApIHsKCQkJCXRoaXMuX3N0b3JlZE9wYWNpdHkgPSB0aGlzLmhlbHBlci5jc3MoICJvcGFjaXR5
IiApOwoJCQl9CgkJCXRoaXMuaGVscGVyLmNzcyggIm9wYWNpdHkiLCBvLm9wYWNpdHkgKTsKCQl9
CgoJCWlmICggby56SW5kZXggKSB7IC8vIHpJbmRleCBvcHRpb24KCQkJaWYgKCB0aGlzLmhlbHBl
ci5jc3MoICJ6SW5kZXgiICkgKSB7CgkJCQl0aGlzLl9zdG9yZWRaSW5kZXggPSB0aGlzLmhlbHBl
ci5jc3MoICJ6SW5kZXgiICk7CgkJCX0KCQkJdGhpcy5oZWxwZXIuY3NzKCAiekluZGV4Iiwgby56
SW5kZXggKTsKCQl9CgoJCS8vUHJlcGFyZSBzY3JvbGxpbmcKCQlpZiAoIHRoaXMuc2Nyb2xsUGFy
ZW50WyAwIF0gIT09IHRoaXMuZG9jdW1lbnRbIDAgXSAmJgoJCQkJdGhpcy5zY3JvbGxQYXJlbnRb
IDAgXS50YWdOYW1lICE9PSAiSFRNTCIgKSB7CgkJCXRoaXMub3ZlcmZsb3dPZmZzZXQgPSB0aGlz
LnNjcm9sbFBhcmVudC5vZmZzZXQoKTsKCQl9CgoJCS8vQ2FsbCBjYWxsYmFja3MKCQl0aGlzLl90
cmlnZ2VyKCAic3RhcnQiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkgKTsKCgkJLy9SZWNhY2hlIHRo
ZSBoZWxwZXIgc2l6ZQoJCWlmICggIXRoaXMuX3ByZXNlcnZlSGVscGVyUHJvcG9ydGlvbnMgKSB7
CgkJCXRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKTsKCQl9CgoJCS8vUG9zdCAiYWN0aXZh
dGUiIGV2ZW50cyB0byBwb3NzaWJsZSBjb250YWluZXJzCgkJaWYgKCAhbm9BY3RpdmF0aW9uICkg
ewoJCQlmb3IgKCBpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkg
ewoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uX3RyaWdnZXIoICJhY3RpdmF0ZSIsIGV2ZW50LCB0
aGlzLl91aUhhc2goIHRoaXMgKSApOwoJCQl9CgkJfQoKCQkvL1ByZXBhcmUgcG9zc2libGUgZHJv
cHBhYmxlcwoJCWlmICggJC51aS5kZG1hbmFnZXIgKSB7CgkJCSQudWkuZGRtYW5hZ2VyLmN1cnJl
bnQgPSB0aGlzOwoJCX0KCgkJaWYgKCAkLnVpLmRkbWFuYWdlciAmJiAhby5kcm9wQmVoYXZpb3Vy
ICkgewoJCQkkLnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyggdGhpcywgZXZlbnQgKTsKCQl9
CgoJCXRoaXMuZHJhZ2dpbmcgPSB0cnVlOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5oZWxwZXIs
ICJ1aS1zb3J0YWJsZS1oZWxwZXIiICk7CgoJCS8vIEV4ZWN1dGUgdGhlIGRyYWcgb25jZSAtIHRo
aXMgY2F1c2VzIHRoZSBoZWxwZXIgbm90IHRvIGJlIHZpc2libGViZWZvcmUgZ2V0dGluZyBpdHMK
CQkvLyBjb3JyZWN0IHBvc2l0aW9uCgkJdGhpcy5fbW91c2VEcmFnKCBldmVudCApOwoJCXJldHVy
biB0cnVlOwoKCX0sCgoJX21vdXNlRHJhZzogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBpLCBp
dGVtLCBpdGVtRWxlbWVudCwgaW50ZXJzZWN0aW9uLAoJCQlvID0gdGhpcy5vcHRpb25zLAoJCQlz
Y3JvbGxlZCA9IGZhbHNlOwoKCQkvL0NvbXB1dGUgdGhlIGhlbHBlcnMgcG9zaXRpb24KCQl0aGlz
LnBvc2l0aW9uID0gdGhpcy5fZ2VuZXJhdGVQb3NpdGlvbiggZXZlbnQgKTsKCQl0aGlzLnBvc2l0
aW9uQWJzID0gdGhpcy5fY29udmVydFBvc2l0aW9uVG8oICJhYnNvbHV0ZSIgKTsKCgkJaWYgKCAh
dGhpcy5sYXN0UG9zaXRpb25BYnMgKSB7CgkJCXRoaXMubGFzdFBvc2l0aW9uQWJzID0gdGhpcy5w
b3NpdGlvbkFiczsKCQl9CgoJCS8vRG8gc2Nyb2xsaW5nCgkJaWYgKCB0aGlzLm9wdGlvbnMuc2Ny
b2xsICkgewoJCQlpZiAoIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0gIT09IHRoaXMuZG9jdW1lbnRb
IDAgXSAmJgoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WyAwIF0udGFnTmFtZSAhPT0gIkhUTUwiICkg
ewoKCQkJCWlmICggKCB0aGlzLm92ZXJmbG93T2Zmc2V0LnRvcCArIHRoaXMuc2Nyb2xsUGFyZW50
WyAwIF0ub2Zmc2V0SGVpZ2h0ICkgLQoJCQkJCQlldmVudC5wYWdlWSA8IG8uc2Nyb2xsU2Vuc2l0
aXZpdHkgKSB7CgkJCQkJdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5zY3JvbGxUb3AgPQoJCQkJCQlz
Y3JvbGxlZCA9IHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0uc2Nyb2xsVG9wICsgby5zY3JvbGxTcGVl
ZDsKCQkJCX0gZWxzZSBpZiAoIGV2ZW50LnBhZ2VZIC0gdGhpcy5vdmVyZmxvd09mZnNldC50b3Ag
PCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WyAwIF0uc2Ny
b2xsVG9wID0KCQkJCQkJc2Nyb2xsZWQgPSB0aGlzLnNjcm9sbFBhcmVudFsgMCBdLnNjcm9sbFRv
cCAtIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9CgoJCQkJaWYgKCAoIHRoaXMub3ZlcmZsb3dPZmZzZXQu
bGVmdCArIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0ub2Zmc2V0V2lkdGggKSAtCgkJCQkJCWV2ZW50
LnBhZ2VYIDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQl0aGlzLnNjcm9sbFBhcmVudFsg
MCBdLnNjcm9sbExlZnQgPSBzY3JvbGxlZCA9CgkJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WyAwIF0u
c2Nyb2xsTGVmdCArIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9IGVsc2UgaWYgKCBldmVudC5wYWdlWCAt
IHRoaXMub3ZlcmZsb3dPZmZzZXQubGVmdCA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJ
dGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5zY3JvbGxMZWZ0ID0gc2Nyb2xsZWQgPQoJCQkJCQl0aGlz
LnNjcm9sbFBhcmVudFsgMCBdLnNjcm9sbExlZnQgLSBvLnNjcm9sbFNwZWVkOwoJCQkJfQoKCQkJ
fSBlbHNlIHsKCgkJCQlpZiAoIGV2ZW50LnBhZ2VZIC0gdGhpcy5kb2N1bWVudC5zY3JvbGxUb3Ao
KSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJc2Nyb2xsZWQgPSB0aGlzLmRvY3VtZW50
LnNjcm9sbFRvcCggdGhpcy5kb2N1bWVudC5zY3JvbGxUb3AoKSAtIG8uc2Nyb2xsU3BlZWQgKTsK
CQkJCX0gZWxzZSBpZiAoIHRoaXMud2luZG93LmhlaWdodCgpIC0gKCBldmVudC5wYWdlWSAtIHRo
aXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCkgKSA8CgkJCQkJCW8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7
CgkJCQkJc2Nyb2xsZWQgPSB0aGlzLmRvY3VtZW50LnNjcm9sbFRvcCggdGhpcy5kb2N1bWVudC5z
Y3JvbGxUb3AoKSArIG8uc2Nyb2xsU3BlZWQgKTsKCQkJCX0KCgkJCQlpZiAoIGV2ZW50LnBhZ2VY
IC0gdGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KCkgPCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJ
CQkJCXNjcm9sbGVkID0gdGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KAoJCQkJCQl0aGlzLmRvY3Vt
ZW50LnNjcm9sbExlZnQoKSAtIG8uc2Nyb2xsU3BlZWQKCQkJCQkpOwoJCQkJfSBlbHNlIGlmICgg
dGhpcy53aW5kb3cud2lkdGgoKSAtICggZXZlbnQucGFnZVggLSB0aGlzLmRvY3VtZW50LnNjcm9s
bExlZnQoKSApIDwKCQkJCQkJby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQlzY3JvbGxlZCA9
IHRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCgKCQkJCQkJdGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0
KCkgKyBvLnNjcm9sbFNwZWVkCgkJCQkJKTsKCQkJCX0KCgkJCX0KCgkJCWlmICggc2Nyb2xsZWQg
IT09IGZhbHNlICYmICQudWkuZGRtYW5hZ2VyICYmICFvLmRyb3BCZWhhdmlvdXIgKSB7CgkJCQkk
LnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyggdGhpcywgZXZlbnQgKTsKCQkJfQoJCX0KCgkJ
Ly9SZWdlbmVyYXRlIHRoZSBhYnNvbHV0ZSBwb3NpdGlvbiB1c2VkIGZvciBwb3NpdGlvbiBjaGVj
a3MKCQl0aGlzLnBvc2l0aW9uQWJzID0gdGhpcy5fY29udmVydFBvc2l0aW9uVG8oICJhYnNvbHV0
ZSIgKTsKCgkJLy9TZXQgdGhlIGhlbHBlciBwb3NpdGlvbgoJCWlmICggIXRoaXMub3B0aW9ucy5h
eGlzIHx8IHRoaXMub3B0aW9ucy5heGlzICE9PSAieSIgKSB7CgkJCXRoaXMuaGVscGVyWyAwIF0u
c3R5bGUubGVmdCA9IHRoaXMucG9zaXRpb24ubGVmdCArICJweCI7CgkJfQoJCWlmICggIXRoaXMu
b3B0aW9ucy5heGlzIHx8IHRoaXMub3B0aW9ucy5heGlzICE9PSAieCIgKSB7CgkJCXRoaXMuaGVs
cGVyWyAwIF0uc3R5bGUudG9wID0gdGhpcy5wb3NpdGlvbi50b3AgKyAicHgiOwoJCX0KCgkJLy9S
ZWFycmFuZ2UKCQlmb3IgKCBpID0gdGhpcy5pdGVtcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSAp
IHsKCgkJCS8vQ2FjaGUgdmFyaWFibGVzIGFuZCBpbnRlcnNlY3Rpb24sIGNvbnRpbnVlIGlmIG5v
IGludGVyc2VjdGlvbgoJCQlpdGVtID0gdGhpcy5pdGVtc1sgaSBdOwoJCQlpdGVtRWxlbWVudCA9
IGl0ZW0uaXRlbVsgMCBdOwoJCQlpbnRlcnNlY3Rpb24gPSB0aGlzLl9pbnRlcnNlY3RzV2l0aFBv
aW50ZXIoIGl0ZW0gKTsKCQkJaWYgKCAhaW50ZXJzZWN0aW9uICkgewoJCQkJY29udGludWU7CgkJ
CX0KCgkJCS8vIE9ubHkgcHV0IHRoZSBwbGFjZWhvbGRlciBpbnNpZGUgdGhlIGN1cnJlbnQgQ29u
dGFpbmVyLCBza2lwIGFsbAoJCQkvLyBpdGVtcyBmcm9tIG90aGVyIGNvbnRhaW5lcnMuIFRoaXMg
d29ya3MgYmVjYXVzZSB3aGVuIG1vdmluZwoJCQkvLyBhbiBpdGVtIGZyb20gb25lIGNvbnRhaW5l
ciB0byBhbm90aGVyIHRoZQoJCQkvLyBjdXJyZW50Q29udGFpbmVyIGlzIHN3aXRjaGVkIGJlZm9y
ZSB0aGUgcGxhY2Vob2xkZXIgaXMgbW92ZWQuCgkJCS8vCgkJCS8vIFdpdGhvdXQgdGhpcywgbW92
aW5nIGl0ZW1zIGluICJzdWItc29ydGFibGVzIiBjYW4gY2F1c2UKCQkJLy8gdGhlIHBsYWNlaG9s
ZGVyIHRvIGppdHRlciBiZXR3ZWVuIHRoZSBvdXRlciBhbmQgaW5uZXIgY29udGFpbmVyLgoJCQlp
ZiAoIGl0ZW0uaW5zdGFuY2UgIT09IHRoaXMuY3VycmVudENvbnRhaW5lciApIHsKCQkJCWNvbnRp
bnVlOwoJCQl9CgoJCQkvLyBDYW5ub3QgaW50ZXJzZWN0IHdpdGggaXRzZWxmCgkJCS8vIG5vIHVz
ZWxlc3MgYWN0aW9ucyB0aGF0IGhhdmUgYmVlbiBkb25lIGJlZm9yZQoJCQkvLyBubyBhY3Rpb24g
aWYgdGhlIGl0ZW0gbW92ZWQgaXMgdGhlIHBhcmVudCBvZiB0aGUgaXRlbSBjaGVja2VkCgkJCWlm
ICggaXRlbUVsZW1lbnQgIT09IHRoaXMuY3VycmVudEl0ZW1bIDAgXSAmJgoJCQkJdGhpcy5wbGFj
ZWhvbGRlclsgaW50ZXJzZWN0aW9uID09PSAxID8gIm5leHQiIDogInByZXYiIF0oKVsgMCBdICE9
PSBpdGVtRWxlbWVudCAmJgoJCQkJISQuY29udGFpbnMoIHRoaXMucGxhY2Vob2xkZXJbIDAgXSwg
aXRlbUVsZW1lbnQgKSAmJgoJCQkJKCB0aGlzLm9wdGlvbnMudHlwZSA9PT0gInNlbWktZHluYW1p
YyIgPwoJCQkJCSEkLmNvbnRhaW5zKCB0aGlzLmVsZW1lbnRbIDAgXSwgaXRlbUVsZW1lbnQgKSA6
CgkJCQkJdHJ1ZQoJCQkJKQoJCQkpIHsKCgkJCQl0aGlzLmRpcmVjdGlvbiA9IGludGVyc2VjdGlv
biA9PT0gMSA/ICJkb3duIiA6ICJ1cCI7CgoJCQkJaWYgKCB0aGlzLm9wdGlvbnMudG9sZXJhbmNl
ID09PSAicG9pbnRlciIgfHwgdGhpcy5faW50ZXJzZWN0c1dpdGhTaWRlcyggaXRlbSApICkgewoJ
CQkJCXRoaXMuX3JlYXJyYW5nZSggZXZlbnQsIGl0ZW0gKTsKCQkJCX0gZWxzZSB7CgkJCQkJYnJl
YWs7CgkJCQl9CgoJCQkJdGhpcy5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50LCB0aGlzLl91aUhh
c2goKSApOwoJCQkJYnJlYWs7CgkJCX0KCQl9CgoJCS8vUG9zdCBldmVudHMgdG8gY29udGFpbmVy
cwoJCXRoaXMuX2NvbnRhY3RDb250YWluZXJzKCBldmVudCApOwoKCQkvL0ludGVyY29ubmVjdCB3
aXRoIGRyb3BwYWJsZXMKCQlpZiAoICQudWkuZGRtYW5hZ2VyICkgewoJCQkkLnVpLmRkbWFuYWdl
ci5kcmFnKCB0aGlzLCBldmVudCApOwoJCX0KCgkJLy9DYWxsIGNhbGxiYWNrcwoJCXRoaXMuX3Ry
aWdnZXIoICJzb3J0IiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7CgoJCXRoaXMubGFzdFBvc2l0
aW9uQWJzID0gdGhpcy5wb3NpdGlvbkFiczsKCQlyZXR1cm4gZmFsc2U7CgoJfSwKCglfbW91c2VT
dG9wOiBmdW5jdGlvbiggZXZlbnQsIG5vUHJvcGFnYXRpb24gKSB7CgoJCWlmICggIWV2ZW50ICkg
ewoJCQlyZXR1cm47CgkJfQoKCQkvL0lmIHdlIGFyZSB1c2luZyBkcm9wcGFibGVzLCBpbmZvcm0g
dGhlIG1hbmFnZXIgYWJvdXQgdGhlIGRyb3AKCQlpZiAoICQudWkuZGRtYW5hZ2VyICYmICF0aGlz
Lm9wdGlvbnMuZHJvcEJlaGF2aW91ciApIHsKCQkJJC51aS5kZG1hbmFnZXIuZHJvcCggdGhpcywg
ZXZlbnQgKTsKCQl9CgoJCWlmICggdGhpcy5vcHRpb25zLnJldmVydCApIHsKCQkJdmFyIHRoYXQg
PSB0aGlzLAoJCQkJY3VyID0gdGhpcy5wbGFjZWhvbGRlci5vZmZzZXQoKSwKCQkJCWF4aXMgPSB0
aGlzLm9wdGlvbnMuYXhpcywKCQkJCWFuaW1hdGlvbiA9IHt9OwoKCQkJaWYgKCAhYXhpcyB8fCBh
eGlzID09PSAieCIgKSB7CgkJCQlhbmltYXRpb24ubGVmdCA9IGN1ci5sZWZ0IC0gdGhpcy5vZmZz
ZXQucGFyZW50LmxlZnQgLSB0aGlzLm1hcmdpbnMubGVmdCArCgkJCQkJKCB0aGlzLm9mZnNldFBh
cmVudFsgMCBdID09PSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSA/CgkJCQkJCTAgOgoJCQkJCQl0
aGlzLm9mZnNldFBhcmVudFsgMCBdLnNjcm9sbExlZnQKCQkJCQkpOwoJCQl9CgkJCWlmICggIWF4
aXMgfHwgYXhpcyA9PT0gInkiICkgewoJCQkJYW5pbWF0aW9uLnRvcCA9IGN1ci50b3AgLSB0aGlz
Lm9mZnNldC5wYXJlbnQudG9wIC0gdGhpcy5tYXJnaW5zLnRvcCArCgkJCQkJKCB0aGlzLm9mZnNl
dFBhcmVudFsgMCBdID09PSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSA/CgkJCQkJCTAgOgoJCQkJ
CQl0aGlzLm9mZnNldFBhcmVudFsgMCBdLnNjcm9sbFRvcAoJCQkJCSk7CgkJCX0KCQkJdGhpcy5y
ZXZlcnRpbmcgPSB0cnVlOwoJCQkkKCB0aGlzLmhlbHBlciApLmFuaW1hdGUoCgkJCQlhbmltYXRp
b24sCgkJCQlwYXJzZUludCggdGhpcy5vcHRpb25zLnJldmVydCwgMTAgKSB8fCA1MDAsCgkJCQlm
dW5jdGlvbigpIHsKCQkJCQl0aGF0Ll9jbGVhciggZXZlbnQgKTsKCQkJCX0KCQkJKTsKCQl9IGVs
c2UgewoJCQl0aGlzLl9jbGVhciggZXZlbnQsIG5vUHJvcGFnYXRpb24gKTsKCQl9CgoJCXJldHVy
biBmYWxzZTsKCgl9LAoKCWNhbmNlbDogZnVuY3Rpb24oKSB7CgoJCWlmICggdGhpcy5kcmFnZ2lu
ZyApIHsKCgkJCXRoaXMuX21vdXNlVXAoIG5ldyAkLkV2ZW50KCAibW91c2V1cCIsIHsgdGFyZ2V0
OiBudWxsIH0gKSApOwoKCQkJaWYgKCB0aGlzLm9wdGlvbnMuaGVscGVyID09PSAib3JpZ2luYWwi
ICkgewoJCQkJdGhpcy5jdXJyZW50SXRlbS5jc3MoIHRoaXMuX3N0b3JlZENTUyApOwoJCQkJdGhp
cy5fcmVtb3ZlQ2xhc3MoIHRoaXMuY3VycmVudEl0ZW0sICJ1aS1zb3J0YWJsZS1oZWxwZXIiICk7
CgkJCX0gZWxzZSB7CgkJCQl0aGlzLmN1cnJlbnRJdGVtLnNob3coKTsKCQkJfQoKCQkJLy9Qb3N0
IGRlYWN0aXZhdGluZyBldmVudHMgdG8gY29udGFpbmVycwoJCQlmb3IgKCB2YXIgaSA9IHRoaXMu
Y29udGFpbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJCXRoaXMuY29udGFpbmVy
c1sgaSBdLl90cmlnZ2VyKCAiZGVhY3RpdmF0ZSIsIG51bGwsIHRoaXMuX3VpSGFzaCggdGhpcyAp
ICk7CgkJCQlpZiAoIHRoaXMuY29udGFpbmVyc1sgaSBdLmNvbnRhaW5lckNhY2hlLm92ZXIgKSB7
CgkJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uX3RyaWdnZXIoICJvdXQiLCBudWxsLCB0aGlzLl91
aUhhc2goIHRoaXMgKSApOwoJCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmNvbnRhaW5lckNhY2hl
Lm92ZXIgPSAwOwoJCQkJfQoJCQl9CgoJCX0KCgkJaWYgKCB0aGlzLnBsYWNlaG9sZGVyICkgewoK
CQkJLy8kKHRoaXMucGxhY2Vob2xkZXJbMF0pLnJlbW92ZSgpOyB3b3VsZCBoYXZlIGJlZW4gdGhl
IGpRdWVyeSB3YXkgLSB1bmZvcnR1bmF0ZWx5LAoJCQkvLyBpdCB1bmJpbmRzIEFMTCBldmVudHMg
ZnJvbSB0aGUgb3JpZ2luYWwgbm9kZSEKCQkJaWYgKCB0aGlzLnBsYWNlaG9sZGVyWyAwIF0ucGFy
ZW50Tm9kZSApIHsKCQkJCXRoaXMucGxhY2Vob2xkZXJbIDAgXS5wYXJlbnROb2RlLnJlbW92ZUNo
aWxkKCB0aGlzLnBsYWNlaG9sZGVyWyAwIF0gKTsKCQkJfQoJCQlpZiAoIHRoaXMub3B0aW9ucy5o
ZWxwZXIgIT09ICJvcmlnaW5hbCIgJiYgdGhpcy5oZWxwZXIgJiYKCQkJCQl0aGlzLmhlbHBlclsg
MCBdLnBhcmVudE5vZGUgKSB7CgkJCQl0aGlzLmhlbHBlci5yZW1vdmUoKTsKCQkJfQoKCQkJJC5l
eHRlbmQoIHRoaXMsIHsKCQkJCWhlbHBlcjogbnVsbCwKCQkJCWRyYWdnaW5nOiBmYWxzZSwKCQkJ
CXJldmVydGluZzogZmFsc2UsCgkJCQlfbm9GaW5hbFNvcnQ6IG51bGwKCQkJfSApOwoKCQkJaWYg
KCB0aGlzLmRvbVBvc2l0aW9uLnByZXYgKSB7CgkJCQkkKCB0aGlzLmRvbVBvc2l0aW9uLnByZXYg
KS5hZnRlciggdGhpcy5jdXJyZW50SXRlbSApOwoJCQl9IGVsc2UgewoJCQkJJCggdGhpcy5kb21Q
b3NpdGlvbi5wYXJlbnQgKS5wcmVwZW5kKCB0aGlzLmN1cnJlbnRJdGVtICk7CgkJCX0KCQl9CgoJ
CXJldHVybiB0aGlzOwoKCX0sCgoJc2VyaWFsaXplOiBmdW5jdGlvbiggbyApIHsKCgkJdmFyIGl0
ZW1zID0gdGhpcy5fZ2V0SXRlbXNBc2pRdWVyeSggbyAmJiBvLmNvbm5lY3RlZCApLAoJCQlzdHIg
PSBbXTsKCQlvID0gbyB8fCB7fTsKCgkJJCggaXRlbXMgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJ
dmFyIHJlcyA9ICggJCggby5pdGVtIHx8IHRoaXMgKS5hdHRyKCBvLmF0dHJpYnV0ZSB8fCAiaWQi
ICkgfHwgIiIgKQoJCQkJLm1hdGNoKCBvLmV4cHJlc3Npb24gfHwgKCAvKC4rKVtcLT1fXSguKykv
ICkgKTsKCQkJaWYgKCByZXMgKSB7CgkJCQlzdHIucHVzaCgKCQkJCQkoIG8ua2V5IHx8IHJlc1sg
MSBdICsgIltdIiApICsKCQkJCQkiPSIgKyAoIG8ua2V5ICYmIG8uZXhwcmVzc2lvbiA/IHJlc1sg
MSBdIDogcmVzWyAyIF0gKSApOwoJCQl9CgkJfSApOwoKCQlpZiAoICFzdHIubGVuZ3RoICYmIG8u
a2V5ICkgewoJCQlzdHIucHVzaCggby5rZXkgKyAiPSIgKTsKCQl9CgoJCXJldHVybiBzdHIuam9p
biggIiYiICk7CgoJfSwKCgl0b0FycmF5OiBmdW5jdGlvbiggbyApIHsKCgkJdmFyIGl0ZW1zID0g
dGhpcy5fZ2V0SXRlbXNBc2pRdWVyeSggbyAmJiBvLmNvbm5lY3RlZCApLAoJCQlyZXQgPSBbXTsK
CgkJbyA9IG8gfHwge307CgoJCWl0ZW1zLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlyZXQucHVzaCgg
JCggby5pdGVtIHx8IHRoaXMgKS5hdHRyKCBvLmF0dHJpYnV0ZSB8fCAiaWQiICkgfHwgIiIgKTsK
CQl9ICk7CgkJcmV0dXJuIHJldDsKCgl9LAoKCS8qIEJlIGNhcmVmdWwgd2l0aCB0aGUgZm9sbG93
aW5nIGNvcmUgZnVuY3Rpb25zICovCglfaW50ZXJzZWN0c1dpdGg6IGZ1bmN0aW9uKCBpdGVtICkg
ewoKCQl2YXIgeDEgPSB0aGlzLnBvc2l0aW9uQWJzLmxlZnQsCgkJCXgyID0geDEgKyB0aGlzLmhl
bHBlclByb3BvcnRpb25zLndpZHRoLAoJCQl5MSA9IHRoaXMucG9zaXRpb25BYnMudG9wLAoJCQl5
MiA9IHkxICsgdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsCgkJCWwgPSBpdGVtLmxlZnQs
CgkJCXIgPSBsICsgaXRlbS53aWR0aCwKCQkJdCA9IGl0ZW0udG9wLAoJCQliID0gdCArIGl0ZW0u
aGVpZ2h0LAoJCQlkeUNsaWNrID0gdGhpcy5vZmZzZXQuY2xpY2sudG9wLAoJCQlkeENsaWNrID0g
dGhpcy5vZmZzZXQuY2xpY2subGVmdCwKCQkJaXNPdmVyRWxlbWVudEhlaWdodCA9ICggdGhpcy5v
cHRpb25zLmF4aXMgPT09ICJ4IiApIHx8ICggKCB5MSArIGR5Q2xpY2sgKSA+IHQgJiYKCQkJCSgg
eTEgKyBkeUNsaWNrICkgPCBiICksCgkJCWlzT3ZlckVsZW1lbnRXaWR0aCA9ICggdGhpcy5vcHRp
b25zLmF4aXMgPT09ICJ5IiApIHx8ICggKCB4MSArIGR4Q2xpY2sgKSA+IGwgJiYKCQkJCSggeDEg
KyBkeENsaWNrICkgPCByICksCgkJCWlzT3ZlckVsZW1lbnQgPSBpc092ZXJFbGVtZW50SGVpZ2h0
ICYmIGlzT3ZlckVsZW1lbnRXaWR0aDsKCgkJaWYgKCB0aGlzLm9wdGlvbnMudG9sZXJhbmNlID09
PSAicG9pbnRlciIgfHwKCQkJdGhpcy5vcHRpb25zLmZvcmNlUG9pbnRlckZvckNvbnRhaW5lcnMg
fHwKCQkJKCB0aGlzLm9wdGlvbnMudG9sZXJhbmNlICE9PSAicG9pbnRlciIgJiYKCQkJCXRoaXMu
aGVscGVyUHJvcG9ydGlvbnNbIHRoaXMuZmxvYXRpbmcgPyAid2lkdGgiIDogImhlaWdodCIgXSA+
CgkJCQlpdGVtWyB0aGlzLmZsb2F0aW5nID8gIndpZHRoIiA6ICJoZWlnaHQiIF0gKQoJCSkgewoJ
CQlyZXR1cm4gaXNPdmVyRWxlbWVudDsKCQl9IGVsc2UgewoKCQkJcmV0dXJuICggbCA8IHgxICsg
KCB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC8gMiApICYmIC8vIFJpZ2h0IEhhbGYKCQkJ
CXgyIC0gKCB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC8gMiApIDwgciAmJiAvLyBMZWZ0
IEhhbGYKCQkJCXQgPCB5MSArICggdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLyAyICkg
JiYgLy8gQm90dG9tIEhhbGYKCQkJCXkyIC0gKCB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdo
dCAvIDIgKSA8IGIgKTsgLy8gVG9wIEhhbGYKCgkJfQoJfSwKCglfaW50ZXJzZWN0c1dpdGhQb2lu
dGVyOiBmdW5jdGlvbiggaXRlbSApIHsKCQl2YXIgdmVydGljYWxEaXJlY3Rpb24sIGhvcml6b250
YWxEaXJlY3Rpb24sCgkJCWlzT3ZlckVsZW1lbnRIZWlnaHQgPSAoIHRoaXMub3B0aW9ucy5heGlz
ID09PSAieCIgKSB8fAoJCQkJdGhpcy5faXNPdmVyQXhpcygKCQkJCQl0aGlzLnBvc2l0aW9uQWJz
LnRvcCArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCwgaXRlbS50b3AsIGl0ZW0uaGVpZ2h0ICksCgkJ
CWlzT3ZlckVsZW1lbnRXaWR0aCA9ICggdGhpcy5vcHRpb25zLmF4aXMgPT09ICJ5IiApIHx8CgkJ
CQl0aGlzLl9pc092ZXJBeGlzKAoJCQkJCXRoaXMucG9zaXRpb25BYnMubGVmdCArIHRoaXMub2Zm
c2V0LmNsaWNrLmxlZnQsIGl0ZW0ubGVmdCwgaXRlbS53aWR0aCApLAoJCQlpc092ZXJFbGVtZW50
ID0gaXNPdmVyRWxlbWVudEhlaWdodCAmJiBpc092ZXJFbGVtZW50V2lkdGg7CgoJCWlmICggIWlz
T3ZlckVsZW1lbnQgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXZlcnRpY2FsRGlyZWN0aW9u
ID0gdGhpcy5fZ2V0RHJhZ1ZlcnRpY2FsRGlyZWN0aW9uKCk7CgkJaG9yaXpvbnRhbERpcmVjdGlv
biA9IHRoaXMuX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uKCk7CgoJCXJldHVybiB0aGlzLmZs
b2F0aW5nID8KCQkJKCAoIGhvcml6b250YWxEaXJlY3Rpb24gPT09ICJyaWdodCIgfHwgdmVydGlj
YWxEaXJlY3Rpb24gPT09ICJkb3duIiApID8gMiA6IDEgKQoJCQk6ICggdmVydGljYWxEaXJlY3Rp
b24gJiYgKCB2ZXJ0aWNhbERpcmVjdGlvbiA9PT0gImRvd24iID8gMiA6IDEgKSApOwoKCX0sCgoJ
X2ludGVyc2VjdHNXaXRoU2lkZXM6IGZ1bmN0aW9uKCBpdGVtICkgewoKCQl2YXIgaXNPdmVyQm90
dG9tSGFsZiA9IHRoaXMuX2lzT3ZlckF4aXMoIHRoaXMucG9zaXRpb25BYnMudG9wICsKCQkJCXRo
aXMub2Zmc2V0LmNsaWNrLnRvcCwgaXRlbS50b3AgKyAoIGl0ZW0uaGVpZ2h0IC8gMiApLCBpdGVt
LmhlaWdodCApLAoJCQlpc092ZXJSaWdodEhhbGYgPSB0aGlzLl9pc092ZXJBeGlzKCB0aGlzLnBv
c2l0aW9uQWJzLmxlZnQgKwoJCQkJdGhpcy5vZmZzZXQuY2xpY2subGVmdCwgaXRlbS5sZWZ0ICsg
KCBpdGVtLndpZHRoIC8gMiApLCBpdGVtLndpZHRoICksCgkJCXZlcnRpY2FsRGlyZWN0aW9uID0g
dGhpcy5fZ2V0RHJhZ1ZlcnRpY2FsRGlyZWN0aW9uKCksCgkJCWhvcml6b250YWxEaXJlY3Rpb24g
PSB0aGlzLl9nZXREcmFnSG9yaXpvbnRhbERpcmVjdGlvbigpOwoKCQlpZiAoIHRoaXMuZmxvYXRp
bmcgJiYgaG9yaXpvbnRhbERpcmVjdGlvbiApIHsKCQkJcmV0dXJuICggKCBob3Jpem9udGFsRGly
ZWN0aW9uID09PSAicmlnaHQiICYmIGlzT3ZlclJpZ2h0SGFsZiApIHx8CgkJCQkoIGhvcml6b250
YWxEaXJlY3Rpb24gPT09ICJsZWZ0IiAmJiAhaXNPdmVyUmlnaHRIYWxmICkgKTsKCQl9IGVsc2Ug
ewoJCQlyZXR1cm4gdmVydGljYWxEaXJlY3Rpb24gJiYgKCAoIHZlcnRpY2FsRGlyZWN0aW9uID09
PSAiZG93biIgJiYgaXNPdmVyQm90dG9tSGFsZiApIHx8CgkJCQkoIHZlcnRpY2FsRGlyZWN0aW9u
ID09PSAidXAiICYmICFpc092ZXJCb3R0b21IYWxmICkgKTsKCQl9CgoJfSwKCglfZ2V0RHJhZ1Zl
cnRpY2FsRGlyZWN0aW9uOiBmdW5jdGlvbigpIHsKCQl2YXIgZGVsdGEgPSB0aGlzLnBvc2l0aW9u
QWJzLnRvcCAtIHRoaXMubGFzdFBvc2l0aW9uQWJzLnRvcDsKCQlyZXR1cm4gZGVsdGEgIT09IDAg
JiYgKCBkZWx0YSA+IDAgPyAiZG93biIgOiAidXAiICk7Cgl9LAoKCV9nZXREcmFnSG9yaXpvbnRh
bERpcmVjdGlvbjogZnVuY3Rpb24oKSB7CgkJdmFyIGRlbHRhID0gdGhpcy5wb3NpdGlvbkFicy5s
ZWZ0IC0gdGhpcy5sYXN0UG9zaXRpb25BYnMubGVmdDsKCQlyZXR1cm4gZGVsdGEgIT09IDAgJiYg
KCBkZWx0YSA+IDAgPyAicmlnaHQiIDogImxlZnQiICk7Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9u
KCBldmVudCApIHsKCQl0aGlzLl9yZWZyZXNoSXRlbXMoIGV2ZW50ICk7CgkJdGhpcy5fc2V0SGFu
ZGxlQ2xhc3NOYW1lKCk7CgkJdGhpcy5yZWZyZXNoUG9zaXRpb25zKCk7CgkJcmV0dXJuIHRoaXM7
Cgl9LAoKCV9jb25uZWN0V2l0aDogZnVuY3Rpb24oKSB7CgkJdmFyIG9wdGlvbnMgPSB0aGlzLm9w
dGlvbnM7CgkJcmV0dXJuIG9wdGlvbnMuY29ubmVjdFdpdGguY29uc3RydWN0b3IgPT09IFN0cmlu
ZyA/CgkJCVsgb3B0aW9ucy5jb25uZWN0V2l0aCBdIDoKCQkJb3B0aW9ucy5jb25uZWN0V2l0aDsK
CX0sCgoJX2dldEl0ZW1zQXNqUXVlcnk6IGZ1bmN0aW9uKCBjb25uZWN0ZWQgKSB7CgoJCXZhciBp
LCBqLCBjdXIsIGluc3QsCgkJCWl0ZW1zID0gW10sCgkJCXF1ZXJpZXMgPSBbXSwKCQkJY29ubmVj
dFdpdGggPSB0aGlzLl9jb25uZWN0V2l0aCgpOwoKCQlpZiAoIGNvbm5lY3RXaXRoICYmIGNvbm5l
Y3RlZCApIHsKCQkJZm9yICggaSA9IGNvbm5lY3RXaXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0t
ICkgewoJCQkJY3VyID0gJCggY29ubmVjdFdpdGhbIGkgXSwgdGhpcy5kb2N1bWVudFsgMCBdICk7
CgkJCQlmb3IgKCBqID0gY3VyLmxlbmd0aCAtIDE7IGogPj0gMDsgai0tICkgewoJCQkJCWluc3Qg
PSAkLmRhdGEoIGN1clsgaiBdLCB0aGlzLndpZGdldEZ1bGxOYW1lICk7CgkJCQkJaWYgKCBpbnN0
ICYmIGluc3QgIT09IHRoaXMgJiYgIWluc3Qub3B0aW9ucy5kaXNhYmxlZCApIHsKCQkJCQkJcXVl
cmllcy5wdXNoKCBbICQuaXNGdW5jdGlvbiggaW5zdC5vcHRpb25zLml0ZW1zICkgPwoJCQkJCQkJ
aW5zdC5vcHRpb25zLml0ZW1zLmNhbGwoIGluc3QuZWxlbWVudCApIDoKCQkJCQkJCSQoIGluc3Qu
b3B0aW9ucy5pdGVtcywgaW5zdC5lbGVtZW50ICkKCQkJCQkJCQkubm90KCAiLnVpLXNvcnRhYmxl
LWhlbHBlciIgKQoJCQkJCQkJCS5ub3QoICIudWktc29ydGFibGUtcGxhY2Vob2xkZXIiICksIGlu
c3QgXSApOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJcXVlcmllcy5wdXNoKCBbICQuaXNGdW5j
dGlvbiggdGhpcy5vcHRpb25zLml0ZW1zICkgPwoJCQl0aGlzLm9wdGlvbnMuaXRlbXMKCQkJCS5j
YWxsKCB0aGlzLmVsZW1lbnQsIG51bGwsIHsgb3B0aW9uczogdGhpcy5vcHRpb25zLCBpdGVtOiB0
aGlzLmN1cnJlbnRJdGVtIH0gKSA6CgkJCSQoIHRoaXMub3B0aW9ucy5pdGVtcywgdGhpcy5lbGVt
ZW50ICkKCQkJCS5ub3QoICIudWktc29ydGFibGUtaGVscGVyIiApCgkJCQkubm90KCAiLnVpLXNv
cnRhYmxlLXBsYWNlaG9sZGVyIiApLCB0aGlzIF0gKTsKCgkJZnVuY3Rpb24gYWRkSXRlbXMoKSB7
CgkJCWl0ZW1zLnB1c2goIHRoaXMgKTsKCQl9CgkJZm9yICggaSA9IHF1ZXJpZXMubGVuZ3RoIC0g
MTsgaSA+PSAwOyBpLS0gKSB7CgkJCXF1ZXJpZXNbIGkgXVsgMCBdLmVhY2goIGFkZEl0ZW1zICk7
CgkJfQoKCQlyZXR1cm4gJCggaXRlbXMgKTsKCgl9LAoKCV9yZW1vdmVDdXJyZW50c0Zyb21JdGVt
czogZnVuY3Rpb24oKSB7CgoJCXZhciBsaXN0ID0gdGhpcy5jdXJyZW50SXRlbS5maW5kKCAiOmRh
dGEoIiArIHRoaXMud2lkZ2V0TmFtZSArICItaXRlbSkiICk7CgoJCXRoaXMuaXRlbXMgPSAkLmdy
ZXAoIHRoaXMuaXRlbXMsIGZ1bmN0aW9uKCBpdGVtICkgewoJCQlmb3IgKCB2YXIgaiA9IDA7IGog
PCBsaXN0Lmxlbmd0aDsgaisrICkgewoJCQkJaWYgKCBsaXN0WyBqIF0gPT09IGl0ZW0uaXRlbVsg
MCBdICkgewoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gdHJ1ZTsKCQl9
ICk7CgoJfSwKCglfcmVmcmVzaEl0ZW1zOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXRoaXMuaXRl
bXMgPSBbXTsKCQl0aGlzLmNvbnRhaW5lcnMgPSBbIHRoaXMgXTsKCgkJdmFyIGksIGosIGN1ciwg
aW5zdCwgdGFyZ2V0RGF0YSwgX3F1ZXJpZXMsIGl0ZW0sIHF1ZXJpZXNMZW5ndGgsCgkJCWl0ZW1z
ID0gdGhpcy5pdGVtcywKCQkJcXVlcmllcyA9IFsgWyAkLmlzRnVuY3Rpb24oIHRoaXMub3B0aW9u
cy5pdGVtcyApID8KCQkJCXRoaXMub3B0aW9ucy5pdGVtcy5jYWxsKCB0aGlzLmVsZW1lbnRbIDAg
XSwgZXZlbnQsIHsgaXRlbTogdGhpcy5jdXJyZW50SXRlbSB9ICkgOgoJCQkJJCggdGhpcy5vcHRp
b25zLml0ZW1zLCB0aGlzLmVsZW1lbnQgKSwgdGhpcyBdIF0sCgkJCWNvbm5lY3RXaXRoID0gdGhp
cy5fY29ubmVjdFdpdGgoKTsKCgkJLy9TaG91bGRuJ3QgYmUgcnVuIHRoZSBmaXJzdCB0aW1lIHRo
cm91Z2ggZHVlIHRvIG1hc3NpdmUgc2xvdy1kb3duCgkJaWYgKCBjb25uZWN0V2l0aCAmJiB0aGlz
LnJlYWR5ICkgewoJCQlmb3IgKCBpID0gY29ubmVjdFdpdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyBp
LS0gKSB7CgkJCQljdXIgPSAkKCBjb25uZWN0V2l0aFsgaSBdLCB0aGlzLmRvY3VtZW50WyAwIF0g
KTsKCQkJCWZvciAoIGogPSBjdXIubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0gKSB7CgkJCQkJaW5z
dCA9ICQuZGF0YSggY3VyWyBqIF0sIHRoaXMud2lkZ2V0RnVsbE5hbWUgKTsKCQkJCQlpZiAoIGlu
c3QgJiYgaW5zdCAhPT0gdGhpcyAmJiAhaW5zdC5vcHRpb25zLmRpc2FibGVkICkgewoJCQkJCQlx
dWVyaWVzLnB1c2goIFsgJC5pc0Z1bmN0aW9uKCBpbnN0Lm9wdGlvbnMuaXRlbXMgKSA/CgkJCQkJ
CQlpbnN0Lm9wdGlvbnMuaXRlbXMKCQkJCQkJCQkuY2FsbCggaW5zdC5lbGVtZW50WyAwIF0sIGV2
ZW50LCB7IGl0ZW06IHRoaXMuY3VycmVudEl0ZW0gfSApIDoKCQkJCQkJCSQoIGluc3Qub3B0aW9u
cy5pdGVtcywgaW5zdC5lbGVtZW50ICksIGluc3QgXSApOwoJCQkJCQl0aGlzLmNvbnRhaW5lcnMu
cHVzaCggaW5zdCApOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJZm9yICggaSA9IHF1ZXJpZXMu
bGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7CgkJCXRhcmdldERhdGEgPSBxdWVyaWVzWyBpIF1b
IDEgXTsKCQkJX3F1ZXJpZXMgPSBxdWVyaWVzWyBpIF1bIDAgXTsKCgkJCWZvciAoIGogPSAwLCBx
dWVyaWVzTGVuZ3RoID0gX3F1ZXJpZXMubGVuZ3RoOyBqIDwgcXVlcmllc0xlbmd0aDsgaisrICkg
ewoJCQkJaXRlbSA9ICQoIF9xdWVyaWVzWyBqIF0gKTsKCgkJCQkvLyBEYXRhIGZvciB0YXJnZXQg
Y2hlY2tpbmcgKG1vdXNlIG1hbmFnZXIpCgkJCQlpdGVtLmRhdGEoIHRoaXMud2lkZ2V0TmFtZSAr
ICItaXRlbSIsIHRhcmdldERhdGEgKTsKCgkJCQlpdGVtcy5wdXNoKCB7CgkJCQkJaXRlbTogaXRl
bSwKCQkJCQlpbnN0YW5jZTogdGFyZ2V0RGF0YSwKCQkJCQl3aWR0aDogMCwgaGVpZ2h0OiAwLAoJ
CQkJCWxlZnQ6IDAsIHRvcDogMAoJCQkJfSApOwoJCQl9CgkJfQoKCX0sCgoJcmVmcmVzaFBvc2l0
aW9uczogZnVuY3Rpb24oIGZhc3QgKSB7CgoJCS8vIERldGVybWluZSB3aGV0aGVyIGl0ZW1zIGFy
ZSBiZWluZyBkaXNwbGF5ZWQgaG9yaXpvbnRhbGx5CgkJdGhpcy5mbG9hdGluZyA9IHRoaXMuaXRl
bXMubGVuZ3RoID8KCQkJdGhpcy5vcHRpb25zLmF4aXMgPT09ICJ4IiB8fCB0aGlzLl9pc0Zsb2F0
aW5nKCB0aGlzLml0ZW1zWyAwIF0uaXRlbSApIDoKCQkJZmFsc2U7CgoJCS8vVGhpcyBoYXMgdG8g
YmUgcmVkb25lIGJlY2F1c2UgZHVlIHRvIHRoZSBpdGVtIGJlaW5nIG1vdmVkIG91dC9pbnRvIHRo
ZSBvZmZzZXRQYXJlbnQsCgkJLy8gdGhlIG9mZnNldFBhcmVudCdzIHBvc2l0aW9uIHdpbGwgY2hh
bmdlCgkJaWYgKCB0aGlzLm9mZnNldFBhcmVudCAmJiB0aGlzLmhlbHBlciApIHsKCQkJdGhpcy5v
ZmZzZXQucGFyZW50ID0gdGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCk7CgkJfQoKCQl2YXIgaSwgaXRl
bSwgdCwgcDsKCgkJZm9yICggaSA9IHRoaXMuaXRlbXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0g
KSB7CgkJCWl0ZW0gPSB0aGlzLml0ZW1zWyBpIF07CgoJCQkvL1dlIGlnbm9yZSBjYWxjdWxhdGlu
ZyBwb3NpdGlvbnMgb2YgYWxsIGNvbm5lY3RlZCBjb250YWluZXJzIHdoZW4gd2UncmUgbm90IG92
ZXIgdGhlbQoJCQlpZiAoIGl0ZW0uaW5zdGFuY2UgIT09IHRoaXMuY3VycmVudENvbnRhaW5lciAm
JiB0aGlzLmN1cnJlbnRDb250YWluZXIgJiYKCQkJCQlpdGVtLml0ZW1bIDAgXSAhPT0gdGhpcy5j
dXJyZW50SXRlbVsgMCBdICkgewoJCQkJY29udGludWU7CgkJCX0KCgkJCXQgPSB0aGlzLm9wdGlv
bnMudG9sZXJhbmNlRWxlbWVudCA/CgkJCQkkKCB0aGlzLm9wdGlvbnMudG9sZXJhbmNlRWxlbWVu
dCwgaXRlbS5pdGVtICkgOgoJCQkJaXRlbS5pdGVtOwoKCQkJaWYgKCAhZmFzdCApIHsKCQkJCWl0
ZW0ud2lkdGggPSB0Lm91dGVyV2lkdGgoKTsKCQkJCWl0ZW0uaGVpZ2h0ID0gdC5vdXRlckhlaWdo
dCgpOwoJCQl9CgoJCQlwID0gdC5vZmZzZXQoKTsKCQkJaXRlbS5sZWZ0ID0gcC5sZWZ0OwoJCQlp
dGVtLnRvcCA9IHAudG9wOwoJCX0KCgkJaWYgKCB0aGlzLm9wdGlvbnMuY3VzdG9tICYmIHRoaXMu
b3B0aW9ucy5jdXN0b20ucmVmcmVzaENvbnRhaW5lcnMgKSB7CgkJCXRoaXMub3B0aW9ucy5jdXN0
b20ucmVmcmVzaENvbnRhaW5lcnMuY2FsbCggdGhpcyApOwoJCX0gZWxzZSB7CgkJCWZvciAoIGkg
PSB0aGlzLmNvbnRhaW5lcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7CgkJCQlwID0gdGhp
cy5jb250YWluZXJzWyBpIF0uZWxlbWVudC5vZmZzZXQoKTsKCQkJCXRoaXMuY29udGFpbmVyc1sg
aSBdLmNvbnRhaW5lckNhY2hlLmxlZnQgPSBwLmxlZnQ7CgkJCQl0aGlzLmNvbnRhaW5lcnNbIGkg
XS5jb250YWluZXJDYWNoZS50b3AgPSBwLnRvcDsKCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmNv
bnRhaW5lckNhY2hlLndpZHRoID0KCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5lbGVtZW50Lm91
dGVyV2lkdGgoKTsKCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmNvbnRhaW5lckNhY2hlLmhlaWdo
dCA9CgkJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uZWxlbWVudC5vdXRlckhlaWdodCgpOwoJCQl9
CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJX2NyZWF0ZVBsYWNlaG9sZGVyOiBmdW5jdGlvbigg
dGhhdCApIHsKCQl0aGF0ID0gdGhhdCB8fCB0aGlzOwoJCXZhciBjbGFzc05hbWUsCgkJCW8gPSB0
aGF0Lm9wdGlvbnM7CgoJCWlmICggIW8ucGxhY2Vob2xkZXIgfHwgby5wbGFjZWhvbGRlci5jb25z
dHJ1Y3RvciA9PT0gU3RyaW5nICkgewoJCQljbGFzc05hbWUgPSBvLnBsYWNlaG9sZGVyOwoJCQlv
LnBsYWNlaG9sZGVyID0gewoJCQkJZWxlbWVudDogZnVuY3Rpb24oKSB7CgoJCQkJCXZhciBub2Rl
TmFtZSA9IHRoYXQuY3VycmVudEl0ZW1bIDAgXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLAoJCQkJ
CQllbGVtZW50ID0gJCggIjwiICsgbm9kZU5hbWUgKyAiPiIsIHRoYXQuZG9jdW1lbnRbIDAgXSAp
OwoKCQkJCQkJdGhhdC5fYWRkQ2xhc3MoIGVsZW1lbnQsICJ1aS1zb3J0YWJsZS1wbGFjZWhvbGRl
ciIsCgkJCQkJCQkJY2xhc3NOYW1lIHx8IHRoYXQuY3VycmVudEl0ZW1bIDAgXS5jbGFzc05hbWUg
KQoJCQkJCQkJLl9yZW1vdmVDbGFzcyggZWxlbWVudCwgInVpLXNvcnRhYmxlLWhlbHBlciIgKTsK
CgkJCQkJaWYgKCBub2RlTmFtZSA9PT0gInRib2R5IiApIHsKCQkJCQkJdGhhdC5fY3JlYXRlVHJQ
bGFjZWhvbGRlcigKCQkJCQkJCXRoYXQuY3VycmVudEl0ZW0uZmluZCggInRyIiApLmVxKCAwICks
CgkJCQkJCQkkKCAiPHRyPiIsIHRoYXQ=</Default>
</Parameter>

<Parameter name="Frag698064188458032765987386">
<Default>LyohIGpRdWVyeSBVSSAtIHYxLjEyLjEgLSAyMDE2LTA5LTE0CiogaHR0cDovL2pxdWVyeXVpLmNv
bQoqIEluY2x1ZGVzOiB3aWRnZXQuanMsIHBvc2l0aW9uLmpzLCBkYXRhLmpzLCBkaXNhYmxlLXNl
bGVjdGlvbi5qcywgZWZmZWN0LmpzLCBlZmZlY3RzL2VmZmVjdC1ibGluZC5qcywgZWZmZWN0cy9l
ZmZlY3QtYm91bmNlLmpzLCBlZmZlY3RzL2VmZmVjdC1jbGlwLmpzLCBlZmZlY3RzL2VmZmVjdC1k
cm9wLmpzLCBlZmZlY3RzL2VmZmVjdC1leHBsb2RlLmpzLCBlZmZlY3RzL2VmZmVjdC1mYWRlLmpz
LCBlZmZlY3RzL2VmZmVjdC1mb2xkLmpzLCBlZmZlY3RzL2VmZmVjdC1oaWdobGlnaHQuanMsIGVm
ZmVjdHMvZWZmZWN0LXB1ZmYuanMsIGVmZmVjdHMvZWZmZWN0LXB1bHNhdGUuanMsIGVmZmVjdHMv
ZWZmZWN0LXNjYWxlLmpzLCBlZmZlY3RzL2VmZmVjdC1zaGFrZS5qcywgZWZmZWN0cy9lZmZlY3Qt
c2l6ZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2xpZGUuanMsIGVmZmVjdHMvZWZmZWN0LXRyYW5zZmVy
LmpzLCBmb2N1c2FibGUuanMsIGZvcm0tcmVzZXQtbWl4aW4uanMsIGpxdWVyeS0xLTcuanMsIGtl
eWNvZGUuanMsIGxhYmVscy5qcywgc2Nyb2xsLXBhcmVudC5qcywgdGFiYmFibGUuanMsIHVuaXF1
ZS1pZC5qcywgd2lkZ2V0cy9hY2NvcmRpb24uanMsIHdpZGdldHMvYXV0b2NvbXBsZXRlLmpzLCB3
aWRnZXRzL2J1dHRvbi5qcywgd2lkZ2V0cy9jaGVja2JveHJhZGlvLmpzLCB3aWRnZXRzL2NvbnRy
b2xncm91cC5qcywgd2lkZ2V0cy9kYXRlcGlja2VyLmpzLCB3aWRnZXRzL2RpYWxvZy5qcywgd2lk
Z2V0cy9kcmFnZ2FibGUuanMsIHdpZGdldHMvZHJvcHBhYmxlLmpzLCB3aWRnZXRzL21lbnUuanMs
IHdpZGdldHMvbW91c2UuanMsIHdpZGdldHMvcHJvZ3Jlc3NiYXIuanMsIHdpZGdldHMvcmVzaXph
YmxlLmpzLCB3aWRnZXRzL3NlbGVjdGFibGUuanMsIHdpZGdldHMvc2VsZWN0bWVudS5qcywgd2lk
Z2V0cy9zbGlkZXIuanMsIHdpZGdldHMvc29ydGFibGUuanMsIHdpZGdldHMvc3Bpbm5lci5qcywg
d2lkZ2V0cy90YWJzLmpzLCB3aWRnZXRzL3Rvb2x0aXAuanMKKiBDb3B5cmlnaHQgalF1ZXJ5IEZv
dW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yczsgTGljZW5zZWQgTUlUICovCgooZnVuY3Rp
b24oIGZhY3RvcnkgKSB7CglpZiAoIHR5cGVvZiBkZWZpbmUgPT09ICJmdW5jdGlvbiIgJiYgZGVm
aW5lLmFtZCApIHsKCgkJLy8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLgoJ
CWRlZmluZShbICJqcXVlcnkiIF0sIGZhY3RvcnkgKTsKCX0gZWxzZSB7CgoJCS8vIEJyb3dzZXIg
Z2xvYmFscwoJCWZhY3RvcnkoIGpRdWVyeSApOwoJfQp9KGZ1bmN0aW9uKCAkICkgewoKJC51aSA9
ICQudWkgfHwge307Cgp2YXIgdmVyc2lvbiA9ICQudWkudmVyc2lvbiA9ICIxLjEyLjEiOwoKCi8q
IQogKiBqUXVlcnkgVUkgV2lkZ2V0IDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAq
IENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJl
bGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5z
ZQogKi8KCi8vPj5sYWJlbDogV2lkZ2V0Ci8vPj5ncm91cDogQ29yZQovLz4+ZGVzY3JpcHRpb246
IFByb3ZpZGVzIGEgZmFjdG9yeSBmb3IgY3JlYXRpbmcgc3RhdGVmdWwgd2lkZ2V0cyB3aXRoIGEg
Y29tbW9uIEFQSS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2pRdWVyeS53aWRn
ZXQvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS93aWRnZXQvCgoKCnZhciB3aWRnZXRV
dWlkID0gMDsKdmFyIHdpZGdldFNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOwoKJC5jbGVh
bkRhdGEgPSAoIGZ1bmN0aW9uKCBvcmlnICkgewoJcmV0dXJuIGZ1bmN0aW9uKCBlbGVtcyApIHsK
CQl2YXIgZXZlbnRzLCBlbGVtLCBpOwoJCWZvciAoIGkgPSAwOyAoIGVsZW0gPSBlbGVtc1sgaSBd
ICkgIT0gbnVsbDsgaSsrICkgewoJCQl0cnkgewoKCQkJCS8vIE9ubHkgdHJpZ2dlciByZW1vdmUg
d2hlbiBuZWNlc3NhcnkgdG8gc2F2ZSB0aW1lCgkJCQlldmVudHMgPSAkLl9kYXRhKCBlbGVtLCAi
ZXZlbnRzIiApOwoJCQkJaWYgKCBldmVudHMgJiYgZXZlbnRzLnJlbW92ZSApIHsKCQkJCQkkKCBl
bGVtICkudHJpZ2dlckhhbmRsZXIoICJyZW1vdmUiICk7CgkJCQl9CgoJCQkvLyBIdHRwOi8vYnVn
cy5qcXVlcnkuY29tL3RpY2tldC84MjM1CgkJCX0gY2F0Y2ggKCBlICkge30KCQl9CgkJb3JpZygg
ZWxlbXMgKTsKCX07Cn0gKSggJC5jbGVhbkRhdGEgKTsKCiQud2lkZ2V0ID0gZnVuY3Rpb24oIG5h
bWUsIGJhc2UsIHByb3RvdHlwZSApIHsKCXZhciBleGlzdGluZ0NvbnN0cnVjdG9yLCBjb25zdHJ1
Y3RvciwgYmFzZVByb3RvdHlwZTsKCgkvLyBQcm94aWVkUHJvdG90eXBlIGFsbG93cyB0aGUgcHJv
dmlkZWQgcHJvdG90eXBlIHRvIHJlbWFpbiB1bm1vZGlmaWVkCgkvLyBzbyB0aGF0IGl0IGNhbiBi
ZSB1c2VkIGFzIGEgbWl4aW4gZm9yIG11bHRpcGxlIHdpZGdldHMgKCM4ODc2KQoJdmFyIHByb3hp
ZWRQcm90b3R5cGUgPSB7fTsKCgl2YXIgbmFtZXNwYWNlID0gbmFtZS5zcGxpdCggIi4iIClbIDAg
XTsKCW5hbWUgPSBuYW1lLnNwbGl0KCAiLiIgKVsgMSBdOwoJdmFyIGZ1bGxOYW1lID0gbmFtZXNw
YWNlICsgIi0iICsgbmFtZTsKCglpZiAoICFwcm90b3R5cGUgKSB7CgkJcHJvdG90eXBlID0gYmFz
ZTsKCQliYXNlID0gJC5XaWRnZXQ7Cgl9CgoJaWYgKCAkLmlzQXJyYXkoIHByb3RvdHlwZSApICkg
ewoJCXByb3RvdHlwZSA9ICQuZXh0ZW5kLmFwcGx5KCBudWxsLCBbIHt9IF0uY29uY2F0KCBwcm90
b3R5cGUgKSApOwoJfQoKCS8vIENyZWF0ZSBzZWxlY3RvciBmb3IgcGx1Z2luCgkkLmV4cHJbICI6
IiBdWyBmdWxsTmFtZS50b0xvd2VyQ2FzZSgpIF0gPSBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1
cm4gISEkLmRhdGEoIGVsZW0sIGZ1bGxOYW1lICk7Cgl9OwoKCSRbIG5hbWVzcGFjZSBdID0gJFsg
bmFtZXNwYWNlIF0gfHwge307CglleGlzdGluZ0NvbnN0cnVjdG9yID0gJFsgbmFtZXNwYWNlIF1b
IG5hbWUgXTsKCWNvbnN0cnVjdG9yID0gJFsgbmFtZXNwYWNlIF1bIG5hbWUgXSA9IGZ1bmN0aW9u
KCBvcHRpb25zLCBlbGVtZW50ICkgewoKCQkvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQg
Im5ldyIga2V5d29yZAoJCWlmICggIXRoaXMuX2NyZWF0ZVdpZGdldCApIHsKCQkJcmV0dXJuIG5l
dyBjb25zdHJ1Y3Rvciggb3B0aW9ucywgZWxlbWVudCApOwoJCX0KCgkJLy8gQWxsb3cgaW5zdGFu
dGlhdGlvbiB3aXRob3V0IGluaXRpYWxpemluZyBmb3Igc2ltcGxlIGluaGVyaXRhbmNlCgkJLy8g
bXVzdCB1c2UgIm5ldyIga2V5d29yZCAodGhlIGNvZGUgYWJvdmUgYWx3YXlzIHBhc3NlcyBhcmdz
KQoJCWlmICggYXJndW1lbnRzLmxlbmd0aCApIHsKCQkJdGhpcy5fY3JlYXRlV2lkZ2V0KCBvcHRp
b25zLCBlbGVtZW50ICk7CgkJfQoJfTsKCgkvLyBFeHRlbmQgd2l0aCB0aGUgZXhpc3RpbmcgY29u
c3RydWN0b3IgdG8gY2Fycnkgb3ZlciBhbnkgc3RhdGljIHByb3BlcnRpZXMKCSQuZXh0ZW5kKCBj
b25zdHJ1Y3RvciwgZXhpc3RpbmdDb25zdHJ1Y3RvciwgewoJCXZlcnNpb246IHByb3RvdHlwZS52
ZXJzaW9uLAoKCQkvLyBDb3B5IHRoZSBvYmplY3QgdXNlZCB0byBjcmVhdGUgdGhlIHByb3RvdHlw
ZSBpbiBjYXNlIHdlIG5lZWQgdG8KCQkvLyByZWRlZmluZSB0aGUgd2lkZ2V0IGxhdGVyCgkJX3By
b3RvOiAkLmV4dGVuZCgge30sIHByb3RvdHlwZSApLAoKCQkvLyBUcmFjayB3aWRnZXRzIHRoYXQg
aW5oZXJpdCBmcm9tIHRoaXMgd2lkZ2V0IGluIGNhc2UgdGhpcyB3aWRnZXQgaXMKCQkvLyByZWRl
ZmluZWQgYWZ0ZXIgYSB3aWRnZXQgaW5oZXJpdHMgZnJvbSBpdAoJCV9jaGlsZENvbnN0cnVjdG9y
czogW10KCX0gKTsKCgliYXNlUHJvdG90eXBlID0gbmV3IGJhc2UoKTsKCgkvLyBXZSBuZWVkIHRv
IG1ha2UgdGhlIG9wdGlvbnMgaGFzaCBhIHByb3BlcnR5IGRpcmVjdGx5IG9uIHRoZSBuZXcgaW5z
dGFuY2UKCS8vIG90aGVyd2lzZSB3ZSdsbCBtb2RpZnkgdGhlIG9wdGlvbnMgaGFzaCBvbiB0aGUg
cHJvdG90eXBlIHRoYXQgd2UncmUKCS8vIGluaGVyaXRpbmcgZnJvbQoJYmFzZVByb3RvdHlwZS5v
cHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwgYmFzZVByb3RvdHlwZS5vcHRpb25zICk7Cgkk
LmVhY2goIHByb3RvdHlwZSwgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkgewoJCWlmICggISQuaXNG
dW5jdGlvbiggdmFsdWUgKSApIHsKCQkJcHJveGllZFByb3RvdHlwZVsgcHJvcCBdID0gdmFsdWU7
CgkJCXJldHVybjsKCQl9CgkJcHJveGllZFByb3RvdHlwZVsgcHJvcCBdID0gKCBmdW5jdGlvbigp
IHsKCQkJZnVuY3Rpb24gX3N1cGVyKCkgewoJCQkJcmV0dXJuIGJhc2UucHJvdG90eXBlWyBwcm9w
IF0uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQl9CgoJCQlmdW5jdGlvbiBfc3VwZXJBcHBs
eSggYXJncyApIHsKCQkJCXJldHVybiBiYXNlLnByb3RvdHlwZVsgcHJvcCBdLmFwcGx5KCB0aGlz
LCBhcmdzICk7CgkJCX0KCgkJCXJldHVybiBmdW5jdGlvbigpIHsKCQkJCXZhciBfX3N1cGVyID0g
dGhpcy5fc3VwZXI7CgkJCQl2YXIgX19zdXBlckFwcGx5ID0gdGhpcy5fc3VwZXJBcHBseTsKCQkJ
CXZhciByZXR1cm5WYWx1ZTsKCgkJCQl0aGlzLl9zdXBlciA9IF9zdXBlcjsKCQkJCXRoaXMuX3N1
cGVyQXBwbHkgPSBfc3VwZXJBcHBseTsKCgkJCQlyZXR1cm5WYWx1ZSA9IHZhbHVlLmFwcGx5KCB0
aGlzLCBhcmd1bWVudHMgKTsKCgkJCQl0aGlzLl9zdXBlciA9IF9fc3VwZXI7CgkJCQl0aGlzLl9z
dXBlckFwcGx5ID0gX19zdXBlckFwcGx5OwoKCQkJCXJldHVybiByZXR1cm5WYWx1ZTsKCQkJfTsK
CQl9ICkoKTsKCX0gKTsKCWNvbnN0cnVjdG9yLnByb3RvdHlwZSA9ICQud2lkZ2V0LmV4dGVuZCgg
YmFzZVByb3RvdHlwZSwgewoKCQkvLyBUT0RPOiByZW1vdmUgc3VwcG9ydCBmb3Igd2lkZ2V0RXZl
bnRQcmVmaXgKCQkvLyBhbHdheXMgdXNlIHRoZSBuYW1lICsgYSBjb2xvbiBhcyB0aGUgcHJlZml4
LCBlLmcuLCBkcmFnZ2FibGU6c3RhcnQKCQkvLyBkb24ndCBwcmVmaXggZm9yIHdpZGdldHMgdGhh
dCBhcmVuJ3QgRE9NLWJhc2VkCgkJd2lkZ2V0RXZlbnRQcmVmaXg6IGV4aXN0aW5nQ29uc3RydWN0
b3IgPyAoIGJhc2VQcm90b3R5cGUud2lkZ2V0RXZlbnRQcmVmaXggfHwgbmFtZSApIDogbmFtZQoJ
fSwgcHJveGllZFByb3RvdHlwZSwgewoJCWNvbnN0cnVjdG9yOiBjb25zdHJ1Y3RvciwKCQluYW1l
c3BhY2U6IG5hbWVzcGFjZSwKCQl3aWRnZXROYW1lOiBuYW1lLAoJCXdpZGdldEZ1bGxOYW1lOiBm
dWxsTmFtZQoJfSApOwoKCS8vIElmIHRoaXMgd2lkZ2V0IGlzIGJlaW5nIHJlZGVmaW5lZCB0aGVu
IHdlIG5lZWQgdG8gZmluZCBhbGwgd2lkZ2V0cyB0aGF0CgkvLyBhcmUgaW5oZXJpdGluZyBmcm9t
IGl0IGFuZCByZWRlZmluZSBhbGwgb2YgdGhlbSBzbyB0aGF0IHRoZXkgaW5oZXJpdCBmcm9tCgkv
LyB0aGUgbmV3IHZlcnNpb24gb2YgdGhpcyB3aWRnZXQuIFdlJ3JlIGVzc2VudGlhbGx5IHRyeWlu
ZyB0byByZXBsYWNlIG9uZQoJLy8gbGV2ZWwgaW4gdGhlIHByb3RvdHlwZSBjaGFpbi4KCWlmICgg
ZXhpc3RpbmdDb25zdHJ1Y3RvciApIHsKCQkkLmVhY2goIGV4aXN0aW5nQ29uc3RydWN0b3IuX2No
aWxkQ29uc3RydWN0b3JzLCBmdW5jdGlvbiggaSwgY2hpbGQgKSB7CgkJCXZhciBjaGlsZFByb3Rv
dHlwZSA9IGNoaWxkLnByb3RvdHlwZTsKCgkJCS8vIFJlZGVmaW5lIHRoZSBjaGlsZCB3aWRnZXQg
dXNpbmcgdGhlIHNhbWUgcHJvdG90eXBlIHRoYXQgd2FzCgkJCS8vIG9yaWdpbmFsbHkgdXNlZCwg
YnV0IGluaGVyaXQgZnJvbSB0aGUgbmV3IHZlcnNpb24gb2YgdGhlIGJhc2UKCQkJJC53aWRnZXQo
IGNoaWxkUHJvdG90eXBlLm5hbWVzcGFjZSArICIuIiArIGNoaWxkUHJvdG90eXBlLndpZGdldE5h
bWUsIGNvbnN0cnVjdG9yLAoJCQkJY2hpbGQuX3Byb3RvICk7CgkJfSApOwoKCQkvLyBSZW1vdmUg
dGhlIGxpc3Qgb2YgZXhpc3RpbmcgY2hpbGQgY29uc3RydWN0b3JzIGZyb20gdGhlIG9sZCBjb25z
dHJ1Y3RvcgoJCS8vIHNvIHRoZSBvbGQgY2hpbGQgY29uc3RydWN0b3JzIGNhbiBiZSBnYXJiYWdl
IGNvbGxlY3RlZAoJCWRlbGV0ZSBleGlzdGluZ0NvbnN0cnVjdG9yLl9jaGlsZENvbnN0cnVjdG9y
czsKCX0gZWxzZSB7CgkJYmFzZS5fY2hpbGRDb25zdHJ1Y3RvcnMucHVzaCggY29uc3RydWN0b3Ig
KTsKCX0KCgkkLndpZGdldC5icmlkZ2UoIG5hbWUsIGNvbnN0cnVjdG9yICk7CgoJcmV0dXJuIGNv
bnN0cnVjdG9yOwp9OwoKJC53aWRnZXQuZXh0ZW5kID0gZnVuY3Rpb24oIHRhcmdldCApIHsKCXZh
ciBpbnB1dCA9IHdpZGdldFNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMSApOwoJdmFyIGlucHV0SW5k
ZXggPSAwOwoJdmFyIGlucHV0TGVuZ3RoID0gaW5wdXQubGVuZ3RoOwoJdmFyIGtleTsKCXZhciB2
YWx1ZTsKCglmb3IgKCA7IGlucHV0SW5kZXggPCBpbnB1dExlbmd0aDsgaW5wdXRJbmRleCsrICkg
ewoJCWZvciAoIGtleSBpbiBpbnB1dFsgaW5wdXRJbmRleCBdICkgewoJCQl2YWx1ZSA9IGlucHV0
WyBpbnB1dEluZGV4IF1bIGtleSBdOwoJCQlpZiAoIGlucHV0WyBpbnB1dEluZGV4IF0uaGFzT3du
UHJvcGVydHkoIGtleSApICYmIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7CgoJCQkJLy8gQ2xvbmUg
b2JqZWN0cwoJCQkJaWYgKCAkLmlzUGxhaW5PYmplY3QoIHZhbHVlICkgKSB7CgkJCQkJdGFyZ2V0
WyBrZXkgXSA9ICQuaXNQbGFpbk9iamVjdCggdGFyZ2V0WyBrZXkgXSApID8KCQkJCQkJJC53aWRn
ZXQuZXh0ZW5kKCB7fSwgdGFyZ2V0WyBrZXkgXSwgdmFsdWUgKSA6CgoJCQkJCQkvLyBEb24ndCBl
eHRlbmQgc3RyaW5ncywgYXJyYXlzLCBldGMuIHdpdGggb2JqZWN0cwoJCQkJCQkkLndpZGdldC5l
eHRlbmQoIHt9LCB2YWx1ZSApOwoKCQkJCS8vIENvcHkgZXZlcnl0aGluZyBlbHNlIGJ5IHJlZmVy
ZW5jZQoJCQkJfSBlbHNlIHsKCQkJCQl0YXJnZXRbIGtleSBdID0gdmFsdWU7CgkJCQl9CgkJCX0K
CQl9Cgl9CglyZXR1cm4gdGFyZ2V0Owp9OwoKJC53aWRnZXQuYnJpZGdlID0gZnVuY3Rpb24oIG5h
bWUsIG9iamVjdCApIHsKCXZhciBmdWxsTmFtZSA9IG9iamVjdC5wcm90b3R5cGUud2lkZ2V0RnVs
bE5hbWUgfHwgbmFtZTsKCSQuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJCXZh
ciBpc01ldGhvZENhbGwgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyI7CgkJdmFyIGFyZ3Mg
PSB3aWRnZXRTbGljZS5jYWxsKCBhcmd1bWVudHMsIDEgKTsKCQl2YXIgcmV0dXJuVmFsdWUgPSB0
aGlzOwoKCQlpZiAoIGlzTWV0aG9kQ2FsbCApIHsKCgkJCS8vIElmIHRoaXMgaXMgYW4gZW1wdHkg
Y29sbGVjdGlvbiwgd2UgbmVlZCB0byBoYXZlIHRoZSBpbnN0YW5jZSBtZXRob2QKCQkJLy8gcmV0
dXJuIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHRoZSBqUXVlcnkgaW5zdGFuY2UKCQkJaWYgKCAhdGhp
cy5sZW5ndGggJiYgb3B0aW9ucyA9PT0gImluc3RhbmNlIiApIHsKCQkJCXJldHVyblZhbHVlID0g
dW5kZWZpbmVkOwoJCQl9IGVsc2UgewoJCQkJdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCQl2
YXIgbWV0aG9kVmFsdWU7CgkJCQkJdmFyIGluc3RhbmNlID0gJC5kYXRhKCB0aGlzLCBmdWxsTmFt
ZSApOwoKCQkJCQlpZiAoIG9wdGlvbnMgPT09ICJpbnN0YW5jZSIgKSB7CgkJCQkJCXJldHVyblZh
bHVlID0gaW5zdGFuY2U7CgkJCQkJCXJldHVybiBmYWxzZTsKCQkJCQl9CgoJCQkJCWlmICggIWlu
c3RhbmNlICkgewoJCQkJCQlyZXR1cm4gJC5lcnJvciggImNhbm5vdCBjYWxsIG1ldGhvZHMgb24g
IiArIG5hbWUgKwoJCQkJCQkJIiBwcmlvciB0byBpbml0aWFsaXphdGlvbjsgIiArCgkJCQkJCQki
YXR0ZW1wdGVkIHRvIGNhbGwgbWV0aG9kICciICsgb3B0aW9ucyArICInIiApOwoJCQkJCX0KCgkJ
CQkJaWYgKCAhJC5pc0Z1bmN0aW9uKCBpbnN0YW5jZVsgb3B0aW9ucyBdICkgfHwgb3B0aW9ucy5j
aGFyQXQoIDAgKSA9PT0gIl8iICkgewoJCQkJCQlyZXR1cm4gJC5lcnJvciggIm5vIHN1Y2ggbWV0
aG9kICciICsgb3B0aW9ucyArICInIGZvciAiICsgbmFtZSArCgkJCQkJCQkiIHdpZGdldCBpbnN0
YW5jZSIgKTsKCQkJCQl9CgoJCQkJCW1ldGhvZFZhbHVlID0gaW5zdGFuY2VbIG9wdGlvbnMgXS5h
cHBseSggaW5zdGFuY2UsIGFyZ3MgKTsKCgkJCQkJaWYgKCBtZXRob2RWYWx1ZSAhPT0gaW5zdGFu
Y2UgJiYgbWV0aG9kVmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQkJCQkJcmV0dXJuVmFsdWUgPSBt
ZXRob2RWYWx1ZSAmJiBtZXRob2RWYWx1ZS5qcXVlcnkgPwoJCQkJCQkJcmV0dXJuVmFsdWUucHVz
aFN0YWNrKCBtZXRob2RWYWx1ZS5nZXQoKSApIDoKCQkJCQkJCW1ldGhvZFZhbHVlOwoJCQkJCQly
ZXR1cm4gZmFsc2U7CgkJCQkJfQoJCQkJfSApOwoJCQl9CgkJfSBlbHNlIHsKCgkJCS8vIEFsbG93
IG11bHRpcGxlIGhhc2hlcyB0byBiZSBwYXNzZWQgb24gaW5pdAoJCQlpZiAoIGFyZ3MubGVuZ3Ro
ICkgewoJCQkJb3B0aW9ucyA9ICQud2lkZ2V0LmV4dGVuZC5hcHBseSggbnVsbCwgWyBvcHRpb25z
IF0uY29uY2F0KCBhcmdzICkgKTsKCQkJfQoKCQkJdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJ
CXZhciBpbnN0YW5jZSA9ICQuZGF0YSggdGhpcywgZnVsbE5hbWUgKTsKCQkJCWlmICggaW5zdGFu
Y2UgKSB7CgkJCQkJaW5zdGFuY2Uub3B0aW9uKCBvcHRpb25zIHx8IHt9ICk7CgkJCQkJaWYgKCBp
bnN0YW5jZS5faW5pdCApIHsKCQkJCQkJaW5zdGFuY2UuX2luaXQoKTsKCQkJCQl9CgkJCQl9IGVs
c2UgewoJCQkJCSQuZGF0YSggdGhpcywgZnVsbE5hbWUsIG5ldyBvYmplY3QoIG9wdGlvbnMsIHRo
aXMgKSApOwoJCQkJfQoJCQl9ICk7CgkJfQoKCQlyZXR1cm4gcmV0dXJuVmFsdWU7Cgl9Owp9OwoK
JC5XaWRnZXQgPSBmdW5jdGlvbiggLyogb3B0aW9ucywgZWxlbWVudCAqLyApIHt9OwokLldpZGdl
dC5fY2hpbGRDb25zdHJ1Y3RvcnMgPSBbXTsKCiQuV2lkZ2V0LnByb3RvdHlwZSA9IHsKCXdpZGdl
dE5hbWU6ICJ3aWRnZXQiLAoJd2lkZ2V0RXZlbnRQcmVmaXg6ICIiLAoJZGVmYXVsdEVsZW1lbnQ6
ICI8ZGl2PiIsCgoJb3B0aW9uczogewoJCWNsYXNzZXM6IHt9LAoJCWRpc2FibGVkOiBmYWxzZSwK
CgkJLy8gQ2FsbGJhY2tzCgkJY3JlYXRlOiBudWxsCgl9LAoKCV9jcmVhdGVXaWRnZXQ6IGZ1bmN0
aW9uKCBvcHRpb25zLCBlbGVtZW50ICkgewoJCWVsZW1lbnQgPSAkKCBlbGVtZW50IHx8IHRoaXMu
ZGVmYXVsdEVsZW1lbnQgfHwgdGhpcyApWyAwIF07CgkJdGhpcy5lbGVtZW50ID0gJCggZWxlbWVu
dCApOwoJCXRoaXMudXVpZCA9IHdpZGdldFV1aWQrKzsKCQl0aGlzLmV2ZW50TmFtZXNwYWNlID0g
Ii4iICsgdGhpcy53aWRnZXROYW1lICsgdGhpcy51dWlkOwoKCQl0aGlzLmJpbmRpbmdzID0gJCgp
OwoJCXRoaXMuaG92ZXJhYmxlID0gJCgpOwoJCXRoaXMuZm9jdXNhYmxlID0gJCgpOwoJCXRoaXMu
Y2xhc3Nlc0VsZW1lbnRMb29rdXAgPSB7fTsKCgkJaWYgKCBlbGVtZW50ICE9PSB0aGlzICkgewoJ
CQkkLmRhdGEoIGVsZW1lbnQsIHRoaXMud2lkZ2V0RnVsbE5hbWUsIHRoaXMgKTsKCQkJdGhpcy5f
b24oIHRydWUsIHRoaXMuZWxlbWVudCwgewoJCQkJcmVtb3ZlOiBmdW5jdGlvbiggZXZlbnQgKSB7
CgkJCQkJaWYgKCBldmVudC50YXJnZXQgPT09IGVsZW1lbnQgKSB7CgkJCQkJCXRoaXMuZGVzdHJv
eSgpOwoJCQkJCX0KCQkJCX0KCQkJfSApOwoJCQl0aGlzLmRvY3VtZW50ID0gJCggZWxlbWVudC5z
dHlsZSA/CgoJCQkJLy8gRWxlbWVudCB3aXRoaW4gdGhlIGRvY3VtZW50CgkJCQllbGVtZW50Lm93
bmVyRG9jdW1lbnQgOgoKCQkJCS8vIEVsZW1lbnQgaXMgd2luZG93IG9yIGRvY3VtZW50CgkJCQll
bGVtZW50LmRvY3VtZW50IHx8IGVsZW1lbnQgKTsKCQkJdGhpcy53aW5kb3cgPSAkKCB0aGlzLmRv
Y3VtZW50WyAwIF0uZGVmYXVsdFZpZXcgfHwgdGhpcy5kb2N1bWVudFsgMCBdLnBhcmVudFdpbmRv
dyApOwoJCX0KCgkJdGhpcy5vcHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwKCQkJdGhpcy5v
cHRpb25zLAoJCQl0aGlzLl9nZXRDcmVhdGVPcHRpb25zKCksCgkJCW9wdGlvbnMgKTsKCgkJdGhp
cy5fY3JlYXRlKCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkICkgewoJCQl0aGlzLl9z
ZXRPcHRpb25EaXNhYmxlZCggdGhpcy5vcHRpb25zLmRpc2FibGVkICk7CgkJfQoKCQl0aGlzLl90
cmlnZ2VyKCAiY3JlYXRlIiwgbnVsbCwgdGhpcy5fZ2V0Q3JlYXRlRXZlbnREYXRhKCkgKTsKCQl0
aGlzLl9pbml0KCk7Cgl9LAoKCV9nZXRDcmVhdGVPcHRpb25zOiBmdW5jdGlvbigpIHsKCQlyZXR1
cm4ge307Cgl9LAoKCV9nZXRDcmVhdGVFdmVudERhdGE6ICQubm9vcCwKCglfY3JlYXRlOiAkLm5v
b3AsCgoJX2luaXQ6ICQubm9vcCwKCglkZXN0cm95OiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9
IHRoaXM7CgoJCXRoaXMuX2Rlc3Ryb3koKTsKCQkkLmVhY2goIHRoaXMuY2xhc3Nlc0VsZW1lbnRM
b29rdXAsIGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCQl0aGF0Ll9yZW1vdmVDbGFzcyggdmFs
dWUsIGtleSApOwoJCX0gKTsKCgkJLy8gV2UgY2FuIHByb2JhYmx5IHJlbW92ZSB0aGUgdW5iaW5k
IGNhbGxzIGluIDIuMAoJCS8vIGFsbCBldmVudCBiaW5kaW5ncyBzaG91bGQgZ28gdGhyb3VnaCB0
aGlzLl9vbigpCgkJdGhpcy5lbGVtZW50CgkJCS5vZmYoIHRoaXMuZXZlbnROYW1lc3BhY2UgKQoJ
CQkucmVtb3ZlRGF0YSggdGhpcy53aWRnZXRGdWxsTmFtZSApOwoJCXRoaXMud2lkZ2V0KCkKCQkJ
Lm9mZiggdGhpcy5ldmVudE5hbWVzcGFjZSApCgkJCS5yZW1vdmVBdHRyKCAiYXJpYS1kaXNhYmxl
ZCIgKTsKCgkJLy8gQ2xlYW4gdXAgZXZlbnRzIGFuZCBzdGF0ZXMKCQl0aGlzLmJpbmRpbmdzLm9m
ZiggdGhpcy5ldmVudE5hbWVzcGFjZSApOwoJfSwKCglfZGVzdHJveTogJC5ub29wLAoKCXdpZGdl
dDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZWxlbWVudDsKCX0sCgoJb3B0aW9uOiBmdW5j
dGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgb3B0aW9ucyA9IGtleTsKCQl2YXIgcGFydHM7CgkJ
dmFyIGN1ck9wdGlvbjsKCQl2YXIgaTsKCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoID09PSAwICkg
ewoKCQkJLy8gRG9uJ3QgcmV0dXJuIGEgcmVmZXJlbmNlIHRvIHRoZSBpbnRlcm5hbCBoYXNoCgkJ
CXJldHVybiAkLndpZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnMgKTsKCQl9CgoJCWlmICgg
dHlwZW9mIGtleSA9PT0gInN0cmluZyIgKSB7CgoJCQkvLyBIYW5kbGUgbmVzdGVkIGtleXMsIGUu
Zy4sICJmb28uYmFyIiA9PiB7IGZvbzogeyBiYXI6IF9fXyB9IH0KCQkJb3B0aW9ucyA9IHt9OwoJ
CQlwYXJ0cyA9IGtleS5zcGxpdCggIi4iICk7CgkJCWtleSA9IHBhcnRzLnNoaWZ0KCk7CgkJCWlm
ICggcGFydHMubGVuZ3RoICkgewoJCQkJY3VyT3B0aW9uID0gb3B0aW9uc1sga2V5IF0gPSAkLndp
ZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnNbIGtleSBdICk7CgkJCQlmb3IgKCBpID0gMDsg
aSA8IHBhcnRzLmxlbmd0aCAtIDE7IGkrKyApIHsKCQkJCQljdXJPcHRpb25bIHBhcnRzWyBpIF0g
XSA9IGN1ck9wdGlvblsgcGFydHNbIGkgXSBdIHx8IHt9OwoJCQkJCWN1ck9wdGlvbiA9IGN1ck9w
dGlvblsgcGFydHNbIGkgXSBdOwoJCQkJfQoJCQkJa2V5ID0gcGFydHMucG9wKCk7CgkJCQlpZiAo
IGFyZ3VtZW50cy5sZW5ndGggPT09IDEgKSB7CgkJCQkJcmV0dXJuIGN1ck9wdGlvblsga2V5IF0g
PT09IHVuZGVmaW5lZCA/IG51bGwgOiBjdXJPcHRpb25bIGtleSBdOwoJCQkJfQoJCQkJY3VyT3B0
aW9uWyBrZXkgXSA9IHZhbHVlOwoJCQl9IGVsc2UgewoJCQkJaWYgKCBhcmd1bWVudHMubGVuZ3Ro
ID09PSAxICkgewoJCQkJCXJldHVybiB0aGlzLm9wdGlvbnNbIGtleSBdID09PSB1bmRlZmluZWQg
PyBudWxsIDogdGhpcy5vcHRpb25zWyBrZXkgXTsKCQkJCX0KCQkJCW9wdGlvbnNbIGtleSBdID0g
dmFsdWU7CgkJCX0KCQl9CgoJCXRoaXMuX3NldE9wdGlvbnMoIG9wdGlvbnMgKTsKCgkJcmV0dXJu
IHRoaXM7Cgl9LAoKCV9zZXRPcHRpb25zOiBmdW5jdGlvbiggb3B0aW9ucyApIHsKCQl2YXIga2V5
OwoKCQlmb3IgKCBrZXkgaW4gb3B0aW9ucyApIHsKCQkJdGhpcy5fc2V0T3B0aW9uKCBrZXksIG9w
dGlvbnNbIGtleSBdICk7CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJX3NldE9wdGlvbjogZnVu
Y3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJaWYgKCBrZXkgPT09ICJjbGFzc2VzIiApIHsKCQkJdGhp
cy5fc2V0T3B0aW9uQ2xhc3NlcyggdmFsdWUgKTsKCQl9CgoJCXRoaXMub3B0aW9uc1sga2V5IF0g
PSB2YWx1ZTsKCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7CgkJCXRoaXMuX3NldE9wdGlv
bkRpc2FibGVkKCB2YWx1ZSApOwoJCX0KCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCV9zZXRPcHRpb25D
bGFzc2VzOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGNsYXNzS2V5LCBlbGVtZW50cywgY3Vy
cmVudEVsZW1lbnRzOwoKCQlmb3IgKCBjbGFzc0tleSBpbiB2YWx1ZSApIHsKCQkJY3VycmVudEVs
ZW1lbnRzID0gdGhpcy5jbGFzc2VzRWxlbWVudExvb2t1cFsgY2xhc3NLZXkgXTsKCQkJaWYgKCB2
YWx1ZVsgY2xhc3NLZXkgXSA9PT0gdGhpcy5vcHRpb25zLmNsYXNzZXNbIGNsYXNzS2V5IF0gfHwK
CQkJCQkhY3VycmVudEVsZW1lbnRzIHx8CgkJCQkJIWN1cnJlbnRFbGVtZW50cy5sZW5ndGggKSB7
CgkJCQljb250aW51ZTsKCQkJfQoKCQkJLy8gV2UgYXJlIGRvaW5nIHRoaXMgdG8gY3JlYXRlIGEg
bmV3IGpRdWVyeSBvYmplY3QgYmVjYXVzZSB0aGUgX3JlbW92ZUNsYXNzKCkgY2FsbAoJCQkvLyBv
biB0aGUgbmV4dCBsaW5lIGlzIGdvaW5nIHRvIGRlc3Ryb3kgdGhlIHJlZmVyZW5jZSB0byB0aGUg
Y3VycmVudCBlbGVtZW50cyBiZWluZwoJCQkvLyB0cmFja2VkLiBXZSBuZWVkIHRvIHNhdmUgYSBj
b3B5IG9mIHRoaXMgY29sbGVjdGlvbiBzbyB0aGF0IHdlIGNhbiBhZGQgdGhlIG5ldyBjbGFzc2Vz
CgkJCS8vIGJlbG93LgoJCQllbGVtZW50cyA9ICQoIGN1cnJlbnRFbGVtZW50cy5nZXQoKSApOwoJ
CQl0aGlzLl9yZW1vdmVDbGFzcyggY3VycmVudEVsZW1lbnRzLCBjbGFzc0tleSApOwoKCQkJLy8g
V2UgZG9uJ3QgdXNlIF9hZGRDbGFzcygpIGhlcmUsIGJlY2F1c2UgdGhhdCB1c2VzIHRoaXMub3B0
aW9ucy5jbGFzc2VzCgkJCS8vIGZvciBnZW5lcmF0aW5nIHRoZSBzdHJpbmcgb2YgY2xhc3Nlcy4g
V2Ugd2FudCB0byB1c2UgdGhlIHZhbHVlIHBhc3NlZCBpbiBmcm9tCgkJCS8vIF9zZXRPcHRpb24o
KSwgdGhpcyBpcyB0aGUgbmV3IHZhbHVlIG9mIHRoZSBjbGFzc2VzIG9wdGlvbiB3aGljaCB3YXMg
cGFzc2VkIHRvCgkJCS8vIF9zZXRPcHRpb24oKS4gV2UgcGFzcyB0aGlzIHZhbHVlIGRpcmVjdGx5
IHRvIF9jbGFzc2VzKCkuCgkJCWVsZW1lbnRzLmFkZENsYXNzKCB0aGlzLl9jbGFzc2VzKCB7CgkJ
CQllbGVtZW50OiBlbGVtZW50cywKCQkJCWtleXM6IGNsYXNzS2V5LAoJCQkJY2xhc3NlczogdmFs
dWUsCgkJCQlhZGQ6IHRydWUKCQkJfSApICk7CgkJfQoJfSwKCglfc2V0T3B0aW9uRGlzYWJsZWQ6
IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy53aWRnZXQoKSwg
dGhpcy53aWRnZXRGdWxsTmFtZSArICItZGlzYWJsZWQiLCBudWxsLCAhIXZhbHVlICk7CgoJCS8v
IElmIHRoZSB3aWRnZXQgaXMgYmVjb21pbmcgZGlzYWJsZWQsIHRoZW4gbm90aGluZyBpcyBpbnRl
cmFjdGl2ZQoJCWlmICggdmFsdWUgKSB7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmhvdmVy
YWJsZSwgbnVsbCwgInVpLXN0YXRlLWhvdmVyIiApOwoJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhp
cy5mb2N1c2FibGUsIG51bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsKCQl9Cgl9LAoKCWVuYWJsZTog
ZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuX3NldE9wdGlvbnMoIHsgZGlzYWJsZWQ6IGZhbHNl
IH0gKTsKCX0sCgoJZGlzYWJsZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuX3NldE9wdGlv
bnMoIHsgZGlzYWJsZWQ6IHRydWUgfSApOwoJfSwKCglfY2xhc3NlczogZnVuY3Rpb24oIG9wdGlv
bnMgKSB7CgkJdmFyIGZ1bGwgPSBbXTsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCW9wdGlvbnMgPSAk
LmV4dGVuZCggewoJCQllbGVtZW50OiB0aGlzLmVsZW1lbnQsCgkJCWNsYXNzZXM6IHRoaXMub3B0
aW9ucy5jbGFzc2VzIHx8IHt9CgkJfSwgb3B0aW9ucyApOwoKCQlmdW5jdGlvbiBwcm9jZXNzQ2xh
c3NTdHJpbmcoIGNsYXNzZXMsIGNoZWNrT3B0aW9uICkgewoJCQl2YXIgY3VycmVudCwgaTsKCQkJ
Zm9yICggaSA9IDA7IGkgPCBjbGFzc2VzLmxlbmd0aDsgaSsrICkgewoJCQkJY3VycmVudCA9IHRo
YXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGNsYXNzZXNbIGkgXSBdIHx8ICQoKTsKCQkJCWlmICgg
b3B0aW9ucy5hZGQgKSB7CgkJCQkJY3VycmVudCA9ICQoICQudW5pcXVlKCBjdXJyZW50LmdldCgp
LmNvbmNhdCggb3B0aW9ucy5lbGVtZW50LmdldCgpICkgKSApOwoJCQkJfSBlbHNlIHsKCQkJCQlj
dXJyZW50ID0gJCggY3VycmVudC5ub3QoIG9wdGlvbnMuZWxlbWVudCApLmdldCgpICk7CgkJCQl9
CgkJCQl0aGF0LmNsYXNzZXNFbGVtZW50TG9va3VwWyBjbGFzc2VzWyBpIF0gXSA9IGN1cnJlbnQ7
CgkJCQlmdWxsLnB1c2goIGNsYXNzZXNbIGkgXSApOwoJCQkJaWYgKCBjaGVja09wdGlvbiAmJiBv
cHRpb25zLmNsYXNzZXNbIGNsYXNzZXNbIGkgXSBdICkgewoJCQkJCWZ1bGwucHVzaCggb3B0aW9u
cy5jbGFzc2VzWyBjbGFzc2VzWyBpIF0gXSApOwoJCQkJfQoJCQl9CgkJfQoKCQl0aGlzLl9vbigg
b3B0aW9ucy5lbGVtZW50LCB7CgkJCSJyZW1vdmUiOiAiX3VudHJhY2tDbGFzc2VzRWxlbWVudCIK
CQl9ICk7CgoJCWlmICggb3B0aW9ucy5rZXlzICkgewoJCQlwcm9jZXNzQ2xhc3NTdHJpbmcoIG9w
dGlvbnMua2V5cy5tYXRjaCggL1xTKy9nICkgfHwgW10sIHRydWUgKTsKCQl9CgkJaWYgKCBvcHRp
b25zLmV4dHJhICkgewoJCQlwcm9jZXNzQ2xhc3NTdHJpbmcoIG9wdGlvbnMuZXh0cmEubWF0Y2go
IC9cUysvZyApIHx8IFtdICk7CgkJfQoKCQlyZXR1cm4gZnVsbC5qb2luKCAiICIgKTsKCX0sCgoJ
X3VudHJhY2tDbGFzc2VzRWxlbWVudDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciB0aGF0ID0g
dGhpczsKCQkkLmVhY2goIHRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXAsIGZ1bmN0aW9uKCBrZXks
IHZhbHVlICkgewoJCQlpZiAoICQuaW5BcnJheSggZXZlbnQudGFyZ2V0LCB2YWx1ZSApICE9PSAt
MSApIHsKCQkJCXRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGtleSBdID0gJCggdmFsdWUubm90
KCBldmVudC50YXJnZXQgKS5nZXQoKSApOwoJCQl9CgkJfSApOwoJfSwKCglfcmVtb3ZlQ2xhc3M6
IGZ1bmN0aW9uKCBlbGVtZW50LCBrZXlzLCBleHRyYSApIHsKCQlyZXR1cm4gdGhpcy5fdG9nZ2xl
Q2xhc3MoIGVsZW1lbnQsIGtleXMsIGV4dHJhLCBmYWxzZSApOwoJfSwKCglfYWRkQ2xhc3M6IGZ1
bmN0aW9uKCBlbGVtZW50LCBrZXlzLCBleHRyYSApIHsKCQlyZXR1cm4gdGhpcy5fdG9nZ2xlQ2xh
c3MoIGVsZW1lbnQsIGtleXMsIGV4dHJhLCB0cnVlICk7Cgl9LAoKCV90b2dnbGVDbGFzczogZnVu
Y3Rpb24oIGVsZW1lbnQsIGtleXMsIGV4dHJhLCBhZGQgKSB7CgkJYWRkID0gKCB0eXBlb2YgYWRk
ID09PSAiYm9vbGVhbiIgKSA/IGFkZCA6IGV4dHJhOwoJCXZhciBzaGlmdCA9ICggdHlwZW9mIGVs
ZW1lbnQgPT09ICJzdHJpbmciIHx8IGVsZW1lbnQgPT09IG51bGwgKSwKCQkJb3B0aW9ucyA9IHsK
CQkJCWV4dHJhOiBzaGlmdCA/IGtleXMgOiBleHRyYSwKCQkJCWtleXM6IHNoaWZ0ID8gZWxlbWVu
dCA6IGtleXMsCgkJCQllbGVtZW50OiBzaGlmdCA/IHRoaXMuZWxlbWVudCA6IGVsZW1lbnQsCgkJ
CQlhZGQ6IGFkZAoJCQl9OwoJCW9wdGlvbnMuZWxlbWVudC50b2dnbGVDbGFzcyggdGhpcy5fY2xh
c3Nlcyggb3B0aW9ucyApLCBhZGQgKTsKCQlyZXR1cm4gdGhpczsKCX0sCgoJX29uOiBmdW5jdGlv
biggc3VwcHJlc3NEaXNhYmxlZENoZWNrLCBlbGVtZW50LCBoYW5kbGVycyApIHsKCQl2YXIgZGVs
ZWdhdGVFbGVtZW50OwoJCXZhciBpbnN0YW5jZSA9IHRoaXM7CgoJCS8vIE5vIHN1cHByZXNzRGlz
YWJsZWRDaGVjayBmbGFnLCBzaHVmZmxlIGFyZ3VtZW50cwoJCWlmICggdHlwZW9mIHN1cHByZXNz
RGlzYWJsZWRDaGVjayAhPT0gImJvb2xlYW4iICkgewoJCQloYW5kbGVycyA9IGVsZW1lbnQ7CgkJ
CWVsZW1lbnQgPSBzdXBwcmVzc0Rpc2FibGVkQ2hlY2s7CgkJCXN1cHByZXNzRGlzYWJsZWRDaGVj
ayA9IGZhbHNlOwoJCX0KCgkJLy8gTm8gZWxlbWVudCBhcmd1bWVudCwgc2h1ZmZsZSBhbmQgdXNl
IHRoaXMuZWxlbWVudAoJCWlmICggIWhhbmRsZXJzICkgewoJCQloYW5kbGVycyA9IGVsZW1lbnQ7
CgkJCWVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7CgkJCWRlbGVnYXRlRWxlbWVudCA9IHRoaXMud2lk
Z2V0KCk7CgkJfSBlbHNlIHsKCQkJZWxlbWVudCA9IGRlbGVnYXRlRWxlbWVudCA9ICQoIGVsZW1l
bnQgKTsKCQkJdGhpcy5iaW5kaW5ncyA9IHRoaXMuYmluZGluZ3MuYWRkKCBlbGVtZW50ICk7CgkJ
fQoKCQkkLmVhY2goIGhhbmRsZXJzLCBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXIgKSB7CgkJCWZ1
bmN0aW9uIGhhbmRsZXJQcm94eSgpIHsKCgkJCQkvLyBBbGxvdyB3aWRnZXRzIHRvIGN1c3RvbWl6
ZSB0aGUgZGlzYWJsZWQgaGFuZGxpbmcKCQkJCS8vIC0gZGlzYWJsZWQgYXMgYW4gYXJyYXkgaW5z
dGVhZCBvZiBib29sZWFuCgkJCQkvLyAtIGRpc2FibGVkIGNsYXNzIGFzIG1ldGhvZCBmb3IgZGlz
YWJsaW5nIGluZGl2aWR1YWwgcGFydHMKCQkJCWlmICggIXN1cHByZXNzRGlzYWJsZWRDaGVjayAm
JgoJCQkJCQkoIGluc3RhbmNlLm9wdGlvbnMuZGlzYWJsZWQgPT09IHRydWUgfHwKCQkJCQkJJCgg
dGhpcyApLmhhc0NsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICkgKSApIHsKCQkJCQlyZXR1cm47
CgkJCQl9CgkJCQlyZXR1cm4gKCB0eXBlb2YgaGFuZGxlciA9PT0gInN0cmluZyIgPyBpbnN0YW5j
ZVsgaGFuZGxlciBdIDogaGFuZGxlciApCgkJCQkJLmFwcGx5KCBpbnN0YW5jZSwgYXJndW1lbnRz
ICk7CgkJCX0KCgkJCS8vIENvcHkgdGhlIGd1aWQgc28gZGlyZWN0IHVuYmluZGluZyB3b3JrcwoJ
CQlpZiAoIHR5cGVvZiBoYW5kbGVyICE9PSAic3RyaW5nIiApIHsKCQkJCWhhbmRsZXJQcm94eS5n
dWlkID0gaGFuZGxlci5ndWlkID0KCQkJCQloYW5kbGVyLmd1aWQgfHwgaGFuZGxlclByb3h5Lmd1
aWQgfHwgJC5ndWlkKys7CgkJCX0KCgkJCXZhciBtYXRjaCA9IGV2ZW50Lm1hdGNoKCAvXihbXHc6
LV0qKVxzKiguKikkLyApOwoJCQl2YXIgZXZlbnROYW1lID0gbWF0Y2hbIDEgXSArIGluc3RhbmNl
LmV2ZW50TmFtZXNwYWNlOwoJCQl2YXIgc2VsZWN0b3IgPSBtYXRjaFsgMiBdOwoKCQkJaWYgKCBz
ZWxlY3RvciApIHsKCQkJCWRlbGVnYXRlRWxlbWVudC5vbiggZXZlbnROYW1lLCBzZWxlY3Rvciwg
aGFuZGxlclByb3h5ICk7CgkJCX0gZWxzZSB7CgkJCQllbGVtZW50Lm9uKCBldmVudE5hbWUsIGhh
bmRsZXJQcm94eSApOwoJCQl9CgkJfSApOwoJfSwKCglfb2ZmOiBmdW5jdGlvbiggZWxlbWVudCwg
ZXZlbnROYW1lICkgewoJCWV2ZW50TmFtZSA9ICggZXZlbnROYW1lIHx8ICIiICkuc3BsaXQoICIg
IiApLmpvaW4oIHRoaXMuZXZlbnROYW1lc3BhY2UgKyAiICIgKSArCgkJCXRoaXMuZXZlbnROYW1l
c3BhY2U7CgkJZWxlbWVudC5vZmYoIGV2ZW50TmFtZSApLm9mZiggZXZlbnROYW1lICk7CgoJCS8v
IENsZWFyIHRoZSBzdGFjayB0byBhdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1NikKCQl0aGlzLmJp
bmRpbmdzID0gJCggdGhpcy5iaW5kaW5ncy5ub3QoIGVsZW1lbnQgKS5nZXQoKSApOwoJCXRoaXMu
Zm9jdXNhYmxlID0gJCggdGhpcy5mb2N1c2FibGUubm90KCBlbGVtZW50ICkuZ2V0KCkgKTsKCQl0
aGlzLmhvdmVyYWJsZSA9ICQoIHRoaXMuaG92ZXJhYmxlLm5vdCggZWxlbWVudCApLmdldCgpICk7
Cgl9LAoKCV9kZWxheTogZnVuY3Rpb24oIGhhbmRsZXIsIGRlbGF5ICkgewoJCWZ1bmN0aW9uIGhh
bmRsZXJQcm94eSgpIHsKCQkJcmV0dXJuICggdHlwZW9mIGhhbmRsZXIgPT09ICJzdHJpbmciID8g
aW5zdGFuY2VbIGhhbmRsZXIgXSA6IGhhbmRsZXIgKQoJCQkJLmFwcGx5KCBpbnN0YW5jZSwgYXJn
dW1lbnRzICk7CgkJfQoJCXZhciBpbnN0YW5jZSA9IHRoaXM7CgkJcmV0dXJuIHNldFRpbWVvdXQo
IGhhbmRsZXJQcm94eSwgZGVsYXkgfHwgMCApOwoJfSwKCglfaG92ZXJhYmxlOiBmdW5jdGlvbigg
ZWxlbWVudCApIHsKCQl0aGlzLmhvdmVyYWJsZSA9IHRoaXMuaG92ZXJhYmxlLmFkZCggZWxlbWVu
dCApOwoJCXRoaXMuX29uKCBlbGVtZW50LCB7CgkJCW1vdXNlZW50ZXI6IGZ1bmN0aW9uKCBldmVu
dCApIHsKCQkJCXRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGws
ICJ1aS1zdGF0ZS1ob3ZlciIgKTsKCQkJfSwKCQkJbW91c2VsZWF2ZTogZnVuY3Rpb24oIGV2ZW50
ICkgewoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwgbnVs
bCwgInVpLXN0YXRlLWhvdmVyIiApOwoJCQl9CgkJfSApOwoJfSwKCglfZm9jdXNhYmxlOiBmdW5j
dGlvbiggZWxlbWVudCApIHsKCQl0aGlzLmZvY3VzYWJsZSA9IHRoaXMuZm9jdXNhYmxlLmFkZCgg
ZWxlbWVudCApOwoJCXRoaXMuX29uKCBlbGVtZW50LCB7CgkJCWZvY3VzaW46IGZ1bmN0aW9uKCBl
dmVudCApIHsKCQkJCXRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51
bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsKCQkJfSwKCQkJZm9jdXNvdXQ6IGZ1bmN0aW9uKCBldmVu
dCApIHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51
bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsKCQkJfQoJCX0gKTsKCX0sCgoJX3RyaWdnZXI6IGZ1bmN0
aW9uKCB0eXBlLCBldmVudCwgZGF0YSApIHsKCQl2YXIgcHJvcCwgb3JpZzsKCQl2YXIgY2FsbGJh
Y2sgPSB0aGlzLm9wdGlvbnNbIHR5cGUgXTsKCgkJZGF0YSA9IGRhdGEgfHwge307CgkJZXZlbnQg
PSAkLkV2ZW50KCBldmVudCApOwoJCWV2ZW50LnR5cGUgPSAoIHR5cGUgPT09IHRoaXMud2lkZ2V0
RXZlbnRQcmVmaXggPwoJCQl0eXBlIDoKCQkJdGhpcy53aWRnZXRFdmVudFByZWZpeCArIHR5cGUg
KS50b0xvd2VyQ2FzZSgpOwoKCQkvLyBUaGUgb3JpZ2luYWwgZXZlbnQgbWF5IGNvbWUgZnJvbSBh
bnkgZWxlbWVudAoJCS8vIHNvIHdlIG5lZWQgdG8gcmVzZXQgdGhlIHRhcmdldCBvbiB0aGUgbmV3
IGV2ZW50CgkJZXZlbnQudGFyZ2V0ID0gdGhpcy5lbGVtZW50WyAwIF07CgoJCS8vIENvcHkgb3Jp
Z2luYWwgZXZlbnQgcHJvcGVydGllcyBvdmVyIHRvIHRoZSBuZXcgZXZlbnQKCQlvcmlnID0gZXZl
bnQub3JpZ2luYWxFdmVudDsKCQlpZiAoIG9yaWcgKSB7CgkJCWZvciAoIHByb3AgaW4gb3JpZyAp
IHsKCQkJCWlmICggISggcHJvcCBpbiBldmVudCApICkgewoJCQkJCWV2ZW50WyBwcm9wIF0gPSBv
cmlnWyBwcm9wIF07CgkJCQl9CgkJCX0KCQl9CgoJCXRoaXMuZWxlbWVudC50cmlnZ2VyKCBldmVu
dCwgZGF0YSApOwoJCXJldHVybiAhKCAkLmlzRnVuY3Rpb24oIGNhbGxiYWNrICkgJiYKCQkJY2Fs
bGJhY2suYXBwbHkoIHRoaXMuZWxlbWVudFsgMCBdLCBbIGV2ZW50IF0uY29uY2F0KCBkYXRhICkg
KSA9PT0gZmFsc2UgfHwKCQkJZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKTsKCX0KfTsKCiQu
ZWFjaCggeyBzaG93OiAiZmFkZUluIiwgaGlkZTogImZhZGVPdXQiIH0sIGZ1bmN0aW9uKCBtZXRo
b2QsIGRlZmF1bHRFZmZlY3QgKSB7CgkkLldpZGdldC5wcm90b3R5cGVbICJfIiArIG1ldGhvZCBd
ID0gZnVuY3Rpb24oIGVsZW1lbnQsIG9wdGlvbnMsIGNhbGxiYWNrICkgewoJCWlmICggdHlwZW9m
IG9wdGlvbnMgPT09ICJzdHJpbmciICkgewoJCQlvcHRpb25zID0geyBlZmZlY3Q6IG9wdGlvbnMg
fTsKCQl9CgoJCXZhciBoYXNPcHRpb25zOwoJCXZhciBlZmZlY3ROYW1lID0gIW9wdGlvbnMgPwoJ
CQltZXRob2QgOgoJCQlvcHRpb25zID09PSB0cnVlIHx8IHR5cGVvZiBvcHRpb25zID09PSAibnVt
YmVyIiA/CgkJCQlkZWZhdWx0RWZmZWN0IDoKCQkJCW9wdGlvbnMuZWZmZWN0IHx8IGRlZmF1bHRF
ZmZlY3Q7CgoJCW9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OwoJCWlmICggdHlwZW9mIG9wdGlvbnMg
PT09ICJudW1iZXIiICkgewoJCQlvcHRpb25zID0geyBkdXJhdGlvbjogb3B0aW9ucyB9OwoJCX0K
CgkJaGFzT3B0aW9ucyA9ICEkLmlzRW1wdHlPYmplY3QoIG9wdGlvbnMgKTsKCQlvcHRpb25zLmNv
bXBsZXRlID0gY2FsbGJhY2s7CgoJCWlmICggb3B0aW9ucy5kZWxheSApIHsKCQkJZWxlbWVudC5k
ZWxheSggb3B0aW9ucy5kZWxheSApOwoJCX0KCgkJaWYgKCBoYXNPcHRpb25zICYmICQuZWZmZWN0
cyAmJiAkLmVmZmVjdHMuZWZmZWN0WyBlZmZlY3ROYW1lIF0gKSB7CgkJCWVsZW1lbnRbIG1ldGhv
ZCBdKCBvcHRpb25zICk7CgkJfSBlbHNlIGlmICggZWZmZWN0TmFtZSAhPT0gbWV0aG9kICYmIGVs
ZW1lbnRbIGVmZmVjdE5hbWUgXSApIHsKCQkJZWxlbWVudFsgZWZmZWN0TmFtZSBdKCBvcHRpb25z
LmR1cmF0aW9uLCBvcHRpb25zLmVhc2luZywgY2FsbGJhY2sgKTsKCQl9IGVsc2UgewoJCQllbGVt
ZW50LnF1ZXVlKCBmdW5jdGlvbiggbmV4dCApIHsKCQkJCSQoIHRoaXMgKVsgbWV0aG9kIF0oKTsK
CQkJCWlmICggY2FsbGJhY2sgKSB7CgkJCQkJY2FsbGJhY2suY2FsbCggZWxlbWVudFsgMCBdICk7
CgkJCQl9CgkJCQluZXh0KCk7CgkJCX0gKTsKCQl9Cgl9Owp9ICk7Cgp2YXIgd2lkZ2V0ID0gJC53
aWRnZXQ7CgoKLyohCiAqIGpRdWVyeSBVSSBQb3NpdGlvbiAxLjEyLjEKICogaHR0cDovL2pxdWVy
eXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRy
aWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVl
cnkub3JnL2xpY2Vuc2UKICoKICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcG9zaXRpb24vCiAq
LwoKLy8+PmxhYmVsOiBQb3NpdGlvbgovLz4+Z3JvdXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBQ
b3NpdGlvbnMgZWxlbWVudHMgcmVsYXRpdmUgdG8gb3RoZXIgZWxlbWVudHMuCi8vPj5kb2NzOiBo
dHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9wb3NpdGlvbi8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5
dWkuY29tL3Bvc2l0aW9uLwoKCiggZnVuY3Rpb24oKSB7CnZhciBjYWNoZWRTY3JvbGxiYXJXaWR0
aCwKCW1heCA9IE1hdGgubWF4LAoJYWJzID0gTWF0aC5hYnMsCglyaG9yaXpvbnRhbCA9IC9sZWZ0
fGNlbnRlcnxyaWdodC8sCglydmVydGljYWwgPSAvdG9wfGNlbnRlcnxib3R0b20vLAoJcm9mZnNl
dCA9IC9bXCtcLV1cZCsoXC5bXGRdKyk/JT8vLAoJcnBvc2l0aW9uID0gL15cdysvLAoJcnBlcmNl
bnQgPSAvJSQvLAoJX3Bvc2l0aW9uID0gJC5mbi5wb3NpdGlvbjsKCmZ1bmN0aW9uIGdldE9mZnNl
dHMoIG9mZnNldHMsIHdpZHRoLCBoZWlnaHQgKSB7CglyZXR1cm4gWwoJCXBhcnNlRmxvYXQoIG9m
ZnNldHNbIDAgXSApICogKCBycGVyY2VudC50ZXN0KCBvZmZzZXRzWyAwIF0gKSA/IHdpZHRoIC8g
MTAwIDogMSApLAoJCXBhcnNlRmxvYXQoIG9mZnNldHNbIDEgXSApICogKCBycGVyY2VudC50ZXN0
KCBvZmZzZXRzWyAxIF0gKSA/IGhlaWdodCAvIDEwMCA6IDEgKQoJXTsKfQoKZnVuY3Rpb24gcGFy
c2VDc3MoIGVsZW1lbnQsIHByb3BlcnR5ICkgewoJcmV0dXJuIHBhcnNlSW50KCAkLmNzcyggZWxl
bWVudCwgcHJvcGVydHkgKSwgMTAgKSB8fCAwOwp9CgpmdW5jdGlvbiBnZXREaW1lbnNpb25zKCBl
bGVtICkgewoJdmFyIHJhdyA9IGVsZW1bIDAgXTsKCWlmICggcmF3Lm5vZGVUeXBlID09PSA5ICkg
ewoJCXJldHVybiB7CgkJCXdpZHRoOiBlbGVtLndpZHRoKCksCgkJCWhlaWdodDogZWxlbS5oZWln
aHQoKSwKCQkJb2Zmc2V0OiB7IHRvcDogMCwgbGVmdDogMCB9CgkJfTsKCX0KCWlmICggJC5pc1dp
bmRvdyggcmF3ICkgKSB7CgkJcmV0dXJuIHsKCQkJd2lkdGg6IGVsZW0ud2lkdGgoKSwKCQkJaGVp
Z2h0OiBlbGVtLmhlaWdodCgpLAoJCQlvZmZzZXQ6IHsgdG9wOiBlbGVtLnNjcm9sbFRvcCgpLCBs
ZWZ0OiBlbGVtLnNjcm9sbExlZnQoKSB9CgkJfTsKCX0KCWlmICggcmF3LnByZXZlbnREZWZhdWx0
ICkgewoJCXJldHVybiB7CgkJCXdpZHRoOiAwLAoJCQloZWlnaHQ6IDAsCgkJCW9mZnNldDogeyB0
b3A6IHJhdy5wYWdlWSwgbGVmdDogcmF3LnBhZ2VYIH0KCQl9OwoJfQoJcmV0dXJuIHsKCQl3aWR0
aDogZWxlbS5vdXRlcldpZHRoKCksCgkJaGVpZ2h0OiBlbGVtLm91dGVySGVpZ2h0KCksCgkJb2Zm
c2V0OiBlbGVtLm9mZnNldCgpCgl9Owp9CgokLnBvc2l0aW9uID0gewoJc2Nyb2xsYmFyV2lkdGg6
IGZ1bmN0aW9uKCkgewoJCWlmICggY2FjaGVkU2Nyb2xsYmFyV2lkdGggIT09IHVuZGVmaW5lZCAp
IHsKCQkJcmV0dXJuIGNhY2hlZFNjcm9sbGJhcldpZHRoOwoJCX0KCQl2YXIgdzEsIHcyLAoJCQlk
aXYgPSAkKCAiPGRpdiAiICsKCQkJCSJzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNv
bHV0ZTt3aWR0aDo1MHB4O2hlaWdodDo1MHB4O292ZXJmbG93OmhpZGRlbjsnPiIgKwoJCQkJIjxk
aXYgc3R5bGU9J2hlaWdodDoxMDBweDt3aWR0aDphdXRvOyc+PC9kaXY+PC9kaXY+IiApLAoJCQlp
bm5lckRpdiA9IGRpdi5jaGlsZHJlbigpWyAwIF07CgoJCSQoICJib2R5IiApLmFwcGVuZCggZGl2
ICk7CgkJdzEgPSBpbm5lckRpdi5vZmZzZXRXaWR0aDsKCQlkaXYuY3NzKCAib3ZlcmZsb3ciLCAi
c2Nyb2xsIiApOwoKCQl3MiA9IGlubmVyRGl2Lm9mZnNldFdpZHRoOwoKCQlpZiAoIHcxID09PSB3
MiApIHsKCQkJdzIgPSBkaXZbIDAgXS5jbGllbnRXaWR0aDsKCQl9CgoJCWRpdi5yZW1vdmUoKTsK
CgkJcmV0dXJuICggY2FjaGVkU2Nyb2xsYmFyV2lkdGggPSB3MSAtIHcyICk7Cgl9LAoJZ2V0U2Ny
b2xsSW5mbzogZnVuY3Rpb24oIHdpdGhpbiApIHsKCQl2YXIgb3ZlcmZsb3dYID0gd2l0aGluLmlz
V2luZG93IHx8IHdpdGhpbi5pc0RvY3VtZW50ID8gIiIgOgoJCQkJd2l0aGluLmVsZW1lbnQuY3Nz
KCAib3ZlcmZsb3cteCIgKSwKCQkJb3ZlcmZsb3dZID0gd2l0aGluLmlzV2luZG93IHx8IHdpdGhp
bi5pc0RvY3VtZW50ID8gIiIgOgoJCQkJd2l0aGluLmVsZW1lbnQuY3NzKCAib3ZlcmZsb3cteSIg
KSwKCQkJaGFzT3ZlcmZsb3dYID0gb3ZlcmZsb3dYID09PSAic2Nyb2xsIiB8fAoJCQkJKCBvdmVy
Zmxvd1ggPT09ICJhdXRvIiAmJiB3aXRoaW4ud2lkdGggPCB3aXRoaW4uZWxlbWVudFsgMCBdLnNj
cm9sbFdpZHRoICksCgkJCWhhc092ZXJmbG93WSA9IG92ZXJmbG93WSA9PT0gInNjcm9sbCIgfHwK
CQkJCSggb3ZlcmZsb3dZID09PSAiYXV0byIgJiYgd2l0aGluLmhlaWdodCA8IHdpdGhpbi5lbGVt
ZW50WyAwIF0uc2Nyb2xsSGVpZ2h0ICk7CgkJcmV0dXJuIHsKCQkJd2lkdGg6IGhhc092ZXJmbG93
WSA/ICQucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKSA6IDAsCgkJCWhlaWdodDogaGFzT3ZlcmZs
b3dYID8gJC5wb3NpdGlvbi5zY3JvbGxiYXJXaWR0aCgpIDogMAoJCX07Cgl9LAoJZ2V0V2l0aGlu
SW5mbzogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJdmFyIHdpdGhpbkVsZW1lbnQgPSAkKCBlbGVt
ZW50IHx8IHdpbmRvdyApLAoJCQlpc1dpbmRvdyA9ICQuaXNXaW5kb3coIHdpdGhpbkVsZW1lbnRb
IDAgXSApLAoJCQlpc0RvY3VtZW50ID0gISF3aXRoaW5FbGVtZW50WyAwIF0gJiYgd2l0aGluRWxl
bWVudFsgMCBdLm5vZGVUeXBlID09PSA5LAoJCQloYXNPZmZzZXQgPSAhaXNXaW5kb3cgJiYgIWlz
RG9jdW1lbnQ7CgkJcmV0dXJuIHsKCQkJZWxlbWVudDogd2l0aGluRWxlbWVudCwKCQkJaXNXaW5k
b3c6IGlzV2luZG93LAoJCQlpc0RvY3VtZW50OiBpc0RvY3VtZW50LAoJCQlvZmZzZXQ6IGhhc09m
ZnNldCA/ICQoIGVsZW1lbnQgKS5vZmZzZXQoKSA6IHsgbGVmdDogMCwgdG9wOiAwIH0sCgkJCXNj
cm9sbExlZnQ6IHdpdGhpbkVsZW1lbnQuc2Nyb2xsTGVmdCgpLAoJCQlzY3JvbGxUb3A6IHdpdGhp
bkVsZW1lbnQuc2Nyb2xsVG9wKCksCgkJCXdpZHRoOiB3aXRoaW5FbGVtZW50Lm91dGVyV2lkdGgo
KSwKCQkJaGVpZ2h0OiB3aXRoaW5FbGVtZW50Lm91dGVySGVpZ2h0KCkKCQl9OwoJfQp9OwoKJC5m
bi5wb3NpdGlvbiA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJaWYgKCAhb3B0aW9ucyB8fCAhb3B0
aW9ucy5vZiApIHsKCQlyZXR1cm4gX3Bvc2l0aW9uLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsK
CX0KCgkvLyBNYWtlIGEgY29weSwgd2UgZG9uJ3Qgd2FudCB0byBtb2RpZnkgYXJndW1lbnRzCglv
cHRpb25zID0gJC5leHRlbmQoIHt9LCBvcHRpb25zICk7CgoJdmFyIGF0T2Zmc2V0LCB0YXJnZXRX
aWR0aCwgdGFyZ2V0SGVpZ2h0LCB0YXJnZXRPZmZzZXQsIGJhc2VQb3NpdGlvbiwgZGltZW5zaW9u
cywKCQl0YXJnZXQgPSAkKCBvcHRpb25zLm9mICksCgkJd2l0aGluID0gJC5wb3NpdGlvbi5nZXRX
aXRoaW5JbmZvKCBvcHRpb25zLndpdGhpbiApLAoJCXNjcm9sbEluZm8gPSAkLnBvc2l0aW9uLmdl
dFNjcm9sbEluZm8oIHdpdGhpbiApLAoJCWNvbGxpc2lvbiA9ICggb3B0aW9ucy5jb2xsaXNpb24g
fHwgImZsaXAiICkuc3BsaXQoICIgIiApLAoJCW9mZnNldHMgPSB7fTsKCglkaW1lbnNpb25zID0g
Z2V0RGltZW5zaW9ucyggdGFyZ2V0ICk7CglpZiAoIHRhcmdldFsgMCBdLnByZXZlbnREZWZhdWx0
ICkgewoKCQkvLyBGb3JjZSBsZWZ0IHRvcCB0byBhbGxvdyBmbGlwcGluZwoJCW9wdGlvbnMuYXQg
PSAibGVmdCB0b3AiOwoJfQoJdGFyZ2V0V2lkdGggPSBkaW1lbnNpb25zLndpZHRoOwoJdGFyZ2V0
SGVpZ2h0ID0gZGltZW5zaW9ucy5oZWlnaHQ7Cgl0YXJnZXRPZmZzZXQgPSBkaW1lbnNpb25zLm9m
ZnNldDsKCgkvLyBDbG9uZSB0byByZXVzZSBvcmlnaW5hbCB0YXJnZXRPZmZzZXQgbGF0ZXIKCWJh
c2VQb3NpdGlvbiA9ICQuZXh0ZW5kKCB7fSwgdGFyZ2V0T2Zmc2V0ICk7CgoJLy8gRm9yY2UgbXkg
YW5kIGF0IHRvIGhhdmUgdmFsaWQgaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgcG9zaXRpb25zCgkv
LyBpZiBhIHZhbHVlIGlzIG1pc3Npbmcgb3IgaW52YWxpZCwgaXQgd2lsbCBiZSBjb252ZXJ0ZWQg
dG8gY2VudGVyCgkkLmVhY2goIFsgIm15IiwgImF0IiBdLCBmdW5jdGlvbigpIHsKCQl2YXIgcG9z
ID0gKCBvcHRpb25zWyB0aGlzIF0gfHwgIiIgKS5zcGxpdCggIiAiICksCgkJCWhvcml6b250YWxP
ZmZzZXQsCgkJCXZlcnRpY2FsT2Zmc2V0OwoKCQlpZiAoIHBvcy5sZW5ndGggPT09IDEgKSB7CgkJ
CXBvcyA9IHJob3Jpem9udGFsLnRlc3QoIHBvc1sgMCBdICkgPwoJCQkJcG9zLmNvbmNhdCggWyAi
Y2VudGVyIiBdICkgOgoJCQkJcnZlcnRpY2FsLnRlc3QoIHBvc1sgMCBdICkgPwoJCQkJCVsgImNl
bnRlciIgXS5jb25jYXQoIHBvcyApIDoKCQkJCQlbICJjZW50ZXIiLCAiY2VudGVyIiBdOwoJCX0K
CQlwb3NbIDAgXSA9IHJob3Jpem9udGFsLnRlc3QoIHBvc1sgMCBdICkgPyBwb3NbIDAgXSA6ICJj
ZW50ZXIiOwoJCXBvc1sgMSBdID0gcnZlcnRpY2FsLnRlc3QoIHBvc1sgMSBdICkgPyBwb3NbIDEg
XSA6ICJjZW50ZXIiOwoKCQkvLyBDYWxjdWxhdGUgb2Zmc2V0cwoJCWhvcml6b250YWxPZmZzZXQg
PSByb2Zmc2V0LmV4ZWMoIHBvc1sgMCBdICk7CgkJdmVydGljYWxPZmZzZXQgPSByb2Zmc2V0LmV4
ZWMoIHBvc1sgMSBdICk7CgkJb2Zmc2V0c1sgdGhpcyBdID0gWwoJCQlob3Jpem9udGFsT2Zmc2V0
ID8gaG9yaXpvbnRhbE9mZnNldFsgMCBdIDogMCwKCQkJdmVydGljYWxPZmZzZXQgPyB2ZXJ0aWNh
bE9mZnNldFsgMCBdIDogMAoJCV07CgoJCS8vIFJlZHVjZSB0byBqdXN0IHRoZSBwb3NpdGlvbnMg
d2l0aG91dCB0aGUgb2Zmc2V0cwoJCW9wdGlvbnNbIHRoaXMgXSA9IFsKCQkJcnBvc2l0aW9uLmV4
ZWMoIHBvc1sgMCBdIClbIDAgXSwKCQkJcnBvc2l0aW9uLmV4ZWMoIHBvc1sgMSBdIClbIDAgXQoJ
CV07Cgl9ICk7CgoJLy8gTm9ybWFsaXplIGNvbGxpc2lvbiBvcHRpb24KCWlmICggY29sbGlzaW9u
Lmxlbmd0aCA9PT0gMSApIHsKCQljb2xsaXNpb25bIDEgXSA9IGNvbGxpc2lvblsgMCBdOwoJfQoK
CWlmICggb3B0aW9ucy5hdFsgMCBdID09PSAicmlnaHQiICkgewoJCWJhc2VQb3NpdGlvbi5sZWZ0
ICs9IHRhcmdldFdpZHRoOwoJfSBlbHNlIGlmICggb3B0aW9ucy5hdFsgMCBdID09PSAiY2VudGVy
IiApIHsKCQliYXNlUG9zaXRpb24ubGVmdCArPSB0YXJnZXRXaWR0aCAvIDI7Cgl9CgoJaWYgKCBv
cHRpb25zLmF0WyAxIF0gPT09ICJib3R0b20iICkgewoJCWJhc2VQb3NpdGlvbi50b3AgKz0gdGFy
Z2V0SGVpZ2h0OwoJfSBlbHNlIGlmICggb3B0aW9ucy5hdFsgMSBdID09PSAiY2VudGVyIiApIHsK
CQliYXNlUG9zaXRpb24udG9wICs9IHRhcmdldEhlaWdodCAvIDI7Cgl9CgoJYXRPZmZzZXQgPSBn
ZXRPZmZzZXRzKCBvZmZzZXRzLmF0LCB0YXJnZXRXaWR0aCwgdGFyZ2V0SGVpZ2h0ICk7CgliYXNl
UG9zaXRpb24ubGVmdCArPSBhdE9mZnNldFsgMCBdOwoJYmFzZVBvc2l0aW9uLnRvcCArPSBhdE9m
ZnNldFsgMSBdOwoKCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCXZhciBjb2xsaXNp
b25Qb3NpdGlvbiwgdXNpbmcsCgkJCWVsZW0gPSAkKCB0aGlzICksCgkJCWVsZW1XaWR0aCA9IGVs
ZW0ub3V0ZXJXaWR0aCgpLAoJCQllbGVtSGVpZ2h0ID0gZWxlbS5vdXRlckhlaWdodCgpLAoJCQlt
YXJnaW5MZWZ0ID0gcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5MZWZ0IiApLAoJCQltYXJnaW5Ub3Ag
PSBwYXJzZUNzcyggdGhpcywgIm1hcmdpblRvcCIgKSwKCQkJY29sbGlzaW9uV2lkdGggPSBlbGVt
V2lkdGggKyBtYXJnaW5MZWZ0ICsgcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5SaWdodCIgKSArCgkJ
CQlzY3JvbGxJbmZvLndpZHRoLAoJCQljb2xsaXNpb25IZWlnaHQgPSBlbGVtSGVpZ2h0ICsgbWFy
Z2luVG9wICsgcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5Cb3R0b20iICkgKwoJCQkJc2Nyb2xsSW5m
by5oZWlnaHQsCgkJCXBvc2l0aW9uID0gJC5leHRlbmQoIHt9LCBiYXNlUG9zaXRpb24gKSwKCQkJ
bXlPZmZzZXQgPSBnZXRPZmZzZXRzKCBvZmZzZXRzLm15LCBlbGVtLm91dGVyV2lkdGgoKSwgZWxl
bS5vdXRlckhlaWdodCgpICk7CgoJCWlmICggb3B0aW9ucy5teVsgMCBdID09PSAicmlnaHQiICkg
ewoJCQlwb3NpdGlvbi5sZWZ0IC09IGVsZW1XaWR0aDsKCQl9IGVsc2UgaWYgKCBvcHRpb25zLm15
WyAwIF0gPT09ICJjZW50ZXIiICkgewoJCQlwb3NpdGlvbi5sZWZ0IC09IGVsZW1XaWR0aCAvIDI7
CgkJfQoKCQlpZiAoIG9wdGlvbnMubXlbIDEgXSA9PT0gImJvdHRvbSIgKSB7CgkJCXBvc2l0aW9u
LnRvcCAtPSBlbGVtSGVpZ2h0OwoJCX0gZWxzZSBpZiAoIG9wdGlvbnMubXlbIDEgXSA9PT0gImNl
bnRlciIgKSB7CgkJCXBvc2l0aW9uLnRvcCAtPSBlbGVtSGVpZ2h0IC8gMjsKCQl9CgoJCXBvc2l0
aW9uLmxlZnQgKz0gbXlPZmZzZXRbIDAgXTsKCQlwb3NpdGlvbi50b3AgKz0gbXlPZmZzZXRbIDEg
XTsKCgkJY29sbGlzaW9uUG9zaXRpb24gPSB7CgkJCW1hcmdpbkxlZnQ6IG1hcmdpbkxlZnQsCgkJ
CW1hcmdpblRvcDogbWFyZ2luVG9wCgkJfTsKCgkJJC5lYWNoKCBbICJsZWZ0IiwgInRvcCIgXSwg
ZnVuY3Rpb24oIGksIGRpciApIHsKCQkJaWYgKCAkLnVpLnBvc2l0aW9uWyBjb2xsaXNpb25bIGkg
XSBdICkgewoJCQkJJC51aS5wb3NpdGlvblsgY29sbGlzaW9uWyBpIF0gXVsgZGlyIF0oIHBvc2l0
aW9uLCB7CgkJCQkJdGFyZ2V0V2lkdGg6IHRhcmdldFdpZHRoLAoJCQkJCXRhcmdldEhlaWdodDog
dGFyZ2V0SGVpZ2h0LAoJCQkJCWVsZW1XaWR0aDogZWxlbVdpZHRoLAoJCQkJCWVsZW1IZWlnaHQ6
IGVsZW1IZWlnaHQsCgkJCQkJY29sbGlzaW9uUG9zaXRpb246IGNvbGxpc2lvblBvc2l0aW9uLAoJ
CQkJCWNvbGxpc2lvbldpZHRoOiBjb2xsaXNpb25XaWR0aCwKCQkJCQljb2xsaXNpb25IZWlnaHQ6
IGNvbGxpc2lvbkhlaWdodCwKCQkJCQlvZmZzZXQ6IFsgYXRPZmZzZXRbIDAgXSArIG15T2Zmc2V0
WyAwIF0sIGF0T2Zmc2V0IFsgMSBdICsgbXlPZmZzZXRbIDEgXSBdLAoJCQkJCW15OiBvcHRpb25z
Lm15LAoJCQkJCWF0OiBvcHRpb25zLmF0LAoJCQkJCXdpdGhpbjogd2l0aGluLAoJCQkJCWVsZW06
IGVsZW0KCQkJCX0gKTsKCQkJfQoJCX0gKTsKCgkJaWYgKCBvcHRpb25zLnVzaW5nICkgewoKCQkJ
Ly8gQWRkcyBmZWVkYmFjayBhcyBzZWNvbmQgYXJndW1lbnQgdG8gdXNpbmcgY2FsbGJhY2ssIGlm
IHByZXNlbnQKCQkJdXNpbmcgPSBmdW5jdGlvbiggcHJvcHMgKSB7CgkJCQl2YXIgbGVmdCA9IHRh
cmdldE9mZnNldC5sZWZ0IC0gcG9zaXRpb24ubGVmdCwKCQkJCQlyaWdodCA9IGxlZnQgKyB0YXJn
ZXRXaWR0aCAtIGVsZW1XaWR0aCwKCQkJCQl0b3AgPSB0YXJnZXRPZmZzZXQudG9wIC0gcG9zaXRp
b24udG9wLAoJCQkJCWJvdHRvbSA9IHRvcCArIHRhcmdldEhlaWdodCAtIGVsZW1IZWlnaHQsCgkJ
CQkJZmVlZGJhY2sgPSB7CgkJCQkJCXRhcmdldDogewoJCQkJCQkJZWxlbWVudDogdGFyZ2V0LAoJ
CQkJCQkJbGVmdDogdGFyZ2V0T2Zmc2V0LmxlZnQsCgkJCQkJCQl0b3A6IHRhcmdldE9mZnNldC50
b3AsCgkJCQkJCQl3aWR0aDogdGFyZ2V0V2lkdGgsCgkJCQkJCQloZWlnaHQ6IHRhcmdldEhlaWdo
dAoJCQkJCQl9LAoJCQkJCQllbGVtZW50OiB7CgkJCQkJCQllbGVtZW50OiBlbGVtLAoJCQkJCQkJ
bGVmdDogcG9zaXRpb24ubGVmdCwKCQkJCQkJCXRvcDogcG9zaXRpb24udG9wLAoJCQkJCQkJd2lk
dGg6IGVsZW1XaWR0aCwKCQkJCQkJCWhlaWdodDogZWxlbUhlaWdodAoJCQkJCQl9LAoJCQkJCQlo
b3Jpem9udGFsOiByaWdodCA8IDAgPyAibGVmdCIgOiBsZWZ0ID4gMCA/ICJyaWdodCIgOiAiY2Vu
dGVyIiwKCQkJCQkJdmVydGljYWw6IGJvdHRvbSA8IDAgPyAidG9wIiA6IHRvcCA+IDAgPyAiYm90
dG9tIiA6ICJtaWRkbGUiCgkJCQkJfTsKCQkJCWlmICggdGFyZ2V0V2lkdGggPCBlbGVtV2lkdGgg
JiYgYWJzKCBsZWZ0ICsgcmlnaHQgKSA8IHRhcmdldFdpZHRoICkgewoJCQkJCWZlZWRiYWNrLmhv
cml6b250YWwgPSAiY2VudGVyIjsKCQkJCX0KCQkJCWlmICggdGFyZ2V0SGVpZ2h0IDwgZWxlbUhl
aWdodCAmJiBhYnMoIHRvcCArIGJvdHRvbSApIDwgdGFyZ2V0SGVpZ2h0ICkgewoJCQkJCWZlZWRi
YWNrLnZlcnRpY2FsID0gIm1pZGRsZSI7CgkJCQl9CgkJCQlpZiAoIG1heCggYWJzKCBsZWZ0ICks
IGFicyggcmlnaHQgKSApID4gbWF4KCBhYnMoIHRvcCApLCBhYnMoIGJvdHRvbSApICkgKSB7CgkJ
CQkJZmVlZGJhY2suaW1wb3J0YW50ID0gImhvcml6b250YWwiOwoJCQkJfSBlbHNlIHsKCQkJCQlm
ZWVkYmFjay5pbXBvcnRhbnQgPSAidmVydGljYWwiOwoJCQkJfQoJCQkJb3B0aW9ucy51c2luZy5j
YWxsKCB0aGlzLCBwcm9wcywgZmVlZGJhY2sgKTsKCQkJfTsKCQl9CgoJCWVsZW0ub2Zmc2V0KCAk
LmV4dGVuZCggcG9zaXRpb24sIHsgdXNpbmc6IHVzaW5nIH0gKSApOwoJfSApOwp9OwoKJC51aS5w
b3NpdGlvbiA9IHsKCWZpdDogewoJCWxlZnQ6IGZ1bmN0aW9uKCBwb3NpdGlvbiwgZGF0YSApIHsK
CQkJdmFyIHdpdGhpbiA9IGRhdGEud2l0aGluLAoJCQkJd2l0aGluT2Zmc2V0ID0gd2l0aGluLmlz
V2luZG93ID8gd2l0aGluLnNjcm9sbExlZnQgOiB3aXRoaW4ub2Zmc2V0LmxlZnQsCgkJCQlvdXRl
cldpZHRoID0gd2l0aGluLndpZHRoLAoJCQkJY29sbGlzaW9uUG9zTGVmdCA9IHBvc2l0aW9uLmxl
ZnQgLSBkYXRhLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQsCgkJCQlvdmVyTGVmdCA9IHdp
dGhpbk9mZnNldCAtIGNvbGxpc2lvblBvc0xlZnQsCgkJCQlvdmVyUmlnaHQgPSBjb2xsaXNpb25Q
b3NMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLSB3aXRoaW5PZmZzZXQs
CgkJCQluZXdPdmVyUmlnaHQ7CgoJCQkvLyBFbGVtZW50IGlzIHdpZGVyIHRoYW4gd2l0aGluCgkJ
CWlmICggZGF0YS5jb2xsaXNpb25XaWR0aCA+IG91dGVyV2lkdGggKSB7CgoJCQkJLy8gRWxlbWVu
dCBpcyBpbml0aWFsbHkgb3ZlciB0aGUgbGVmdCBzaWRlIG9mIHdpdGhpbgoJCQkJaWYgKCBvdmVy
TGVmdCA+IDAgJiYgb3ZlclJpZ2h0IDw9IDAgKSB7CgkJCQkJbmV3T3ZlclJpZ2h0ID0gcG9zaXRp
b24ubGVmdCArIG92ZXJMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLQoJ
CQkJCQl3aXRoaW5PZmZzZXQ7CgkJCQkJcG9zaXRpb24ubGVmdCArPSBvdmVyTGVmdCAtIG5ld092
ZXJSaWdodDsKCgkJCQkvLyBFbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIHJpZ2h0IHNpZGUgb2Yg
d2l0aGluCgkJCQl9IGVsc2UgaWYgKCBvdmVyUmlnaHQgPiAwICYmIG92ZXJMZWZ0IDw9IDAgKSB7
CgkJCQkJcG9zaXRpb24ubGVmdCA9IHdpdGhpbk9mZnNldDsKCgkJCQkvLyBFbGVtZW50IGlzIGlu
aXRpYWxseSBvdmVyIGJvdGggbGVmdCBhbmQgcmlnaHQgc2lkZXMgb2Ygd2l0aGluCgkJCQl9IGVs
c2UgewoJCQkJCWlmICggb3ZlckxlZnQgPiBvdmVyUmlnaHQgKSB7CgkJCQkJCXBvc2l0aW9uLmxl
ZnQgPSB3aXRoaW5PZmZzZXQgKyBvdXRlcldpZHRoIC0gZGF0YS5jb2xsaXNpb25XaWR0aDsKCQkJ
CQl9IGVsc2UgewoJCQkJCQlwb3NpdGlvbi5sZWZ0ID0gd2l0aGluT2Zmc2V0OwoJCQkJCX0KCQkJ
CX0KCgkJCS8vIFRvbyBmYXIgbGVmdCAtPiBhbGlnbiB3aXRoIGxlZnQgZWRnZQoJCQl9IGVsc2Ug
aWYgKCBvdmVyTGVmdCA+IDAgKSB7CgkJCQlwb3NpdGlvbi5sZWZ0ICs9IG92ZXJMZWZ0OwoKCQkJ
Ly8gVG9vIGZhciByaWdodCAtPiBhbGlnbiB3aXRoIHJpZ2h0IGVkZ2UKCQkJfSBlbHNlIGlmICgg
b3ZlclJpZ2h0ID4gMCApIHsKCQkJCXBvc2l0aW9uLmxlZnQgLT0gb3ZlclJpZ2h0OwoKCQkJLy8g
QWRqdXN0IGJhc2VkIG9uIHBvc2l0aW9uIGFuZCBtYXJnaW4KCQkJfSBlbHNlIHsKCQkJCXBvc2l0
aW9uLmxlZnQgPSBtYXgoIHBvc2l0aW9uLmxlZnQgLSBjb2xsaXNpb25Qb3NMZWZ0LCBwb3NpdGlv
bi5sZWZ0ICk7CgkJCX0KCQl9LAoJCXRvcDogZnVuY3Rpb24oIHBvc2l0aW9uLCBkYXRhICkgewoJ
CQl2YXIgd2l0aGluID0gZGF0YS53aXRoaW4sCgkJCQl3aXRoaW5PZmZzZXQgPSB3aXRoaW4uaXNX
aW5kb3cgPyB3aXRoaW4uc2Nyb2xsVG9wIDogd2l0aGluLm9mZnNldC50b3AsCgkJCQlvdXRlckhl
aWdodCA9IGRhdGEud2l0aGluLmhlaWdodCwKCQkJCWNvbGxpc2lvblBvc1RvcCA9IHBvc2l0aW9u
LnRvcCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLAoJCQkJb3ZlclRvcCA9IHdp
dGhpbk9mZnNldCAtIGNvbGxpc2lvblBvc1RvcCwKCQkJCW92ZXJCb3R0b20gPSBjb2xsaXNpb25Q
b3NUb3AgKyBkYXRhLmNvbGxpc2lvbkhlaWdodCAtIG91dGVySGVpZ2h0IC0gd2l0aGluT2Zmc2V0
LAoJCQkJbmV3T3ZlckJvdHRvbTsKCgkJCS8vIEVsZW1lbnQgaXMgdGFsbGVyIHRoYW4gd2l0aGlu
CgkJCWlmICggZGF0YS5jb2xsaXNpb25IZWlnaHQgPiBvdXRlckhlaWdodCApIHsKCgkJCQkvLyBF
bGVtZW50IGlzIGluaXRpYWxseSBvdmVyIHRoZSB0b3Agb2Ygd2l0aGluCgkJCQlpZiAoIG92ZXJU
b3AgPiAwICYmIG92ZXJCb3R0b20gPD0gMCApIHsKCQkJCQluZXdPdmVyQm90dG9tID0gcG9zaXRp
b24udG9wICsgb3ZlclRvcCArIGRhdGEuY29sbGlzaW9uSGVpZ2h0IC0gb3V0ZXJIZWlnaHQgLQoJ
CQkJCQl3aXRoaW5PZmZzZXQ7CgkJCQkJcG9zaXRpb24udG9wICs9IG92ZXJUb3AgLSBuZXdPdmVy
Qm90dG9tOwoKCQkJCS8vIEVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgYm90dG9tIG9mIHdpdGhp
bgoJCQkJfSBlbHNlIGlmICggb3ZlckJvdHRvbSA+IDAgJiYgb3ZlclRvcCA8PSAwICkgewoJCQkJ
CXBvc2l0aW9uLnRvcCA9IHdpdGhpbk8=</Default>
</Parameter>

<Parameter name="Frag6980641884580331707806236">
<Default>Y3Rpb24oIGl0ZW0gKSB7CgkJCWlmICggdHlwZW9mIGl0ZW0gPT09ICJzdHJpbmciICkgewoJCQkJ
cmV0dXJuIHsKCQkJCQlsYWJlbDogaXRlbSwKCQkJCQl2YWx1ZTogaXRlbQoJCQkJfTsKCQkJfQoJ
CQlyZXR1cm4gJC5leHRlbmQoIHt9LCBpdGVtLCB7CgkJCQlsYWJlbDogaXRlbS5sYWJlbCB8fCBp
dGVtLnZhbHVlLAoJCQkJdmFsdWU6IGl0ZW0udmFsdWUgfHwgaXRlbS5sYWJlbAoJCQl9ICk7CgkJ
fSApOwoJfSwKCglfc3VnZ2VzdDogZnVuY3Rpb24oIGl0ZW1zICkgewoJCXZhciB1bCA9IHRoaXMu
bWVudS5lbGVtZW50LmVtcHR5KCk7CgkJdGhpcy5fcmVuZGVyTWVudSggdWwsIGl0ZW1zICk7CgkJ
dGhpcy5pc05ld01lbnUgPSB0cnVlOwoJCXRoaXMubWVudS5yZWZyZXNoKCk7CgoJCS8vIFNpemUg
YW5kIHBvc2l0aW9uIG1lbnUKCQl1bC5zaG93KCk7CgkJdGhpcy5fcmVzaXplTWVudSgpOwoJCXVs
LnBvc2l0aW9uKCAkLmV4dGVuZCggewoJCQlvZjogdGhpcy5lbGVtZW50CgkJfSwgdGhpcy5vcHRp
b25zLnBvc2l0aW9uICkgKTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuYXV0b0ZvY3VzICkgewoJCQl0
aGlzLm1lbnUubmV4dCgpOwoJCX0KCgkJLy8gTGlzdGVuIGZvciBpbnRlcmFjdGlvbnMgb3V0c2lk
ZSBvZiB0aGUgd2lkZ2V0ICgjNjY0MikKCQl0aGlzLl9vbiggdGhpcy5kb2N1bWVudCwgewoJCQlt
b3VzZWRvd246ICJfY2xvc2VPbkNsaWNrT3V0c2lkZSIKCQl9ICk7Cgl9LAoKCV9yZXNpemVNZW51
OiBmdW5jdGlvbigpIHsKCQl2YXIgdWwgPSB0aGlzLm1lbnUuZWxlbWVudDsKCQl1bC5vdXRlcldp
ZHRoKCBNYXRoLm1heCgKCgkJCS8vIEZpcmVmb3ggd3JhcHMgbG9uZyB0ZXh0IChwb3NzaWJseSBh
IHJvdW5kaW5nIGJ1ZykKCQkJLy8gc28gd2UgYWRkIDFweCB0byBhdm9pZCB0aGUgd3JhcHBpbmcg
KCM3NTEzKQoJCQl1bC53aWR0aCggIiIgKS5vdXRlcldpZHRoKCkgKyAxLAoJCQl0aGlzLmVsZW1l
bnQub3V0ZXJXaWR0aCgpCgkJKSApOwoJfSwKCglfcmVuZGVyTWVudTogZnVuY3Rpb24oIHVsLCBp
dGVtcyApIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgkJJC5lYWNoKCBpdGVtcywgZnVuY3Rpb24oIGlu
ZGV4LCBpdGVtICkgewoJCQl0aGF0Ll9yZW5kZXJJdGVtRGF0YSggdWwsIGl0ZW0gKTsKCQl9ICk7
Cgl9LAoKCV9yZW5kZXJJdGVtRGF0YTogZnVuY3Rpb24oIHVsLCBpdGVtICkgewoJCXJldHVybiB0
aGlzLl9yZW5kZXJJdGVtKCB1bCwgaXRlbSApLmRhdGEoICJ1aS1hdXRvY29tcGxldGUtaXRlbSIs
IGl0ZW0gKTsKCX0sCgoJX3JlbmRlckl0ZW06IGZ1bmN0aW9uKCB1bCwgaXRlbSApIHsKCQlyZXR1
cm4gJCggIjxsaT4iICkKCQkJLmFwcGVuZCggJCggIjxkaXY+IiApLnRleHQoIGl0ZW0ubGFiZWwg
KSApCgkJCS5hcHBlbmRUbyggdWwgKTsKCX0sCgoJX21vdmU6IGZ1bmN0aW9uKCBkaXJlY3Rpb24s
IGV2ZW50ICkgewoJCWlmICggIXRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7
CgkJCXRoaXMuc2VhcmNoKCBudWxsLCBldmVudCApOwoJCQlyZXR1cm47CgkJfQoJCWlmICggdGhp
cy5tZW51LmlzRmlyc3RJdGVtKCkgJiYgL15wcmV2aW91cy8udGVzdCggZGlyZWN0aW9uICkgfHwK
CQkJCXRoaXMubWVudS5pc0xhc3RJdGVtKCkgJiYgL15uZXh0Ly50ZXN0KCBkaXJlY3Rpb24gKSAp
IHsKCgkJCWlmICggIXRoaXMuaXNNdWx0aUxpbmUgKSB7CgkJCQl0aGlzLl92YWx1ZSggdGhpcy50
ZXJtICk7CgkJCX0KCgkJCXRoaXMubWVudS5ibHVyKCk7CgkJCXJldHVybjsKCQl9CgkJdGhpcy5t
ZW51WyBkaXJlY3Rpb24gXSggZXZlbnQgKTsKCX0sCgoJd2lkZ2V0OiBmdW5jdGlvbigpIHsKCQly
ZXR1cm4gdGhpcy5tZW51LmVsZW1lbnQ7Cgl9LAoKCV92YWx1ZTogZnVuY3Rpb24oKSB7CgkJcmV0
dXJuIHRoaXMudmFsdWVNZXRob2QuYXBwbHkoIHRoaXMuZWxlbWVudCwgYXJndW1lbnRzICk7Cgl9
LAoKCV9rZXlFdmVudDogZnVuY3Rpb24oIGtleUV2ZW50LCBldmVudCApIHsKCQlpZiAoICF0aGlz
LmlzTXVsdGlMaW5lIHx8IHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7CgkJ
CXRoaXMuX21vdmUoIGtleUV2ZW50LCBldmVudCApOwoKCQkJLy8gUHJldmVudHMgbW92aW5nIGN1
cnNvciB0byBiZWdpbm5pbmcvZW5kIG9mIHRoZSB0ZXh0IGZpZWxkIGluIHNvbWUgYnJvd3NlcnMK
CQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQl9Cgl9LAoKCS8vIFN1cHBvcnQ6IENocm9tZSA8
PTUwCgkvLyBXZSBzaG91bGQgYmUgYWJsZSB0byBqdXN0IHVzZSB0aGlzLmVsZW1lbnQucHJvcCgg
ImlzQ29udGVudEVkaXRhYmxlIiApCgkvLyBidXQgaGlkZGVuIGVsZW1lbnRzIGFsd2F5cyByZXBv
cnQgZmFsc2UgaW4gQ2hyb21lLgoJLy8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1
bS9pc3N1ZXMvZGV0YWlsP2lkPTMxMzA4MgoJX2lzQ29udGVudEVkaXRhYmxlOiBmdW5jdGlvbigg
ZWxlbWVudCApIHsKCQlpZiAoICFlbGVtZW50Lmxlbmd0aCApIHsKCQkJcmV0dXJuIGZhbHNlOwoJ
CX0KCgkJdmFyIGVkaXRhYmxlID0gZWxlbWVudC5wcm9wKCAiY29udGVudEVkaXRhYmxlIiApOwoK
CQlpZiAoIGVkaXRhYmxlID09PSAiaW5oZXJpdCIgKSB7CgkJICByZXR1cm4gdGhpcy5faXNDb250
ZW50RWRpdGFibGUoIGVsZW1lbnQucGFyZW50KCkgKTsKCQl9CgoJCXJldHVybiBlZGl0YWJsZSA9
PT0gInRydWUiOwoJfQp9ICk7CgokLmV4dGVuZCggJC51aS5hdXRvY29tcGxldGUsIHsKCWVzY2Fw
ZVJlZ2V4OiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJcmV0dXJuIHZhbHVlLnJlcGxhY2UoIC9bXC1c
W1xde30oKSorPy4sXFxcXiR8I1xzXS9nLCAiXFwkJiIgKTsKCX0sCglmaWx0ZXI6IGZ1bmN0aW9u
KCBhcnJheSwgdGVybSApIHsKCQl2YXIgbWF0Y2hlciA9IG5ldyBSZWdFeHAoICQudWkuYXV0b2Nv
bXBsZXRlLmVzY2FwZVJlZ2V4KCB0ZXJtICksICJpIiApOwoJCXJldHVybiAkLmdyZXAoIGFycmF5
LCBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCXJldHVybiBtYXRjaGVyLnRlc3QoIHZhbHVlLmxhYmVs
IHx8IHZhbHVlLnZhbHVlIHx8IHZhbHVlICk7CgkJfSApOwoJfQp9ICk7CgovLyBMaXZlIHJlZ2lv
biBleHRlbnNpb24sIGFkZGluZyBhIGBtZXNzYWdlc2Agb3B0aW9uCi8vIE5PVEU6IFRoaXMgaXMg
YW4gZXhwZXJpbWVudGFsIEFQSS4gV2UgYXJlIHN0aWxsIGludmVzdGlnYXRpbmcKLy8gYSBmdWxs
IHNvbHV0aW9uIGZvciBzdHJpbmcgbWFuaXB1bGF0aW9uIGFuZCBpbnRlcm5hdGlvbmFsaXphdGlv
bi4KJC53aWRnZXQoICJ1aS5hdXRvY29tcGxldGUiLCAkLnVpLmF1dG9jb21wbGV0ZSwgewoJb3B0
aW9uczogewoJCW1lc3NhZ2VzOiB7CgkJCW5vUmVzdWx0czogIk5vIHNlYXJjaCByZXN1bHRzLiIs
CgkJCXJlc3VsdHM6IGZ1bmN0aW9uKCBhbW91bnQgKSB7CgkJCQlyZXR1cm4gYW1vdW50ICsgKCBh
bW91bnQgPiAxID8gIiByZXN1bHRzIGFyZSIgOiAiIHJlc3VsdCBpcyIgKSArCgkJCQkJIiBhdmFp
bGFibGUsIHVzZSB1cCBhbmQgZG93biBhcnJvdyBrZXlzIHRvIG5hdmlnYXRlLiI7CgkJCX0KCQl9
Cgl9LAoKCV9fcmVzcG9uc2U6IGZ1bmN0aW9uKCBjb250ZW50ICkgewoJCXZhciBtZXNzYWdlOwoJ
CXRoaXMuX3N1cGVyQXBwbHkoIGFyZ3VtZW50cyApOwoJCWlmICggdGhpcy5vcHRpb25zLmRpc2Fi
bGVkIHx8IHRoaXMuY2FuY2VsU2VhcmNoICkgewoJCQlyZXR1cm47CgkJfQoJCWlmICggY29udGVu
dCAmJiBjb250ZW50Lmxlbmd0aCApIHsKCQkJbWVzc2FnZSA9IHRoaXMub3B0aW9ucy5tZXNzYWdl
cy5yZXN1bHRzKCBjb250ZW50Lmxlbmd0aCApOwoJCX0gZWxzZSB7CgkJCW1lc3NhZ2UgPSB0aGlz
Lm9wdGlvbnMubWVzc2FnZXMubm9SZXN1bHRzOwoJCX0KCQl0aGlzLmxpdmVSZWdpb24uY2hpbGRy
ZW4oKS5oaWRlKCk7CgkJJCggIjxkaXY+IiApLnRleHQoIG1lc3NhZ2UgKS5hcHBlbmRUbyggdGhp
cy5saXZlUmVnaW9uICk7Cgl9Cn0gKTsKCnZhciB3aWRnZXRzQXV0b2NvbXBsZXRlID0gJC51aS5h
dXRvY29tcGxldGU7CgoKLyohCiAqIGpRdWVyeSBVSSBDb250cm9sZ3JvdXAgMS4xMi4xCiAqIGh0
dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBv
dGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBo
dHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBDb250cm9sZ3JvdXAKLy8+
Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogVmlzdWFsbHkgZ3JvdXBzIGZvcm0gY29u
dHJvbCB3aWRnZXRzCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jb250cm9sZ3Jv
dXAvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9jb250cm9sZ3JvdXAvCi8vPj5jc3Mu
c3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTog
Li4vLi4vdGhlbWVzL2Jhc2UvY29udHJvbGdyb3VwLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90
aGVtZXMvYmFzZS90aGVtZS5jc3MKCgp2YXIgY29udHJvbGdyb3VwQ29ybmVyUmVnZXggPSAvdWkt
Y29ybmVyLShbYS16XSl7Miw2fS9nOwoKdmFyIHdpZGdldHNDb250cm9sZ3JvdXAgPSAkLndpZGdl
dCggInVpLmNvbnRyb2xncm91cCIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJZGVmYXVsdEVsZW1l
bnQ6ICI8ZGl2PiIsCglvcHRpb25zOiB7CgkJZGlyZWN0aW9uOiAiaG9yaXpvbnRhbCIsCgkJZGlz
YWJsZWQ6IG51bGwsCgkJb25seVZpc2libGU6IHRydWUsCgkJaXRlbXM6IHsKCQkJImJ1dHRvbiI6
ICJpbnB1dFt0eXBlPWJ1dHRvbl0sIGlucHV0W3R5cGU9c3VibWl0XSwgaW5wdXRbdHlwZT1yZXNl
dF0sIGJ1dHRvbiwgYSIsCgkJCSJjb250cm9sZ3JvdXBMYWJlbCI6ICIudWktY29udHJvbGdyb3Vw
LWxhYmVsIiwKCQkJImNoZWNrYm94cmFkaW8iOiAiaW5wdXRbdHlwZT0nY2hlY2tib3gnXSwgaW5w
dXRbdHlwZT0ncmFkaW8nXSIsCgkJCSJzZWxlY3RtZW51IjogInNlbGVjdCIsCgkJCSJzcGlubmVy
IjogIi51aS1zcGlubmVyLWlucHV0IgoJCX0KCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJ
dGhpcy5fZW5oYW5jZSgpOwoJfSwKCgkvLyBUbyBzdXBwb3J0IHRoZSBlbmhhbmNlZCBvcHRpb24g
aW4galF1ZXJ5IE1vYmlsZSwgd2UgaXNvbGF0ZSBET00gbWFuaXB1bGF0aW9uCglfZW5oYW5jZTog
ZnVuY3Rpb24oKSB7CgkJdGhpcy5lbGVtZW50LmF0dHIoICJyb2xlIiwgInRvb2xiYXIiICk7CgkJ
dGhpcy5yZWZyZXNoKCk7Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLl9jYWxs
Q2hpbGRNZXRob2QoICJkZXN0cm95IiApOwoJCXRoaXMuY2hpbGRXaWRnZXRzLnJlbW92ZURhdGEo
ICJ1aS1jb250cm9sZ3JvdXAtZGF0YSIgKTsKCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggInJv
bGUiICk7CgkJaWYgKCB0aGlzLm9wdGlvbnMuaXRlbXMuY29udHJvbGdyb3VwTGFiZWwgKSB7CgkJ
CXRoaXMuZWxlbWVudAoJCQkJLmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcy5jb250cm9sZ3JvdXBM
YWJlbCApCgkJCQkuZmluZCggIi51aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHMiICkKCQkJ
CS5jb250ZW50cygpLnVud3JhcCgpOwoJCX0KCX0sCgoJX2luaXRXaWRnZXRzOiBmdW5jdGlvbigp
IHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCWNoaWxkV2lkZ2V0cyA9IFtdOwoKCQkvLyBGaXJzdCB3
ZSBpdGVyYXRlIG92ZXIgZWFjaCBvZiB0aGUgaXRlbXMgb3B0aW9ucwoJCSQuZWFjaCggdGhpcy5v
cHRpb25zLml0ZW1zLCBmdW5jdGlvbiggd2lkZ2V0LCBzZWxlY3RvciApIHsKCQkJdmFyIGxhYmVs
czsKCQkJdmFyIG9wdGlvbnMgPSB7fTsKCgkJCS8vIE1ha2Ugc3VyZSB0aGUgd2lkZ2V0IGhhcyBh
IHNlbGVjdG9yIHNldAoJCQlpZiAoICFzZWxlY3RvciApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJ
aWYgKCB3aWRnZXQgPT09ICJjb250cm9sZ3JvdXBMYWJlbCIgKSB7CgkJCQlsYWJlbHMgPSB0aGF0
LmVsZW1lbnQuZmluZCggc2VsZWN0b3IgKTsKCQkJCWxhYmVscy5lYWNoKCBmdW5jdGlvbigpIHsK
CQkJCQl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKTsKCgkJCQkJaWYgKCBlbGVtZW50LmNoaWxkcmVu
KCAiLnVpLWNvbnRyb2xncm91cC1sYWJlbC1jb250ZW50cyIgKS5sZW5ndGggKSB7CgkJCQkJCXJl
dHVybjsKCQkJCQl9CgkJCQkJZWxlbWVudC5jb250ZW50cygpCgkJCQkJCS53cmFwQWxsKCAiPHNw
YW4gY2xhc3M9J3VpLWNvbnRyb2xncm91cC1sYWJlbC1jb250ZW50cyc+PC9zcGFuPiIgKTsKCQkJ
CX0gKTsKCQkJCXRoYXQuX2FkZENsYXNzKCBsYWJlbHMsIG51bGwsICJ1aS13aWRnZXQgdWktd2lk
Z2V0LWNvbnRlbnQgdWktc3RhdGUtZGVmYXVsdCIgKTsKCQkJCWNoaWxkV2lkZ2V0cyA9IGNoaWxk
V2lkZ2V0cy5jb25jYXQoIGxhYmVscy5nZXQoKSApOwoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBN
YWtlIHN1cmUgdGhlIHdpZGdldCBhY3R1YWxseSBleGlzdHMKCQkJaWYgKCAhJC5mblsgd2lkZ2V0
IF0gKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCS8vIFdlIGFzc3VtZSBldmVyeXRoaW5nIGlzIGlu
IHRoZSBtaWRkbGUgdG8gc3RhcnQgYmVjYXVzZSB3ZSBjYW4ndCBkZXRlcm1pbmUKCQkJLy8gZmly
c3QgLyBsYXN0IGVsZW1lbnRzIHVudGlsIGFsbCBlbmhhbmNtZW50cyBhcmUgZG9uZS4KCQkJaWYg
KCB0aGF0WyAiXyIgKyB3aWRnZXQgKyAiT3B0aW9ucyIgXSApIHsKCQkJCW9wdGlvbnMgPSB0aGF0
WyAiXyIgKyB3aWRnZXQgKyAiT3B0aW9ucyIgXSggIm1pZGRsZSIgKTsKCQkJfSBlbHNlIHsKCQkJ
CW9wdGlvbnMgPSB7IGNsYXNzZXM6IHt9IH07CgkJCX0KCgkJCS8vIEZpbmQgaW5zdGFuY2VzIG9m
IHRoaXMgd2lkZ2V0IGluc2lkZSBjb250cm9sZ3JvdXAgYW5kIGluaXQgdGhlbQoJCQl0aGF0LmVs
ZW1lbnQKCQkJCS5maW5kKCBzZWxlY3RvciApCgkJCQkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkJ
dmFyIGVsZW1lbnQgPSAkKCB0aGlzICk7CgkJCQkJdmFyIGluc3RhbmNlID0gZWxlbWVudFsgd2lk
Z2V0IF0oICJpbnN0YW5jZSIgKTsKCgkJCQkJLy8gV2UgbmVlZCB0byBjbG9uZSB0aGUgZGVmYXVs
dCBvcHRpb25zIGZvciB0aGlzIHR5cGUgb2Ygd2lkZ2V0IHRvIGF2b2lkCgkJCQkJLy8gcG9sbHV0
aW5nIHRoZSB2YXJpYWJsZSBvcHRpb25zIHdoaWNoIGhhcyBhIHdpZGVyIHNjb3BlIHRoYW4gYSBz
aW5nbGUgd2lkZ2V0LgoJCQkJCXZhciBpbnN0YW5jZU9wdGlvbnMgPSAkLndpZGdldC5leHRlbmQo
IHt9LCBvcHRpb25zICk7CgoJCQkJCS8vIElmIHRoZSBidXR0b24gaXMgdGhlIGNoaWxkIG9mIGEg
c3Bpbm5lciBpZ25vcmUgaXQKCQkJCQkvLyBUT0RPOiBGaW5kIGEgbW9yZSBnZW5lcmljIHNvbHV0
aW9uCgkJCQkJaWYgKCB3aWRnZXQgPT09ICJidXR0b24iICYmIGVsZW1lbnQucGFyZW50KCAiLnVp
LXNwaW5uZXIiICkubGVuZ3RoICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoKCQkJCQkvLyBDcmVh
dGUgdGhlIHdpZGdldCBpZiBpdCBkb2Vzbid0IGV4aXN0CgkJCQkJaWYgKCAhaW5zdGFuY2UgKSB7
CgkJCQkJCWluc3RhbmNlID0gZWxlbWVudFsgd2lkZ2V0IF0oKVsgd2lkZ2V0IF0oICJpbnN0YW5j
ZSIgKTsKCQkJCQl9CgkJCQkJaWYgKCBpbnN0YW5jZSApIHsKCQkJCQkJaW5zdGFuY2VPcHRpb25z
LmNsYXNzZXMgPQoJCQkJCQkJdGhhdC5fcmVzb2x2ZUNsYXNzZXNWYWx1ZXMoIGluc3RhbmNlT3B0
aW9ucy5jbGFzc2VzLCBpbnN0YW5jZSApOwoJCQkJCX0KCQkJCQllbGVtZW50WyB3aWRnZXQgXSgg
aW5zdGFuY2VPcHRpb25zICk7CgoJCQkJCS8vIFN0b3JlIGFuIGluc3RhbmNlIG9mIHRoZSBjb250
cm9sZ3JvdXAgdG8gYmUgYWJsZSB0byByZWZlcmVuY2UKCQkJCQkvLyBmcm9tIHRoZSBvdXRlcm1v
c3QgZWxlbWVudCBmb3IgY2hhbmdpbmcgb3B0aW9ucyBhbmQgcmVmcmVzaAoJCQkJCXZhciB3aWRn
ZXRFbGVtZW50ID0gZWxlbWVudFsgd2lkZ2V0IF0oICJ3aWRnZXQiICk7CgkJCQkJJC5kYXRhKCB3
aWRnZXRFbGVtZW50WyAwIF0sICJ1aS1jb250cm9sZ3JvdXAtZGF0YSIsCgkJCQkJCWluc3RhbmNl
ID8gaW5zdGFuY2UgOiBlbGVtZW50WyB3aWRnZXQgXSggImluc3RhbmNlIiApICk7CgoJCQkJCWNo
aWxkV2lkZ2V0cy5wdXNoKCB3aWRnZXRFbGVtZW50WyAwIF0gKTsKCQkJCX0gKTsKCQl9ICk7CgoJ
CXRoaXMuY2hpbGRXaWRnZXRzID0gJCggJC51bmlxdWUoIGNoaWxkV2lkZ2V0cyApICk7CgkJdGhp
cy5fYWRkQ2xhc3MoIHRoaXMuY2hpbGRXaWRnZXRzLCAidWktY29udHJvbGdyb3VwLWl0ZW0iICk7
Cgl9LAoKCV9jYWxsQ2hpbGRNZXRob2Q6IGZ1bmN0aW9uKCBtZXRob2QgKSB7CgkJdGhpcy5jaGls
ZFdpZGdldHMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBlbGVtZW50ID0gJCggdGhpcyApLAoJ
CQkJZGF0YSA9IGVsZW1lbnQuZGF0YSggInVpLWNvbnRyb2xncm91cC1kYXRhIiApOwoJCQlpZiAo
IGRhdGEgJiYgZGF0YVsgbWV0aG9kIF0gKSB7CgkJCQlkYXRhWyBtZXRob2QgXSgpOwoJCQl9CgkJ
fSApOwoJfSwKCglfdXBkYXRlQ29ybmVyQ2xhc3M6IGZ1bmN0aW9uKCBlbGVtZW50LCBwb3NpdGlv
biApIHsKCQl2YXIgcmVtb3ZlID0gInVpLWNvcm5lci10b3AgdWktY29ybmVyLWJvdHRvbSB1aS1j
b3JuZXItbGVmdCB1aS1jb3JuZXItcmlnaHQgdWktY29ybmVyLWFsbCI7CgkJdmFyIGFkZCA9IHRo
aXMuX2J1aWxkU2ltcGxlT3B0aW9ucyggcG9zaXRpb24sICJsYWJlbCIgKS5jbGFzc2VzLmxhYmVs
OwoKCQl0aGlzLl9yZW1vdmVDbGFzcyggZWxlbWVudCwgbnVsbCwgcmVtb3ZlICk7CgkJdGhpcy5f
YWRkQ2xhc3MoIGVsZW1lbnQsIG51bGwsIGFkZCApOwoJfSwKCglfYnVpbGRTaW1wbGVPcHRpb25z
OiBmdW5jdGlvbiggcG9zaXRpb24sIGtleSApIHsKCQl2YXIgZGlyZWN0aW9uID0gdGhpcy5vcHRp
b25zLmRpcmVjdGlvbiA9PT0gInZlcnRpY2FsIjsKCQl2YXIgcmVzdWx0ID0gewoJCQljbGFzc2Vz
OiB7fQoJCX07CgkJcmVzdWx0LmNsYXNzZXNbIGtleSBdID0gewoJCQkibWlkZGxlIjogIiIsCgkJ
CSJmaXJzdCI6ICJ1aS1jb3JuZXItIiArICggZGlyZWN0aW9uID8gInRvcCIgOiAibGVmdCIgKSwK
CQkJImxhc3QiOiAidWktY29ybmVyLSIgKyAoIGRpcmVjdGlvbiA/ICJib3R0b20iIDogInJpZ2h0
IiApLAoJCQkib25seSI6ICJ1aS1jb3JuZXItYWxsIgoJCX1bIHBvc2l0aW9uIF07CgoJCXJldHVy
biByZXN1bHQ7Cgl9LAoKCV9zcGlubmVyT3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uICkgewoJ
CXZhciBvcHRpb25zID0gdGhpcy5fYnVpbGRTaW1wbGVPcHRpb25zKCBwb3NpdGlvbiwgInVpLXNw
aW5uZXIiICk7CgoJCW9wdGlvbnMuY2xhc3Nlc1sgInVpLXNwaW5uZXItdXAiIF0gPSAiIjsKCQlv
cHRpb25zLmNsYXNzZXNbICJ1aS1zcGlubmVyLWRvd24iIF0gPSAiIjsKCgkJcmV0dXJuIG9wdGlv
bnM7Cgl9LAoKCV9idXR0b25PcHRpb25zOiBmdW5jdGlvbiggcG9zaXRpb24gKSB7CgkJcmV0dXJu
IHRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyggcG9zaXRpb24sICJ1aS1idXR0b24iICk7Cgl9LAoK
CV9jaGVja2JveHJhZGlvT3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uICkgewoJCXJldHVybiB0
aGlzLl9idWlsZFNpbXBsZU9wdGlvbnMoIHBvc2l0aW9uLCAidWktY2hlY2tib3hyYWRpby1sYWJl
bCIgKTsKCX0sCgoJX3NlbGVjdG1lbnVPcHRpb25zOiBmdW5jdGlvbiggcG9zaXRpb24gKSB7CgkJ
dmFyIGRpcmVjdGlvbiA9IHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT09ICJ2ZXJ0aWNhbCI7CgkJ
cmV0dXJuIHsKCQkJd2lkdGg6IGRpcmVjdGlvbiA/ICJhdXRvIiA6IGZhbHNlLAoJCQljbGFzc2Vz
OiB7CgkJCQltaWRkbGU6IHsKCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tb3BlbiI6ICIiLAoJ
CQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQiOiAiIgoJCQkJfSwKCQkJCWZpcnN0OiB7
CgkJCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW4iOiAidWktY29ybmVyLSIgKyAoIGRpcmVj
dGlvbiA/ICJ0b3AiIDogInRsIiApLAoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQi
OiAidWktY29ybmVyLSIgKyAoIGRpcmVjdGlvbiA/ICJ0b3AiIDogImxlZnQiICkKCQkJCX0sCgkJ
CQlsYXN0OiB7CgkJCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW4iOiBkaXJlY3Rpb24gPyAi
IiA6ICJ1aS1jb3JuZXItdHIiLAoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQiOiAi
dWktY29ybmVyLSIgKyAoIGRpcmVjdGlvbiA/ICJib3R0b20iIDogInJpZ2h0IiApCgkJCQl9LAoJ
CQkJb25seTogewoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1vcGVuIjogInVpLWNvcm5lci10
b3AiLAoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQiOiAidWktY29ybmVyLWFsbCIK
CQkJCX0KCgkJCX1bIHBvc2l0aW9uIF0KCQl9OwoJfSwKCglfcmVzb2x2ZUNsYXNzZXNWYWx1ZXM6
IGZ1bmN0aW9uKCBjbGFzc2VzLCBpbnN0YW5jZSApIHsKCQl2YXIgcmVzdWx0ID0ge307CgkJJC5l
YWNoKCBjbGFzc2VzLCBmdW5jdGlvbigga2V5ICkgewoJCQl2YXIgY3VycmVudCA9IGluc3RhbmNl
Lm9wdGlvbnMuY2xhc3Nlc1sga2V5IF0gfHwgIiI7CgkJCWN1cnJlbnQgPSAkLnRyaW0oIGN1cnJl
bnQucmVwbGFjZSggY29udHJvbGdyb3VwQ29ybmVyUmVnZXgsICIiICkgKTsKCQkJcmVzdWx0WyBr
ZXkgXSA9ICggY3VycmVudCArICIgIiArIGNsYXNzZXNbIGtleSBdICkucmVwbGFjZSggL1xzKy9n
LCAiICIgKTsKCQl9ICk7CgkJcmV0dXJuIHJlc3VsdDsKCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rp
b24oIGtleSwgdmFsdWUgKSB7CgkJaWYgKCBrZXkgPT09ICJkaXJlY3Rpb24iICkgewoJCQl0aGlz
Ll9yZW1vdmVDbGFzcyggInVpLWNvbnRyb2xncm91cC0iICsgdGhpcy5vcHRpb25zLmRpcmVjdGlv
biApOwoJCX0KCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCQlpZiAoIGtleSA9PT0gImRp
c2FibGVkIiApIHsKCQkJdGhpcy5fY2FsbENoaWxkTWV0aG9kKCB2YWx1ZSA/ICJkaXNhYmxlIiA6
ICJlbmFibGUiICk7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMucmVmcmVzaCgpOwoJfSwKCglyZWZy
ZXNoOiBmdW5jdGlvbigpIHsKCQl2YXIgY2hpbGRyZW4sCgkJCXRoYXQgPSB0aGlzOwoKCQl0aGlz
Ll9hZGRDbGFzcyggInVpLWNvbnRyb2xncm91cCB1aS1jb250cm9sZ3JvdXAtIiArIHRoaXMub3B0
aW9ucy5kaXJlY3Rpb24gKTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09PSAiaG9y
aXpvbnRhbCIgKSB7CgkJCXRoaXMuX2FkZENsYXNzKCBudWxsLCAidWktaGVscGVyLWNsZWFyZml4
IiApOwoJCX0KCQl0aGlzLl9pbml0V2lkZ2V0cygpOwoKCQljaGlsZHJlbiA9IHRoaXMuY2hpbGRX
aWRnZXRzOwoKCQkvLyBXZSBmaWx0ZXIgaGVyZSBiZWNhdXNlIHdlIG5lZWQgdG8gdHJhY2sgYWxs
IGNoaWxkV2lkZ2V0cyBub3QganVzdCB0aGUgdmlzaWJsZSBvbmVzCgkJaWYgKCB0aGlzLm9wdGlv
bnMub25seVZpc2libGUgKSB7CgkJCWNoaWxkcmVuID0gY2hpbGRyZW4uZmlsdGVyKCAiOnZpc2li
bGUiICk7CgkJfQoKCQlpZiAoIGNoaWxkcmVuLmxlbmd0aCApIHsKCgkJCS8vIFdlIGRvIHRoaXMg
bGFzdCBiZWNhdXNlIHdlIG5lZWQgdG8gbWFrZSBzdXJlIGFsbCBlbmhhbmNtZW50IGlzIGRvbmUK
CQkJLy8gYmVmb3JlIGRldGVybWluaW5nIGZpcnN0IGFuZCBsYXN0CgkJCSQuZWFjaCggWyAiZmly
c3QiLCAibGFzdCIgXSwgZnVuY3Rpb24oIGluZGV4LCB2YWx1ZSApIHsKCQkJCXZhciBpbnN0YW5j
ZSA9IGNoaWxkcmVuWyB2YWx1ZSBdKCkuZGF0YSggInVpLWNvbnRyb2xncm91cC1kYXRhIiApOwoK
CQkJCWlmICggaW5zdGFuY2UgJiYgdGhhdFsgIl8iICsgaW5zdGFuY2Uud2lkZ2V0TmFtZSArICJP
cHRpb25zIiBdICkgewoJCQkJCXZhciBvcHRpb25zID0gdGhhdFsgIl8iICsgaW5zdGFuY2Uud2lk
Z2V0TmFtZSArICJPcHRpb25zIiBdKAoJCQkJCQljaGlsZHJlbi5sZW5ndGggPT09IDEgPyAib25s
eSIgOiB2YWx1ZQoJCQkJCSk7CgkJCQkJb3B0aW9ucy5jbGFzc2VzID0gdGhhdC5fcmVzb2x2ZUNs
YXNzZXNWYWx1ZXMoIG9wdGlvbnMuY2xhc3NlcywgaW5zdGFuY2UgKTsKCQkJCQlpbnN0YW5jZS5l
bGVtZW50WyBpbnN0YW5jZS53aWRnZXROYW1lIF0oIG9wdGlvbnMgKTsKCQkJCX0gZWxzZSB7CgkJ
CQkJdGhhdC5fdXBkYXRlQ29ybmVyQ2xhc3MoIGNoaWxkcmVuWyB2YWx1ZSBdKCksIHZhbHVlICk7
CgkJCQl9CgkJCX0gKTsKCgkJCS8vIEZpbmFsbHkgY2FsbCB0aGUgcmVmcmVzaCBtZXRob2Qgb24g
ZWFjaCBvZiB0aGUgY2hpbGQgd2lkZ2V0cy4KCQkJdGhpcy5fY2FsbENoaWxkTWV0aG9kKCAicmVm
cmVzaCIgKTsKCQl9Cgl9Cn0gKTsKCi8qIQogKiBqUXVlcnkgVUkgQ2hlY2tib3hyYWRpbyAxLjEy
LjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRp
b24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vu
c2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IENoZWNrYm94
cmFkaW8KLy8+Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogRW5oYW5jZXMgYSBmb3Jt
IHdpdGggbXVsdGlwbGUgdGhlbWVhYmxlIGNoZWNrYm94ZXMgb3IgcmFkaW8gYnV0dG9ucy4KLy8+
PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2NoZWNrYm94cmFkaW8vCi8vPj5kZW1vczog
aHR0cDovL2pxdWVyeXVpLmNvbS9jaGVja2JveHJhZGlvLwovLz4+Y3NzLnN0cnVjdHVyZTogLi4v
Li4vdGhlbWVzL2Jhc2UvY29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9i
YXNlL2J1dHRvbi5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NoZWNr
Ym94cmFkaW8uY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoK
CgokLndpZGdldCggInVpLmNoZWNrYm94cmFkaW8iLCBbICQudWkuZm9ybVJlc2V0TWl4aW4sIHsK
CXZlcnNpb246ICIxLjEyLjEiLAoJb3B0aW9uczogewoJCWRpc2FibGVkOiBudWxsLAoJCWxhYmVs
OiBudWxsLAoJCWljb246IHRydWUsCgkJY2xhc3NlczogewoJCQkidWktY2hlY2tib3hyYWRpby1s
YWJlbCI6ICJ1aS1jb3JuZXItYWxsIiwKCQkJInVpLWNoZWNrYm94cmFkaW8taWNvbiI6ICJ1aS1j
b3JuZXItYWxsIgoJCX0KCX0sCgoJX2dldENyZWF0ZU9wdGlvbnM6IGZ1bmN0aW9uKCkgewoJCXZh
ciBkaXNhYmxlZCwgbGFiZWxzOwoJCXZhciB0aGF0ID0gdGhpczsKCQl2YXIgb3B0aW9ucyA9IHRo
aXMuX3N1cGVyKCkgfHwge307CgoJCS8vIFdlIHJlYWQgdGhlIHR5cGUgaGVyZSwgYmVjYXVzZSBp
dCBtYWtlcyBtb3JlIHNlbnNlIHRvIHRocm93IGEgZWxlbWVudCB0eXBlIGVycm9yIGZpcnN0LAoJ
CS8vIHJhdGhlciB0aGVuIHRoZSBlcnJvciBmb3IgbGFjayBvZiBhIGxhYmVsLiBPZnRlbiBpZiBp
dHMgdGhlIHdyb25nIHR5cGUsIGl0CgkJLy8gd29uJ3QgaGF2ZSBhIGxhYmVsIChlLmcuIGNhbGxp
bmcgb24gYSBkaXYsIGJ0biwgZXRjKQoJCXRoaXMuX3JlYWRUeXBlKCk7CgoJCWxhYmVscyA9IHRo
aXMuZWxlbWVudC5sYWJlbHMoKTsKCgkJLy8gSWYgdGhlcmUgYXJlIG11bHRpcGxlIGxhYmVscywg
dXNlIHRoZSBsYXN0IG9uZQoJCXRoaXMubGFiZWwgPSAkKCBsYWJlbHNbIGxhYmVscy5sZW5ndGgg
LSAxIF0gKTsKCQlpZiAoICF0aGlzLmxhYmVsLmxlbmd0aCApIHsKCQkJJC5lcnJvciggIk5vIGxh
YmVsIGZvdW5kIGZvciBjaGVja2JveHJhZGlvIHdpZGdldCIgKTsKCQl9CgoJCXRoaXMub3JpZ2lu
YWxMYWJlbCA9ICIiOwoKCQkvLyBXZSBuZWVkIHRvIGdldCB0aGUgbGFiZWwgdGV4dCBidXQgdGhp
cyBtYXkgYWxzbyBuZWVkIHRvIG1ha2Ugc3VyZSBpdCBkb2VzIG5vdCBjb250YWluIHRoZQoJCS8v
IGlucHV0IGl0c2VsZi4KCQl0aGlzLmxhYmVsLmNvbnRlbnRzKCkubm90KCB0aGlzLmVsZW1lbnRb
IDAgXSApLmVhY2goIGZ1bmN0aW9uKCkgewoKCQkJLy8gVGhlIGxhYmVsIGNvbnRlbnRzIGNvdWxk
IGJlIHRleHQsIGh0bWwsIG9yIGEgbWl4LiBXZSBjb25jYXQgZWFjaCBlbGVtZW50IHRvIGdldCBh
CgkJCS8vIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgbGFiZWwsIHdpdGhvdXQgdGhlIGlu
cHV0IGFzIHBhcnQgb2YgaXQuCgkJCXRoYXQub3JpZ2luYWxMYWJlbCArPSB0aGlzLm5vZGVUeXBl
ID09PSAzID8gJCggdGhpcyApLnRleHQoKSA6IHRoaXMub3V0ZXJIVE1MOwoJCX0gKTsKCgkJLy8g
U2V0IHRoZSBsYWJlbCBvcHRpb24gaWYgd2UgZm91bmQgbGFiZWwgdGV4dAoJCWlmICggdGhpcy5v
cmlnaW5hbExhYmVsICkgewoJCQlvcHRpb25zLmxhYmVsID0gdGhpcy5vcmlnaW5hbExhYmVsOwoJ
CX0KCgkJZGlzYWJsZWQgPSB0aGlzLmVsZW1lbnRbIDAgXS5kaXNhYmxlZDsKCQlpZiAoIGRpc2Fi
bGVkICE9IG51bGwgKSB7CgkJCW9wdGlvbnMuZGlzYWJsZWQgPSBkaXNhYmxlZDsKCQl9CgkJcmV0
dXJuIG9wdGlvbnM7Cgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXZhciBjaGVja2VkID0g
dGhpcy5lbGVtZW50WyAwIF0uY2hlY2tlZDsKCgkJdGhpcy5fYmluZEZvcm1SZXNldEhhbmRsZXIo
KTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgPT0gbnVsbCApIHsKCQkJdGhpcy5vcHRp
b25zLmRpc2FibGVkID0gdGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQ7CgkJfQoKCQl0aGlzLl9z
ZXRPcHRpb24oICJkaXNhYmxlZCIsIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApOwoJCXRoaXMuX2Fk
ZENsYXNzKCAidWktY2hlY2tib3hyYWRpbyIsICJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGUi
ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMubGFiZWwsICJ1aS1jaGVja2JveHJhZGlvLWxhYmVs
IiwgInVpLWJ1dHRvbiB1aS13aWRnZXQiICk7CgoJCWlmICggdGhpcy50eXBlID09PSAicmFkaW8i
ICkgewoJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5sYWJlbCwgInVpLWNoZWNrYm94cmFkaW8tcmFk
aW8tbGFiZWwiICk7CgkJfQoKCQlpZiAoIHRoaXMub3B0aW9ucy5sYWJlbCAmJiB0aGlzLm9wdGlv
bnMubGFiZWwgIT09IHRoaXMub3JpZ2luYWxMYWJlbCApIHsKCQkJdGhpcy5fdXBkYXRlTGFiZWwo
KTsKCQl9IGVsc2UgaWYgKCB0aGlzLm9yaWdpbmFsTGFiZWwgKSB7CgkJCXRoaXMub3B0aW9ucy5s
YWJlbCA9IHRoaXMub3JpZ2luYWxMYWJlbDsKCQl9CgoJCXRoaXMuX2VuaGFuY2UoKTsKCgkJaWYg
KCBjaGVja2VkICkgewoJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5sYWJlbCwgInVpLWNoZWNrYm94
cmFkaW8tY2hlY2tlZCIsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCWlmICggdGhpcy5pY29uICkg
ewoJCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuaWNvbiwgbnVsbCwgInVpLXN0YXRlLWhvdmVyIiAp
OwoJCQl9CgkJfQoKCQl0aGlzLl9vbiggewoJCQljaGFuZ2U6ICJfdG9nZ2xlQ2xhc3NlcyIsCgkJ
CWZvY3VzOiBmdW5jdGlvbigpIHsKCQkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmxhYmVsLCBudWxs
LCAidWktc3RhdGUtZm9jdXMgdWktdmlzdWFsLWZvY3VzIiApOwoJCQl9LAoJCQlibHVyOiBmdW5j
dGlvbigpIHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmxhYmVsLCBudWxsLCAidWktc3Rh
dGUtZm9jdXMgdWktdmlzdWFsLWZvY3VzIiApOwoJCQl9CgkJfSApOwoJfSwKCglfcmVhZFR5cGU6
IGZ1bmN0aW9uKCkgewoJCXZhciBub2RlTmFtZSA9IHRoaXMuZWxlbWVudFsgMCBdLm5vZGVOYW1l
LnRvTG93ZXJDYXNlKCk7CgkJdGhpcy50eXBlID0gdGhpcy5lbGVtZW50WyAwIF0udHlwZTsKCQlp
ZiAoIG5vZGVOYW1lICE9PSAiaW5wdXQiIHx8ICEvcmFkaW98Y2hlY2tib3gvLnRlc3QoIHRoaXMu
dHlwZSApICkgewoJCQkkLmVycm9yKCAiQ2FuJ3QgY3JlYXRlIGNoZWNrYm94cmFkaW8gb24gZWxl
bWVudC5ub2RlTmFtZT0iICsgbm9kZU5hbWUgKwoJCQkJIiBhbmQgZWxlbWVudC50eXBlPSIgKyB0
aGlzLnR5cGUgKTsKCQl9Cgl9LAoKCS8vIFN1cHBvcnQgalF1ZXJ5IE1vYmlsZSBlbmhhbmNlZCBv
cHRpb24KCV9lbmhhbmNlOiBmdW5jdGlvbigpIHsKCQl0aGlzLl91cGRhdGVJY29uKCB0aGlzLmVs
ZW1lbnRbIDAgXS5jaGVja2VkICk7Cgl9LAoKCXdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJu
IHRoaXMubGFiZWw7Cgl9LAoKCV9nZXRSYWRpb0dyb3VwOiBmdW5jdGlvbigpIHsKCQl2YXIgZ3Jv
dXA7CgkJdmFyIG5hbWUgPSB0aGlzLmVsZW1lbnRbIDAgXS5uYW1lOwoJCXZhciBuYW1lU2VsZWN0
b3IgPSAiaW5wdXRbbmFtZT0nIiArICQudWkuZXNjYXBlU2VsZWN0b3IoIG5hbWUgKSArICInXSI7
CgoJCWlmICggIW5hbWUgKSB7CgkJCXJldHVybiAkKCBbXSApOwoJCX0KCgkJaWYgKCB0aGlzLmZv
cm0ubGVuZ3RoICkgewoJCQlncm91cCA9ICQoIHRoaXMuZm9ybVsgMCBdLmVsZW1lbnRzICkuZmls
dGVyKCBuYW1lU2VsZWN0b3IgKTsKCQl9IGVsc2UgewoKCQkJLy8gTm90IGluc2lkZSBhIGZvcm0s
IGNoZWNrIGFsbCBpbnB1dHMgdGhhdCBhbHNvIGFyZSBub3QgaW5zaWRlIGEgZm9ybQoJCQlncm91
cCA9ICQoIG5hbWVTZWxlY3RvciApLmZpbHRlciggZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gJCgg
dGhpcyApLmZvcm0oKS5sZW5ndGggPT09IDA7CgkJCX0gKTsKCQl9CgoJCXJldHVybiBncm91cC5u
b3QoIHRoaXMuZWxlbWVudCApOwoJfSwKCglfdG9nZ2xlQ2xhc3NlczogZnVuY3Rpb24oKSB7CgkJ
dmFyIGNoZWNrZWQgPSB0aGlzLmVsZW1lbnRbIDAgXS5jaGVja2VkOwoJCXRoaXMuX3RvZ2dsZUNs
YXNzKCB0aGlzLmxhYmVsLCAidWktY2hlY2tib3hyYWRpby1jaGVja2VkIiwgInVpLXN0YXRlLWFj
dGl2ZSIsIGNoZWNrZWQgKTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuaWNvbiAmJiB0aGlzLnR5cGUg
PT09ICJjaGVja2JveCIgKSB7CgkJCXRoaXMuX3RvZ2dsZUNsYXNzKCB0aGlzLmljb24sIG51bGws
ICJ1aS1pY29uLWNoZWNrIHVpLXN0YXRlLWNoZWNrZWQiLCBjaGVja2VkICkKCQkJCS5fdG9nZ2xl
Q2xhc3MoIHRoaXMuaWNvbiwgbnVsbCwgInVpLWljb24tYmxhbmsiLCAhY2hlY2tlZCApOwoJCX0K
CgkJaWYgKCB0aGlzLnR5cGUgPT09ICJyYWRpbyIgKSB7CgkJCXRoaXMuX2dldFJhZGlvR3JvdXAo
KQoJCQkJLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJCXZhciBpbnN0YW5jZSA9ICQoIHRoaXMgKS5j
aGVja2JveHJhZGlvKCAiaW5zdGFuY2UiICk7CgoJCQkJCWlmICggaW5zdGFuY2UgKSB7CgkJCQkJ
CWluc3RhbmNlLl9yZW1vdmVDbGFzcyggaW5zdGFuY2UubGFiZWwsCgkJCQkJCQkidWktY2hlY2ti
b3hyYWRpby1jaGVja2VkIiwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQkJCQl9CgkJCQl9ICk7CgkJ
fQoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhpcy5fdW5iaW5kRm9ybVJlc2V0SGFu
ZGxlcigpOwoKCQlpZiAoIHRoaXMuaWNvbiApIHsKCQkJdGhpcy5pY29uLnJlbW92ZSgpOwoJCQl0
aGlzLmljb25TcGFjZS5yZW1vdmUoKTsKCQl9Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBr
ZXksIHZhbHVlICkgewoKCQkvLyBXZSBkb24ndCBhbGxvdyB0aGUgdmFsdWUgdG8gYmUgc2V0IHRv
IG5vdGhpbmcKCQlpZiAoIGtleSA9PT0gImxhYmVsIiAmJiAhdmFsdWUgKSB7CgkJCXJldHVybjsK
CQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCWlmICgga2V5ID09PSAiZGlzYWJs
ZWQiICkgewoJCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy5sYWJlbCwgbnVsbCwgInVpLXN0YXRl
LWRpc2FibGVkIiwgdmFsdWUgKTsKCQkJdGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQgPSB2YWx1
ZTsKCgkJCS8vIERvbid0IHJlZnJlc2ggd2hlbiBzZXR0aW5nIGRpc2FibGVkCgkJCXJldHVybjsK
CQl9CgkJdGhpcy5yZWZyZXNoKCk7Cgl9LAoKCV91cGRhdGVJY29uOiBmdW5jdGlvbiggY2hlY2tl
ZCApIHsKCQl2YXIgdG9BZGQgPSAidWktaWNvbiB1aS1pY29uLWJhY2tncm91bmQgIjsKCgkJaWYg
KCB0aGlzLm9wdGlvbnMuaWNvbiApIHsKCQkJaWYgKCAhdGhpcy5pY29uICkgewoJCQkJdGhpcy5p
Y29uID0gJCggIjxzcGFuPiIgKTsKCQkJCXRoaXMuaWNvblNwYWNlID0gJCggIjxzcGFuPiA8L3Nw
YW4+IiApOwoJCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuaWNvblNwYWNlLCAidWktY2hlY2tib3hy
YWRpby1pY29uLXNwYWNlIiApOwoJCQl9CgoJCQlpZiAoIHRoaXMudHlwZSA9PT0gImNoZWNrYm94
IiApIHsKCQkJCXRvQWRkICs9IGNoZWNrZWQgPyAidWktaWNvbi1jaGVjayB1aS1zdGF0ZS1jaGVj
a2VkIiA6ICJ1aS1pY29uLWJsYW5rIjsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmljb24s
IG51bGwsIGNoZWNrZWQgPyAidWktaWNvbi1ibGFuayIgOiAidWktaWNvbi1jaGVjayIgKTsKCQkJ
fSBlbHNlIHsKCQkJCXRvQWRkICs9ICJ1aS1pY29uLWJsYW5rIjsKCQkJfQoJCQl0aGlzLl9hZGRD
bGFzcyggdGhpcy5pY29uLCAidWktY2hlY2tib3hyYWRpby1pY29uIiwgdG9BZGQgKTsKCQkJaWYg
KCAhY2hlY2tlZCApIHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmljb24sIG51bGwsICJ1
aS1pY29uLWNoZWNrIHVpLXN0YXRlLWNoZWNrZWQiICk7CgkJCX0KCQkJdGhpcy5pY29uLnByZXBl
bmRUbyggdGhpcy5sYWJlbCApLmFmdGVyKCB0aGlzLmljb25TcGFjZSApOwoJCX0gZWxzZSBpZiAo
IHRoaXMuaWNvbiAhPT0gdW5kZWZpbmVkICkgewoJCQl0aGlzLmljb24ucmVtb3ZlKCk7CgkJCXRo
aXMuaWNvblNwYWNlLnJlbW92ZSgpOwoJCQlkZWxldGUgdGhpcy5pY29uOwoJCX0KCX0sCgoJX3Vw
ZGF0ZUxhYmVsOiBmdW5jdGlvbigpIHsKCgkJLy8gUmVtb3ZlIHRoZSBjb250ZW50cyBvZiB0aGUg
bGFiZWwgKCBtaW51cyB0aGUgaWNvbiwgaWNvbiBzcGFjZSwgYW5kIGlucHV0ICkKCQl2YXIgY29u
dGVudHMgPSB0aGlzLmxhYmVsLmNvbnRlbnRzKCkubm90KCB0aGlzLmVsZW1lbnRbIDAgXSApOwoJ
CWlmICggdGhpcy5pY29uICkgewoJCQljb250ZW50cyA9IGNvbnRlbnRzLm5vdCggdGhpcy5pY29u
WyAwIF0gKTsKCQl9CgkJaWYgKCB0aGlzLmljb25TcGFjZSApIHsKCQkJY29udGVudHMgPSBjb250
ZW50cy5ub3QoIHRoaXMuaWNvblNwYWNlWyAwIF0gKTsKCQl9CgkJY29udGVudHMucmVtb3ZlKCk7
CgoJCXRoaXMubGFiZWwuYXBwZW5kKCB0aGlzLm9wdGlvbnMubGFiZWwgKTsKCX0sCgoJcmVmcmVz
aDogZnVuY3Rpb24oKSB7CgkJdmFyIGNoZWNrZWQgPSB0aGlzLmVsZW1lbnRbIDAgXS5jaGVja2Vk
LAoJCQlpc0Rpc2FibGVkID0gdGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQ7CgoJCXRoaXMuX3Vw
ZGF0ZUljb24oIGNoZWNrZWQgKTsKCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy5sYWJlbCwgInVp
LWNoZWNrYm94cmFkaW8tY2hlY2tlZCIsICJ1aS1zdGF0ZS1hY3RpdmUiLCBjaGVja2VkICk7CgkJ
aWYgKCB0aGlzLm9wdGlvbnMubGFiZWwgIT09IG51bGwgKSB7CgkJCXRoaXMuX3VwZGF0ZUxhYmVs
KCk7CgkJfQoKCQlpZiAoIGlzRGlzYWJsZWQgIT09IHRoaXMub3B0aW9ucy5kaXNhYmxlZCApIHsK
CQkJdGhpcy5fc2V0T3B0aW9ucyggeyAiZGlzYWJsZWQiOiBpc0Rpc2FibGVkIH0gKTsKCQl9Cgl9
Cgp9IF0gKTsKCnZhciB3aWRnZXRzQ2hlY2tib3hyYWRpbyA9ICQudWkuY2hlY2tib3hyYWRpbzsK
CgovKiEKICogalF1ZXJ5IFVJIEJ1dHRvbiAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQog
KgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwog
KiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xp
Y2Vuc2UKICovCgovLz4+bGFiZWw6IEJ1dHRvbgovLz4+Z3JvdXA6IFdpZGdldHMKLy8+PmRlc2Ny
aXB0aW9uOiBFbmhhbmNlcyBhIGZvcm0gd2l0aCB0aGVtZWFibGUgYnV0dG9ucy4KLy8+PmRvY3M6
IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2J1dHRvbi8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5
dWkuY29tL2J1dHRvbi8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUu
Y3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9idXR0b24uY3NzCi8vPj5j
c3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgokLndpZGdldCggInVpLmJ1
dHRvbiIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJZGVmYXVsdEVsZW1lbnQ6ICI8YnV0dG9uPiIs
CglvcHRpb25zOiB7CgkJY2xhc3NlczogewoJCQkidWktYnV0dG9uIjogInVpLWNvcm5lci1hbGwi
CgkJfSwKCQlkaXNhYmxlZDogbnVsbCwKCQlpY29uOiBudWxsLAoJCWljb25Qb3NpdGlvbjogImJl
Z2lubmluZyIsCgkJbGFiZWw6IG51bGwsCgkJc2hvd0xhYmVsOiB0cnVlCgl9LAoKCV9nZXRDcmVh
dGVPcHRpb25zOiBmdW5jdGlvbigpIHsKCQl2YXIgZGlzYWJsZWQsCgoJCQkvLyBUaGlzIGlzIHRv
IHN1cHBvcnQgY2FzZXMgbGlrZSBpbiBqUXVlcnkgTW9iaWxlIHdoZXJlIHRoZSBiYXNlIHdpZGdl
dCBkb2VzIGhhdmUKCQkJLy8gYW4gaW1wbGVtZW50YXRpb24gb2YgX2dldENyZWF0ZU9wdGlvbnMK
CQkJb3B0aW9ucyA9IHRoaXMuX3N1cGVyKCkgfHwge307CgoJCXRoaXMuaXNJbnB1dCA9IHRoaXMu
ZWxlbWVudC5pcyggImlucHV0IiApOwoKCQlkaXNhYmxlZCA9IHRoaXMuZWxlbWVudFsgMCBdLmRp
c2FibGVkOwoJCWlmICggZGlzYWJsZWQgIT0gbnVsbCApIHsKCQkJb3B0aW9ucy5kaXNhYmxlZCA9
IGRpc2FibGVkOwoJCX0KCgkJdGhpcy5vcmlnaW5hbExhYmVsID0gdGhpcy5pc0lucHV0ID8gdGhp
cy5lbGVtZW50LnZhbCgpIDogdGhpcy5lbGVtZW50Lmh0bWwoKTsKCQlpZiAoIHRoaXMub3JpZ2lu
YWxMYWJlbCApIHsKCQkJb3B0aW9ucy5sYWJlbCA9IHRoaXMub3JpZ2luYWxMYWJlbDsKCQl9CgoJ
CXJldHVybiBvcHRpb25zOwoJfSwKCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQlpZiAoICF0aGlz
Lm9wdGlvbi5zaG93TGFiZWwgJiAhdGhpcy5vcHRpb25zLmljb24gKSB7CgkJCXRoaXMub3B0aW9u
cy5zaG93TGFiZWwgPSB0cnVlOwoJCX0KCgkJLy8gV2UgaGF2ZSB0byBjaGVjayB0aGUgb3B0aW9u
IGFnYWluIGhlcmUgZXZlbiB0aG91Z2ggd2UgZGlkIGluIF9nZXRDcmVhdGVPcHRpb25zLAoJCS8v
IGJlY2F1c2UgbnVsbCBtYXkgaGF2ZSBiZWVuIHBhc3NlZCBvbiBpbml0IHdoaWNoIHdvdWxkIG92
ZXJyaWRlIHdoYXQgd2FzIHNldCBpbgoJCS8vIF9nZXRDcmVhdGVPcHRpb25zCgkJaWYgKCB0aGlz
Lm9wdGlvbnMuZGlzYWJsZWQgPT0gbnVsbCApIHsKCQkJdGhpcy5vcHRpb25zLmRpc2FibGVkID0g
dGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQgfHwgZmFsc2U7CgkJfQoKCQl0aGlzLmhhc1RpdGxl
ID0gISF0aGlzLmVsZW1lbnQuYXR0ciggInRpdGxlIiApOwoKCQkvLyBDaGVjayB0byBzZWUgaWYg
dGhlIGxhYmVsIG5lZWRzIHRvIGJlIHNldCBvciBpZiBpdHMgYWxyZWFkeSBjb3JyZWN0CgkJaWYg
KCB0aGlzLm9wdGlvbnMubGFiZWwgJiYgdGhpcy5vcHRpb25zLmxhYmVsICE9PSB0aGlzLm9yaWdp
bmFsTGFiZWwgKSB7CgkJCWlmICggdGhpcy5pc0lucHV0ICkgewoJCQkJdGhpcy5lbGVtZW50LnZh
bCggdGhpcy5vcHRpb25zLmxhYmVsICk7CgkJCX0gZWxzZSB7CgkJCQl0aGlzLmVsZW1lbnQuaHRt
bCggdGhpcy5vcHRpb25zLmxhYmVsICk7CgkJCX0KCQl9CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1i
dXR0b24iLCAidWktd2lkZ2V0IiApOwoJCXRoaXMuX3NldE9wdGlvbiggImRpc2FibGVkIiwgdGhp
cy5vcHRpb25zLmRpc2FibGVkICk7CgkJdGhpcy5fZW5oYW5jZSgpOwoKCQlpZiAoIHRoaXMuZWxl
bWVudC5pcyggImEiICkgKSB7CgkJCXRoaXMuX29uKCB7CgkJCQkia2V5dXAiOiBmdW5jdGlvbigg
ZXZlbnQgKSB7CgkJCQkJaWYgKCBldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuU1BBQ0Ug
KSB7CgkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgoJCQkJCQkvLyBTdXBwb3J0OiBQaGFu
dG9tSlMgPD0gMS45LCBJRSA4IE9ubHkKCQkJCQkJLy8gSWYgYSBuYXRpdmUgY2xpY2sgaXMgYXZh
aWxhYmxlIHVzZSBpdCBzbyB3ZSBhY3R1YWxseSBjYXVzZSBuYXZpZ2F0aW9uCgkJCQkJCS8vIG90
aGVyd2lzZSBqdXN0IHRyaWdnZXIgYSBjbGljayBldmVudAoJCQkJCQlpZiAoIHRoaXMuZWxlbWVu
dFsgMCBdLmNsaWNrICkgewoJCQkJCQkJdGhpcy5lbGVtZW50WyAwIF0uY2xpY2soKTsKCQkJCQkJ
fSBlbHNlIHsKCQkJCQkJCXRoaXMuZWxlbWVudC50cmlnZ2VyKCAiY2xpY2siICk7CgkJCQkJCX0K
CQkJCQl9CgkJCQl9CgkJCX0gKTsKCQl9Cgl9LAoKCV9lbmhhbmNlOiBmdW5jdGlvbigpIHsKCQlp
ZiAoICF0aGlzLmVsZW1lbnQuaXMoICJidXR0b24iICkgKSB7CgkJCXRoaXMuZWxlbWVudC5hdHRy
KCAicm9sZSIsICJidXR0b24iICk7CgkJfQoKCQlpZiAoIHRoaXMub3B0aW9ucy5pY29uICkgewoJ
CQl0aGlzLl91cGRhdGVJY29uKCAiaWNvbiIsIHRoaXMub3B0aW9ucy5pY29uICk7CgkJCXRoaXMu
X3VwZGF0ZVRvb2x0aXAoKTsKCQl9Cgl9LAoKCV91cGRhdGVUb29sdGlwOiBmdW5jdGlvbigpIHsK
CQl0aGlzLnRpdGxlID0gdGhpcy5lbGVtZW50LmF0dHIoICJ0aXRsZSIgKTsKCgkJaWYgKCAhdGhp
cy5vcHRpb25zLnNob3dMYWJlbCAmJiAhdGhpcy50aXRsZSApIHsKCQkJdGhpcy5lbGVtZW50LmF0
dHIoICJ0aXRsZSIsIHRoaXMub3B0aW9ucy5sYWJlbCApOwoJCX0KCX0sCgoJX3VwZGF0ZUljb246
IGZ1bmN0aW9uKCBvcHRpb24sIHZhbHVlICkgewoJCXZhciBpY29uID0gb3B0aW9uICE9PSAiaWNv
blBvc2l0aW9uIiwKCQkJcG9zaXRpb24gPSBpY29uID8gdGhpcy5vcHRpb25zLmljb25Qb3NpdGlv
biA6IHZhbHVlLAoJCQlkaXNwbGF5QmxvY2sgPSBwb3NpdGlvbiA9PT0gInRvcCIgfHwgcG9zaXRp
b24gPT09ICJib3R0b20iOwoKCQkvLyBDcmVhdGUgaWNvbgoJCWlmICggIXRoaXMuaWNvbiApIHsK
CQkJdGhpcy5pY29uID0gJCggIjxzcGFuPiIgKTsKCgkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmlj
b24sICJ1aS1idXR0b24taWNvbiIsICJ1aS1pY29uIiApOwoKCQkJaWYgKCAhdGhpcy5vcHRpb25z
LnNob3dMYWJlbCApIHsKCQkJCXRoaXMuX2FkZENsYXNzKCAidWktYnV0dG9uLWljb24tb25seSIg
KTsKCQkJfQoJCX0gZWxzZSBpZiAoIGljb24gKSB7CgoJCQkvLyBJZiB3ZSBhcmUgdXBkYXRpbmcg
dGhlIGljb24gcmVtb3ZlIHRoZSBvbGQgaWNvbiBjbGFzcwoJCQl0aGlzLl9yZW1vdmVDbGFzcygg
dGhpcy5pY29uLCBudWxsLCB0aGlzLm9wdGlvbnMuaWNvbiApOwoJCX0KCgkJLy8gSWYgd2UgYXJl
IHVwZGF0aW5nIHRoZSBpY29uIGFkZCB0aGUgbmV3IGljb24gY2xhc3MKCQlpZiAoIGljb24gKSB7
CgkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmljb24sIG51bGwsIHZhbHVlICk7CgkJfQoKCQl0aGlz
Ll9hdHRhY2hJY29uKCBwb3NpdGlvbiApOwoKCQkvLyBJZiB0aGUgaWNvbiBpcyBvbiB0b3Agb3Ig
Ym90dG9tIHdlIG5lZWQgdG8gYWRkIHRoZSB1aS13aWRnZXQtaWNvbi1ibG9jayBjbGFzcyBhbmQg
cmVtb3ZlCgkJLy8gdGhlIGljb25TcGFjZSBpZiB0aGVyZSBpcyBvbmUuCgkJaWYgKCBkaXNwbGF5
QmxvY2sgKSB7CgkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmljb24sIG51bGwsICJ1aS13aWRnZXQt
aWNvbi1ibG9jayIgKTsKCQkJaWYgKCB0aGlzLmljb25TcGFjZSApIHsKCQkJCXRoaXMuaWNvblNw
YWNlLnJlbW92ZSgpOwoJCQl9CgkJfSBlbHNlIHsKCgkJCS8vIFBvc2l0aW9uIGlzIGJlZ2lubmlu
ZyBvciBlbmQgc28gcmVtb3ZlIHRoZSB1aS13aWRnZXQtaWNvbi1ibG9jayBjbGFzcyBhbmQgYWRk
IHRoZQoJCQkvLyBzcGFjZSBpZiBpdCBkb2VzIG5vdCBleGlzdAoJCQlpZiAoICF0aGlzLmljb25T
cGFjZSApIHsKCQkJCXRoaXMuaWNvblNwYWNlID0gJCggIjxzcGFuPiA8L3NwYW4+IiApOwoJCQkJ
dGhpcy5fYWRkQ2xhc3MoIHRoaXMuaWNvblNwYWNlLCAidWktYnV0dG9uLWljb24tc3BhY2UiICk7
CgkJCX0KCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuaWNvbiwgbnVsbCwgInVpLXdpZ2V0LWlj
b24tYmxvY2siICk7CgkJCXRoaXMuX2F0dGFjaEljb25TcGFjZSggcG9zaXRpb24gKTsKCQl9Cgl9
LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggInJv
bGUiICk7CgoJCWlmICggdGhpcy5pY29uICkgewoJCQl0aGlzLmljb24ucmVtb3ZlKCk7CgkJfQoJ
CWlmICggdGhpcy5pY29uU3BhY2UgKSB7CgkJCXRoaXMuaWNvblNwYWNlLnJlbW92ZSgpOwoJCX0K
CQlpZiAoICF0aGlzLmhhc1RpdGxlICkgewoJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggInRp
dGxlIiApOwoJCX0KCX0sCgoJX2F0dGFjaEljb25TcGFjZTogZnVuY3Rpb24oIGljb25Qb3NpdGlv
biApIHsKCQl0aGlzLmljb25bIC9eKD86ZW5kfGJvdHRvbSkvLnRlc3QoIGljb25Qb3NpdGlvbiAp
ID8gImJlZm9yZSIgOiAiYWZ0ZXIiIF0oIHRoaXMuaWNvblNwYWNlICk7Cgl9LAoKCV9hdHRhY2hJ
Y29uOiBmdW5jdGlvbiggaWNvblBvc2l0aW9uICkgewoJCXRoaXMuZWxlbWVudFsgL14oPzplbmR8
Ym90dG9tKS8udGVzdCggaWNvblBvc2l0aW9uICkgPyAiYXBwZW5kIiA6ICJwcmVwZW5kIiBdKCB0
aGlzLmljb24gKTsKCX0sCgoJX3NldE9wdGlvbnM6IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJCXZh
ciBuZXdTaG93TGFiZWwgPSBvcHRpb25zLnNob3dMYWJlbCA9PT0gdW5kZWZpbmVkID8KCQkJCXRo
aXMub3B0aW9ucy5zaG93TGFiZWwgOgoJCQkJb3B0aW9ucy5zaG93TGFiZWwsCgkJCW5ld0ljb24g
PSBvcHRpb25zLmljb24gPT09IHVuZGVmaW5lZCA/IHRoaXMub3B0aW9ucy5pY29uIDogb3B0aW9u
cy5pY29uOwoKCQlpZiAoICFuZXdTaG93TGFiZWwgJiYgIW5ld0ljb24gKSB7CgkJCW9wdGlvbnMu
c2hvd0xhYmVsID0gdHJ1ZTsKCQl9CgkJdGhpcy5fc3VwZXIoIG9wdGlvbnMgKTsKCX0sCgoJX3Nl
dE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJaWYgKCBrZXkgPT09ICJpY29uIiAp
IHsKCQkJaWYgKCB2YWx1ZSApIHsKCQkJCXRoaXMuX3VwZGF0ZUljb24oIGtleSwgdmFsdWUgKTsK
CQkJfSBlbHNlIGlmICggdGhpcy5pY29uICkgewoJCQkJdGhpcy5pY29uLnJlbW92ZSgpOwoJCQkJ
aWYgKCB0aGlzLmljb25TcGFjZSApIHsKCQkJCQl0aGlzLmljb25TcGFjZS5yZW1vdmUoKTsKCQkJ
CX0KCQkJfQoJCX0KCgkJaWYgKCBrZXkgPT09ICJpY29uUG9zaXRpb24iICkgewoJCQl0aGlzLl91
cGRhdGVJY29uKCBrZXksIHZhbHVlICk7CgkJfQoKCQkvLyBNYWtlIHN1cmUgd2UgY2FuJ3QgZW5k
IHVwIHdpdGggYSBidXR0b24gdGhhdCBoYXMgbmVpdGhlciB0ZXh0IG5vciBpY29uCgkJaWYgKCBr
ZXkgPT09ICJzaG93TGFiZWwiICkgewoJCQkJdGhpcy5fdG9nZ2xlQ2xhc3MoICJ1aS1idXR0b24t
aWNvbi1vbmx5IiwgbnVsbCwgIXZhbHVlICk7CgkJCQl0aGlzLl91cGRhdGVUb29sdGlwKCk7CgkJ
fQoKCQlpZiAoIGtleSA9PT0gImxhYmVsIiApIHsKCQkJaWYgKCB0aGlzLmlzSW5wdXQgKSB7CgkJ
CQl0aGlzLmVsZW1lbnQudmFsKCB2YWx1ZSApOwoJCQl9IGVsc2UgewoKCQkJCS8vIElmIHRoZXJl
IGlzIGFuIGljb24sIGFwcGVuZCBpdCwgZWxzZSBub3RoaW5nIHRoZW4gYXBwZW5kIHRoZSB2YWx1
ZQoJCQkJLy8gdGhpcyBhdm9pZHMgcmVtb3ZhbCBvZiB0aGUgaWNvbiB3aGVuIHNldHRpbmcgbGFi
ZWwgdGV4dAoJCQkJdGhpcy5lbGVtZW50Lmh0bWwoIHZhbHVlICk7CgkJCQlpZiAoIHRoaXMuaWNv
biApIHsKCQkJCQl0aGlzLl9hdHRhY2hJY29uKCB0aGlzLm9wdGlvbnMuaWNvblBvc2l0aW9uICk7
CgkJCQkJdGhpcy5fYXR0YWNoSWNvblNwYWNlKCB0aGlzLm9wdGlvbnMuaWNvblBvc2l0aW9uICk7
CgkJCQl9CgkJCX0KCQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCWlmICgga2V5
ID09PSAiZGlzYWJsZWQiICkgewoJCQl0aGlzLl90b2dnbGVDbGFzcyggbnVsbCwgInVpLXN0YXRl
LWRpc2FibGVkIiwgdmFsdWUgKTsKCQkJdGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQgPSB2YWx1
ZTsKCQkJaWYgKCB2YWx1ZSApIHsKCQkJCXRoaXMuZWxlbWVudC5ibHVyKCk7CgkJCX0KCQl9Cgl9
LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoKCQkvLyBNYWtlIHN1cmUgdG8gb25seSBjaGVjayBk
aXNhYmxlZCBpZiBpdHMgYW4gZWxlbWVudCB0aGF0IHN1cHBvcnRzIHRoaXMgb3RoZXJ3aXNlCgkJ
Ly8gY2hlY2sgZm9yIHRoZSBkaXNhYmxlZCBjbGFzcyB0byBkZXRlcm1pbmUgc3RhdGUKCQl2YXIg
aXNEaXNhYmxlZCA9IHRoaXMuZWxlbWVudC5pcyggImlucHV0LCBidXR0b24iICkgPwoJCQl0aGlz
LmVsZW1lbnRbIDAgXS5kaXNhYmxlZCA6IHRoaXMuZWxlbWVudC5oYXNDbGFzcyggInVpLWJ1dHRv
bi1kaXNhYmxlZCIgKTsKCgkJaWYgKCBpc0Rpc2FibGVkICE9PSB0aGlzLm9wdGlvbnMuZGlzYWJs
ZWQgKSB7CgkJCXRoaXMuX3NldE9wdGlvbnMoIHsgZGlzYWJsZWQ6IGlzRGlzYWJsZWQgfSApOwoJ
CX0KCgkJdGhpcy5fdXBkYXRlVG9vbHRpcCgpOwoJfQp9ICk7CgovLyBERVBSRUNBVEVECmlmICgg
JC51aUJhY2tDb21wYXQgIT09IGZhbHNlICkgewoKCS8vIFRleHQgYW5kIEljb25zIG9wdGlvbnMK
CSQud2lkZ2V0KCAidWkuYnV0dG9uIiwgJC51aS5idXR0b24sIHsKCQlvcHRpb25zOiB7CgkJCXRl
eHQ6IHRydWUsCgkJCWljb25zOiB7CgkJCQlwcmltYXJ5OiBudWxsLAoJCQkJc2Vjb25kYXJ5OiBu
dWxsCgkJCX0KCQl9LAoKCQlfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQkJaWYgKCB0aGlzLm9wdGlv
bnMuc2hvd0xhYmVsICYmICF0aGlzLm9wdGlvbnMudGV4dCApIHsKCQkJCXRoaXMub3B0aW9ucy5z
aG93TGFiZWwgPSB0aGlzLm9wdGlvbnMudGV4dDsKCQkJfQoJCQlpZiAoICF0aGlzLm9wdGlvbnMu
c2hvd0xhYmVsICYmIHRoaXMub3B0aW9ucy50ZXh0ICkgewoJCQkJdGhpcy5vcHRpb25zLnRleHQg
PSB0aGlzLm9wdGlvbnMuc2hvd0xhYmVsOwoJCQl9CgkJCWlmICggIXRoaXMub3B0aW9ucy5pY29u
ICYmICggdGhpcy5vcHRpb25zLmljb25zLnByaW1hcnkgfHwKCQkJCQl0aGlzLm9wdGlvbnMuaWNv
bnMuc2Vjb25kYXJ5ICkgKSB7CgkJCQlpZiAoIHRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5ICkg
ewoJCQkJCXRoaXMub3B0aW9ucy5pY29uID0gdGhpcy5vcHRpb25zLmljb25zLnByaW1hcnk7CgkJ
CQl9IGVsc2UgewoJCQkJCXRoaXMub3B0aW9ucy5pY29uID0gdGhpcy5vcHRpb25zLmljb25zLnNl
Y29uZGFyeTsKCQkJCQl0aGlzLm9wdGlvbnMuaWNvblBvc2l0aW9uID0gImVuZCI7CgkJCQl9CgkJ
CX0gZWxzZSBpZiAoIHRoaXMub3B0aW9ucy5pY29uICkgewoJCQkJdGhpcy5vcHRpb25zLmljb25z
LnByaW1hcnkgPSB0aGlzLm9wdGlvbnMuaWNvbjsKCQkJfQoJCQl0aGlzLl9zdXBlcigpOwoJCX0s
CgoJCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCQlpZiAoIGtleSA9PT0g
InRleHQiICkgewoJCQkJdGhpcy5fc3VwZXIoICJzaG93TGFiZWwiLCB2YWx1ZSApOwoJCQkJcmV0
dXJuOwoJCQl9CgkJCWlmICgga2V5ID09PSAic2hvd0xhYmVsIiApIHsKCQkJCXRoaXMub3B0aW9u
cy50ZXh0ID0gdmFsdWU7CgkJCX0KCQkJaWYgKCBrZXkgPT09ICJpY29uIiApIHsKCQkJCXRoaXMu
b3B0aW9ucy5pY29ucy5wcmltYXJ5ID0gdmFsdWU7CgkJCX0KCQkJaWYgKCBrZXkgPT09ICJpY29u
cyIgKSB7CgkJCQlpZiAoIHZhbHVlLnByaW1hcnkgKSB7CgkJCQkJdGhpcy5fc3VwZXIoICJpY29u
IiwgdmFsdWUucHJpbWFyeSApOwoJCQkJCXRoaXMuX3N1cGVyKCAiaWNvblBvc2l0aW9uIiwgImJl
Z2lubmluZyIgKTsKCQkJCX0gZWxzZSBpZiAoIHZhbHVlLnNlY29uZGFyeSApIHsKCQkJCQl0aGlz
Ll9zdXBlciggImljb24iLCB2YWx1ZS5zZWNvbmRhcnkgKTsKCQkJCQl0aGlzLl9zdXBlciggImlj
b25Qb3NpdGlvbiIsICJlbmQiICk7CgkJCQl9CgkJCX0KCQkJdGhpcy5fc3VwZXJBcHBseSggYXJn
dW1lbnRzICk7CgkJfQoJfSApOwoKCSQuZm4uYnV0dG9uID0gKCBmdW5jdGlvbiggb3JpZyApIHsK
CQlyZXR1cm4gZnVuY3Rpb24oKSB7CgkJCWlmICggIXRoaXMubGVuZ3RoIHx8ICggdGhpcy5sZW5n
dGggJiYgdGhpc1sgMCBdLnRhZ05hbWUgIT09ICJJTlBVVCIgKSB8fAoJCQkJCSggdGhpcy5sZW5n
dGggJiYgdGhpc1sgMCBdLnRhZ05hbWUgPT09ICJJTlBVVCIgJiYgKAoJCQkJCQl0aGlzLmF0dHIo
ICJ0eXBlIiApICE9PSAiY2hlY2tib3giICYmIHRoaXMuYXR0ciggInR5cGUiICkgIT09ICJyYWRp
byIKCQkJCQkpICkgKSB7CgkJCQlyZXR1cm4gb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7
CgkJCX0KCQkJaWYgKCAhJC51aS5jaGVja2JveHJhZGlvICkgewoJCQkJJC5lcnJvciggIkNoZWNr
Ym94cmFkaW8gd2lkZ2V0IG1pc3NpbmciICk7CgkJCX0KCQkJaWYgKCBhcmd1bWVudHMubGVuZ3Ro
ID09PSAwICkgewoJCQkJcmV0dXJuIHRoaXMuY2hlY2tib3hyYWRpbyggewoJCQkJCSJpY29uIjog
ZmFsc2UKCQkJCX0gKTsKCQkJfQoJCQlyZXR1cm4gdGhpcy5jaGVja2JveHJhZGlvLmFwcGx5KCB0
aGlzLCBhcmd1bWVudHMgKTsKCQl9OwoJfSApKCAkLmZuLmJ1dHRvbiApOwoKCSQuZm4uYnV0dG9u
c2V0ID0gZnVuY3Rpb24oKSB7CgkJaWYgKCAhJC51aS5jb250cm9sZ3JvdXAgKSB7CgkJCSQuZXJy
b3IoICJDb250cm9sZ3JvdXAgd2lkZ2V0IG1pc3NpbmciICk7CgkJfQoJCWlmICggYXJndW1lbnRz
WyAwIF0gPT09ICJvcHRpb24iICYmIGFyZ3VtZW50c1sgMSBdID09PSAiaXRlbXMiICYmIGFyZ3Vt
ZW50c1sgMiBdICkgewoJCQlyZXR1cm4gdGhpcy5jb250cm9sZ3JvdXAuYXBwbHkoIHRoaXMsCgkJ
CQlbIGFyZ3VtZW50c1sgMCBdLCAiaXRlbXMuYnV0dG9uIiwgYXJndW1lbnRzWyAyIF0gXSApOwoJ
CX0KCQlpZiAoIGFyZ3VtZW50c1sgMCBdID09PSAib3B0aW9uIiAmJiBhcmd1bWVudHNbIDEgXSA9
PT0gIml0ZW1zIiApIHsKCQkJcmV0dXJuIHRoaXMuY29udHJvbGdyb3VwLmFwcGx5KCB0aGlzLCBb
IGFyZ3VtZW50c1sgMCBdLCAiaXRlbXMuYnV0dG9uIiBdICk7CgkJfQoJCWlmICggdHlwZW9mIGFy
Z3VtZW50c1sgMCBdID09PSAib2JqZWN0IiAmJiBhcmd1bWVudHNbIDAgXS5pdGVtcyApIHsKCQkJ
YXJndW1lbnRzWyAwIF0uaXRlbXMgPSB7CgkJCQlidXR0b246IGFyZ3VtZW50c1sgMCBdLml0ZW1z
CgkJCX07CgkJfQoJCXJldHVybiB0aGlzLmNvbnRyb2xncm91cC5hcHBseSggdGhpcywgYXJndW1l
bnRzICk7Cgl9Owp9Cgp2YXIgd2lkZ2V0c0J1dHRvbiA9ICQudWkuYnV0dG9uOwoKCi8vIGpzY3M6
ZGlzYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovKiBqc2NzOmRpc2FibGUgcmVxdWlyZUNhbWVsQ2Fz
ZU9yVXBwZXJDYXNlSWRlbnRpZmllcnMgKi8KLyohCiAqIGpRdWVyeSBVSSBEYXRlcGlja2VyIDEu
MTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRh
dGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGlj
ZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogRGF0ZXBp
Y2tlcgovLz4+Z3JvdXA6IFdpZGdldHMKLy8+PmRlc2NyaXB0aW9uOiBEaXNwbGF5cyBhIGNhbGVu
ZGFyIGZyb20gYW4gaW5wdXQgb3IgaW5saW5lIGZvciBzZWxlY3RpbmcgZGF0ZXMuCi8vPj5kb2Nz
OiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kYXRlcGlja2VyLwovLz4+ZGVtb3M6IGh0dHA6Ly9q
cXVlcnl1aS5jb20vZGF0ZXBpY2tlci8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9i
YXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9kYXRlcGlj
a2VyLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKJC5l
eHRlbmQoICQudWksIHsgZGF0ZXBpY2tlcjogeyB2ZXJzaW9uOiAiMS4xMi4xIiB9IH0gKTsKCnZh
ciBkYXRlcGlja2VyX2luc3RBY3RpdmU7CgpmdW5jdGlvbiBkYXRlcGlja2VyX2dldFppbmRleCgg
ZWxlbSApIHsKCXZhciBwb3NpdGlvbiwgdmFsdWU7Cgl3aGlsZSAoIGVsZW0ubGVuZ3RoICYmIGVs
ZW1bIDAgXSAhPT0gZG9jdW1lbnQgKSB7CgoJCS8vIElnbm9yZSB6LWluZGV4IGlmIHBvc2l0aW9u
IGlzIHNldCB0byBhIHZhbHVlIHdoZXJlIHotaW5kZXggaXMgaWdub3JlZCBieSB0aGUgYnJvd3Nl
cgoJCS8vIFRoaXMgbWFrZXMgYmVoYXZpb3Igb2YgdGhpcyBmdW5jdGlvbiBjb25zaXN0ZW50IGFj
cm9zcyBicm93c2VycwoJCS8vIFdlYktpdCBhbHdheXMgcmV0dXJucyBhdXRvIGlmIHRoZSBlbGVt
ZW50IGlzIHBvc2l0aW9uZWQKCQlwb3NpdGlvbiA9IGVsZW0uY3NzKCAicG9zaXRpb24iICk7CgkJ
aWYgKCBwb3NpdGlvbiA9PT0gImFic29sdXRlIiB8fCBwb3NpdGlvbiA9PT0gInJlbGF0aXZlIiB8
fCBwb3NpdGlvbiA9PT0gImZpeGVkIiApIHsKCgkJCS8vIElFIHJldHVybnMgMCB3aGVuIHpJbmRl
eCBpcyBub3Qgc3BlY2lmaWVkCgkJCS8vIG90aGVyIGJyb3dzZXJzIHJldHVybiBhIHN0cmluZwoJ
CQkvLyB3ZSBpZ25vcmUgdGhlIGNhc2Ugb2YgbmVzdGVkIGVsZW1lbnRzIHdpdGggYW4gZXhwbGlj
aXQgdmFsdWUgb2YgMAoJCQkvLyA8ZGl2IHN0eWxlPSJ6LWluZGV4OiAtMTA7Ij48ZGl2IHN0eWxl
PSJ6LWluZGV4OiAwOyI+PC9kaXY+PC9kaXY+CgkJCXZhbHVlID0gcGFyc2VJbnQoIGVsZW0uY3Nz
KCAiekluZGV4IiApLCAxMCApOwoJCQlpZiAoICFpc05hTiggdmFsdWUgKSAmJiB2YWx1ZSAhPT0g
MCApIHsKCQkJCXJldHVybiB2YWx1ZTsKCQkJfQoJCX0KCQllbGVtID0gZWxlbS5wYXJlbnQoKTsK
CX0KCglyZXR1cm4gMDsKfQovKiBEYXRlIHBpY2tlciBtYW5hZ2VyLgogICBVc2UgdGhlIHNpbmds
ZXRvbiBpbnN0YW5jZSBvZiB0aGlzIGNsYXNzLCAkLmRhdGVwaWNrZXIsIHRvIGludGVyYWN0IHdp
dGggdGhlIGRhdGUgcGlja2VyLgogICBTZXR0aW5ncyBmb3IgKGdyb3VwcyBvZikgZGF0ZSBwaWNr
ZXJzIGFyZSBtYWludGFpbmVkIGluIGFuIGluc3RhbmNlIG9iamVjdCwKICAgYWxsb3dpbmcgbXVs
dGlwbGUgZGlmZmVyZW50IHNldHRpbmdzIG9uIHRoZSBzYW1lIHBhZ2UuICovCgpmdW5jdGlvbiBE
YXRlcGlja2VyKCkgewoJdGhpcy5fY3VySW5zdCA9IG51bGw7IC8vIFRoZSBjdXJyZW50IGluc3Rh
bmNlIGluIHVzZQoJdGhpcy5fa2V5RXZlbnQgPSBmYWxzZTsgLy8gSWYgdGhlIGxhc3QgZXZlbnQg
d2FzIGEga2V5IGV2ZW50Cgl0aGlzLl9kaXNhYmxlZElucHV0cyA9IFtdOyAvLyBMaXN0IG9mIGRh
dGUgcGlja2VyIGlucHV0cyB0aGF0IGhhdmUgYmVlbiBkaXNhYmxlZAoJdGhpcy5fZGF0ZXBpY2tl
clNob3dpbmcgPSBmYWxzZTsgLy8gVHJ1ZSBpZiB0aGUgcG9wdXAgcGlja2VyIGlzIHNob3dpbmcg
LCBmYWxzZSBpZiBub3QKCXRoaXMuX2luRGlhbG9nID0gZmFsc2U7IC8vIFRydWUgaWYgc2hvd2lu
ZyB3aXRoaW4gYSAiZGlhbG9nIiwgZmFsc2UgaWYgbm90Cgl0aGlzLl9tYWluRGl2SWQgPSAidWkt
ZGF0ZXBpY2tlci1kaXYiOyAvLyBUaGUgSUQgb2YgdGhlIG1haW4gZGF0ZXBpY2tlciBkaXZpc2lv
bgoJdGhpcy5faW5saW5lQ2xhc3MgPSAidWktZGF0ZXBpY2tlci1pbmxpbmUiOyAvLyBUaGUgbmFt
ZSBvZiB0aGUgaW5saW5lIG1hcmtlciBjbGFzcwoJdGhpcy5fYXBwZW5kQ2xhc3MgPSAidWktZGF0
ZXBpY2tlci1hcHBlbmQiOyAvLyBUaGUgbmFtZSBvZiB0aGUgYXBwZW5kIG1hcmtlciBjbGFzcwoJ
dGhpcy5fdHJpZ2dlckNsYXNzID0gInVpLWRhdGVwaWNrZXItdHJpZ2dlciI7IC8vIFRoZSBuYW1l
IG9mIHRoZSB0cmlnZ2VyIG1hcmtlciBjbGFzcwoJdGhpcy5fZGlhbG9nQ2xhc3MgPSAidWktZGF0
ZXBpY2tlci1kaWFsb2ciOyAvLyBUaGUgbmFtZSBvZiB0aGUgZGlhbG9nIG1hcmtlciBjbGFzcwoJ
dGhpcy5fZGlzYWJsZUNsYXNzID0gInVpLWRhdGVwaWNrZXItZGlzYWJsZWQiOyAvLyBUaGUgbmFt
ZSBvZiB0aGUgZGlzYWJsZWQgY292ZXJpbmcgbWFya2VyIGNsYXNzCgl0aGlzLl91bnNlbGVjdGFi
bGVDbGFzcyA9ICJ1aS1kYXRlcGlja2U=</Default>
</Parameter>

<Parameter name="Frag6980641884580333078251241">
<Default>PSAoICFldmVudC5tZXRhS2V5ICYmICFldmVudC5jdHJsS2V5ICkgfHwKCQkJCQkhc2VsZWN0ZWUu
JGVsZW1lbnQuaGFzQ2xhc3MoICJ1aS1zZWxlY3RlZCIgKTsKCQkJCXRoYXQuX3JlbW92ZUNsYXNz
KCBzZWxlY3RlZS4kZWxlbWVudCwgZG9TZWxlY3QgPyAidWktdW5zZWxlY3RpbmciIDogInVpLXNl
bGVjdGVkIiApCgkJCQkJLl9hZGRDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsIGRvU2VsZWN0ID8g
InVpLXNlbGVjdGluZyIgOiAidWktdW5zZWxlY3RpbmciICk7CgkJCQlzZWxlY3RlZS51bnNlbGVj
dGluZyA9ICFkb1NlbGVjdDsKCQkJCXNlbGVjdGVlLnNlbGVjdGluZyA9IGRvU2VsZWN0OwoJCQkJ
c2VsZWN0ZWUuc2VsZWN0ZWQgPSBkb1NlbGVjdDsKCgkJCQkvLyBzZWxlY3RhYmxlIChVTilTRUxF
Q1RJTkcgY2FsbGJhY2sKCQkJCWlmICggZG9TZWxlY3QgKSB7CgkJCQkJdGhhdC5fdHJpZ2dlcigg
InNlbGVjdGluZyIsIGV2ZW50LCB7CgkJCQkJCXNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudAoJ
CQkJCX0gKTsKCQkJCX0gZWxzZSB7CgkJCQkJdGhhdC5fdHJpZ2dlciggInVuc2VsZWN0aW5nIiwg
ZXZlbnQsIHsKCQkJCQkJdW5zZWxlY3Rpbmc6IHNlbGVjdGVlLmVsZW1lbnQKCQkJCQl9ICk7CgkJ
CQl9CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9ICk7CgoJfSwKCglfbW91c2VEcmFnOiBmdW5j
dGlvbiggZXZlbnQgKSB7CgoJCXRoaXMuZHJhZ2dlZCA9IHRydWU7CgoJCWlmICggdGhpcy5vcHRp
b25zLmRpc2FibGVkICkgewoJCQlyZXR1cm47CgkJfQoKCQl2YXIgdG1wLAoJCQl0aGF0ID0gdGhp
cywKCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywKCQkJeDEgPSB0aGlzLm9wb3NbIDAgXSwKCQkJ
eTEgPSB0aGlzLm9wb3NbIDEgXSwKCQkJeDIgPSBldmVudC5wYWdlWCwKCQkJeTIgPSBldmVudC5w
YWdlWTsKCgkJaWYgKCB4MSA+IHgyICkgeyB0bXAgPSB4MjsgeDIgPSB4MTsgeDEgPSB0bXA7IH0K
CQlpZiAoIHkxID4geTIgKSB7IHRtcCA9IHkyOyB5MiA9IHkxOyB5MSA9IHRtcDsgfQoJCXRoaXMu
aGVscGVyLmNzcyggeyBsZWZ0OiB4MSwgdG9wOiB5MSwgd2lkdGg6IHgyIC0geDEsIGhlaWdodDog
eTIgLSB5MSB9ICk7CgoJCXRoaXMuc2VsZWN0ZWVzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIg
c2VsZWN0ZWUgPSAkLmRhdGEoIHRoaXMsICJzZWxlY3RhYmxlLWl0ZW0iICksCgkJCQloaXQgPSBm
YWxzZSwKCQkJCW9mZnNldCA9IHt9OwoKCQkJLy9wcmV2ZW50IGhlbHBlciBmcm9tIGJlaW5nIHNl
bGVjdGVkIGlmIGFwcGVuZFRvOiBzZWxlY3RhYmxlCgkJCWlmICggIXNlbGVjdGVlIHx8IHNlbGVj
dGVlLmVsZW1lbnQgPT09IHRoYXQuZWxlbWVudFsgMCBdICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJ
CQlvZmZzZXQubGVmdCAgID0gc2VsZWN0ZWUubGVmdCAgICsgdGhhdC5lbGVtZW50UG9zLmxlZnQ7
CgkJCW9mZnNldC5yaWdodCAgPSBzZWxlY3RlZS5yaWdodCAgKyB0aGF0LmVsZW1lbnRQb3MubGVm
dDsKCQkJb2Zmc2V0LnRvcCAgICA9IHNlbGVjdGVlLnRvcCAgICArIHRoYXQuZWxlbWVudFBvcy50
b3A7CgkJCW9mZnNldC5ib3R0b20gPSBzZWxlY3RlZS5ib3R0b20gKyB0aGF0LmVsZW1lbnRQb3Mu
dG9wOwoKCQkJaWYgKCBvcHRpb25zLnRvbGVyYW5jZSA9PT0gInRvdWNoIiApIHsKCQkJCWhpdCA9
ICggISggb2Zmc2V0LmxlZnQgPiB4MiB8fCBvZmZzZXQucmlnaHQgPCB4MSB8fCBvZmZzZXQudG9w
ID4geTIgfHwKICAgICAgICAgICAgICAgICAgICBvZmZzZXQuYm90dG9tIDwgeTEgKSApOwoJCQl9
IGVsc2UgaWYgKCBvcHRpb25zLnRvbGVyYW5jZSA9PT0gImZpdCIgKSB7CgkJCQloaXQgPSAoIG9m
ZnNldC5sZWZ0ID4geDEgJiYgb2Zmc2V0LnJpZ2h0IDwgeDIgJiYgb2Zmc2V0LnRvcCA+IHkxICYm
CiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LmJvdHRvbSA8IHkyICk7CgkJCX0KCgkJCWlmICgg
aGl0ICkgewoKCQkJCS8vIFNFTEVDVAoJCQkJaWYgKCBzZWxlY3RlZS5zZWxlY3RlZCApIHsKCQkJ
CQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsK
CQkJCQlzZWxlY3RlZS5zZWxlY3RlZCA9IGZhbHNlOwoJCQkJfQoJCQkJaWYgKCBzZWxlY3RlZS51
bnNlbGVjdGluZyApIHsKCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQs
ICJ1aS11bnNlbGVjdGluZyIgKTsKCQkJCQlzZWxlY3RlZS51bnNlbGVjdGluZyA9IGZhbHNlOwoJ
CQkJfQoJCQkJaWYgKCAhc2VsZWN0ZWUuc2VsZWN0aW5nICkgewoJCQkJCXRoYXQuX2FkZENsYXNz
KCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXNlbGVjdGluZyIgKTsKCQkJCQlzZWxlY3RlZS5zZWxl
Y3RpbmcgPSB0cnVlOwoKCQkJCQkvLyBzZWxlY3RhYmxlIFNFTEVDVElORyBjYWxsYmFjawoJCQkJ
CXRoYXQuX3RyaWdnZXIoICJzZWxlY3RpbmciLCBldmVudCwgewoJCQkJCQlzZWxlY3Rpbmc6IHNl
bGVjdGVlLmVsZW1lbnQKCQkJCQl9ICk7CgkJCQl9CgkJCX0gZWxzZSB7CgoJCQkJLy8gVU5TRUxF
Q1QKCQkJCWlmICggc2VsZWN0ZWUuc2VsZWN0aW5nICkgewoJCQkJCWlmICggKCBldmVudC5tZXRh
S2V5IHx8IGV2ZW50LmN0cmxLZXkgKSAmJiBzZWxlY3RlZS5zdGFydHNlbGVjdGVkICkgewoJCQkJ
CQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RpbmciICk7
CgkJCQkJCXNlbGVjdGVlLnNlbGVjdGluZyA9IGZhbHNlOwoJCQkJCQl0aGF0Ll9hZGRDbGFzcygg
c2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJCQkJc2VsZWN0ZWUuc2VsZWN0
ZWQgPSB0cnVlOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXRoYXQuX3JlbW92ZUNsYXNzKCBzZWxlY3Rl
ZS4kZWxlbWVudCwgInVpLXNlbGVjdGluZyIgKTsKCQkJCQkJc2VsZWN0ZWUuc2VsZWN0aW5nID0g
ZmFsc2U7CgkJCQkJCWlmICggc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCApIHsKCQkJCQkJCXRoYXQu
X2FkZENsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXVuc2VsZWN0aW5nIiApOwoJCQkJCQkJ
c2VsZWN0ZWUudW5zZWxlY3RpbmcgPSB0cnVlOwoJCQkJCQl9CgoJCQkJCQkvLyBzZWxlY3RhYmxl
IFVOU0VMRUNUSU5HIGNhbGxiYWNrCgkJCQkJCXRoYXQuX3RyaWdnZXIoICJ1bnNlbGVjdGluZyIs
IGV2ZW50LCB7CgkJCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudAoJCQkJCQl9ICk7
CgkJCQkJfQoJCQkJfQoJCQkJaWYgKCBzZWxlY3RlZS5zZWxlY3RlZCApIHsKCQkJCQlpZiAoICFl
dmVudC5tZXRhS2V5ICYmICFldmVudC5jdHJsS2V5ICYmICFzZWxlY3RlZS5zdGFydHNlbGVjdGVk
ICkgewoJCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxl
Y3RlZCIgKTsKCQkJCQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSBmYWxzZTsKCgkJCQkJCXRoYXQuX2Fk
ZENsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXVuc2VsZWN0aW5nIiApOwoJCQkJCQlzZWxl
Y3RlZS51bnNlbGVjdGluZyA9IHRydWU7CgoJCQkJCQkvLyBzZWxlY3RhYmxlIFVOU0VMRUNUSU5H
IGNhbGxiYWNrCgkJCQkJCXRoYXQuX3RyaWdnZXIoICJ1bnNlbGVjdGluZyIsIGV2ZW50LCB7CgkJ
CQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudAoJCQkJCQl9ICk7CgkJCQkJfQoJCQkJ
fQoJCQl9CgkJfSApOwoKCQlyZXR1cm4gZmFsc2U7Cgl9LAoKCV9tb3VzZVN0b3A6IGZ1bmN0aW9u
KCBldmVudCApIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCXRoaXMuZHJhZ2dlZCA9IGZhbHNlOwoK
CQkkKCAiLnVpLXVuc2VsZWN0aW5nIiwgdGhpcy5lbGVtZW50WyAwIF0gKS5lYWNoKCBmdW5jdGlv
bigpIHsKCQkJdmFyIHNlbGVjdGVlID0gJC5kYXRhKCB0aGlzLCAic2VsZWN0YWJsZS1pdGVtIiAp
OwoJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS11bnNlbGVjdGlu
ZyIgKTsKCQkJc2VsZWN0ZWUudW5zZWxlY3RpbmcgPSBmYWxzZTsKCQkJc2VsZWN0ZWUuc3RhcnRz
ZWxlY3RlZCA9IGZhbHNlOwoJCQl0aGF0Ll90cmlnZ2VyKCAidW5zZWxlY3RlZCIsIGV2ZW50LCB7
CgkJCQl1bnNlbGVjdGVkOiBzZWxlY3RlZS5lbGVtZW50CgkJCX0gKTsKCQl9ICk7CgkJJCggIi51
aS1zZWxlY3RpbmciLCB0aGlzLmVsZW1lbnRbIDAgXSApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2
YXIgc2VsZWN0ZWUgPSAkLmRhdGEoIHRoaXMsICJzZWxlY3RhYmxlLWl0ZW0iICk7CgkJCXRoYXQu
X3JlbW92ZUNsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXNlbGVjdGluZyIgKQoJCQkJLl9h
ZGRDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJc2VsZWN0ZWUu
c2VsZWN0aW5nID0gZmFsc2U7CgkJCXNlbGVjdGVlLnNlbGVjdGVkID0gdHJ1ZTsKCQkJc2VsZWN0
ZWUuc3RhcnRzZWxlY3RlZCA9IHRydWU7CgkJCXRoYXQuX3RyaWdnZXIoICJzZWxlY3RlZCIsIGV2
ZW50LCB7CgkJCQlzZWxlY3RlZDogc2VsZWN0ZWUuZWxlbWVudAoJCQl9ICk7CgkJfSApOwoJCXRo
aXMuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQgKTsKCgkJdGhpcy5oZWxwZXIucmVtb3ZlKCk7CgoJ
CXJldHVybiBmYWxzZTsKCX0KCn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIFNlbGVjdG1lbnUgMS4x
Mi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0
aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNl
bnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBTZWxlY3Rt
ZW51Ci8vPj5ncm91cDogV2lkZ2V0cwovLyBqc2NzOmRpc2FibGUgbWF4aW11bUxpbmVMZW5ndGgK
Ly8+PmRlc2NyaXB0aW9uOiBEdXBsaWNhdGVzIGFuZCBleHRlbmRzIHRoZSBmdW5jdGlvbmFsaXR5
IG9mIGEgbmF0aXZlIEhUTUwgc2VsZWN0IGVsZW1lbnQsIGFsbG93aW5nIGl0IHRvIGJlIGN1c3Rv
bWl6YWJsZSBpbiBiZWhhdmlvciBhbmQgYXBwZWFyYW5jZSBmYXIgYmV5b25kIHRoZSBsaW1pdGF0
aW9ucyBvZiBhIG5hdGl2ZSBzZWxlY3QuCi8vIGpzY3M6ZW5hYmxlIG1heGltdW1MaW5lTGVuZ3Ro
Ci8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zZWxlY3RtZW51LwovLz4+ZGVtb3M6
IGh0dHA6Ly9qcXVlcnl1aS5jb20vc2VsZWN0bWVudS8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4u
L3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFz
ZS9zZWxlY3RtZW51LmNzcywgLi4vLi4vdGhlbWVzL2Jhc2UvYnV0dG9uLmNzcwovLz4+Y3NzLnRo
ZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKdmFyIHdpZGdldHNTZWxlY3RtZW51
ID0gJC53aWRnZXQoICJ1aS5zZWxlY3RtZW51IiwgWyAkLnVpLmZvcm1SZXNldE1peGluLCB7Cgl2
ZXJzaW9uOiAiMS4xMi4xIiwKCWRlZmF1bHRFbGVtZW50OiAiPHNlbGVjdD4iLAoJb3B0aW9uczog
ewoJCWFwcGVuZFRvOiBudWxsLAoJCWNsYXNzZXM6IHsKCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9u
LW9wZW4iOiAidWktY29ybmVyLXRvcCIsCgkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQi
OiAidWktY29ybmVyLWFsbCIKCQl9LAoJCWRpc2FibGVkOiBudWxsLAoJCWljb25zOiB7CgkJCWJ1
dHRvbjogInVpLWljb24tdHJpYW5nbGUtMS1zIgoJCX0sCgkJcG9zaXRpb246IHsKCQkJbXk6ICJs
ZWZ0IHRvcCIsCgkJCWF0OiAibGVmdCBib3R0b20iLAoJCQljb2xsaXNpb246ICJub25lIgoJCX0s
CgkJd2lkdGg6IGZhbHNlLAoKCQkvLyBDYWxsYmFja3MKCQljaGFuZ2U6IG51bGwsCgkJY2xvc2U6
IG51bGwsCgkJZm9jdXM6IG51bGwsCgkJb3BlbjogbnVsbCwKCQlzZWxlY3Q6IG51bGwKCX0sCgoJ
X2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJdmFyIHNlbGVjdG1lbnVJZCA9IHRoaXMuZWxlbWVudC51
bmlxdWVJZCgpLmF0dHIoICJpZCIgKTsKCQl0aGlzLmlkcyA9IHsKCQkJZWxlbWVudDogc2VsZWN0
bWVudUlkLAoJCQlidXR0b246IHNlbGVjdG1lbnVJZCArICItYnV0dG9uIiwKCQkJbWVudTogc2Vs
ZWN0bWVudUlkICsgIi1tZW51IgoJCX07CgoJCXRoaXMuX2RyYXdCdXR0b24oKTsKCQl0aGlzLl9k
cmF3TWVudSgpOwoJCXRoaXMuX2JpbmRGb3JtUmVzZXRIYW5kbGVyKCk7CgoJCXRoaXMuX3JlbmRl
cmVkID0gZmFsc2U7CgkJdGhpcy5tZW51SXRlbXMgPSAkKCk7Cgl9LAoKCV9kcmF3QnV0dG9uOiBm
dW5jdGlvbigpIHsKCQl2YXIgaWNvbiwKCQkJdGhhdCA9IHRoaXMsCgkJCWl0ZW0gPSB0aGlzLl9w
YXJzZU9wdGlvbigKCQkJCXRoaXMuZWxlbWVudC5maW5kKCAib3B0aW9uOnNlbGVjdGVkIiApLAoJ
CQkJdGhpcy5lbGVtZW50WyAwIF0uc2VsZWN0ZWRJbmRleAoJCQkpOwoKCQkvLyBBc3NvY2lhdGUg
ZXhpc3RpbmcgbGFiZWwgd2l0aCB0aGUgbmV3IGJ1dHRvbgoJCXRoaXMubGFiZWxzID0gdGhpcy5l
bGVtZW50LmxhYmVscygpLmF0dHIoICJmb3IiLCB0aGlzLmlkcy5idXR0b24gKTsKCQl0aGlzLl9v
biggdGhpcy5sYWJlbHMsIHsKCQkJY2xpY2s6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMu
YnV0dG9uLmZvY3VzKCk7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQl9CgkJfSApOwoK
CQkvLyBIaWRlIG9yaWdpbmFsIHNlbGVjdCBlbGVtZW50CgkJdGhpcy5lbGVtZW50LmhpZGUoKTsK
CgkJLy8gQ3JlYXRlIGJ1dHRvbgoJCXRoaXMuYnV0dG9uID0gJCggIjxzcGFuPiIsIHsKCQkJdGFi
aW5kZXg6IHRoaXMub3B0aW9ucy5kaXNhYmxlZCA/IC0xIDogMCwKCQkJaWQ6IHRoaXMuaWRzLmJ1
dHRvbiwKCQkJcm9sZTogImNvbWJvYm94IiwKCQkJImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiLAoJ
CQkiYXJpYS1hdXRvY29tcGxldGUiOiAibGlzdCIsCgkJCSJhcmlhLW93bnMiOiB0aGlzLmlkcy5t
ZW51LAoJCQkiYXJpYS1oYXNwb3B1cCI6ICJ0cnVlIiwKCQkJdGl0bGU6IHRoaXMuZWxlbWVudC5h
dHRyKCAidGl0bGUiICkKCQl9ICkKCQkJLmluc2VydEFmdGVyKCB0aGlzLmVsZW1lbnQgKTsKCgkJ
dGhpcy5fYWRkQ2xhc3MoIHRoaXMuYnV0dG9uLCAidWktc2VsZWN0bWVudS1idXR0b24gdWktc2Vs
ZWN0bWVudS1idXR0b24tY2xvc2VkIiwKCQkJInVpLWJ1dHRvbiB1aS13aWRnZXQiICk7CgoJCWlj
b24gPSAkKCAiPHNwYW4+IiApLmFwcGVuZFRvKCB0aGlzLmJ1dHRvbiApOwoJCXRoaXMuX2FkZENs
YXNzKCBpY29uLCAidWktc2VsZWN0bWVudS1pY29uIiwgInVpLWljb24gIiArIHRoaXMub3B0aW9u
cy5pY29ucy5idXR0b24gKTsKCQl0aGlzLmJ1dHRvbkl0ZW0gPSB0aGlzLl9yZW5kZXJCdXR0b25J
dGVtKCBpdGVtICkKCQkJLmFwcGVuZFRvKCB0aGlzLmJ1dHRvbiApOwoKCQlpZiAoIHRoaXMub3B0
aW9ucy53aWR0aCAhPT0gZmFsc2UgKSB7CgkJCXRoaXMuX3Jlc2l6ZUJ1dHRvbigpOwoJCX0KCgkJ
dGhpcy5fb24oIHRoaXMuYnV0dG9uLCB0aGlzLl9idXR0b25FdmVudHMgKTsKCQl0aGlzLmJ1dHRv
bi5vbmUoICJmb2N1c2luIiwgZnVuY3Rpb24oKSB7CgoJCQkvLyBEZWxheSByZW5kZXJpbmcgdGhl
IG1lbnUgaXRlbXMgdW50aWwgdGhlIGJ1dHRvbiByZWNlaXZlcyBmb2N1cy4KCQkJLy8gVGhlIG1l
bnUgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHJlbmRlcmVkIHZpYSBhIHByb2dyYW1tYXRpYyBvcGVu
LgoJCQlpZiAoICF0aGF0Ll9yZW5kZXJlZCApIHsKCQkJCXRoYXQuX3JlZnJlc2hNZW51KCk7CgkJ
CX0KCQl9ICk7Cgl9LAoKCV9kcmF3TWVudTogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlz
OwoKCQkvLyBDcmVhdGUgbWVudQoJCXRoaXMubWVudSA9ICQoICI8dWw+IiwgewoJCQkiYXJpYS1o
aWRkZW4iOiAidHJ1ZSIsCgkJCSJhcmlhLWxhYmVsbGVkYnkiOiB0aGlzLmlkcy5idXR0b24sCgkJ
CWlkOiB0aGlzLmlkcy5tZW51CgkJfSApOwoKCQkvLyBXcmFwIG1lbnUKCQl0aGlzLm1lbnVXcmFw
ID0gJCggIjxkaXY+IiApLmFwcGVuZCggdGhpcy5tZW51ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRo
aXMubWVudVdyYXAsICJ1aS1zZWxlY3RtZW51LW1lbnUiLCAidWktZnJvbnQiICk7CgkJdGhpcy5t
ZW51V3JhcC5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOwoKCQkvLyBJbml0aWFsaXplIG1l
bnUgd2lkZ2V0CgkJdGhpcy5tZW51SW5zdGFuY2UgPSB0aGlzLm1lbnUKCQkJLm1lbnUoIHsKCQkJ
CWNsYXNzZXM6IHsKCQkJCQkidWktbWVudSI6ICJ1aS1jb3JuZXItYm90dG9tIgoJCQkJfSwKCQkJ
CXJvbGU6ICJsaXN0Ym94IiwKCQkJCXNlbGVjdDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJ
CQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKCQkJCQkvLyBTdXBwb3J0OiBJRTgKCQkJCQkvLyBJ
ZiB0aGUgaXRlbSB3YXMgc2VsZWN0ZWQgdmlhIGEgY2xpY2ssIHRoZSB0ZXh0IHNlbGVjdGlvbgoJ
CQkJCS8vIHdpbGwgYmUgZGVzdHJveWVkIGluIElFCgkJCQkJdGhhdC5fc2V0U2VsZWN0aW9uKCk7
CgoJCQkJCXRoYXQuX3NlbGVjdCggdWkuaXRlbS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiAp
LCBldmVudCApOwoJCQkJfSwKCQkJCWZvY3VzOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCQkJ
CXZhciBpdGVtID0gdWkuaXRlbS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiApOwoKCQkJCQkv
LyBQcmV2ZW50IGluaXRhbCBmb2N1cyBmcm9tIGZpcmluZyBhbmQgY2hlY2sgaWYgaXRzIGEgbmV3
bHkgZm9jdXNlZCBpdGVtCgkJCQkJaWYgKCB0aGF0LmZvY3VzSW5kZXggIT0gbnVsbCAmJiBpdGVt
LmluZGV4ICE9PSB0aGF0LmZvY3VzSW5kZXggKSB7CgkJCQkJCXRoYXQuX3RyaWdnZXIoICJmb2N1
cyIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApOwoJCQkJCQlpZiAoICF0aGF0LmlzT3BlbiApIHsK
CQkJCQkJCXRoYXQuX3NlbGVjdCggaXRlbSwgZXZlbnQgKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQl0
aGF0LmZvY3VzSW5kZXggPSBpdGVtLmluZGV4OwoKCQkJCQl0aGF0LmJ1dHRvbi5hdHRyKCAiYXJp
YS1hY3RpdmVkZXNjZW5kYW50IiwKCQkJCQkJdGhhdC5tZW51SXRlbXMuZXEoIGl0ZW0uaW5kZXgg
KS5hdHRyKCAiaWQiICkgKTsKCQkJCX0KCQkJfSApCgkJCS5tZW51KCAiaW5zdGFuY2UiICk7CgoJ
CS8vIERvbid0IGNsb3NlIHRoZSBtZW51IG9uIG1vdXNlbGVhdmUKCQl0aGlzLm1lbnVJbnN0YW5j
ZS5fb2ZmKCB0aGlzLm1lbnUsICJtb3VzZWxlYXZlIiApOwoKCQkvLyBDYW5jZWwgdGhlIG1lbnUn
cyBjb2xsYXBzZUFsbCBvbiBkb2N1bWVudCBjbGljawoJCXRoaXMubWVudUluc3RhbmNlLl9jbG9z
ZU9uRG9jdW1lbnRDbGljayA9IGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfTsKCgkJ
Ly8gU2VsZWN0cyBvZnRlbiBjb250YWluIGVtcHR5IGl0ZW1zLCBidXQgbmV2ZXIgY29udGFpbiBk
aXZpZGVycwoJCXRoaXMubWVudUluc3RhbmNlLl9pc0RpdmlkZXIgPSBmdW5jdGlvbigpIHsKCQkJ
cmV0dXJuIGZhbHNlOwoJCX07Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX3Jl
ZnJlc2hNZW51KCk7CgkJdGhpcy5idXR0b25JdGVtLnJlcGxhY2VXaXRoKAoJCQl0aGlzLmJ1dHRv
bkl0ZW0gPSB0aGlzLl9yZW5kZXJCdXR0b25JdGVtKAoKCQkJCS8vIEZhbGwgYmFjayB0byBhbiBl
bXB0eSBvYmplY3QgaW4gY2FzZSB0aGVyZSBhcmUgbm8gb3B0aW9ucwoJCQkJdGhpcy5fZ2V0U2Vs
ZWN0ZWRJdGVtKCkuZGF0YSggInVpLXNlbGVjdG1lbnUtaXRlbSIgKSB8fCB7fQoJCQkpCgkJKTsK
CQlpZiAoIHRoaXMub3B0aW9ucy53aWR0aCA9PT0gbnVsbCApIHsKCQkJdGhpcy5fcmVzaXplQnV0
dG9uKCk7CgkJfQoJfSwKCglfcmVmcmVzaE1lbnU6IGZ1bmN0aW9uKCkgewoJCXZhciBpdGVtLAoJ
CQlvcHRpb25zID0gdGhpcy5lbGVtZW50LmZpbmQoICJvcHRpb24iICk7CgoJCXRoaXMubWVudS5l
bXB0eSgpOwoKCQl0aGlzLl9wYXJzZU9wdGlvbnMoIG9wdGlvbnMgKTsKCQl0aGlzLl9yZW5kZXJN
ZW51KCB0aGlzLm1lbnUsIHRoaXMuaXRlbXMgKTsKCgkJdGhpcy5tZW51SW5zdGFuY2UucmVmcmVz
aCgpOwoJCXRoaXMubWVudUl0ZW1zID0gdGhpcy5tZW51LmZpbmQoICJsaSIgKQoJCQkubm90KCAi
LnVpLXNlbGVjdG1lbnUtb3B0Z3JvdXAiICkKCQkJCS5maW5kKCAiLnVpLW1lbnUtaXRlbS13cmFw
cGVyIiApOwoKCQl0aGlzLl9yZW5kZXJlZCA9IHRydWU7CgoJCWlmICggIW9wdGlvbnMubGVuZ3Ro
ICkgewoJCQlyZXR1cm47CgkJfQoKCQlpdGVtID0gdGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCk7CgoJ
CS8vIFVwZGF0ZSB0aGUgbWVudSB0byBoYXZlIHRoZSBjb3JyZWN0IGl0ZW0gZm9jdXNlZAoJCXRo
aXMubWVudUluc3RhbmNlLmZvY3VzKCBudWxsLCBpdGVtICk7CgkJdGhpcy5fc2V0QXJpYSggaXRl
bS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiApICk7CgoJCS8vIFNldCBkaXNhYmxlZCBzdGF0
ZQoJCXRoaXMuX3NldE9wdGlvbiggImRpc2FibGVkIiwgdGhpcy5lbGVtZW50LnByb3AoICJkaXNh
YmxlZCIgKSApOwoJfSwKCglvcGVuOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCB0aGlzLm9w
dGlvbnMuZGlzYWJsZWQgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIElmIHRoaXMgaXMgdGhlIGZp
cnN0IHRpbWUgdGhlIG1lbnUgaXMgYmVpbmcgb3BlbmVkLCByZW5kZXIgdGhlIGl0ZW1zCgkJaWYg
KCAhdGhpcy5fcmVuZGVyZWQgKSB7CgkJCXRoaXMuX3JlZnJlc2hNZW51KCk7CgkJfSBlbHNlIHsK
CgkJCS8vIE1lbnUgY2xlYXJzIGZvY3VzIG9uIGNsb3NlLCByZXNldCBmb2N1cyB0byBzZWxlY3Rl
ZCBpdGVtCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLm1lbnUuZmluZCggIi51aS1zdGF0ZS1h
Y3RpdmUiICksIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCXRoaXMubWVudUluc3RhbmNl
LmZvY3VzKCBudWxsLCB0aGlzLl9nZXRTZWxlY3RlZEl0ZW0oKSApOwoJCX0KCgkJLy8gSWYgdGhl
cmUgYXJlIG5vIG9wdGlvbnMsIGRvbid0IG9wZW4gdGhlIG1lbnUKCQlpZiAoICF0aGlzLm1lbnVJ
dGVtcy5sZW5ndGggKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuaXNPcGVuID0gdHJ1ZTsKCQl0
aGlzLl90b2dnbGVBdHRyKCk7CgkJdGhpcy5fcmVzaXplTWVudSgpOwoJCXRoaXMuX3Bvc2l0aW9u
KCk7CgoJCXRoaXMuX29uKCB0aGlzLmRvY3VtZW50LCB0aGlzLl9kb2N1bWVudENsaWNrICk7CgoJ
CXRoaXMuX3RyaWdnZXIoICJvcGVuIiwgZXZlbnQgKTsKCX0sCgoJX3Bvc2l0aW9uOiBmdW5jdGlv
bigpIHsKCQl0aGlzLm1lbnVXcmFwLnBvc2l0aW9uKCAkLmV4dGVuZCggeyBvZjogdGhpcy5idXR0
b24gfSwgdGhpcy5vcHRpb25zLnBvc2l0aW9uICkgKTsKCX0sCgoJY2xvc2U6IGZ1bmN0aW9uKCBl
dmVudCApIHsKCQlpZiAoICF0aGlzLmlzT3BlbiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5p
c09wZW4gPSBmYWxzZTsKCQl0aGlzLl90b2dnbGVBdHRyKCk7CgoJCXRoaXMucmFuZ2UgPSBudWxs
OwoJCXRoaXMuX29mZiggdGhpcy5kb2N1bWVudCApOwoKCQl0aGlzLl90cmlnZ2VyKCAiY2xvc2Ui
LCBldmVudCApOwoJfSwKCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmJ1dHRv
bjsKCX0sCgoJbWVudVdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMubWVudTsKCX0s
CgoJX3JlbmRlckJ1dHRvbkl0ZW06IGZ1bmN0aW9uKCBpdGVtICkgewoJCXZhciBidXR0b25JdGVt
ID0gJCggIjxzcGFuPiIgKTsKCgkJdGhpcy5fc2V0VGV4dCggYnV0dG9uSXRlbSwgaXRlbS5sYWJl
bCApOwoJCXRoaXMuX2FkZENsYXNzKCBidXR0b25JdGVtLCAidWktc2VsZWN0bWVudS10ZXh0IiAp
OwoKCQlyZXR1cm4gYnV0dG9uSXRlbTsKCX0sCgoJX3JlbmRlck1lbnU6IGZ1bmN0aW9uKCB1bCwg
aXRlbXMgKSB7CgkJdmFyIHRoYXQgPSB0aGlzLAoJCQljdXJyZW50T3B0Z3JvdXAgPSAiIjsKCgkJ
JC5lYWNoKCBpdGVtcywgZnVuY3Rpb24oIGluZGV4LCBpdGVtICkgewoJCQl2YXIgbGk7CgoJCQlp
ZiAoIGl0ZW0ub3B0Z3JvdXAgIT09IGN1cnJlbnRPcHRncm91cCApIHsKCQkJCWxpID0gJCggIjxs
aT4iLCB7CgkJCQkJdGV4dDogaXRlbS5vcHRncm91cAoJCQkJfSApOwoJCQkJdGhhdC5fYWRkQ2xh
c3MoIGxpLCAidWktc2VsZWN0bWVudS1vcHRncm91cCIsICJ1aS1tZW51LWRpdmlkZXIiICsKCQkJ
CQkoIGl0ZW0uZWxlbWVudC5wYXJlbnQoICJvcHRncm91cCIgKS5wcm9wKCAiZGlzYWJsZWQiICkg
PwoJCQkJCQkiIHVpLXN0YXRlLWRpc2FibGVkIiA6CgkJCQkJCSIiICkgKTsKCgkJCQlsaS5hcHBl
bmRUbyggdWwgKTsKCgkJCQljdXJyZW50T3B0Z3JvdXAgPSBpdGVtLm9wdGdyb3VwOwoJCQl9CgoJ
CQl0aGF0Ll9yZW5kZXJJdGVtRGF0YSggdWwsIGl0ZW0gKTsKCQl9ICk7Cgl9LAoKCV9yZW5kZXJJ
dGVtRGF0YTogZnVuY3Rpb24oIHVsLCBpdGVtICkgewoJCXJldHVybiB0aGlzLl9yZW5kZXJJdGVt
KCB1bCwgaXRlbSApLmRhdGEoICJ1aS1zZWxlY3RtZW51LWl0ZW0iLCBpdGVtICk7Cgl9LAoKCV9y
ZW5kZXJJdGVtOiBmdW5jdGlvbiggdWwsIGl0ZW0gKSB7CgkJdmFyIGxpID0gJCggIjxsaT4iICks
CgkJCXdyYXBwZXIgPSAkKCAiPGRpdj4iLCB7CgkJCQl0aXRsZTogaXRlbS5lbGVtZW50LmF0dHIo
ICJ0aXRsZSIgKQoJCQl9ICk7CgoJCWlmICggaXRlbS5kaXNhYmxlZCApIHsKCQkJdGhpcy5fYWRk
Q2xhc3MoIGxpLCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiICk7CgkJfQoJCXRoaXMuX3NldFRl
eHQoIHdyYXBwZXIsIGl0ZW0ubGFiZWwgKTsKCgkJcmV0dXJuIGxpLmFwcGVuZCggd3JhcHBlciAp
LmFwcGVuZFRvKCB1bCApOwoJfSwKCglfc2V0VGV4dDogZnVuY3Rpb24oIGVsZW1lbnQsIHZhbHVl
ICkgewoJCWlmICggdmFsdWUgKSB7CgkJCWVsZW1lbnQudGV4dCggdmFsdWUgKTsKCQl9IGVsc2Ug
ewoJCQllbGVtZW50Lmh0bWwoICImIzE2MDsiICk7CgkJfQoJfSwKCglfbW92ZTogZnVuY3Rpb24o
IGRpcmVjdGlvbiwgZXZlbnQgKSB7CgkJdmFyIGl0ZW0sIG5leHQsCgkJCWZpbHRlciA9ICIudWkt
bWVudS1pdGVtIjsKCgkJaWYgKCB0aGlzLmlzT3BlbiApIHsKCQkJaXRlbSA9IHRoaXMubWVudUl0
ZW1zLmVxKCB0aGlzLmZvY3VzSW5kZXggKS5wYXJlbnQoICJsaSIgKTsKCQl9IGVsc2UgewoJCQlp
dGVtID0gdGhpcy5tZW51SXRlbXMuZXEoIHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXgg
KS5wYXJlbnQoICJsaSIgKTsKCQkJZmlsdGVyICs9ICI6bm90KC51aS1zdGF0ZS1kaXNhYmxlZCki
OwoJCX0KCgkJaWYgKCBkaXJlY3Rpb24gPT09ICJmaXJzdCIgfHwgZGlyZWN0aW9uID09PSAibGFz
dCIgKSB7CgkJCW5leHQgPSBpdGVtWyBkaXJlY3Rpb24gPT09ICJmaXJzdCIgPyAicHJldkFsbCIg
OiAibmV4dEFsbCIgXSggZmlsdGVyICkuZXEoIC0xICk7CgkJfSBlbHNlIHsKCQkJbmV4dCA9IGl0
ZW1bIGRpcmVjdGlvbiArICJBbGwiIF0oIGZpbHRlciApLmVxKCAwICk7CgkJfQoKCQlpZiAoIG5l
eHQubGVuZ3RoICkgewoJCQl0aGlzLm1lbnVJbnN0YW5jZS5mb2N1cyggZXZlbnQsIG5leHQgKTsK
CQl9Cgl9LAoKCV9nZXRTZWxlY3RlZEl0ZW06IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm1l
bnVJdGVtcy5lcSggdGhpcy5lbGVtZW50WyAwIF0uc2VsZWN0ZWRJbmRleCApLnBhcmVudCggImxp
IiApOwoJfSwKCglfdG9nZ2xlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpc1sgdGhpcy5pc09w
ZW4gPyAiY2xvc2UiIDogIm9wZW4iIF0oIGV2ZW50ICk7Cgl9LAoKCV9zZXRTZWxlY3Rpb246IGZ1
bmN0aW9uKCkgewoJCXZhciBzZWxlY3Rpb247CgoJCWlmICggIXRoaXMucmFuZ2UgKSB7CgkJCXJl
dHVybjsKCQl9CgoJCWlmICggd2luZG93LmdldFNlbGVjdGlvbiApIHsKCQkJc2VsZWN0aW9uID0g
d2luZG93LmdldFNlbGVjdGlvbigpOwoJCQlzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7CgkJ
CXNlbGVjdGlvbi5hZGRSYW5nZSggdGhpcy5yYW5nZSApOwoKCQkvLyBTdXBwb3J0OiBJRTgKCQl9
IGVsc2UgewoJCQl0aGlzLnJhbmdlLnNlbGVjdCgpOwoJCX0KCgkJLy8gU3VwcG9ydDogSUUKCQkv
LyBTZXR0aW5nIHRoZSB0ZXh0IHNlbGVjdGlvbiBraWxscyB0aGUgYnV0dG9uIGZvY3VzIGluIElF
LCBidXQKCQkvLyByZXN0b3JpbmcgdGhlIGZvY3VzIGRvZXNuJ3Qga2lsbCB0aGUgc2VsZWN0aW9u
LgoJCXRoaXMuYnV0dG9uLmZvY3VzKCk7Cgl9LAoKCV9kb2N1bWVudENsaWNrOiB7CgkJbW91c2Vk
b3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCWlmICggIXRoaXMuaXNPcGVuICkgewoJCQkJcmV0
dXJuOwoJCQl9CgoJCQlpZiAoICEkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLXNlbGVj
dG1lbnUtbWVudSwgIyIgKwoJCQkJCSQudWkuZXNjYXBlU2VsZWN0b3IoIHRoaXMuaWRzLmJ1dHRv
biApICkubGVuZ3RoICkgewoJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCQkJfQoJCX0KCX0sCgoJ
X2J1dHRvbkV2ZW50czogewoKCQkvLyBQcmV2ZW50IHRleHQgc2VsZWN0aW9uIGZyb20gYmVpbmcg
cmVzZXQgd2hlbiBpbnRlcmFjdGluZyB3aXRoIHRoZSBzZWxlY3RtZW51ICgjMTAxNDQpCgkJbW91
c2Vkb3duOiBmdW5jdGlvbigpIHsKCQkJdmFyIHNlbGVjdGlvbjsKCgkJCWlmICggd2luZG93Lmdl
dFNlbGVjdGlvbiApIHsKCQkJCXNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsKCQkJ
CWlmICggc2VsZWN0aW9uLnJhbmdlQ291bnQgKSB7CgkJCQkJdGhpcy5yYW5nZSA9IHNlbGVjdGlv
bi5nZXRSYW5nZUF0KCAwICk7CgkJCQl9CgoJCQkvLyBTdXBwb3J0OiBJRTgKCQkJfSBlbHNlIHsK
CQkJCXRoaXMucmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTsKCQkJfQoJ
CX0sCgoJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXRoaXMuX3NldFNlbGVjdGlvbigp
OwoJCQl0aGlzLl90b2dnbGUoIGV2ZW50ICk7CgkJfSwKCgkJa2V5ZG93bjogZnVuY3Rpb24oIGV2
ZW50ICkgewoJCQl2YXIgcHJldmVudERlZmF1bHQgPSB0cnVlOwoJCQlzd2l0Y2ggKCBldmVudC5r
ZXlDb2RlICkgewoJCQljYXNlICQudWkua2V5Q29kZS5UQUI6CgkJCWNhc2UgJC51aS5rZXlDb2Rl
LkVTQ0FQRToKCQkJCXRoaXMuY2xvc2UoIGV2ZW50ICk7CgkJCQlwcmV2ZW50RGVmYXVsdCA9IGZh
bHNlOwoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkVOVEVSOgoJCQkJaWYgKCB0aGlz
LmlzT3BlbiApIHsKCQkJCQl0aGlzLl9zZWxlY3RGb2N1c2VkSXRlbSggZXZlbnQgKTsKCQkJCX0K
CQkJCWJyZWFrOwoJCQljYXNlICQudWkua2V5Q29kZS5VUDoKCQkJCWlmICggZXZlbnQuYWx0S2V5
ICkgewoJCQkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsKCQkJCX0gZWxzZSB7CgkJCQkJdGhpcy5f
bW92ZSggInByZXYiLCBldmVudCApOwoJCQkJfQoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlD
b2RlLkRPV046CgkJCQlpZiAoIGV2ZW50LmFsdEtleSApIHsKCQkJCQl0aGlzLl90b2dnbGUoIGV2
ZW50ICk7CgkJCQl9IGVsc2UgewoJCQkJCXRoaXMuX21vdmUoICJuZXh0IiwgZXZlbnQgKTsKCQkJ
CX0KCQkJCWJyZWFrOwoJCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToKCQkJCWlmICggdGhpcy5p
c09wZW4gKSB7CgkJCQkJdGhpcy5fc2VsZWN0Rm9jdXNlZEl0ZW0oIGV2ZW50ICk7CgkJCQl9IGVs
c2UgewoJCQkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsKCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNl
ICQudWkua2V5Q29kZS5MRUZUOgoJCQkJdGhpcy5fbW92ZSggInByZXYiLCBldmVudCApOwoJCQkJ
YnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCQkJdGhpcy5fbW92ZSggIm5leHQi
LCBldmVudCApOwoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkhPTUU6CgkJCWNhc2Ug
JC51aS5rZXlDb2RlLlBBR0VfVVA6CgkJCQl0aGlzLl9tb3ZlKCAiZmlyc3QiLCBldmVudCApOwoJ
CQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkVORDoKCQkJY2FzZSAkLnVpLmtleUNvZGUu
UEFHRV9ET1dOOgoJCQkJdGhpcy5fbW92ZSggImxhc3QiLCBldmVudCApOwoJCQkJYnJlYWs7CgkJ
CWRlZmF1bHQ6CgkJCQl0aGlzLm1lbnUudHJpZ2dlciggZXZlbnQgKTsKCQkJCXByZXZlbnREZWZh
dWx0ID0gZmFsc2U7CgkJCX0KCgkJCWlmICggcHJldmVudERlZmF1bHQgKSB7CgkJCQlldmVudC5w
cmV2ZW50RGVmYXVsdCgpOwoJCQl9CgkJfQoJfSwKCglfc2VsZWN0Rm9jdXNlZEl0ZW06IGZ1bmN0
aW9uKCBldmVudCApIHsKCQl2YXIgaXRlbSA9IHRoaXMubWVudUl0ZW1zLmVxKCB0aGlzLmZvY3Vz
SW5kZXggKS5wYXJlbnQoICJsaSIgKTsKCQlpZiAoICFpdGVtLmhhc0NsYXNzKCAidWktc3RhdGUt
ZGlzYWJsZWQiICkgKSB7CgkJCXRoaXMuX3NlbGVjdCggaXRlbS5kYXRhKCAidWktc2VsZWN0bWVu
dS1pdGVtIiApLCBldmVudCApOwoJCX0KCX0sCgoJX3NlbGVjdDogZnVuY3Rpb24oIGl0ZW0sIGV2
ZW50ICkgewoJCXZhciBvbGRJbmRleCA9IHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXg7
CgoJCS8vIENoYW5nZSBuYXRpdmUgc2VsZWN0IGVsZW1lbnQKCQl0aGlzLmVsZW1lbnRbIDAgXS5z
ZWxlY3RlZEluZGV4ID0gaXRlbS5pbmRleDsKCQl0aGlzLmJ1dHRvbkl0ZW0ucmVwbGFjZVdpdGgo
IHRoaXMuYnV0dG9uSXRlbSA9IHRoaXMuX3JlbmRlckJ1dHRvbkl0ZW0oIGl0ZW0gKSApOwoJCXRo
aXMuX3NldEFyaWEoIGl0ZW0gKTsKCQl0aGlzLl90cmlnZ2VyKCAic2VsZWN0IiwgZXZlbnQsIHsg
aXRlbTogaXRlbSB9ICk7CgoJCWlmICggaXRlbS5pbmRleCAhPT0gb2xkSW5kZXggKSB7CgkJCXRo
aXMuX3RyaWdnZXIoICJjaGFuZ2UiLCBldmVudCwgeyBpdGVtOiBpdGVtIH0gKTsKCQl9CgoJCXRo
aXMuY2xvc2UoIGV2ZW50ICk7Cgl9LAoKCV9zZXRBcmlhOiBmdW5jdGlvbiggaXRlbSApIHsKCQl2
YXIgaWQgPSB0aGlzLm1lbnVJdGVtcy5lcSggaXRlbS5pbmRleCApLmF0dHIoICJpZCIgKTsKCgkJ
dGhpcy5idXR0b24uYXR0ciggewoJCQkiYXJpYS1sYWJlbGxlZGJ5IjogaWQsCgkJCSJhcmlhLWFj
dGl2ZWRlc2NlbmRhbnQiOiBpZAoJCX0gKTsKCQl0aGlzLm1lbnUuYXR0ciggImFyaWEtYWN0aXZl
ZGVzY2VuZGFudCIsIGlkICk7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVl
ICkgewoJCWlmICgga2V5ID09PSAiaWNvbnMiICkgewoJCQl2YXIgaWNvbiA9IHRoaXMuYnV0dG9u
LmZpbmQoICJzcGFuLnVpLWljb24iICk7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBpY29uLCBudWxs
LCB0aGlzLm9wdGlvbnMuaWNvbnMuYnV0dG9uICkKCQkJCS5fYWRkQ2xhc3MoIGljb24sIG51bGws
IHZhbHVlLmJ1dHRvbiApOwoJCX0KCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCgkJaWYg
KCBrZXkgPT09ICJhcHBlbmRUbyIgKSB7CgkJCXRoaXMubWVudVdyYXAuYXBwZW5kVG8oIHRoaXMu
X2FwcGVuZFRvKCkgKTsKCQl9CgoJCWlmICgga2V5ID09PSAid2lkdGgiICkgewoJCQl0aGlzLl9y
ZXNpemVCdXR0b24oKTsKCQl9Cgl9LAoKCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIHZh
bHVlICkgewoJCXRoaXMuX3N1cGVyKCB2YWx1ZSApOwoKCQl0aGlzLm1lbnVJbnN0YW5jZS5vcHRp
b24oICJkaXNhYmxlZCIsIHZhbHVlICk7CgkJdGhpcy5idXR0b24uYXR0ciggImFyaWEtZGlzYWJs
ZWQiLCB2YWx1ZSApOwoJCXRoaXMuX3RvZ2dsZUNsYXNzKCB0aGlzLmJ1dHRvbiwgbnVsbCwgInVp
LXN0YXRlLWRpc2FibGVkIiwgdmFsdWUgKTsKCgkJdGhpcy5lbGVtZW50LnByb3AoICJkaXNhYmxl
ZCIsIHZhbHVlICk7CgkJaWYgKCB2YWx1ZSApIHsKCQkJdGhpcy5idXR0b24uYXR0ciggInRhYmlu
ZGV4IiwgLTEgKTsKCQkJdGhpcy5jbG9zZSgpOwoJCX0gZWxzZSB7CgkJCXRoaXMuYnV0dG9uLmF0
dHIoICJ0YWJpbmRleCIsIDAgKTsKCQl9Cgl9LAoKCV9hcHBlbmRUbzogZnVuY3Rpb24oKSB7CgkJ
dmFyIGVsZW1lbnQgPSB0aGlzLm9wdGlvbnMuYXBwZW5kVG87CgoJCWlmICggZWxlbWVudCApIHsK
CQkJZWxlbWVudCA9IGVsZW1lbnQuanF1ZXJ5IHx8IGVsZW1lbnQubm9kZVR5cGUgPwoJCQkJJCgg
ZWxlbWVudCApIDoKCQkJCXRoaXMuZG9jdW1lbnQuZmluZCggZWxlbWVudCApLmVxKCAwICk7CgkJ
fQoKCQlpZiAoICFlbGVtZW50IHx8ICFlbGVtZW50WyAwIF0gKSB7CgkJCWVsZW1lbnQgPSB0aGlz
LmVsZW1lbnQuY2xvc2VzdCggIi51aS1mcm9udCwgZGlhbG9nIiApOwoJCX0KCgkJaWYgKCAhZWxl
bWVudC5sZW5ndGggKSB7CgkJCWVsZW1lbnQgPSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keTsKCQl9
CgoJCXJldHVybiBlbGVtZW50OwoJfSwKCglfdG9nZ2xlQXR0cjogZnVuY3Rpb24oKSB7CgkJdGhp
cy5idXR0b24uYXR0ciggImFyaWEtZXhwYW5kZWQiLCB0aGlzLmlzT3BlbiApOwoKCQkvLyBXZSBj
YW4ndCB1c2UgdHdvIF90b2dnbGVDbGFzcygpIGNhbGxzIGhlcmUsIGJlY2F1c2Ugd2UgbmVlZCB0
byBtYWtlIHN1cmUKCQkvLyB3ZSBhbHdheXMgcmVtb3ZlIGNsYXNzZXMgZmlyc3QgYW5kIGFkZCB0
aGVtIHNlY29uZCwgb3RoZXJ3aXNlIGlmIGJvdGggY2xhc3NlcyBoYXZlIHRoZQoJCS8vIHNhbWUg
dGhlbWUgY2xhc3MsIGl0IHdpbGwgYmUgcmVtb3ZlZCBhZnRlciB3ZSBhZGQgaXQuCgkJdGhpcy5f
cmVtb3ZlQ2xhc3MoIHRoaXMuYnV0dG9uLCAidWktc2VsZWN0bWVudS1idXR0b24tIiArCgkJCSgg
dGhpcy5pc09wZW4gPyAiY2xvc2VkIiA6ICJvcGVuIiApICkKCQkJLl9hZGRDbGFzcyggdGhpcy5i
dXR0b24sICJ1aS1zZWxlY3RtZW51LWJ1dHRvbi0iICsKCQkJCSggdGhpcy5pc09wZW4gPyAib3Bl
biIgOiAiY2xvc2VkIiApICkKCQkJLl90b2dnbGVDbGFzcyggdGhpcy5tZW51V3JhcCwgInVpLXNl
bGVjdG1lbnUtb3BlbiIsIG51bGwsIHRoaXMuaXNPcGVuICk7CgoJCXRoaXMubWVudS5hdHRyKCAi
YXJpYS1oaWRkZW4iLCAhdGhpcy5pc09wZW4gKTsKCX0sCgoJX3Jlc2l6ZUJ1dHRvbjogZnVuY3Rp
b24oKSB7CgkJdmFyIHdpZHRoID0gdGhpcy5vcHRpb25zLndpZHRoOwoKCQkvLyBGb3IgYHdpZHRo
OiBmYWxzZWAsIGp1c3QgcmVtb3ZlIGlubGluZSBzdHlsZSBhbmQgc3RvcAoJCWlmICggd2lkdGgg
PT09IGZhbHNlICkgewoJCQl0aGlzLmJ1dHRvbi5jc3MoICJ3aWR0aCIsICIiICk7CgkJCXJldHVy
bjsKCQl9CgoJCS8vIEZvciBgd2lkdGg6IG51bGxgLCBtYXRjaCB0aGUgd2lkdGggb2YgdGhlIG9y
aWdpbmFsIGVsZW1lbnQKCQlpZiAoIHdpZHRoID09PSBudWxsICkgewoJCQl3aWR0aCA9IHRoaXMu
ZWxlbWVudC5zaG93KCkub3V0ZXJXaWR0aCgpOwoJCQl0aGlzLmVsZW1lbnQuaGlkZSgpOwoJCX0K
CgkJdGhpcy5idXR0b24ub3V0ZXJXaWR0aCggd2lkdGggKTsKCX0sCgoJX3Jlc2l6ZU1lbnU6IGZ1
bmN0aW9uKCkgewoJCXRoaXMubWVudS5vdXRlcldpZHRoKCBNYXRoLm1heCgKCQkJdGhpcy5idXR0
b24ub3V0ZXJXaWR0aCgpLAoKCQkJLy8gU3VwcG9ydDogSUUxMAoJCQkvLyBJRTEwIHdyYXBzIGxv
bmcgdGV4dCAocG9zc2libHkgYSByb3VuZGluZyBidWcpCgkJCS8vIHNvIHdlIGFkZCAxcHggdG8g
YXZvaWQgdGhlIHdyYXBwaW5nCgkJCXRoaXMubWVudS53aWR0aCggIiIgKS5vdXRlcldpZHRoKCkg
KyAxCgkJKSApOwoJfSwKCglfZ2V0Q3JlYXRlT3B0aW9uczogZnVuY3Rpb24oKSB7CgkJdmFyIG9w
dGlvbnMgPSB0aGlzLl9zdXBlcigpOwoKCQlvcHRpb25zLmRpc2FibGVkID0gdGhpcy5lbGVtZW50
LnByb3AoICJkaXNhYmxlZCIgKTsKCgkJcmV0dXJuIG9wdGlvbnM7Cgl9LAoKCV9wYXJzZU9wdGlv
bnM6IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJZGF0YSA9IFtd
OwoJCW9wdGlvbnMuZWFjaCggZnVuY3Rpb24oIGluZGV4LCBpdGVtICkgewoJCQlkYXRhLnB1c2go
IHRoYXQuX3BhcnNlT3B0aW9uKCAkKCBpdGVtICksIGluZGV4ICkgKTsKCQl9ICk7CgkJdGhpcy5p
dGVtcyA9IGRhdGE7Cgl9LAoKCV9wYXJzZU9wdGlvbjogZnVuY3Rpb24oIG9wdGlvbiwgaW5kZXgg
KSB7CgkJdmFyIG9wdGdyb3VwID0gb3B0aW9uLnBhcmVudCggIm9wdGdyb3VwIiApOwoKCQlyZXR1
cm4gewoJCQllbGVtZW50OiBvcHRpb24sCgkJCWluZGV4OiBpbmRleCwKCQkJdmFsdWU6IG9wdGlv
bi52YWwoKSwKCQkJbGFiZWw6IG9wdGlvbi50ZXh0KCksCgkJCW9wdGdyb3VwOiBvcHRncm91cC5h
dHRyKCAibGFiZWwiICkgfHwgIiIsCgkJCWRpc2FibGVkOiBvcHRncm91cC5wcm9wKCAiZGlzYWJs
ZWQiICkgfHwgb3B0aW9uLnByb3AoICJkaXNhYmxlZCIgKQoJCX07Cgl9LAoKCV9kZXN0cm95OiBm
dW5jdGlvbigpIHsKCQl0aGlzLl91bmJpbmRGb3JtUmVzZXRIYW5kbGVyKCk7CgkJdGhpcy5tZW51
V3JhcC5yZW1vdmUoKTsKCQl0aGlzLmJ1dHRvbi5yZW1vdmUoKTsKCQl0aGlzLmVsZW1lbnQuc2hv
dygpOwoJCXRoaXMuZWxlbWVudC5yZW1vdmVVbmlxdWVJZCgpOwoJCXRoaXMubGFiZWxzLmF0dHIo
ICJmb3IiLCB0aGlzLmlkcy5lbGVtZW50ICk7Cgl9Cn0gXSApOwoKCi8qIQogKiBqUXVlcnkgVUkg
U2xpZGVyIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVl
cnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRo
ZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJl
bDogU2xpZGVyCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IERpc3BsYXlzIGEg
ZmxleGlibGUgc2xpZGVyIHdpdGggcmFuZ2VzIGFuZCBhY2Nlc3NpYmlsaXR5IHZpYSBrZXlib2Fy
ZC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NsaWRlci8KLy8+PmRlbW9zOiBo
dHRwOi8vanF1ZXJ5dWkuY29tL3NsaWRlci8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1l
cy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9zbGlk
ZXIuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgp2YXIg
d2lkZ2V0c1NsaWRlciA9ICQud2lkZ2V0KCAidWkuc2xpZGVyIiwgJC51aS5tb3VzZSwgewoJdmVy
c2lvbjogIjEuMTIuMSIsCgl3aWRnZXRFdmVudFByZWZpeDogInNsaWRlIiwKCglvcHRpb25zOiB7
CgkJYW5pbWF0ZTogZmFsc2UsCgkJY2xhc3NlczogewoJCQkidWktc2xpZGVyIjogInVpLWNvcm5l
ci1hbGwiLAoJCQkidWktc2xpZGVyLWhhbmRsZSI6ICJ1aS1jb3JuZXItYWxsIiwKCgkJCS8vIE5v
dGU6IHVpLXdpZGdldC1oZWFkZXIgaXNuJ3QgdGhlIG1vc3QgZml0dGluZ2x5IHNlbWFudGljIGZy
YW1ld29yayBjbGFzcyBmb3IgdGhpcwoJCQkvLyBlbGVtZW50LCBidXQgd29ya2VkIGJlc3Qgdmlz
dWFsbHkgd2l0aCBhIHZhcmlldHkgb2YgdGhlbWVzCgkJCSJ1aS1zbGlkZXItcmFuZ2UiOiAidWkt
Y29ybmVyLWFsbCB1aS13aWRnZXQtaGVhZGVyIgoJCX0sCgkJZGlzdGFuY2U6IDAsCgkJbWF4OiAx
MDAsCgkJbWluOiAwLAoJCW9yaWVudGF0aW9uOiAiaG9yaXpvbnRhbCIsCgkJcmFuZ2U6IGZhbHNl
LAoJCXN0ZXA6IDEsCgkJdmFsdWU6IDAsCgkJdmFsdWVzOiBudWxsLAoKCQkvLyBDYWxsYmFja3MK
CQljaGFuZ2U6IG51bGwsCgkJc2xpZGU6IG51bGwsCgkJc3RhcnQ6IG51bGwsCgkJc3RvcDogbnVs
bAoJfSwKCgkvLyBOdW1iZXIgb2YgcGFnZXMgaW4gYSBzbGlkZXIKCS8vIChob3cgbWFueSB0aW1l
cyBjYW4geW91IHBhZ2UgdXAvZG93biB0byBnbyB0aHJvdWdoIHRoZSB3aG9sZSByYW5nZSkKCW51
bVBhZ2VzOiA1LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX2tleVNsaWRpbmcgPSBm
YWxzZTsKCQl0aGlzLl9tb3VzZVNsaWRpbmcgPSBmYWxzZTsKCQl0aGlzLl9hbmltYXRlT2ZmID0g
dHJ1ZTsKCQl0aGlzLl9oYW5kbGVJbmRleCA9IG51bGw7CgkJdGhpcy5fZGV0ZWN0T3JpZW50YXRp
b24oKTsKCQl0aGlzLl9tb3VzZUluaXQoKTsKCQl0aGlzLl9jYWxjdWxhdGVOZXdNYXgoKTsKCgkJ
dGhpcy5fYWRkQ2xhc3MoICJ1aS1zbGlkZXIgdWktc2xpZGVyLSIgKyB0aGlzLm9yaWVudGF0aW9u
LAoJCQkidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IiApOwoKCQl0aGlzLl9yZWZyZXNoKCk7
CgoJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCX0sCgoJX3JlZnJlc2g6IGZ1bmN0aW9uKCkg
ewoJCXRoaXMuX2NyZWF0ZVJhbmdlKCk7CgkJdGhpcy5fY3JlYXRlSGFuZGxlcygpOwoJCXRoaXMu
X3NldHVwRXZlbnRzKCk7CgkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7Cgl9LAoKCV9jcmVhdGVIYW5k
bGVzOiBmdW5jdGlvbigpIHsKCQl2YXIgaSwgaGFuZGxlQ291bnQsCgkJCW9wdGlvbnMgPSB0aGlz
Lm9wdGlvbnMsCgkJCWV4aXN0aW5nSGFuZGxlcyA9IHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXNs
aWRlci1oYW5kbGUiICksCgkJCWhhbmRsZSA9ICI8c3BhbiB0YWJpbmRleD0nMCc+PC9zcGFuPiIs
CgkJCWhhbmRsZXMgPSBbXTsKCgkJaGFuZGxlQ291bnQgPSAoIG9wdGlvbnMudmFsdWVzICYmIG9w
dGlvbnMudmFsdWVzLmxlbmd0aCApIHx8IDE7CgoJCWlmICggZXhpc3RpbmdIYW5kbGVzLmxlbmd0
aCA+IGhhbmRsZUNvdW50ICkgewoJCQlleGlzdGluZ0hhbmRsZXMuc2xpY2UoIGhhbmRsZUNvdW50
ICkucmVtb3ZlKCk7CgkJCWV4aXN0aW5nSGFuZGxlcyA9IGV4aXN0aW5nSGFuZGxlcy5zbGljZSgg
MCwgaGFuZGxlQ291bnQgKTsKCQl9CgoJCWZvciAoIGkgPSBleGlzdGluZ0hhbmRsZXMubGVuZ3Ro
OyBpIDwgaGFuZGxlQ291bnQ7IGkrKyApIHsKCQkJaGFuZGxlcy5wdXNoKCBoYW5kbGUgKTsKCQl9
CgoJCXRoaXMuaGFuZGxlcyA9IGV4aXN0aW5nSGFuZGxlcy5hZGQoICQoIGhhbmRsZXMuam9pbigg
IiIgKSApLmFwcGVuZFRvKCB0aGlzLmVsZW1lbnQgKSApOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhp
cy5oYW5kbGVzLCAidWktc2xpZGVyLWhhbmRsZSIsICJ1aS1zdGF0ZS1kZWZhdWx0IiApOwoKCQl0
aGlzLmhhbmRsZSA9IHRoaXMuaGFuZGxlcy5lcSggMCApOwoKCQl0aGlzLmhhbmRsZXMuZWFjaCgg
ZnVuY3Rpb24oIGkgKSB7CgkJCSQoIHRoaXMgKQoJCQkJLmRhdGEoICJ1aS1zbGlkZXItaGFuZGxl
LWluZGV4IiwgaSApCgkJCQkuYXR0ciggInRhYkluZGV4IiwgMCApOwoJCX0gKTsKCX0sCgoJX2Ny
ZWF0ZVJhbmdlOiBmdW5jdGlvbigpIHsKCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9uczsKCgkJ
aWYgKCBvcHRpb25zLnJhbmdlICkgewoJCQlpZiAoIG9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7
CgkJCQlpZiAoICFvcHRpb25zLnZhbHVlcyApIHsKCQkJCQlvcHRpb25zLnZhbHVlcyA9IFsgdGhp
cy5fdmFsdWVNaW4oKSwgdGhpcy5fdmFsdWVNaW4oKSBdOwoJCQkJfSBlbHNlIGlmICggb3B0aW9u
cy52YWx1ZXMubGVuZ3RoICYmIG9wdGlvbnMudmFsdWVzLmxlbmd0aCAhPT0gMiApIHsKCQkJCQlv
cHRpb25zLnZhbHVlcyA9IFsgb3B0aW9ucy52YWx1ZXNbIDAgXSwgb3B0aW9ucy52YWx1ZXNbIDAg
XSBdOwoJCQkJfSBlbHNlIGlmICggJC5pc0FycmF5KCBvcHRpb25zLnZhbHVlcyApICkgewoJCQkJ
CW9wdGlvbnMudmFsdWVzID0gb3B0aW9ucy52YWx1ZXMuc2xpY2UoIDAgKTsKCQkJCX0KCQkJfQoK
CQkJaWYgKCAhdGhpcy5yYW5nZSB8fCAhdGhpcy5yYW5nZS5sZW5ndGggKSB7CgkJCQl0aGlzLnJh
bmdlID0gJCggIjxkaXY+IiApCgkJCQkJLmFwcGVuZFRvKCB0aGlzLmVsZW1lbnQgKTsKCgkJCQl0
aGlzLl9hZGRDbGFzcyggdGhpcy5yYW5nZSwgInVpLXNsaWRlci1yYW5nZSIgKTsKCQkJfSBlbHNl
IHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLnJhbmdlLCAidWktc2xpZGVyLXJhbmdlLW1p
biB1aS1zbGlkZXItcmFuZ2UtbWF4IiApOwoKCQkJCS8vIEhhbmRsZSByYW5nZSBzd2l0Y2hpbmcg
ZnJvbSB0cnVlIHRvIG1pbi9tYXgKCQkJCXRoaXMucmFuZ2UuY3NzKCB7CgkJCQkJImxlZnQiOiAi
IiwKCQkJCQkiYm90dG9tIjogIiIKCQkJCX0gKTsKCQkJfQoJCQlpZiAoIG9wdGlvbnMucmFuZ2Ug
PT09ICJtaW4iIHx8IG9wdGlvbnMucmFuZ2UgPT09ICJtYXgiICkgewoJCQkJdGhpcy5fYWRkQ2xh
c3MoIHRoaXMucmFuZ2UsICJ1aS1zbGlkZXItcmFuZ2UtIiArIG9wdGlvbnMucmFuZ2UgKTsKCQkJ
fQoJCX0gZWxzZSB7CgkJCWlmICggdGhpcy5yYW5nZSApIHsKCQkJCXRoaXMucmFuZ2UucmVtb3Zl
KCk7CgkJCX0KCQkJdGhpcy5yYW5nZSA9IG51bGw7CgkJfQoJfSwKCglfc2V0dXBFdmVudHM6IGZ1
bmN0aW9uKCkgewoJCXRoaXMuX29mZiggdGhpcy5oYW5kbGVzICk7CgkJdGhpcy5fb24oIHRoaXMu
aGFuZGxlcywgdGhpcy5faGFuZGxlRXZlbnRzICk7CgkJdGhpcy5faG92ZXJhYmxlKCB0aGlzLmhh
bmRsZXMgKTsKCQl0aGlzLl9mb2N1c2FibGUoIHRoaXMuaGFuZGxlcyApOwoJfSwKCglfZGVzdHJv
eTogZnVuY3Rpb24oKSB7CgkJdGhpcy5oYW5kbGVzLnJlbW92ZSgpOwoJCWlmICggdGhpcy5yYW5n
ZSApIHsKCQkJdGhpcy5yYW5nZS5yZW1vdmUoKTsKCQl9CgoJCXRoaXMuX21vdXNlRGVzdHJveSgp
OwoJfSwKCglfbW91c2VDYXB0dXJlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIHBvc2l0aW9u
LCBub3JtVmFsdWUsIGRpc3RhbmNlLCBjbG9zZXN0SGFuZGxlLCBpbmRleCwgYWxsb3dlZCwgb2Zm
c2V0LCBtb3VzZU92ZXJIYW5kbGUsCgkJCXRoYXQgPSB0aGlzLAoJCQlvID0gdGhpcy5vcHRpb25z
OwoKCQlpZiAoIG8uZGlzYWJsZWQgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXRoaXMuZWxl
bWVudFNpemUgPSB7CgkJCXdpZHRoOiB0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpLAoJCQloZWln
aHQ6IHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpCgkJfTsKCQl0aGlzLmVsZW1lbnRPZmZzZXQg
PSB0aGlzLmVsZW1lbnQub2Zmc2V0KCk7CgoJCXBvc2l0aW9uID0geyB4OiBldmVudC5wYWdlWCwg
eTogZXZlbnQucGFnZVkgfTsKCQlub3JtVmFsdWUgPSB0aGlzLl9ub3JtVmFsdWVGcm9tTW91c2Uo
IHBvc2l0aW9uICk7CgkJZGlzdGFuY2UgPSB0aGlzLl92YWx1ZU1heCgpIC0gdGhpcy5fdmFsdWVN
aW4oKSArIDE7CgkJdGhpcy5oYW5kbGVzLmVhY2goIGZ1bmN0aW9uKCBpICkgewoJCQl2YXIgdGhp
c0Rpc3RhbmNlID0gTWF0aC5hYnMoIG5vcm1WYWx1ZSAtIHRoYXQudmFsdWVzKCBpICkgKTsKCQkJ
aWYgKCAoIGRpc3RhbmNlID4gdGhpc0Rpc3RhbmNlICkgfHwKCQkJCSggZGlzdGFuY2UgPT09IHRo
aXNEaXN0YW5jZSAmJgoJCQkJCSggaSA9PT0gdGhhdC5fbGFzdENoYW5nZWRWYWx1ZSB8fCB0aGF0
LnZhbHVlcyggaSApID09PSBvLm1pbiApICkgKSB7CgkJCQlkaXN0YW5jZSA9IHRoaXNEaXN0YW5j
ZTsKCQkJCWNsb3Nlc3RIYW5kbGUgPSAkKCB0aGlzICk7CgkJCQlpbmRleCA9IGk7CgkJCX0KCQl9
ICk7CgoJCWFsbG93ZWQgPSB0aGlzLl9zdGFydCggZXZlbnQsIGluZGV4ICk7CgkJaWYgKCBhbGxv
d2VkID09PSBmYWxzZSApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQl0aGlzLl9tb3VzZVNsaWRp
bmcgPSB0cnVlOwoKCQl0aGlzLl9oYW5kbGVJbmRleCA9IGluZGV4OwoKCQl0aGlzLl9hZGRDbGFz
cyggY2xvc2VzdEhhbmRsZSwgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQljbG9zZXN0SGFu
ZGxlLnRyaWdnZXIoICJmb2N1cyIgKTsKCgkJb2Zmc2V0ID0gY2xvc2VzdEhhbmRsZS5vZmZzZXQo
KTsKCQltb3VzZU92ZXJIYW5kbGUgPSAhJCggZXZlbnQudGFyZ2V0ICkucGFyZW50cygpLmFkZEJh
Y2soKS5pcyggIi51aS1zbGlkZXItaGFuZGxlIiApOwoJCXRoaXMuX2NsaWNrT2Zmc2V0ID0gbW91
c2VPdmVySGFuZGxlID8geyBsZWZ0OiAwLCB0b3A6IDAgfSA6IHsKCQkJbGVmdDogZXZlbnQucGFn
ZVggLSBvZmZzZXQubGVmdCAtICggY2xvc2VzdEhhbmRsZS53aWR0aCgpIC8gMiApLAoJCQl0b3A6
IGV2ZW50LnBhZ2VZIC0gb2Zmc2V0LnRvcCAtCgkJCQkoIGNsb3Nlc3RIYW5kbGUuaGVpZ2h0KCkg
LyAyICkgLQoJCQkJKCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoICJib3JkZXJUb3BXaWR0
aCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJKCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoICJi
b3JkZXJCb3R0b21XaWR0aCIgKSwgMTAgKSB8fCAwICkgKwoJCQkJKCBwYXJzZUludCggY2xvc2Vz
dEhhbmRsZS5jc3MoICJtYXJnaW5Ub3AiICksIDEwICkgfHwgMCApCgkJfTsKCgkJaWYgKCAhdGhp
cy5oYW5kbGVzLmhhc0NsYXNzKCAidWktc3RhdGUtaG92ZXIiICkgKSB7CgkJCXRoaXMuX3NsaWRl
KCBldmVudCwgaW5kZXgsIG5vcm1WYWx1ZSApOwoJCX0KCQl0aGlzLl9hbmltYXRlT2ZmID0gdHJ1
ZTsKCQlyZXR1cm4gdHJ1ZTsKCX0sCgoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCkgewoJCXJldHVy
biB0cnVlOwoJfSwKCglfbW91c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIHBvc2l0
aW9uID0geyB4OiBldmVudC5wYWdlWCwgeTogZXZlbnQucGFnZVkgfSwKCQkJbm9ybVZhbHVlID0g
dGhpcy5fbm9ybVZhbHVlRnJvbU1vdXNlKCBwb3NpdGlvbiApOwoKCQl0aGlzLl9zbGlkZSggZXZl
bnQsIHRoaXMuX2hhbmRsZUluZGV4LCBub3JtVmFsdWUgKTsKCgkJcmV0dXJuIGZhbHNlOwoJfSwK
CglfbW91c2VTdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRo
aXMuaGFuZGxlcywgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQl0aGlzLl9tb3VzZVNsaWRp
bmcgPSBmYWxzZTsKCgkJdGhpcy5fc3RvcCggZXZlbnQsIHRoaXMuX2hhbmRsZUluZGV4ICk7CgkJ
dGhpcy5fY2hhbmdlKCBldmVudCwgdGhpcy5faGFuZGxlSW5kZXggKTsKCgkJdGhpcy5faGFuZGxl
SW5kZXggPSBudWxsOwoJCXRoaXMuX2NsaWNrT2Zmc2V0ID0gbnVsbDsKCQl0aGlzLl9hbmltYXRl
T2ZmID0gZmFsc2U7CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJX2RldGVjdE9yaWVudGF0aW9uOiBm
dW5jdGlvbigpIHsKCQl0aGlzLm9yaWVudGF0aW9uID0gKCB0aGlzLm9wdGlvbnMub3JpZW50YXRp
b24gPT09ICJ2ZXJ0aWNhbCIgKSA/ICJ2ZXJ0aWNhbCIgOiAiaG9yaXpvbnRhbCI7Cgl9LAoKCV9u
b3JtVmFsdWVGcm9tTW91c2U6IGZ1bmN0aW9uKCBwb3NpdGlvbiApIHsKCQl2YXIgcGl4ZWxUb3Rh
bCwKCQkJcGl4ZWxNb3VzZSwKCQkJcGVyY2VudE1vdXNlLAoJCQl2YWx1ZVRvdGFsLAoJCQl2YWx1
ZU1vdXNlOwoKCQlpZiAoIHRoaXMub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiApIHsKCQkJ
cGl4ZWxUb3RhbCA9IHRoaXMuZWxlbWVudFNpemUud2lkdGg7CgkJCXBpeGVsTW91c2UgPSBwb3Np
dGlvbi54IC0gdGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQgLQoJCQkJKCB0aGlzLl9jbGlja09mZnNl
dCA/IHRoaXMuX2NsaWNrT2Zmc2V0LmxlZnQgOiAwICk7CgkJfSBlbHNlIHsKCQkJcGl4ZWxUb3Rh
bCA9IHRoaXMuZWxlbWVudFNpemUuaGVpZ2h0OwoJCQlwaXhlbE1vdXNlID0gcG9zaXRpb24ueSAt
IHRoaXMuZWxlbWVudE9mZnNldC50b3AgLQoJCQkJKCB0aGlzLl9jbGlja09mZnNldCA/IHRoaXMu
X2NsaWNrT2Zmc2V0LnRvcCA6IDAgKTsKCQl9CgoJCXBlcmNlbnRNb3VzZSA9ICggcGl4ZWxNb3Vz
ZSAvIHBpeGVsVG90YWwgKTsKCQlpZiAoIHBlcmNlbnRNb3VzZSA+IDEgKSB7CgkJCXBlcmNlbnRN
b3VzZSA9IDE7CgkJfQoJCWlmICggcGVyY2VudE1vdXNlIDwgMCApIHsKCQkJcGVyY2VudE1vdXNl
ID0gMDsKCQl9CgkJaWYgKCB0aGlzLm9yaWVudGF0aW9uID09PSAidmVydGljYWwiICkgewoJCQlw
ZXJjZW50TW91c2UgPSAxIC0gcGVyY2VudE1vdXNlOwoJCX0KCgkJdmFsdWVUb3RhbCA9IHRoaXMu
X3ZhbHVlTWF4KCkgLSB0aGlzLl92YWx1ZU1pbigpOwoJCXZhbHVlTW91c2UgPSB0aGlzLl92YWx1
ZU1pbigpICsgcGVyY2VudE1vdXNlICogdmFsdWVUb3RhbDsKCgkJcmV0dXJuIHRoaXMuX3RyaW1B
bGlnblZhbHVlKCB2YWx1ZU1vdXNlICk7Cgl9LAoKCV91aUhhc2g6IGZ1bmN0aW9uKCBpbmRleCwg
dmFsdWUsIHZhbHVlcyApIHsKCQl2YXIgdWlIYXNoID0gewoJCQloYW5kbGU6IHRoaXMuaGFuZGxl
c1sgaW5kZXggXSwKCQkJaGFuZGxlSW5kZXg6IGluZGV4LAoJCQl2YWx1ZTogdmFsdWUgIT09IHVu
ZGVmaW5lZCA/IHZhbHVlIDogdGhpcy52YWx1ZSgpCgkJfTsKCgkJaWYgKCB0aGlzLl9oYXNNdWx0
aXBsZVZhbHVlcygpICkgewoJCQl1aUhhc2gudmFsdWUgPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8g
dmFsdWUgOiB0aGlzLnZhbHVlcyggaW5kZXggKTsKCQkJdWlIYXNoLnZhbHVlcyA9IHZhbHVlcyB8
fCB0aGlzLnZhbHVlcygpOwoJCX0KCgkJcmV0dXJuIHVpSGFzaDsKCX0sCgoJX2hhc011bHRpcGxl
VmFsdWVzOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5vcHRpb25zLnZhbHVlcyAmJiB0aGlz
Lm9wdGlvbnMudmFsdWVzLmxlbmd0aDsKCX0sCgoJX3N0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIGlu
ZGV4ICkgewoJCXJldHVybiB0aGlzLl90cmlnZ2VyKCAic3RhcnQiLCBldmVudCwgdGhpcy5fdWlI
YXNoKCBpbmRleCApICk7Cgl9LAoKCV9zbGlkZTogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCwgbmV3
VmFsICkgewoJCXZhciBhbGxvd2VkLCBvdGhlclZhbCwKCQkJY3VycmVudFZhbHVlID0gdGhpcy52
YWx1ZSgpLAoJCQluZXdWYWx1ZXMgPSB0aGlzLnZhbHVlcygpOwoKCQlpZiAoIHRoaXMuX2hhc011
bHRpcGxlVmFsdWVzKCkgKSB7CgkJCW90aGVyVmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ID8gMCA6
IDEgKTsKCQkJY3VycmVudFZhbHVlID0gdGhpcy52YWx1ZXMoIGluZGV4ICk7CgoJCQlpZiAoIHRo
aXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoID09PSAyICYmIHRoaXMub3B0aW9ucy5yYW5nZSA9PT0g
dHJ1ZSApIHsKCQkJCW5ld1ZhbCA9ICBpbmRleCA9PT0gMCA/IE1hdGgubWluKCBvdGhlclZhbCwg
bmV3VmFsICkgOiBNYXRoLm1heCggb3RoZXJWYWwsIG5ld1ZhbCApOwoJCQl9CgoJCQluZXdWYWx1
ZXNbIGluZGV4IF0gPSBuZXdWYWw7CgkJfQoKCQlpZiAoIG5ld1ZhbCA9PT0gY3VycmVudFZhbHVl
ICkgewoJCQlyZXR1cm47CgkJfQoKCQlhbGxvd2VkID0gdGhpcy5fdHJpZ2dlciggInNsaWRlIiwg
ZXZlbnQsIHRoaXMuX3VpSGFzaCggaW5kZXgsIG5ld1ZhbCwgbmV3VmFsdWVzICkgKTsKCgkJLy8g
QSBzbGlkZSBjYW4gYmUgY2FuY2VsZWQgYnkgcmV0dXJuaW5nIGZhbHNlIGZyb20gdGhlIHNsaWRl
IGNhbGxiYWNrCgkJaWYgKCBhbGxvd2VkID09PSBmYWxzZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJ
aWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQl0aGlzLnZhbHVlcyggaW5kZXgs
IG5ld1ZhbCApOwoJCX0gZWxzZSB7CgkJCXRoaXMudmFsdWUoIG5ld1ZhbCApOwoJCX0KCX0sCgoJ
X3N0b3A6IGZ1bmN0aW9uKCBldmVudCwgaW5kZXggKSB7CgkJdGhpcy5fdHJpZ2dlciggInN0b3Ai
LCBldmVudCwgdGhpcy5fdWlIYXNoKCBpbmRleCApICk7Cgl9LAoKCV9jaGFuZ2U6IGZ1bmN0aW9u
KCBldmVudCwgaW5kZXggKSB7CgkJaWYgKCAhdGhpcy5fa2V5U2xpZGluZyAmJiAhdGhpcy5fbW91
c2VTbGlkaW5nICkgewoKCQkJLy9zdG9yZSB0aGUgbGFzdCBjaGFuZ2VkIHZhbHVlIGluZGV4IGZv
ciByZWZlcmVuY2Ugd2hlbiBoYW5kbGVzIG92ZXJsYXAKCQkJdGhpcy5fbGFzdENoYW5nZWRWYWx1
ZSA9IGluZGV4OwoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHRoaXMuX3VpSGFz
aCggaW5kZXggKSApOwoJCX0KCX0sCgoJdmFsdWU6IGZ1bmN0aW9uKCBuZXdWYWx1ZSApIHsKCQlp
ZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCXRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX3Ry
aW1BbGlnblZhbHVlKCBuZXdWYWx1ZSApOwoJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCQkJdGhp
cy5fY2hhbmdlKCBudWxsLCAwICk7CgkJCXJldHVybjsKCQl9CgoJCXJldHVybiB0aGlzLl92YWx1
ZSgpOwoJfSwKCgl2YWx1ZXM6IGZ1bmN0aW9uKCBpbmRleCwgbmV3VmFsdWUgKSB7CgkJdmFyIHZh
bHMsCgkJCW5ld1ZhbHVlcywKCQkJaTsKCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoID4gMSApIHsK
CQkJdGhpcy5vcHRpb25zLnZhbHVlc1sgaW5kZXggXSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBu
ZXdWYWx1ZSApOwoJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCQkJdGhpcy5fY2hhbmdlKCBudWxs
LCBpbmRleCApOwoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJ
CWlmICggJC5pc0FycmF5KCBhcmd1bWVudHNbIDAgXSApICkgewoJCQkJdmFscyA9IHRoaXMub3B0
aW9ucy52YWx1ZXM7CgkJCQluZXdWYWx1ZXMgPSBhcmd1bWVudHNbIDAgXTsKCQkJCWZvciAoIGkg
PSAwOyBpIDwgdmFscy5sZW5ndGg7IGkgKz0gMSApIHsKCQkJCQl2YWxzWyBpIF0gPSB0aGlzLl90
cmltQWxpZ25WYWx1ZSggbmV3VmFsdWVzWyBpIF0gKTsKCQkJCQl0aGlzLl9jaGFuZ2UoIG51bGws
IGkgKTsKCQkJCX0KCQkJCXRoaXMuX3JlZnJlc2hWYWx1ZSgpOwoJCQl9IGVsc2UgewoJCQkJaWYg
KCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQkJCXJldHVybiB0aGlzLl92YWx1ZXMo
IGluZGV4ICk7CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiB0aGlzLnZhbHVlKCk7CgkJCQl9CgkJ
CX0KCQl9IGVsc2UgewoJCQlyZXR1cm4gdGhpcy5fdmFsdWVzKCk7CgkJfQoJfSwKCglfc2V0T3B0
aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgaSwKCQkJdmFsc0xlbmd0aCA9IDA7
CgoJCWlmICgga2V5ID09PSAicmFuZ2UiICYmIHRoaXMub3B0aW9ucy5yYW5nZSA9PT0gdHJ1ZSAp
IHsKCQkJaWYgKCB2YWx1ZSA9PT0gIm1pbiIgKSB7CgkJCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0
aGlzLl92YWx1ZXMoIDAgKTsKCQkJCXRoaXMub3B0aW9ucy52YWx1ZXMgPSBudWxsOwoJCQl9IGVs
c2UgaWYgKCB2YWx1ZSA9PT0gIm1heCIgKSB7CgkJCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlz
Ll92YWx1ZXMoIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoIC0gMSApOwoJCQkJdGhpcy5vcHRp
b25zLnZhbHVlcyA9IG51bGw7CgkJCX0KCQl9CgoJCWlmICggJC5pc0FycmF5KCB0aGlzLm9wdGlv
bnMudmFsdWVzICkgKSB7CgkJCXZhbHNMZW5ndGggPSB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0
aDsKCQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCXN3aXRjaCAoIGtleSApIHsK
CQkJY2FzZSAib3JpZW50YXRpb24iOgoJCQkJdGhpcy5fZGV0ZWN0T3JpZW50YXRpb24oKTsKCQkJ
CXRoaXMuX3JlbW92ZUNsYXNzKCAidWktc2xpZGVyLWhvcml6b250YWwgdWktc2xpZGVyLXZlcnRp
Y2FsIiApCgkJCQkJLl9hZGRDbGFzcyggInVpLXNsaWRlci0iICsgdGhpcy5vcmllbnRhdGlvbiAp
OwoJCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7CgkJCQlpZiAoIHRoaXMub3B0aW9ucy5yYW5nZSAp
IHsKCQkJCQl0aGlzLl9yZWZyZXNoUmFuZ2UoIHZhbHVlICk7CgkJCQl9CgoJCQkJLy8gUmVzZXQg
cG9zaXRpb25pbmcgZnJvbSBwcmV2aW91cyBvcmllbnRhdGlvbgoJCQkJdGhpcy5oYW5kbGVzLmNz
cyggdmFsdWUgPT09ICJob3Jpem9udGFsIiA/ICJib3R0b20iIDogImxlZnQiLCAiIiApOwoJCQkJ
YnJlYWs7CgkJCWNhc2UgInZhbHVlIjoKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOwoJCQkJ
dGhpcy5fcmVmcmVzaFZhbHVlKCk7CgkJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIDAgKTsKCQkJCXRo
aXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCQkJCWJyZWFrOwoJCQljYXNlICJ2YWx1ZXMiOgoJCQkJ
dGhpcy5fYW5pbWF0ZU9mZiA9IHRydWU7CgkJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCgkJCQkv
LyBTdGFydCBmcm9tIHRoZSBsYXN0IGhhbmRsZSB0byBwcmV2ZW50IHVucmVhY2hhYmxlIGhhbmRs
ZXMgKCM5MDQ2KQoJCQkJZm9yICggaSA9IHZhbHNMZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsK
CQkJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIGkgKTsKCQkJCX0KCQkJCXRoaXMuX2FuaW1hdGVPZmYg
PSBmYWxzZTsKCQkJCWJyZWFrOwoJCQljYXNlICJzdGVwIjoKCQkJY2FzZSAibWluIjoKCQkJY2Fz
ZSAibWF4IjoKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOwoJCQkJdGhpcy5fY2FsY3VsYXRl
TmV3TWF4KCk7CgkJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCQkJCXRoaXMuX2FuaW1hdGVPZmYg
PSBmYWxzZTsKCQkJCWJyZWFrOwoJCQk=</Default>
</Parameter>

<Parameter name="Frag6980641884580349596189617">
<Default>CQkJCWZvciAoIGRvdyA9IDA7IGRvdyA8IDc7IGRvdysrICkgeyAvLyBjcmVhdGUgZGF0ZSBwaWNr
ZXIgZGF5cwoJCQkJCQlkYXlTZXR0aW5ncyA9ICggYmVmb3JlU2hvd0RheSA/CgkJCQkJCQliZWZv
cmVTaG93RGF5LmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WyAwIF0gOiBudWxsICks
IFsgcHJpbnREYXRlIF0gKSA6IFsgdHJ1ZSwgIiIgXSApOwoJCQkJCQlvdGhlck1vbnRoID0gKCBw
cmludERhdGUuZ2V0TW9udGgoKSAhPT0gZHJhd01vbnRoICk7CgkJCQkJCXVuc2VsZWN0YWJsZSA9
ICggb3RoZXJNb250aCAmJiAhc2VsZWN0T3RoZXJNb250aHMgKSB8fCAhZGF5U2V0dGluZ3NbIDAg
XSB8fAoJCQkJCQkJKCBtaW5EYXRlICYmIHByaW50RGF0ZSA8IG1pbkRhdGUgKSB8fCAoIG1heERh
dGUgJiYgcHJpbnREYXRlID4gbWF4RGF0ZSApOwoJCQkJCQl0Ym9keSArPSAiPHRkIGNsYXNzPSci
ICsKCQkJCQkJCSggKCBkb3cgKyBmaXJzdERheSArIDYgKSAlIDcgPj0gNSA/ICIgdWktZGF0ZXBp
Y2tlci13ZWVrLWVuZCIgOiAiIiApICsgLy8gaGlnaGxpZ2h0IHdlZWtlbmRzCgkJCQkJCQkoIG90
aGVyTW9udGggPyAiIHVpLWRhdGVwaWNrZXItb3RoZXItbW9udGgiIDogIiIgKSArIC8vIGhpZ2hs
aWdodCBkYXlzIGZyb20gb3RoZXIgbW9udGhzCgkJCQkJCQkoICggcHJpbnREYXRlLmdldFRpbWUo
KSA9PT0gc2VsZWN0ZWREYXRlLmdldFRpbWUoKSAmJiBkcmF3TW9udGggPT09IGluc3Quc2VsZWN0
ZWRNb250aCAmJiBpbnN0Ll9rZXlFdmVudCApIHx8IC8vIHVzZXIgcHJlc3NlZCBrZXkKCQkJCQkJ
CSggZGVmYXVsdERhdGUuZ2V0VGltZSgpID09PSBwcmludERhdGUuZ2V0VGltZSgpICYmIGRlZmF1
bHREYXRlLmdldFRpbWUoKSA9PT0gc2VsZWN0ZWREYXRlLmdldFRpbWUoKSApID8KCgkJCQkJCQkv
LyBvciBkZWZhdWx0RGF0ZSBpcyBjdXJyZW50IHByaW50ZWREYXRlIGFuZCBkZWZhdWx0RGF0ZSBp
cyBzZWxlY3RlZERhdGUKCQkJCQkJCSIgIiArIHRoaXMuX2RheU92ZXJDbGFzcyA6ICIiICkgKyAv
LyBoaWdobGlnaHQgc2VsZWN0ZWQgZGF5CgkJCQkJCQkoIHVuc2VsZWN0YWJsZSA/ICIgIiArIHRo
aXMuX3Vuc2VsZWN0YWJsZUNsYXNzICsgIiB1aS1zdGF0ZS1kaXNhYmxlZCIgOiAiIiApICsgIC8v
IGhpZ2hsaWdodCB1bnNlbGVjdGFibGUgZGF5cwoJCQkJCQkJKCBvdGhlck1vbnRoICYmICFzaG93
T3RoZXJNb250aHMgPyAiIiA6ICIgIiArIGRheVNldHRpbmdzWyAxIF0gKyAvLyBoaWdobGlnaHQg
Y3VzdG9tIGRhdGVzCgkJCQkJCQkoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IGN1cnJlbnREYXRl
LmdldFRpbWUoKSA/ICIgIiArIHRoaXMuX2N1cnJlbnRDbGFzcyA6ICIiICkgKyAvLyBoaWdobGln
aHQgc2VsZWN0ZWQgZGF5CgkJCQkJCQkoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IHRvZGF5Lmdl
dFRpbWUoKSA/ICIgdWktZGF0ZXBpY2tlci10b2RheSIgOiAiIiApICkgKyAiJyIgKyAvLyBoaWdo
bGlnaHQgdG9kYXkgKGlmIGRpZmZlcmVudCkKCQkJCQkJCSggKCAhb3RoZXJNb250aCB8fCBzaG93
T3RoZXJNb250aHMgKSAmJiBkYXlTZXR0aW5nc1sgMiBdID8gIiB0aXRsZT0nIiArIGRheVNldHRp
bmdzWyAyIF0ucmVwbGFjZSggLycvZywgIiYjMzk7IiApICsgIiciIDogIiIgKSArIC8vIGNlbGwg
dGl0bGUKCQkJCQkJCSggdW5zZWxlY3RhYmxlID8gIiIgOiAiIGRhdGEtaGFuZGxlcj0nc2VsZWN0
RGF5JyBkYXRhLWV2ZW50PSdjbGljaycgZGF0YS1tb250aD0nIiArIHByaW50RGF0ZS5nZXRNb250
aCgpICsgIicgZGF0YS15ZWFyPSciICsgcHJpbnREYXRlLmdldEZ1bGxZZWFyKCkgKyAiJyIgKSAr
ICI+IiArIC8vIGFjdGlvbnMKCQkJCQkJCSggb3RoZXJNb250aCAmJiAhc2hvd090aGVyTW9udGhz
ID8gIiYjeGEwOyIgOiAvLyBkaXNwbGF5IGZvciBvdGhlciBtb250aHMKCQkJCQkJCSggdW5zZWxl
Y3RhYmxlID8gIjxzcGFuIGNsYXNzPSd1aS1zdGF0ZS1kZWZhdWx0Jz4iICsgcHJpbnREYXRlLmdl
dERhdGUoKSArICI8L3NwYW4+IiA6ICI8YSBjbGFzcz0ndWktc3RhdGUtZGVmYXVsdCIgKwoJCQkJ
CQkJKCBwcmludERhdGUuZ2V0VGltZSgpID09PSB0b2RheS5nZXRUaW1lKCkgPyAiIHVpLXN0YXRl
LWhpZ2hsaWdodCIgOiAiIiApICsKCQkJCQkJCSggcHJpbnREYXRlLmdldFRpbWUoKSA9PT0gY3Vy
cmVudERhdGUuZ2V0VGltZSgpID8gIiB1aS1zdGF0ZS1hY3RpdmUiIDogIiIgKSArIC8vIGhpZ2hs
aWdodCBzZWxlY3RlZCBkYXkKCQkJCQkJCSggb3RoZXJNb250aCA/ICIgdWktcHJpb3JpdHktc2Vj
b25kYXJ5IiA6ICIiICkgKyAvLyBkaXN0aW5ndWlzaCBkYXRlcyBmcm9tIG90aGVyIG1vbnRocwoJ
CQkJCQkJIicgaHJlZj0nIyc+IiArIHByaW50RGF0ZS5nZXREYXRlKCkgKyAiPC9hPiIgKSApICsg
IjwvdGQ+IjsgLy8gZGlzcGxheSBzZWxlY3RhYmxlIGRhdGUKCQkJCQkJcHJpbnREYXRlLnNldERh
dGUoIHByaW50RGF0ZS5nZXREYXRlKCkgKyAxICk7CgkJCQkJCXByaW50RGF0ZSA9IHRoaXMuX2Rh
eWxpZ2h0U2F2aW5nQWRqdXN0KCBwcmludERhdGUgKTsKCQkJCQl9CgkJCQkJY2FsZW5kZXIgKz0g
dGJvZHkgKyAiPC90cj4iOwoJCQkJfQoJCQkJZHJhd01vbnRoKys7CgkJCQlpZiAoIGRyYXdNb250
aCA+IDExICkgewoJCQkJCWRyYXdNb250aCA9IDA7CgkJCQkJZHJhd1llYXIrKzsKCQkJCX0KCQkJ
CWNhbGVuZGVyICs9ICI8L3Rib2R5PjwvdGFibGU+IiArICggaXNNdWx0aU1vbnRoID8gIjwvZGl2
PiIgKwoJCQkJCQkJKCAoIG51bU1vbnRoc1sgMCBdID4gMCAmJiBjb2wgPT09IG51bU1vbnRoc1sg
MSBdIC0gMSApID8gIjxkaXYgY2xhc3M9J3VpLWRhdGVwaWNrZXItcm93LWJyZWFrJz48L2Rpdj4i
IDogIiIgKSA6ICIiICk7CgkJCQlncm91cCArPSBjYWxlbmRlcjsKCQkJfQoJCQlodG1sICs9IGdy
b3VwOwoJCX0KCQlodG1sICs9IGJ1dHRvblBhbmVsOwoJCWluc3QuX2tleUV2ZW50ID0gZmFsc2U7
CgkJcmV0dXJuIGh0bWw7Cgl9LAoKCS8qIEdlbmVyYXRlIHRoZSBtb250aCBhbmQgeWVhciBoZWFk
ZXIuICovCglfZ2VuZXJhdGVNb250aFllYXJIZWFkZXI6IGZ1bmN0aW9uKCBpbnN0LCBkcmF3TW9u
dGgsIGRyYXdZZWFyLCBtaW5EYXRlLCBtYXhEYXRlLAoJCQlzZWNvbmRhcnksIG1vbnRoTmFtZXMs
IG1vbnRoTmFtZXNTaG9ydCApIHsKCgkJdmFyIGluTWluWWVhciwgaW5NYXhZZWFyLCBtb250aCwg
eWVhcnMsIHRoaXNZZWFyLCBkZXRlcm1pbmVZZWFyLCB5ZWFyLCBlbmRZZWFyLAoJCQljaGFuZ2VN
b250aCA9IHRoaXMuX2dldCggaW5zdCwgImNoYW5nZU1vbnRoIiApLAoJCQljaGFuZ2VZZWFyID0g
dGhpcy5fZ2V0KCBpbnN0LCAiY2hhbmdlWWVhciIgKSwKCQkJc2hvd01vbnRoQWZ0ZXJZZWFyID0g
dGhpcy5fZ2V0KCBpbnN0LCAic2hvd01vbnRoQWZ0ZXJZZWFyIiApLAoJCQlodG1sID0gIjxkaXYg
Y2xhc3M9J3VpLWRhdGVwaWNrZXItdGl0bGUnPiIsCgkJCW1vbnRoSHRtbCA9ICIiOwoKCQkvLyBN
b250aCBzZWxlY3Rpb24KCQlpZiAoIHNlY29uZGFyeSB8fCAhY2hhbmdlTW9udGggKSB7CgkJCW1v
bnRoSHRtbCArPSAiPHNwYW4gY2xhc3M9J3VpLWRhdGVwaWNrZXItbW9udGgnPiIgKyBtb250aE5h
bWVzWyBkcmF3TW9udGggXSArICI8L3NwYW4+IjsKCQl9IGVsc2UgewoJCQlpbk1pblllYXIgPSAo
IG1pbkRhdGUgJiYgbWluRGF0ZS5nZXRGdWxsWWVhcigpID09PSBkcmF3WWVhciApOwoJCQlpbk1h
eFllYXIgPSAoIG1heERhdGUgJiYgbWF4RGF0ZS5nZXRGdWxsWWVhcigpID09PSBkcmF3WWVhciAp
OwoJCQltb250aEh0bWwgKz0gIjxzZWxlY3QgY2xhc3M9J3VpLWRhdGVwaWNrZXItbW9udGgnIGRh
dGEtaGFuZGxlcj0nc2VsZWN0TW9udGgnIGRhdGEtZXZlbnQ9J2NoYW5nZSc+IjsKCQkJZm9yICgg
bW9udGggPSAwOyBtb250aCA8IDEyOyBtb250aCsrICkgewoJCQkJaWYgKCAoICFpbk1pblllYXIg
fHwgbW9udGggPj0gbWluRGF0ZS5nZXRNb250aCgpICkgJiYgKCAhaW5NYXhZZWFyIHx8IG1vbnRo
IDw9IG1heERhdGUuZ2V0TW9udGgoKSApICkgewoJCQkJCW1vbnRoSHRtbCArPSAiPG9wdGlvbiB2
YWx1ZT0nIiArIG1vbnRoICsgIiciICsKCQkJCQkJKCBtb250aCA9PT0gZHJhd01vbnRoID8gIiBz
ZWxlY3RlZD0nc2VsZWN0ZWQnIiA6ICIiICkgKwoJCQkJCQkiPiIgKyBtb250aE5hbWVzU2hvcnRb
IG1vbnRoIF0gKyAiPC9vcHRpb24+IjsKCQkJCX0KCQkJfQoJCQltb250aEh0bWwgKz0gIjwvc2Vs
ZWN0PiI7CgkJfQoKCQlpZiAoICFzaG93TW9udGhBZnRlclllYXIgKSB7CgkJCWh0bWwgKz0gbW9u
dGhIdG1sICsgKCBzZWNvbmRhcnkgfHwgISggY2hhbmdlTW9udGggJiYgY2hhbmdlWWVhciApID8g
IiYjeGEwOyIgOiAiIiApOwoJCX0KCgkJLy8gWWVhciBzZWxlY3Rpb24KCQlpZiAoICFpbnN0Lnll
YXJzaHRtbCApIHsKCQkJaW5zdC55ZWFyc2h0bWwgPSAiIjsKCQkJaWYgKCBzZWNvbmRhcnkgfHwg
IWNoYW5nZVllYXIgKSB7CgkJCQlodG1sICs9ICI8c3BhbiBjbGFzcz0ndWktZGF0ZXBpY2tlci15
ZWFyJz4iICsgZHJhd1llYXIgKyAiPC9zcGFuPiI7CgkJCX0gZWxzZSB7CgoJCQkJLy8gZGV0ZXJt
aW5lIHJhbmdlIG9mIHllYXJzIHRvIGRpc3BsYXkKCQkJCXllYXJzID0gdGhpcy5fZ2V0KCBpbnN0
LCAieWVhclJhbmdlIiApLnNwbGl0KCAiOiIgKTsKCQkJCXRoaXNZZWFyID0gbmV3IERhdGUoKS5n
ZXRGdWxsWWVhcigpOwoJCQkJZGV0ZXJtaW5lWWVhciA9IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJ
CQl2YXIgeWVhciA9ICggdmFsdWUubWF0Y2goIC9jWytcLV0uKi8gKSA/IGRyYXdZZWFyICsgcGFy
c2VJbnQoIHZhbHVlLnN1YnN0cmluZyggMSApLCAxMCApIDoKCQkJCQkJKCB2YWx1ZS5tYXRjaCgg
L1srXC1dLiovICkgPyB0aGlzWWVhciArIHBhcnNlSW50KCB2YWx1ZSwgMTAgKSA6CgkJCQkJCXBh
cnNlSW50KCB2YWx1ZSwgMTAgKSApICk7CgkJCQkJcmV0dXJuICggaXNOYU4oIHllYXIgKSA/IHRo
aXNZZWFyIDogeWVhciApOwoJCQkJfTsKCQkJCXllYXIgPSBkZXRlcm1pbmVZZWFyKCB5ZWFyc1sg
MCBdICk7CgkJCQllbmRZZWFyID0gTWF0aC5tYXgoIHllYXIsIGRldGVybWluZVllYXIoIHllYXJz
WyAxIF0gfHwgIiIgKSApOwoJCQkJeWVhciA9ICggbWluRGF0ZSA/IE1hdGgubWF4KCB5ZWFyLCBt
aW5EYXRlLmdldEZ1bGxZZWFyKCkgKSA6IHllYXIgKTsKCQkJCWVuZFllYXIgPSAoIG1heERhdGUg
PyBNYXRoLm1pbiggZW5kWWVhciwgbWF4RGF0ZS5nZXRGdWxsWWVhcigpICkgOiBlbmRZZWFyICk7
CgkJCQlpbnN0LnllYXJzaHRtbCArPSAiPHNlbGVjdCBjbGFzcz0ndWktZGF0ZXBpY2tlci15ZWFy
JyBkYXRhLWhhbmRsZXI9J3NlbGVjdFllYXInIGRhdGEtZXZlbnQ9J2NoYW5nZSc+IjsKCQkJCWZv
ciAoIDsgeWVhciA8PSBlbmRZZWFyOyB5ZWFyKysgKSB7CgkJCQkJaW5zdC55ZWFyc2h0bWwgKz0g
IjxvcHRpb24gdmFsdWU9JyIgKyB5ZWFyICsgIiciICsKCQkJCQkJKCB5ZWFyID09PSBkcmF3WWVh
ciA/ICIgc2VsZWN0ZWQ9J3NlbGVjdGVkJyIgOiAiIiApICsKCQkJCQkJIj4iICsgeWVhciArICI8
L29wdGlvbj4iOwoJCQkJfQoJCQkJaW5zdC55ZWFyc2h0bWwgKz0gIjwvc2VsZWN0PiI7CgoJCQkJ
aHRtbCArPSBpbnN0LnllYXJzaHRtbDsKCQkJCWluc3QueWVhcnNodG1sID0gbnVsbDsKCQkJfQoJ
CX0KCgkJaHRtbCArPSB0aGlzLl9nZXQoIGluc3QsICJ5ZWFyU3VmZml4IiApOwoJCWlmICggc2hv
d01vbnRoQWZ0ZXJZZWFyICkgewoJCQlodG1sICs9ICggc2Vjb25kYXJ5IHx8ICEoIGNoYW5nZU1v
bnRoICYmIGNoYW5nZVllYXIgKSA/ICImI3hhMDsiIDogIiIgKSArIG1vbnRoSHRtbDsKCQl9CgkJ
aHRtbCArPSAiPC9kaXY+IjsgLy8gQ2xvc2UgZGF0ZXBpY2tlcl9oZWFkZXIKCQlyZXR1cm4gaHRt
bDsKCX0sCgoJLyogQWRqdXN0IG9uZSBvZiB0aGUgZGF0ZSBzdWItZmllbGRzLiAqLwoJX2FkanVz
dEluc3REYXRlOiBmdW5jdGlvbiggaW5zdCwgb2Zmc2V0LCBwZXJpb2QgKSB7CgkJdmFyIHllYXIg
PSBpbnN0LnNlbGVjdGVkWWVhciArICggcGVyaW9kID09PSAiWSIgPyBvZmZzZXQgOiAwICksCgkJ
CW1vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoICsgKCBwZXJpb2QgPT09ICJNIiA/IG9mZnNldCA6
IDAgKSwKCQkJZGF5ID0gTWF0aC5taW4oIGluc3Quc2VsZWN0ZWREYXksIHRoaXMuX2dldERheXNJ
bk1vbnRoKCB5ZWFyLCBtb250aCApICkgKyAoIHBlcmlvZCA9PT0gIkQiID8gb2Zmc2V0IDogMCAp
LAoJCQlkYXRlID0gdGhpcy5fcmVzdHJpY3RNaW5NYXgoIGluc3QsIHRoaXMuX2RheWxpZ2h0U2F2
aW5nQWRqdXN0KCBuZXcgRGF0ZSggeWVhciwgbW9udGgsIGRheSApICkgKTsKCgkJaW5zdC5zZWxl
Y3RlZERheSA9IGRhdGUuZ2V0RGF0ZSgpOwoJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3Rl
ZE1vbnRoID0gZGF0ZS5nZXRNb250aCgpOwoJCWluc3QuZHJhd1llYXIgPSBpbnN0LnNlbGVjdGVk
WWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKCQlpZiAoIHBlcmlvZCA9PT0gIk0iIHx8IHBlcmlv
ZCA9PT0gIlkiICkgewoJCQl0aGlzLl9ub3RpZnlDaGFuZ2UoIGluc3QgKTsKCQl9Cgl9LAoKCS8q
IEVuc3VyZSBhIGRhdGUgaXMgd2l0aGluIGFueSBtaW4vbWF4IGJvdW5kcy4gKi8KCV9yZXN0cmlj
dE1pbk1heDogZnVuY3Rpb24oIGluc3QsIGRhdGUgKSB7CgkJdmFyIG1pbkRhdGUgPSB0aGlzLl9n
ZXRNaW5NYXhEYXRlKCBpbnN0LCAibWluIiApLAoJCQltYXhEYXRlID0gdGhpcy5fZ2V0TWluTWF4
RGF0ZSggaW5zdCwgIm1heCIgKSwKCQkJbmV3RGF0ZSA9ICggbWluRGF0ZSAmJiBkYXRlIDwgbWlu
RGF0ZSA/IG1pbkRhdGUgOiBkYXRlICk7CgkJcmV0dXJuICggbWF4RGF0ZSAmJiBuZXdEYXRlID4g
bWF4RGF0ZSA/IG1heERhdGUgOiBuZXdEYXRlICk7Cgl9LAoKCS8qIE5vdGlmeSBjaGFuZ2Ugb2Yg
bW9udGgveWVhci4gKi8KCV9ub3RpZnlDaGFuZ2U6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXZhciBv
bkNoYW5nZSA9IHRoaXMuX2dldCggaW5zdCwgIm9uQ2hhbmdlTW9udGhZZWFyIiApOwoJCWlmICgg
b25DaGFuZ2UgKSB7CgkJCW9uQ2hhbmdlLmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0
WyAwIF0gOiBudWxsICksCgkJCQlbIGluc3Quc2VsZWN0ZWRZZWFyLCBpbnN0LnNlbGVjdGVkTW9u
dGggKyAxLCBpbnN0IF0gKTsKCQl9Cgl9LAoKCS8qIERldGVybWluZSB0aGUgbnVtYmVyIG9mIG1v
bnRocyB0byBzaG93LiAqLwoJX2dldE51bWJlck9mTW9udGhzOiBmdW5jdGlvbiggaW5zdCApIHsK
CQl2YXIgbnVtTW9udGhzID0gdGhpcy5fZ2V0KCBpbnN0LCAibnVtYmVyT2ZNb250aHMiICk7CgkJ
cmV0dXJuICggbnVtTW9udGhzID09IG51bGwgPyBbIDEsIDEgXSA6ICggdHlwZW9mIG51bU1vbnRo
cyA9PT0gIm51bWJlciIgPyBbIDEsIG51bU1vbnRocyBdIDogbnVtTW9udGhzICkgKTsKCX0sCgoJ
LyogRGV0ZXJtaW5lIHRoZSBjdXJyZW50IG1heGltdW0gZGF0ZSAtIGVuc3VyZSBubyB0aW1lIGNv
bXBvbmVudHMgYXJlIHNldC4gKi8KCV9nZXRNaW5NYXhEYXRlOiBmdW5jdGlvbiggaW5zdCwgbWlu
TWF4ICkgewoJCXJldHVybiB0aGlzLl9kZXRlcm1pbmVEYXRlKCBpbnN0LCB0aGlzLl9nZXQoIGlu
c3QsIG1pbk1heCArICJEYXRlIiApLCBudWxsICk7Cgl9LAoKCS8qIEZpbmQgdGhlIG51bWJlciBv
ZiBkYXlzIGluIGEgZ2l2ZW4gbW9udGguICovCglfZ2V0RGF5c0luTW9udGg6IGZ1bmN0aW9uKCB5
ZWFyLCBtb250aCApIHsKCQlyZXR1cm4gMzIgLSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCgg
bmV3IERhdGUoIHllYXIsIG1vbnRoLCAzMiApICkuZ2V0RGF0ZSgpOwoJfSwKCgkvKiBGaW5kIHRo
ZSBkYXkgb2YgdGhlIHdlZWsgb2YgdGhlIGZpcnN0IG9mIGEgbW9udGguICovCglfZ2V0Rmlyc3RE
YXlPZk1vbnRoOiBmdW5jdGlvbiggeWVhciwgbW9udGggKSB7CgkJcmV0dXJuIG5ldyBEYXRlKCB5
ZWFyLCBtb250aCwgMSApLmdldERheSgpOwoJfSwKCgkvKiBEZXRlcm1pbmVzIGlmIHdlIHNob3Vs
ZCBhbGxvdyBhICJuZXh0L3ByZXYiIG1vbnRoIGRpc3BsYXkgY2hhbmdlLiAqLwoJX2NhbkFkanVz
dE1vbnRoOiBmdW5jdGlvbiggaW5zdCwgb2Zmc2V0LCBjdXJZZWFyLCBjdXJNb250aCApIHsKCQl2
YXIgbnVtTW9udGhzID0gdGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoIGluc3QgKSwKCQkJZGF0ZSA9
IHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggY3VyWWVhciwKCQkJY3VyTW9u
dGggKyAoIG9mZnNldCA8IDAgPyBvZmZzZXQgOiBudW1Nb250aHNbIDAgXSAqIG51bU1vbnRoc1sg
MSBdICksIDEgKSApOwoKCQlpZiAoIG9mZnNldCA8IDAgKSB7CgkJCWRhdGUuc2V0RGF0ZSggdGhp
cy5fZ2V0RGF5c0luTW9udGgoIGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpICkg
KTsKCQl9CgkJcmV0dXJuIHRoaXMuX2lzSW5SYW5nZSggaW5zdCwgZGF0ZSApOwoJfSwKCgkvKiBJ
cyB0aGUgZ2l2ZW4gZGF0ZSBpbiB0aGUgYWNjZXB0ZWQgcmFuZ2U/ICovCglfaXNJblJhbmdlOiBm
dW5jdGlvbiggaW5zdCwgZGF0ZSApIHsKCQl2YXIgeWVhclNwbGl0LCBjdXJyZW50WWVhciwKCQkJ
bWluRGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtaW4iICksCgkJCW1heERhdGUg
PSB0aGlzLl9nZXRNaW5NYXhEYXRlKCBpbnN0LCAibWF4IiApLAoJCQltaW5ZZWFyID0gbnVsbCwK
CQkJbWF4WWVhciA9IG51bGwsCgkJCXllYXJzID0gdGhpcy5fZ2V0KCBpbnN0LCAieWVhclJhbmdl
IiApOwoJCQlpZiAoIHllYXJzICkgewoJCQkJeWVhclNwbGl0ID0geWVhcnMuc3BsaXQoICI6IiAp
OwoJCQkJY3VycmVudFllYXIgPSBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCk7CgkJCQltaW5ZZWFy
ID0gcGFyc2VJbnQoIHllYXJTcGxpdFsgMCBdLCAxMCApOwoJCQkJbWF4WWVhciA9IHBhcnNlSW50
KCB5ZWFyU3BsaXRbIDEgXSwgMTAgKTsKCQkJCWlmICggeWVhclNwbGl0WyAwIF0ubWF0Y2goIC9b
K1wtXS4qLyApICkgewoJCQkJCW1pblllYXIgKz0gY3VycmVudFllYXI7CgkJCQl9CgkJCQlpZiAo
IHllYXJTcGxpdFsgMSBdLm1hdGNoKCAvWytcLV0uKi8gKSApIHsKCQkJCQltYXhZZWFyICs9IGN1
cnJlbnRZZWFyOwoJCQkJfQoJCQl9CgoJCXJldHVybiAoICggIW1pbkRhdGUgfHwgZGF0ZS5nZXRU
aW1lKCkgPj0gbWluRGF0ZS5nZXRUaW1lKCkgKSAmJgoJCQkoICFtYXhEYXRlIHx8IGRhdGUuZ2V0
VGltZSgpIDw9IG1heERhdGUuZ2V0VGltZSgpICkgJiYKCQkJKCAhbWluWWVhciB8fCBkYXRlLmdl
dEZ1bGxZZWFyKCkgPj0gbWluWWVhciApICYmCgkJCSggIW1heFllYXIgfHwgZGF0ZS5nZXRGdWxs
WWVhcigpIDw9IG1heFllYXIgKSApOwoJfSwKCgkvKiBQcm92aWRlIHRoZSBjb25maWd1cmF0aW9u
IHNldHRpbmdzIGZvciBmb3JtYXR0aW5nL3BhcnNpbmcuICovCglfZ2V0Rm9ybWF0Q29uZmlnOiBm
dW5jdGlvbiggaW5zdCApIHsKCQl2YXIgc2hvcnRZZWFyQ3V0b2ZmID0gdGhpcy5fZ2V0KCBpbnN0
LCAic2hvcnRZZWFyQ3V0b2ZmIiApOwoJCXNob3J0WWVhckN1dG9mZiA9ICggdHlwZW9mIHNob3J0
WWVhckN1dG9mZiAhPT0gInN0cmluZyIgPyBzaG9ydFllYXJDdXRvZmYgOgoJCQluZXcgRGF0ZSgp
LmdldEZ1bGxZZWFyKCkgJSAxMDAgKyBwYXJzZUludCggc2hvcnRZZWFyQ3V0b2ZmLCAxMCApICk7
CgkJcmV0dXJuIHsgc2hvcnRZZWFyQ3V0b2ZmOiBzaG9ydFllYXJDdXRvZmYsCgkJCWRheU5hbWVz
U2hvcnQ6IHRoaXMuX2dldCggaW5zdCwgImRheU5hbWVzU2hvcnQiICksIGRheU5hbWVzOiB0aGlz
Ll9nZXQoIGluc3QsICJkYXlOYW1lcyIgKSwKCQkJbW9udGhOYW1lc1Nob3J0OiB0aGlzLl9nZXQo
IGluc3QsICJtb250aE5hbWVzU2hvcnQiICksIG1vbnRoTmFtZXM6IHRoaXMuX2dldCggaW5zdCwg
Im1vbnRoTmFtZXMiICkgfTsKCX0sCgoJLyogRm9ybWF0IHRoZSBnaXZlbiBkYXRlIGZvciBkaXNw
bGF5LiAqLwoJX2Zvcm1hdERhdGU6IGZ1bmN0aW9uKCBpbnN0LCBkYXksIG1vbnRoLCB5ZWFyICkg
ewoJCWlmICggIWRheSApIHsKCQkJaW5zdC5jdXJyZW50RGF5ID0gaW5zdC5zZWxlY3RlZERheTsK
CQkJaW5zdC5jdXJyZW50TW9udGggPSBpbnN0LnNlbGVjdGVkTW9udGg7CgkJCWluc3QuY3VycmVu
dFllYXIgPSBpbnN0LnNlbGVjdGVkWWVhcjsKCQl9CgkJdmFyIGRhdGUgPSAoIGRheSA/ICggdHlw
ZW9mIGRheSA9PT0gIm9iamVjdCIgPyBkYXkgOgoJCQl0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVz
dCggbmV3IERhdGUoIHllYXIsIG1vbnRoLCBkYXkgKSApICkgOgoJCQl0aGlzLl9kYXlsaWdodFNh
dmluZ0FkanVzdCggbmV3IERhdGUoIGluc3QuY3VycmVudFllYXIsIGluc3QuY3VycmVudE1vbnRo
LCBpbnN0LmN1cnJlbnREYXkgKSApICk7CgkJcmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSggdGhpcy5f
Z2V0KCBpbnN0LCAiZGF0ZUZvcm1hdCIgKSwgZGF0ZSwgdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKCBp
bnN0ICkgKTsKCX0KfSApOwoKLyoKICogQmluZCBob3ZlciBldmVudHMgZm9yIGRhdGVwaWNrZXIg
ZWxlbWVudHMuCiAqIERvbmUgdmlhIGRlbGVnYXRlIHNvIHRoZSBiaW5kaW5nIG9ubHkgb2NjdXJz
IG9uY2UgaW4gdGhlIGxpZmV0aW1lIG9mIHRoZSBwYXJlbnQgZGl2LgogKiBHbG9iYWwgZGF0ZXBp
Y2tlcl9pbnN0QWN0aXZlLCBzZXQgYnkgX3VwZGF0ZURhdGVwaWNrZXIgYWxsb3dzIHRoZSBoYW5k
bGVycyB0byBmaW5kIHRoZWlyIHdheSBiYWNrIHRvIHRoZSBhY3RpdmUgcGlja2VyLgogKi8KZnVu
Y3Rpb24gZGF0ZXBpY2tlcl9iaW5kSG92ZXIoIGRwRGl2ICkgewoJdmFyIHNlbGVjdG9yID0gImJ1
dHRvbiwgLnVpLWRhdGVwaWNrZXItcHJldiwgLnVpLWRhdGVwaWNrZXItbmV4dCwgLnVpLWRhdGVw
aWNrZXItY2FsZW5kYXIgdGQgYSI7CglyZXR1cm4gZHBEaXYub24oICJtb3VzZW91dCIsIHNlbGVj
dG9yLCBmdW5jdGlvbigpIHsKCQkJJCggdGhpcyApLnJlbW92ZUNsYXNzKCAidWktc3RhdGUtaG92
ZXIiICk7CgkJCWlmICggdGhpcy5jbGFzc05hbWUuaW5kZXhPZiggInVpLWRhdGVwaWNrZXItcHJl
diIgKSAhPT0gLTEgKSB7CgkJCQkkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICJ1aS1kYXRlcGlja2Vy
LXByZXYtaG92ZXIiICk7CgkJCX0KCQkJaWYgKCB0aGlzLmNsYXNzTmFtZS5pbmRleE9mKCAidWkt
ZGF0ZXBpY2tlci1uZXh0IiApICE9PSAtMSApIHsKCQkJCSQoIHRoaXMgKS5yZW1vdmVDbGFzcygg
InVpLWRhdGVwaWNrZXItbmV4dC1ob3ZlciIgKTsKCQkJfQoJCX0gKQoJCS5vbiggIm1vdXNlb3Zl
ciIsIHNlbGVjdG9yLCBkYXRlcGlja2VyX2hhbmRsZU1vdXNlb3ZlciApOwp9CgpmdW5jdGlvbiBk
YXRlcGlja2VyX2hhbmRsZU1vdXNlb3ZlcigpIHsKCWlmICggISQuZGF0ZXBpY2tlci5faXNEaXNh
YmxlZERhdGVwaWNrZXIoIGRhdGVwaWNrZXJfaW5zdEFjdGl2ZS5pbmxpbmUgPyBkYXRlcGlja2Vy
X2luc3RBY3RpdmUuZHBEaXYucGFyZW50KClbIDAgXSA6IGRhdGVwaWNrZXJfaW5zdEFjdGl2ZS5p
bnB1dFsgMCBdICkgKSB7CgkJJCggdGhpcyApLnBhcmVudHMoICIudWktZGF0ZXBpY2tlci1jYWxl
bmRhciIgKS5maW5kKCAiYSIgKS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWhvdmVyIiApOwoJCSQo
IHRoaXMgKS5hZGRDbGFzcyggInVpLXN0YXRlLWhvdmVyIiApOwoJCWlmICggdGhpcy5jbGFzc05h
bWUuaW5kZXhPZiggInVpLWRhdGVwaWNrZXItcHJldiIgKSAhPT0gLTEgKSB7CgkJCSQoIHRoaXMg
KS5hZGRDbGFzcyggInVpLWRhdGVwaWNrZXItcHJldi1ob3ZlciIgKTsKCQl9CgkJaWYgKCB0aGlz
LmNsYXNzTmFtZS5pbmRleE9mKCAidWktZGF0ZXBpY2tlci1uZXh0IiApICE9PSAtMSApIHsKCQkJ
JCggdGhpcyApLmFkZENsYXNzKCAidWktZGF0ZXBpY2tlci1uZXh0LWhvdmVyIiApOwoJCX0KCX0K
fQoKLyogalF1ZXJ5IGV4dGVuZCBub3cgaWdub3JlcyBudWxscyEgKi8KZnVuY3Rpb24gZGF0ZXBp
Y2tlcl9leHRlbmRSZW1vdmUoIHRhcmdldCwgcHJvcHMgKSB7CgkkLmV4dGVuZCggdGFyZ2V0LCBw
cm9wcyApOwoJZm9yICggdmFyIG5hbWUgaW4gcHJvcHMgKSB7CgkJaWYgKCBwcm9wc1sgbmFtZSBd
ID09IG51bGwgKSB7CgkJCXRhcmdldFsgbmFtZSBdID0gcHJvcHNbIG5hbWUgXTsKCQl9Cgl9Cgly
ZXR1cm4gdGFyZ2V0Owp9CgovKiBJbnZva2UgdGhlIGRhdGVwaWNrZXIgZnVuY3Rpb25hbGl0eS4K
ICAgQHBhcmFtICBvcHRpb25zICBzdHJpbmcgLSBhIGNvbW1hbmQsIG9wdGlvbmFsbHkgZm9sbG93
ZWQgYnkgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIG9yCgkJCQkJT2JqZWN0IC0gc2V0dGluZ3MgZm9y
IGF0dGFjaGluZyBuZXcgZGF0ZXBpY2tlciBmdW5jdGlvbmFsaXR5CiAgIEByZXR1cm4gIGpRdWVy
eSBvYmplY3QgKi8KJC5mbi5kYXRlcGlja2VyID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7CgoJLyog
VmVyaWZ5IGFuIGVtcHR5IGNvbGxlY3Rpb24gd2Fzbid0IHBhc3NlZCAtIEZpeGVzICM2OTc2ICov
CglpZiAoICF0aGlzLmxlbmd0aCApIHsKCQlyZXR1cm4gdGhpczsKCX0KCgkvKiBJbml0aWFsaXNl
IHRoZSBkYXRlIHBpY2tlci4gKi8KCWlmICggISQuZGF0ZXBpY2tlci5pbml0aWFsaXplZCApIHsK
CQkkKCBkb2N1bWVudCApLm9uKCAibW91c2Vkb3duIiwgJC5kYXRlcGlja2VyLl9jaGVja0V4dGVy
bmFsQ2xpY2sgKTsKCQkkLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQgPSB0cnVlOwoJfQoKCS8qIEFw
cGVuZCBkYXRlcGlja2VyIG1haW4gY29udGFpbmVyIHRvIGJvZHkgaWYgbm90IGV4aXN0LiAqLwoJ
aWYgKCAkKCAiIyIgKyAkLmRhdGVwaWNrZXIuX21haW5EaXZJZCApLmxlbmd0aCA9PT0gMCApIHsK
CQkkKCAiYm9keSIgKS5hcHBlbmQoICQuZGF0ZXBpY2tlci5kcERpdiApOwoJfQoKCXZhciBvdGhl
ckFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCggYXJndW1lbnRzLCAxICk7CglpZiAo
IHR5cGVvZiBvcHRpb25zID09PSAic3RyaW5nIiAmJiAoIG9wdGlvbnMgPT09ICJpc0Rpc2FibGVk
IiB8fCBvcHRpb25zID09PSAiZ2V0RGF0ZSIgfHwgb3B0aW9ucyA9PT0gIndpZGdldCIgKSApIHsK
CQlyZXR1cm4gJC5kYXRlcGlja2VyWyAiXyIgKyBvcHRpb25zICsgIkRhdGVwaWNrZXIiIF0uCgkJ
CWFwcGx5KCAkLmRhdGVwaWNrZXIsIFsgdGhpc1sgMCBdIF0uY29uY2F0KCBvdGhlckFyZ3MgKSAp
OwoJfQoJaWYgKCBvcHRpb25zID09PSAib3B0aW9uIiAmJiBhcmd1bWVudHMubGVuZ3RoID09PSAy
ICYmIHR5cGVvZiBhcmd1bWVudHNbIDEgXSA9PT0gInN0cmluZyIgKSB7CgkJcmV0dXJuICQuZGF0
ZXBpY2tlclsgIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIiBdLgoJCQlhcHBseSggJC5kYXRl
cGlja2VyLCBbIHRoaXNbIDAgXSBdLmNvbmNhdCggb3RoZXJBcmdzICkgKTsKCX0KCXJldHVybiB0
aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCXR5cGVvZiBvcHRpb25zID09PSAic3RyaW5nIiA/CgkJ
CSQuZGF0ZXBpY2tlclsgIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIiBdLgoJCQkJYXBwbHko
ICQuZGF0ZXBpY2tlciwgWyB0aGlzIF0uY29uY2F0KCBvdGhlckFyZ3MgKSApIDoKCQkJJC5kYXRl
cGlja2VyLl9hdHRhY2hEYXRlcGlja2VyKCB0aGlzLCBvcHRpb25zICk7Cgl9ICk7Cn07CgokLmRh
dGVwaWNrZXIgPSBuZXcgRGF0ZXBpY2tlcigpOyAvLyBzaW5nbGV0b24gaW5zdGFuY2UKJC5kYXRl
cGlja2VyLmluaXRpYWxpemVkID0gZmFsc2U7CiQuZGF0ZXBpY2tlci51dWlkID0gbmV3IERhdGUo
KS5nZXRUaW1lKCk7CiQuZGF0ZXBpY2tlci52ZXJzaW9uID0gIjEuMTIuMSI7Cgp2YXIgd2lkZ2V0
c0RhdGVwaWNrZXIgPSAkLmRhdGVwaWNrZXI7CgoKCgovLyBUaGlzIGZpbGUgaXMgZGVwcmVjYXRl
ZAp2YXIgaWUgPSAkLnVpLmllID0gISEvbXNpZSBbXHcuXSsvLmV4ZWMoIG5hdmlnYXRvci51c2Vy
QWdlbnQudG9Mb3dlckNhc2UoKSApOwoKLyohCiAqIGpRdWVyeSBVSSBNb3VzZSAxLjEyLjEKICog
aHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5k
IG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAq
IGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IE1vdXNlCi8vPj5ncm91
cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IEFic3RyYWN0cyBtb3VzZS1iYXNlZCBpbnRlcmFj
dGlvbnMgdG8gYXNzaXN0IGluIGNyZWF0aW5nIGNlcnRhaW4gd2lkZ2V0cy4KLy8+PmRvY3M6IGh0
dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL21vdXNlLwoKCgp2YXIgbW91c2VIYW5kbGVkID0gZmFsc2U7
CiQoIGRvY3VtZW50ICkub24oICJtb3VzZXVwIiwgZnVuY3Rpb24oKSB7Cgltb3VzZUhhbmRsZWQg
PSBmYWxzZTsKfSApOwoKdmFyIHdpZGdldHNNb3VzZSA9ICQud2lkZ2V0KCAidWkubW91c2UiLCB7
Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCW9wdGlvbnM6IHsKCQljYW5jZWw6ICJpbnB1dCwgdGV4dGFy
ZWEsIGJ1dHRvbiwgc2VsZWN0LCBvcHRpb24iLAoJCWRpc3RhbmNlOiAxLAoJCWRlbGF5OiAwCgl9
LAoJX21vdXNlSW5pdDogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoKCQl0aGlzLmVs
ZW1lbnQKCQkJLm9uKCAibW91c2Vkb3duLiIgKyB0aGlzLndpZGdldE5hbWUsIGZ1bmN0aW9uKCBl
dmVudCApIHsKCQkJCXJldHVybiB0aGF0Ll9tb3VzZURvd24oIGV2ZW50ICk7CgkJCX0gKQoJCQku
b24oICJjbGljay4iICsgdGhpcy53aWRnZXROYW1lLCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQlp
ZiAoIHRydWUgPT09ICQuZGF0YSggZXZlbnQudGFyZ2V0LCB0aGF0LndpZGdldE5hbWUgKyAiLnBy
ZXZlbnRDbGlja0V2ZW50IiApICkgewoJCQkJCSQucmVtb3ZlRGF0YSggZXZlbnQudGFyZ2V0LCB0
aGF0LndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IiApOwoJCQkJCWV2ZW50LnN0b3BJ
bW1lZGlhdGVQcm9wYWdhdGlvbigpOwoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfSApOwoK
CQl0aGlzLnN0YXJ0ZWQgPSBmYWxzZTsKCX0sCgoJLy8gVE9ETzogbWFrZSBzdXJlIGRlc3Ryb3lp
bmcgb25lIGluc3RhbmNlIG9mIG1vdXNlIGRvZXNuJ3QgbWVzcyB3aXRoCgkvLyBvdGhlciBpbnN0
YW5jZXMgb2YgbW91c2UKCV9tb3VzZURlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCXRoaXMuZWxlbWVu
dC5vZmYoICIuIiArIHRoaXMud2lkZ2V0TmFtZSApOwoJCWlmICggdGhpcy5fbW91c2VNb3ZlRGVs
ZWdhdGUgKSB7CgkJCXRoaXMuZG9jdW1lbnQKCQkJCS5vZmYoICJtb3VzZW1vdmUuIiArIHRoaXMu
d2lkZ2V0TmFtZSwgdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgKQoJCQkJLm9mZiggIm1vdXNldXAu
IiArIHRoaXMud2lkZ2V0TmFtZSwgdGhpcy5fbW91c2VVcERlbGVnYXRlICk7CgkJfQoJfSwKCglf
bW91c2VEb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCS8vIGRvbid0IGxldCBtb3JlIHRoYW4g
b25lIHdpZGdldCBoYW5kbGUgbW91c2VTdGFydAoJCWlmICggbW91c2VIYW5kbGVkICkgewoJCQly
ZXR1cm47CgkJfQoKCQl0aGlzLl9tb3VzZU1vdmVkID0gZmFsc2U7CgoJCS8vIFdlIG1heSBoYXZl
IG1pc3NlZCBtb3VzZXVwIChvdXQgb2Ygd2luZG93KQoJCSggdGhpcy5fbW91c2VTdGFydGVkICYm
IHRoaXMuX21vdXNlVXAoIGV2ZW50ICkgKTsKCgkJdGhpcy5fbW91c2VEb3duRXZlbnQgPSBldmVu
dDsKCgkJdmFyIHRoYXQgPSB0aGlzLAoJCQlidG5Jc0xlZnQgPSAoIGV2ZW50LndoaWNoID09PSAx
ICksCgoJCQkvLyBldmVudC50YXJnZXQubm9kZU5hbWUgd29ya3MgYXJvdW5kIGEgYnVnIGluIElF
IDggd2l0aAoJCQkvLyBkaXNhYmxlZCBpbnB1dHMgKCM3NjIwKQoJCQllbElzQ2FuY2VsID0gKCB0
eXBlb2YgdGhpcy5vcHRpb25zLmNhbmNlbCA9PT0gInN0cmluZyIgJiYgZXZlbnQudGFyZ2V0Lm5v
ZGVOYW1lID8KCQkJCSQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoIHRoaXMub3B0aW9ucy5jYW5j
ZWwgKS5sZW5ndGggOiBmYWxzZSApOwoJCWlmICggIWJ0bklzTGVmdCB8fCBlbElzQ2FuY2VsIHx8
ICF0aGlzLl9tb3VzZUNhcHR1cmUoIGV2ZW50ICkgKSB7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJ
dGhpcy5tb3VzZURlbGF5TWV0ID0gIXRoaXMub3B0aW9ucy5kZWxheTsKCQlpZiAoICF0aGlzLm1v
dXNlRGVsYXlNZXQgKSB7CgkJCXRoaXMuX21vdXNlRGVsYXlUaW1lciA9IHNldFRpbWVvdXQoIGZ1
bmN0aW9uKCkgewoJCQkJdGhhdC5tb3VzZURlbGF5TWV0ID0gdHJ1ZTsKCQkJfSwgdGhpcy5vcHRp
b25zLmRlbGF5ICk7CgkJfQoKCQlpZiAoIHRoaXMuX21vdXNlRGlzdGFuY2VNZXQoIGV2ZW50ICkg
JiYgdGhpcy5fbW91c2VEZWxheU1ldCggZXZlbnQgKSApIHsKCQkJdGhpcy5fbW91c2VTdGFydGVk
ID0gKCB0aGlzLl9tb3VzZVN0YXJ0KCBldmVudCApICE9PSBmYWxzZSApOwoJCQlpZiAoICF0aGlz
Ll9tb3VzZVN0YXJ0ZWQgKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJcmV0dXJu
IHRydWU7CgkJCX0KCQl9CgoJCS8vIENsaWNrIGV2ZW50IG1heSBuZXZlciBoYXZlIGZpcmVkIChH
ZWNrbyAmIE9wZXJhKQoJCWlmICggdHJ1ZSA9PT0gJC5kYXRhKCBldmVudC50YXJnZXQsIHRoaXMu
d2lkZ2V0TmFtZSArICIucHJldmVudENsaWNrRXZlbnQiICkgKSB7CgkJCSQucmVtb3ZlRGF0YSgg
ZXZlbnQudGFyZ2V0LCB0aGlzLndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IiApOwoJ
CX0KCgkJLy8gVGhlc2UgZGVsZWdhdGVzIGFyZSByZXF1aXJlZCB0byBrZWVwIGNvbnRleHQKCQl0
aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSA9IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJcmV0dXJuIHRo
YXQuX21vdXNlTW92ZSggZXZlbnQgKTsKCQl9OwoJCXRoaXMuX21vdXNlVXBEZWxlZ2F0ZSA9IGZ1
bmN0aW9uKCBldmVudCApIHsKCQkJcmV0dXJuIHRoYXQuX21vdXNlVXAoIGV2ZW50ICk7CgkJfTsK
CgkJdGhpcy5kb2N1bWVudAoJCQkub24oICJtb3VzZW1vdmUuIiArIHRoaXMud2lkZ2V0TmFtZSwg
dGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgKQoJCQkub24oICJtb3VzZXVwLiIgKyB0aGlzLndpZGdl
dE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApOwoKCQlldmVudC5wcmV2ZW50RGVmYXVsdCgp
OwoKCQltb3VzZUhhbmRsZWQgPSB0cnVlOwoJCXJldHVybiB0cnVlOwoJfSwKCglfbW91c2VNb3Zl
OiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCS8vIE9ubHkgY2hlY2sgZm9yIG1vdXNldXBzIG91dHNp
ZGUgdGhlIGRvY3VtZW50IGlmIHlvdSd2ZSBtb3ZlZCBpbnNpZGUgdGhlIGRvY3VtZW50CgkJLy8g
YXQgbGVhc3Qgb25jZS4gVGhpcyBwcmV2ZW50cyB0aGUgZmlyaW5nIG9mIG1vdXNldXAgaW4gdGhl
IGNhc2Ugb2YgSUU8OSwgd2hpY2ggd2lsbAoJCS8vIGZpcmUgYSBtb3VzZW1vdmUgZXZlbnQgaWYg
Y29udGVudCBpcyBwbGFjZWQgdW5kZXIgdGhlIGN1cnNvci4gU2VlICM3Nzc4CgkJLy8gU3VwcG9y
dDogSUUgPDkKCQlpZiAoIHRoaXMuX21vdXNlTW92ZWQgKSB7CgoJCQkvLyBJRSBtb3VzZXVwIGNo
ZWNrIC0gbW91c2V1cCBoYXBwZW5lZCB3aGVuIG1vdXNlIHdhcyBvdXQgb2Ygd2luZG93CgkJCWlm
ICggJC51aS5pZSAmJiAoICFkb2N1bWVudC5kb2N1bWVudE1vZGUgfHwgZG9jdW1lbnQuZG9jdW1l
bnRNb2RlIDwgOSApICYmCgkJCQkJIWV2ZW50LmJ1dHRvbiApIHsKCQkJCXJldHVybiB0aGlzLl9t
b3VzZVVwKCBldmVudCApOwoKCQkJLy8gSWZyYW1lIG1vdXNldXAgY2hlY2sgLSBtb3VzZXVwIG9j
Y3VycmVkIGluIGFub3RoZXIgZG9jdW1lbnQKCQkJfSBlbHNlIGlmICggIWV2ZW50LndoaWNoICkg
ewoKCQkJCS8vIFN1cHBvcnQ6IFNhZmFyaSA8PTggLSA5CgkJCQkvLyBTYWZhcmkgc2V0cyB3aGlj
aCB0byAwIGlmIHlvdSBwcmVzcyBhbnkgb2YgdGhlIGZvbGxvd2luZyBrZXlzCgkJCQkvLyBkdXJp
bmcgYSBkcmFnICgjMTQ0NjEpCgkJCQlpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQuYWx0S2V5IHx8
IGV2ZW50Lm9yaWdpbmFsRXZlbnQuY3RybEtleSB8fAoJCQkJCQlldmVudC5vcmlnaW5hbEV2ZW50
Lm1ldGFLZXkgfHwgZXZlbnQub3JpZ2luYWxFdmVudC5zaGlmdEtleSApIHsKCQkJCQl0aGlzLmln
bm9yZU1pc3NpbmdXaGljaCA9IHRydWU7CgkJCQl9IGVsc2UgaWYgKCAhdGhpcy5pZ25vcmVNaXNz
aW5nV2hpY2ggKSB7CgkJCQkJcmV0dXJuIHRoaXMuX21vdXNlVXAoIGV2ZW50ICk7CgkJCQl9CgkJ
CX0KCQl9CgoJCWlmICggZXZlbnQud2hpY2ggfHwgZXZlbnQuYnV0dG9uICkgewoJCQl0aGlzLl9t
b3VzZU1vdmVkID0gdHJ1ZTsKCQl9CgoJCWlmICggdGhpcy5fbW91c2VTdGFydGVkICkgewoJCQl0
aGlzLl9tb3VzZURyYWcoIGV2ZW50ICk7CgkJCXJldHVybiBldmVudC5wcmV2ZW50RGVmYXVsdCgp
OwoJCX0KCgkJaWYgKCB0aGlzLl9tb3VzZURpc3RhbmNlTWV0KCBldmVudCApICYmIHRoaXMuX21v
dXNlRGVsYXlNZXQoIGV2ZW50ICkgKSB7CgkJCXRoaXMuX21vdXNlU3RhcnRlZCA9CgkJCQkoIHRo
aXMuX21vdXNlU3RhcnQoIHRoaXMuX21vdXNlRG93bkV2ZW50LCBldmVudCApICE9PSBmYWxzZSAp
OwoJCQkoIHRoaXMuX21vdXNlU3RhcnRlZCA/IHRoaXMuX21vdXNlRHJhZyggZXZlbnQgKSA6IHRo
aXMuX21vdXNlVXAoIGV2ZW50ICkgKTsKCQl9CgoJCXJldHVybiAhdGhpcy5fbW91c2VTdGFydGVk
OwoJfSwKCglfbW91c2VVcDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXRoaXMuZG9jdW1lbnQKCQkJ
Lm9mZiggIm1vdXNlbW92ZS4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZU1vdmVEZWxl
Z2F0ZSApCgkJCS5vZmYoICJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNl
VXBEZWxlZ2F0ZSApOwoKCQlpZiAoIHRoaXMuX21vdXNlU3RhcnRlZCApIHsKCQkJdGhpcy5fbW91
c2VTdGFydGVkID0gZmFsc2U7CgoJCQlpZiAoIGV2ZW50LnRhcmdldCA9PT0gdGhpcy5fbW91c2VE
b3duRXZlbnQudGFyZ2V0ICkgewoJCQkJJC5kYXRhKCBldmVudC50YXJnZXQsIHRoaXMud2lkZ2V0
TmFtZSArICIucHJldmVudENsaWNrRXZlbnQiLCB0cnVlICk7CgkJCX0KCgkJCXRoaXMuX21vdXNl
U3RvcCggZXZlbnQgKTsKCQl9CgoJCWlmICggdGhpcy5fbW91c2VEZWxheVRpbWVyICkgewoJCQlj
bGVhclRpbWVvdXQoIHRoaXMuX21vdXNlRGVsYXlUaW1lciApOwoJCQlkZWxldGUgdGhpcy5fbW91
c2VEZWxheVRpbWVyOwoJCX0KCgkJdGhpcy5pZ25vcmVNaXNzaW5nV2hpY2ggPSBmYWxzZTsKCQlt
b3VzZUhhbmRsZWQgPSBmYWxzZTsKCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJfSwKCglfbW91
c2VEaXN0YW5jZU1ldDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXJldHVybiAoIE1hdGgubWF4KAoJ
CQkJTWF0aC5hYnMoIHRoaXMuX21vdXNlRG93bkV2ZW50LnBhZ2VYIC0gZXZlbnQucGFnZVggKSwK
CQkJCU1hdGguYWJzKCB0aGlzLl9tb3VzZURvd25FdmVudC5wYWdlWSAtIGV2ZW50LnBhZ2VZICkK
CQkJKSA+PSB0aGlzLm9wdGlvbnMuZGlzdGFuY2UKCQkpOwoJfSwKCglfbW91c2VEZWxheU1ldDog
ZnVuY3Rpb24oIC8qIGV2ZW50ICovICkgewoJCXJldHVybiB0aGlzLm1vdXNlRGVsYXlNZXQ7Cgl9
LAoKCS8vIFRoZXNlIGFyZSBwbGFjZWhvbGRlciBtZXRob2RzLCB0byBiZSBvdmVycmlkZW4gYnkg
ZXh0ZW5kaW5nIHBsdWdpbgoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCAvKiBldmVudCAqLyApIHt9
LAoJX21vdXNlRHJhZzogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge30sCglfbW91c2VTdG9wOiBm
dW5jdGlvbiggLyogZXZlbnQgKi8gKSB7fSwKCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKCAvKiBl
dmVudCAqLyApIHsgcmV0dXJuIHRydWU7IH0KfSApOwoKCgoKLy8gJC51aS5wbHVnaW4gaXMgZGVw
cmVjYXRlZC4gVXNlICQud2lkZ2V0KCkgZXh0ZW5zaW9ucyBpbnN0ZWFkLgp2YXIgcGx1Z2luID0g
JC51aS5wbHVnaW4gPSB7CglhZGQ6IGZ1bmN0aW9uKCBtb2R1bGUsIG9wdGlvbiwgc2V0ICkgewoJ
CXZhciBpLAoJCQlwcm90byA9ICQudWlbIG1vZHVsZSBdLnByb3RvdHlwZTsKCQlmb3IgKCBpIGlu
IHNldCApIHsKCQkJcHJvdG8ucGx1Z2luc1sgaSBdID0gcHJvdG8ucGx1Z2luc1sgaSBdIHx8IFtd
OwoJCQlwcm90by5wbHVnaW5zWyBpIF0ucHVzaCggWyBvcHRpb24sIHNldFsgaSBdIF0gKTsKCQl9
Cgl9LAoJY2FsbDogZnVuY3Rpb24oIGluc3RhbmNlLCBuYW1lLCBhcmdzLCBhbGxvd0Rpc2Nvbm5l
Y3RlZCApIHsKCQl2YXIgaSwKCQkJc2V0ID0gaW5zdGFuY2UucGx1Z2luc1sgbmFtZSBdOwoKCQlp
ZiAoICFzZXQgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggIWFsbG93RGlzY29ubmVjdGVkICYm
ICggIWluc3RhbmNlLmVsZW1lbnRbIDAgXS5wYXJlbnROb2RlIHx8CgkJCQlpbnN0YW5jZS5lbGVt
ZW50WyAwIF0ucGFyZW50Tm9kZS5ub2RlVHlwZSA9PT0gMTEgKSApIHsKCQkJcmV0dXJuOwoJCX0K
CgkJZm9yICggaSA9IDA7IGkgPCBzZXQubGVuZ3RoOyBpKysgKSB7CgkJCWlmICggaW5zdGFuY2Uu
b3B0aW9uc1sgc2V0WyBpIF1bIDAgXSBdICkgewoJCQkJc2V0WyBpIF1bIDEgXS5hcHBseSggaW5z
dGFuY2UuZWxlbWVudCwgYXJncyApOwoJCQl9CgkJfQoJfQp9OwoKCgp2YXIgc2FmZUJsdXIgPSAk
LnVpLnNhZmVCbHVyID0gZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgoJLy8gU3VwcG9ydDogSUU5IC0g
MTAgb25seQoJLy8gSWYgdGhlIDxib2R5PiBpcyBibHVycmVkLCBJRSB3aWxsIHN3aXRjaCB3aW5k
b3dzLCBzZWUgIzk0MjAKCWlmICggZWxlbWVudCAmJiBlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJD
YXNlKCkgIT09ICJib2R5IiApIHsKCQkkKCBlbGVtZW50ICkudHJpZ2dlciggImJsdXIiICk7Cgl9
Cn07CgoKLyohCiAqIGpRdWVyeSBVSSBEcmFnZ2FibGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1
aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmli
dXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5
Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBEcmFnZ2FibGUKLy8+Pmdyb3VwOiBJbnRlcmFj
dGlvbnMKLy8+PmRlc2NyaXB0aW9uOiBFbmFibGVzIGRyYWdnaW5nIGZ1bmN0aW9uYWxpdHkgZm9y
IGFueSBlbGVtZW50LgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZHJhZ2dhYmxl
LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZHJhZ2dhYmxlLwovLz4+Y3NzLnN0cnVj
dHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvZHJhZ2dhYmxlLmNzcwoKCgokLndpZGdldCggInVpLmRy
YWdnYWJsZSIsICQudWkubW91c2UsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJd2lkZ2V0RXZlbnRQ
cmVmaXg6ICJkcmFnIiwKCW9wdGlvbnM6IHsKCQlhZGRDbGFzc2VzOiB0cnVlLAoJCWFwcGVuZFRv
OiAicGFyZW50IiwKCQlheGlzOiBmYWxzZSwKCQljb25uZWN0VG9Tb3J0YWJsZTogZmFsc2UsCgkJ
Y29udGFpbm1lbnQ6IGZhbHNlLAoJCWN1cnNvcjogImF1dG8iLAoJCWN1cnNvckF0OiBmYWxzZSwK
CQlncmlkOiBmYWxzZSwKCQloYW5kbGU6IGZhbHNlLAoJCWhlbHBlcjogIm9yaWdpbmFsIiwKCQlp
ZnJhbWVGaXg6IGZhbHNlLAoJCW9wYWNpdHk6IGZhbHNlLAoJCXJlZnJlc2hQb3NpdGlvbnM6IGZh
bHNlLAoJCXJldmVydDogZmFsc2UsCgkJcmV2ZXJ0RHVyYXRpb246IDUwMCwKCQlzY29wZTogImRl
ZmF1bHQiLAoJCXNjcm9sbDogdHJ1ZSwKCQlzY3JvbGxTZW5zaXRpdml0eTogMjAsCgkJc2Nyb2xs
U3BlZWQ6IDIwLAoJCXNuYXA6IGZhbHNlLAoJCXNuYXBNb2RlOiAiYm90aCIsCgkJc25hcFRvbGVy
YW5jZTogMjAsCgkJc3RhY2s6IGZhbHNlLAoJCXpJbmRleDogZmFsc2UsCgoJCS8vIENhbGxiYWNr
cwoJCWRyYWc6IG51bGwsCgkJc3RhcnQ6IG51bGwsCgkJc3RvcDogbnVsbAoJfSwKCV9jcmVhdGU6
IGZ1bmN0aW9uKCkgewoKCQlpZiAoIHRoaXMub3B0aW9ucy5oZWxwZXIgPT09ICJvcmlnaW5hbCIg
KSB7CgkJCXRoaXMuX3NldFBvc2l0aW9uUmVsYXRpdmUoKTsKCQl9CgkJaWYgKCB0aGlzLm9wdGlv
bnMuYWRkQ2xhc3NlcyApIHsKCQkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1kcmFnZ2FibGUiICk7CgkJ
fQoJCXRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpOwoKCQl0aGlzLl9tb3VzZUluaXQoKTsKCX0s
CgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJdGhpcy5fc3VwZXIoIGtl
eSwgdmFsdWUgKTsKCQlpZiAoIGtleSA9PT0gImhhbmRsZSIgKSB7CgkJCXRoaXMuX3JlbW92ZUhh
bmRsZUNsYXNzTmFtZSgpOwoJCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsKCQl9Cgl9LAoK
CV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQlpZiAoICggdGhpcy5oZWxwZXIgfHwgdGhpcy5lbGVt
ZW50ICkuaXMoICIudWktZHJhZ2dhYmxlLWRyYWdnaW5nIiApICkgewoJCQl0aGlzLmRlc3Ryb3lP
bkNsZWFyID0gdHJ1ZTsKCQkJcmV0dXJuOwoJCX0KCQl0aGlzLl9yZW1vdmVIYW5kbGVDbGFzc05h
bWUoKTsKCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsKCX0sCgoJX21vdXNlQ2FwdHVyZTogZnVuY3Rp
b24oIGV2ZW50ICkgewoJCXZhciBvID0gdGhpcy5vcHRpb25zOwoKCQkvLyBBbW9uZyBvdGhlcnMs
IHByZXZlbnQgYSBkcmFnIG9uIGEgcmVzaXphYmxlLWhhbmRsZQoJCWlmICggdGhpcy5oZWxwZXIg
fHwgby5kaXNhYmxlZCB8fAoJCQkJJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1yZXNp
emFibGUtaGFuZGxlIiApLmxlbmd0aCA+IDAgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCS8v
UXVpdCBpZiB3ZSdyZSBub3Qgb24gYSB2YWxpZCBoYW5kbGUKCQl0aGlzLmhhbmRsZSA9IHRoaXMu
X2dldEhhbmRsZSggZXZlbnQgKTsKCQlpZiAoICF0aGlzLmhhbmRsZSApIHsKCQkJcmV0dXJuIGZh
bHNlOwoJCX0KCgkJdGhpcy5fYmx1ckFjdGl2ZUVsZW1lbnQoIGV2ZW50ICk7CgoJCXRoaXMuX2Js
b2NrRnJhbWVzKCBvLmlmcmFtZUZpeCA9PT0gdHJ1ZSA/ICJpZnJhbWUiIDogby5pZnJhbWVGaXgg
KTsKCgkJcmV0dXJuIHRydWU7CgoJfSwKCglfYmxvY2tGcmFtZXM6IGZ1bmN0aW9uKCBzZWxlY3Rv
ciApIHsKCQl0aGlzLmlmcmFtZUJsb2NrcyA9IHRoaXMuZG9jdW1lbnQuZmluZCggc2VsZWN0b3Ig
KS5tYXAoIGZ1bmN0aW9uKCkgewoJCQl2YXIgaWZyYW1lID0gJCggdGhpcyApOwoKCQkJcmV0dXJu
ICQoICI8ZGl2PiIgKQoJCQkJLmNzcyggInBvc2l0aW9uIiwgImFic29sdXRlIiApCgkJCQkuYXBw
ZW5kVG8oIGlmcmFtZS5wYXJlbnQoKSApCgkJCQkub3V0ZXJXaWR0aCggaWZyYW1lLm91dGVyV2lk
dGgoKSApCgkJCQkub3V0ZXJIZWlnaHQoIGlmcmFtZS5vdXRlckhlaWdodCgpICkKCQkJCS5vZmZz
ZXQoIGlmcmFtZS5vZmZzZXQoKSApWyAwIF07CgkJfSApOwoJfSwKCglfdW5ibG9ja0ZyYW1lczog
ZnVuY3Rpb24oKSB7CgkJaWYgKCB0aGlzLmlmcmFtZUJsb2NrcyApIHsKCQkJdGhpcy5pZnJhbWVC
bG9ja3MucmVtb3ZlKCk7CgkJCWRlbGV0ZSB0aGlzLmlmcmFtZUJsb2NrczsKCQl9Cgl9LAoKCV9i
bHVyQWN0aXZlRWxlbWVudDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBhY3RpdmVFbGVtZW50
ID0gJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBdICksCgkJCXRhcmdl
dCA9ICQoIGV2ZW50LnRhcmdldCApOwoKCQkvLyBEb24ndCBibHVyIGlmIHRoZSBldmVudCBvY2N1
cnJlZCBvbiBhbiBlbGVtZW50IHRoYXQgaXMgd2l0aGluCgkJLy8gdGhlIGN1cnJlbnRseSBmb2N1
c2VkIGVsZW1lbnQKCQkvLyBTZWUgIzEwNTI3LCAjMTI0NzIKCQlpZiAoIHRhcmdldC5jbG9zZXN0
KCBhY3RpdmVFbGVtZW50ICkubGVuZ3RoICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBCbHVyIGFu
eSBlbGVtZW50IHRoYXQgY3VycmVudGx5IGhhcyBmb2N1cywgc2VlICM0MjYxCgkJJC51aS5zYWZl
Qmx1ciggYWN0aXZlRWxlbWVudCApOwoJfSwKCglfbW91c2VTdGFydDogZnVuY3Rpb24oIGV2ZW50
ICkgewoKCQl2YXIgbyA9IHRoaXMub3B0aW9uczsKCgkJLy9DcmVhdGUgYW5kIGFwcGVuZCB0aGUg
dmlzaWJsZSBoZWxwZXIKCQl0aGlzLmhlbHBlciA9IHRoaXMuX2NyZWF0ZUhlbHBlciggZXZlbnQg
KTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuaGVscGVyLCAidWktZHJhZ2dhYmxlLWRyYWdnaW5n
IiApOwoKCQkvL0NhY2hlIHRoZSBoZWxwZXIgc2l6ZQoJCXRoaXMuX2NhY2hlSGVscGVyUHJvcG9y
dGlvbnMoKTsKCgkJLy9JZiBkZG1hbmFnZXIgaXMgdXNlZCBmb3IgZHJvcHBhYmxlcywgc2V0IHRo
ZSBnbG9iYWwgZHJhZ2dhYmxlCgkJaWYgKCAkLnVpLmRkbWFuYWdlciApIHsKCQkJJC51aS5kZG1h
bmFnZXIuY3VycmVudCA9IHRoaXM7CgkJfQoKCQkvKgoJCSAqIC0gUG9zaXRpb24gZ2VuZXJhdGlv
biAtCgkJICogVGhpcyBibG9jayBnZW5lcmF0ZXMgZXZlcnl0aGluZyBwb3NpdGlvbiByZWxhdGVk
IC0gaXQncyB0aGUgY29yZSBvZiBkcmFnZ2FibGVzLgoJCSAqLwoKCQkvL0NhY2hlIHRoZSBtYXJn
aW5zIG9mIHRoZSBvcmlnaW5hbCBlbGVtZW50CgkJdGhpcy5fY2FjaGVNYXJnaW5zKCk7CgoJCS8v
U3RvcmUgdGhlIGhlbHBlcidzIGNzcyBwb3NpdGlvbgoJCXRoaXMuY3NzUG9zaXRpb24gPSB0aGlz
LmhlbHBlci5jc3MoICJwb3NpdGlvbiIgKTsKCQl0aGlzLnNjcm9sbFBhcmVudCA9IHRoaXMuaGVs
cGVyLnNjcm9sbFBhcmVudCggdHJ1ZSApOwoJCXRoaXMub2Zmc2V0UGFyZW50ID0gdGhpcy5oZWxw
ZXIub2Zmc2V0UGFyZW50KCk7CgkJdGhpcy5oYXNGaXhlZEFuY2VzdG9yID0gdGhpcy5oZWxwZXIu
cGFyZW50cygpLmZpbHRlciggZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gJCggdGhpcyApLmNzcygg
InBvc2l0aW9uIiApID09PSAiZml4ZWQiOwoJCQl9ICkubGVuZ3RoID4gMDsKCgkJLy9UaGUgZWxl
bWVudCdzIGFic29sdXRlIHBvc2l0aW9uIG9uIHRoZSBwYWdlIG1pbnVzIG1hcmdpbnMKCQl0aGlz
LnBvc2l0aW9uQWJzID0gdGhpcy5lbGVtZW50Lm9mZnNldCgpOwoJCXRoaXMuX3JlZnJlc2hPZmZz
ZXRzKCBldmVudCApOwoKCQkvL0dlbmVyYXRlIHRoZSBvcmlnaW5hbCBwb3NpdGlvbgoJCXRoaXMu
b3JpZ2luYWxQb3NpdGlvbiA9IHRoaXMucG9zaXRpb24gPSB0aGlzLl9nZW5lcmF0ZVBvc2l0aW9u
KCBldmVudCwgZmFsc2UgKTsKCQl0aGlzLm9yaWdpbmFsUGFnZVggPSBldmVudC5wYWdlWDsKCQl0
aGlzLm9yaWdpbmFsUGFnZVkgPSBldmVudC5wYWdlWTsKCgkJLy9BZGp1c3QgdGhlIG1vdXNlIG9m
ZnNldCByZWxhdGl2ZSB0byB0aGUgaGVscGVyIGlmICJjdXJzb3JBdCIgaXMgc3VwcGxpZWQKCQko
IG8uY3Vyc29yQXQgJiYgdGhpcy5fYWRqdXN0T2Zmc2V0RnJvbUhlbHBlciggby5jdXJzb3JBdCAp
ICk7CgoJCS8vU2V0IGEgY29udGFpbm1lbnQgaWYgZ2l2ZW4gaW4gdGhlIG9wdGlvbnMKCQl0aGlz
Ll9zZXRDb250YWlubWVudCgpOwoKCQkvL1RyaWdnZXIgZXZlbnQgKyBjYWxsYmFja3MKCQlpZiAo
IHRoaXMuX3RyaWdnZXIoICJzdGFydCIsIGV2ZW50ICkgPT09IGZhbHNlICkgewoJCQl0aGlzLl9j
bGVhcigpOwoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQkvL1JlY2FjaGUgdGhlIGhlbHBlciBzaXpl
CgkJdGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpOwoKCQkvL1ByZXBhcmUgdGhlIGRyb3Bw
YWJsZSBvZmZzZXRzCgkJaWYgKCAkLnVpLmRkbWFuYWdlciAmJiAhby5kcm9wQmVoYXZpb3VyICkg
ewoJCQkkLnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyggdGhpcywgZXZlbnQgKTsKCQl9CgoJ
CS8vIEV4ZWN1dGUgdGhlIGRyYWcgb25jZSAtIHRoaXMgY2F1c2VzIHRoZSBoZWxwZXIgbm90IHRv
IGJlIHZpc2libGUgYmVmb3JlIGdldHRpbmcgaXRzCgkJLy8gY29ycmVjdCBwb3NpdGlvbgoJCXRo
aXMuX21vdXNlRHJhZyggZXZlbnQsIHRydWUgKTsKCgkJLy8gSWYgdGhlIGRkbWFuYWdlciBpcyB1
c2VkIGZvciBkcm9wcGFibGVzLCBpbmZvcm0gdGhlIG1hbmFnZXIgdGhhdCBkcmFnZ2luZyBoYXMg
c3RhcnRlZAoJCS8vIChzZWUgIzUwMDMpCgkJaWYgKCAkLnVpLmRkbWFuYWdlciApIHsKCQkJJC51
aS5kZG1hbmFnZXIuZHJhZ1N0YXJ0KCB0aGlzLCBldmVudCApOwoJCX0KCgkJcmV0dXJuIHRydWU7
Cgl9LAoKCV9yZWZyZXNoT2Zmc2V0czogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXRoaXMub2Zmc2V0
ID0gewoJCQl0b3A6IHRoaXMucG9zaXRpb25BYnMudG9wIC0gdGhpcy5tYXJnaW5zLnRvcCwKCQkJ
bGVmdDogdGhpcy5wb3NpdGlvbkFicy5sZWZ0IC0gdGhpcy5tYXJnaW5zLmxlZnQsCgkJCXNjcm9s
bDogZmFsc2UsCgkJCXBhcmVudDogdGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCksCgkJCXJlbGF0aXZl
OiB0aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpCgkJfTsKCgkJdGhpcy5vZmZzZXQuY2xpY2sgPSB7
CgkJCWxlZnQ6IGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQubGVmdCwKCQkJdG9wOiBldmVudC5w
YWdlWSAtIHRoaXMub2Zmc2V0LnRvcAoJCX07Cgl9LAoKCV9tb3VzZURyYWc6IGZ1bmN0aW9uKCBl
dmVudCwgbm9Qcm9wYWdhdGlvbiApIHsKCgkJLy8gcmVzZXQgYW55IG5lY2Vzc2FyeSBjYWNoZWQg
cHJvcGVydGllcyAoc2VlICM1MDA5KQoJCWlmICggdGhpcy5oYXNGaXhlZEFuY2VzdG9yICkgewoJ
CQl0aGlzLm9mZnNldC5wYXJlbnQgPSB0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKTsKCQl9CgoJCS8v
Q29tcHV0ZSB0aGUgaGVscGVycyBwb3NpdGlvbgoJCXRoaXMucG9zaXRpb24gPSB0aGlzLl9nZW5l
cmF0ZVBvc2l0aW9uKCBldmVudCwgdHJ1ZSApOwoJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLl9j
b252ZXJ0UG9zaXRpb25UbyggImFic29sdXRlIiApOwoKCQkvL0NhbGwgcGx1Z2lucyBhbmQgY2Fs
bGJhY2tzIGFuZCB1c2UgdGhlIHJlc3VsdGluZyBwb3NpdGlvbiBpZiBzb21ldGhpbmcgaXMgcmV0
dXJuZWQKCQlpZiAoICFub1Byb3BhZ2F0aW9uICkgewoJCQl2YXIgdWkgPSB0aGlzLl91aUhhc2go
KTsKCQkJaWYgKCB0aGlzLl90cmlnZ2VyKCAiZHJhZyIsIGV2ZW50LCB1aSApID09PSBmYWxzZSAp
IHsKCQkJCXRoaXMuX21vdXNlVXAoIG5ldyAkLkV2ZW50KCAibW91c2V1cCIsIGV2ZW50ICkgKTsK
CQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCQl0aGlzLnBvc2l0aW9uID0gdWkucG9zaXRpb247CgkJ
fQoKCQl0aGlzLmhlbHBlclsgMCBdLnN0eWxlLmxlZnQgPSB0aGlzLnBvc2l0aW9uLmxlZnQgKyAi
cHgiOwoJCXRoaXMuaGVscGVyWyAwIF0uc3R5bGUudG9wID0gdGhpcy5wb3NpdGlvbi50b3AgKyAi
cHgiOwoKCQlpZiAoICQudWkuZGRtYW5hZ2VyICkgewoJCQkkLnVpLmRkbWFuYWdlci5kcmFnKCB0
aGlzLCBldmVudCApOwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoJfSwKCglfbW91c2VTdG9wOiBmdW5j
dGlvbiggZXZlbnQgKSB7CgoJCS8vSWYgd2UgYXJlIHVzaW5nIGRyb3BwYWJsZXMsIGluZm9ybSB0
aGUgbWFuYWdlciBhYm91dCB0aGUgZHJvcAoJCXZhciB0aGF0ID0gdGhpcywKCQkJZHJvcHBlZCA9
IGZhbHNlOwoJCWlmICggJC51aS5kZG1hbmFnZXIgJiYgIXRoaXMub3B0aW9ucy5kcm9wQmVoYXZp
b3VyICkgewoJCQlkcm9wcGVkID0gJC51aS5kZG1hbmFnZXIuZHJvcCggdGhpcywgZXZlbnQgKTsK
CQl9CgoJCS8vaWYgYSBkcm9wIGNvbWVzIGZyb20gb3V0c2lkZSAoYSBzb3J0YWJsZSkKCQlpZiAo
IHRoaXMuZHJvcHBlZCApIHsKCQkJZHJvcHBlZCA9IHRoaXMuZHJvcHBlZDsKCQkJdGhpcy5kcm9w
cGVkID0gZmFsc2U7CgkJfQoKCQlpZiAoICggdGhpcy5vcHRpb25zLnJldmVydCA9PT0gImludmFs
aWQiICYmICFkcm9wcGVkICkgfHwKCQkJCSggdGhpcy5vcHRpb25zLnJldmVydCA9PT0gInZhbGlk
IiAmJiBkcm9wcGVkICkgfHwKCQkJCXRoaXMub3B0aW9ucy5yZXZlcnQgPT09IHRydWUgfHwgKCAk
LmlzRnVuY3Rpb24oIHRoaXMub3B0aW9ucy5yZXZlcnQgKSAmJgoJCQkJdGhpcy5vcHRpb25zLnJl
dmVydC5jYWxsKCB0aGlzLmVsZW1lbnQsIGRyb3BwZWQgKSApCgkJKSB7CgkJCSQoIHRoaXMuaGVs
cGVyICkuYW5pbWF0ZSgKCQkJCXRoaXMub3JpZ2luYWxQb3NpdGlvbiwKCQkJCXBhcnNlSW50KCB0
aGlzLm9wdGlvbnMucmV2ZXJ0RHVyYXRpb24sIDEwICksCgkJCQlmdW5jdGlvbigpIHsKCQkJCQlp
ZiAoIHRoYXQuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQgKSAhPT0gZmFsc2UgKSB7CgkJCQkJCXRo
YXQuX2NsZWFyKCk7CgkJCQkJfQoJCQkJfQoJCQkpOwoJCX0gZWxzZSB7CgkJCWlmICggdGhpcy5f
dHJpZ2dlciggInN0b3AiLCBldmVudCApICE9PSBmYWxzZSApIHsKCQkJCXRoaXMuX2NsZWFyKCk7
CgkJCX0KCQl9CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJX21vdXNlVXA6IGZ1bmN0aW9uKCBldmVu
dCApIHsKCQl0aGlzLl91bmJsb2NrRnJhbWVzKCk7CgoJCS8vIElmIHRoZSBkZG1hbmFnZXIgaXMg
dXNlZCBmb3IgZHJvcHBhYmxlcywgaW5mb3JtIHRoZSBtYW5hZ2VyIHRoYXQgZHJhZ2dpbmcgaGFz
IHN0b3BwZWQKCQkvLyAoc2VlICM1MDAzKQoJCWlmICggJC51aS5kZG1hbmFnZXIgKSB7CgkJCSQu
dWkuZGRtYW5hZ2VyLmRyYWdTdG9wKCB0aGlzLCBldmVudCApOwoJCX0KCgkJLy8gT25seSBuZWVk
IHRvIGZvY3VzIGlmIHRoZSBldmVudCBvY2N1cnJlZCBvbiB0aGUgZHJhZ2dhYmxlIGl0c2VsZiwg
c2VlICMxMDUyNwoJCWlmICggdGhpcy5oYW5kbGVFbGVtZW50LmlzKCBldmVudC50YXJnZXQgKSAp
IHsKCgkJCS8vIFRoZSBpbnRlcmFjdGlvbiBpcyBvdmVyOyB3aGV0aGVyIG9yIG5vdCB0aGUgY2xp
Y2sgcmVzdWx0ZWQgaW4gYSBkcmFnLAoJCQkvLyBmb2N1cyB0aGUgZWxlbWVudAoJCQl0aGlzLmVs
ZW1lbnQudHJpZ2dlciggImZvY3VzIiApOwoJCX0KCgkJcmV0dXJuICQudWkubW91c2UucHJvdG90
eXBlLl9tb3VzZVVwLmNhbGwoIHRoaXMsIGV2ZW50ICk7Cgl9LAoKCWNhbmNlbDogZnVuY3Rpb24o
KSB7CgoJCWlmICggdGhpcy5oZWxwZXIuaXMoICIudWktZHJhZ2dhYmxlLWRyYWdnaW5nIiApICkg
ewoJCQl0aGlzLl9tb3VzZVVwKCBuZXcgJC5FdmVudCggIm1vdXNldXAiLCB7IHRhcmdldDogdGhp
cy5lbGVtZW50WyAwIF0gfSApICk7CgkJfSBlbHNlIHsKCQkJdGhpcy5fY2xlYXIoKTsKCQl9CgoJ
CXJldHVybiB0aGlzOwoKCX0sCgoJX2dldEhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXJl
dHVybiB0aGlzLm9wdGlvbnMuaGFuZGxlID8KCQkJISEkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0
KCB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLmhhbmRsZSApICkubGVuZ3RoIDoKCQkJ
dHJ1ZTsKCX0sCgoJX3NldEhhbmRsZUNsYXNzTmFtZTogZnVuY3Rpb24oKSB7CgkJdGhpcy5oYW5k
bGVFbGVtZW50ID0gdGhpcy5vcHRpb25zLmhhbmRsZSA/CgkJCXRoaXMuZWxlbWVudC5maW5kKCB0
aGlzLm9wdGlvbnMuaGFuZGxlICkgOiB0aGlzLmVsZW1lbnQ7CgkJdGhpcy5fYWRkQ2xhc3MoIHRo
aXMuaGFuZGxlRWxlbWVudCwgInVpLWRyYWdnYWJsZS1oYW5kbGUiICk7Cgl9LAoKCV9yZW1vdmVI
YW5kbGVDbGFzc05hbWU6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmhh
bmRsZUVsZW1lbnQsICJ1aS1kcmFnZ2FibGUtaGFuZGxlIiApOwoJfSwKCglfY3JlYXRlSGVscGVy
OiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBvID0gdGhpcy5vcHRpb25zLAoJCQloZWxwZXJJ
c0Z1bmN0aW9uID0gJC5pc0Z1bmN0aW9uKCBvLmhlbHBlciApLAoJCQloZWxwZXIgPSBoZWxwZXJJ
c0Z1bmN0aW9uID8KCQkJCSQoIG8uaGVscGVyLmFwcGx5KCB0aGlzLmVsZW1lbnRbIDAgXSwgWyBl
dmVudCBdICkgKSA6CgkJCQkoIG8uaGVscGVyID09PSAiY2xvbmUiID8KCQkJCQl0aGlzLmVsZW1l
bnQuY2xvbmUoKS5yZW1vdmVBdHRyKCAiaWQiICkgOgoJCQkJCXRoaXMuZWxlbWVudCApOwoKCQlp
ZiAoICFoZWxwZXIucGFyZW50cyggImJvZHkiICkubGVuZ3RoICkgewoJCQloZWxwZXIuYXBwZW5k
VG8oICggby5hcHBlbmRUbyA9PT0gInBhcmVudCIgPwoJCQkJdGhpcy5lbGVtZW50WyAwIF0ucGFy
ZW50Tm9kZSA6CgkJCQlvLmFwcGVuZFRvICkgKTsKCQl9CgoJCS8vIEh0dHA6Ly9idWdzLmpxdWVy
eXVpLmNvbS90aWNrZXQvOTQ0NgoJCS8vIGEgaGVscGVyIGZ1bmN0aW9uIGNhbiByZXR1cm4gdGhl
IG9yaWdpbmFsIGVsZW1lbnQKCQkvLyB3aGljaCB3b3VsZG4ndCBoYXZlIGJlZW4gc2V0IHRvIHJl
bGF0aXZlIGluIF9jcmVhdGUKCQlpZiAoIGhlbHBlcklzRnVuY3Rpb24gJiYgaGVscGVyWyAwIF0g
PT09IHRoaXMuZWxlbWVudFsgMCBdICkgewoJCQl0aGlzLl9zZXRQb3NpdGlvblJlbGF0aXZlKCk7
CgkJfQoKCQlpZiAoIGhlbHBlclsgMCBdICE9PSB0aGlzLmVsZW1lbnRbIDAgXSAmJgoJCQkJISgg
LyhmaXhlZHxhYnNvbHV0ZSkvICkudGVzdCggaGVscGVyLmNzcyggInBvc2l0aW9uIiApICkgKSB7
CgkJCWhlbHBlci5jc3MoICJwb3NpdGlvbiIsICJhYnNvbHV0ZSIgKTsKCQl9CgoJCXJldHVybiBo
ZWxwZXI7CgoJfSwKCglfc2V0UG9zaXRpb25SZWxhdGl2ZTogZnVuY3Rpb24oKSB7CgkJaWYgKCAh
KCAvXig/OnJ8YXxmKS8gKS50ZXN0KCB0aGlzLmVsZW1lbnQuY3NzKCAicG9zaXRpb24iICkgKSAp
IHsKCQkJdGhpcy5lbGVtZW50WyAwIF0uc3R5bGUucG9zaXRpb24gPSAicmVsYXRpdmUiOwoJCX0K
CX0sCgoJX2FkanVzdE9mZnNldEZyb21IZWxwZXI6IGZ1bmN0aW9uKCBvYmogKSB7CgkJaWYgKCB0
eXBlb2Ygb2JqID09PSAic3RyaW5nIiApIHsKCQkJb2JqID0gb2JqLnNwbGl0KCAiICIgKTsKCQl9
CgkJaWYgKCAkLmlzQXJyYXkoIG9iaiApICkgewoJCQlvYmogPSB7IGxlZnQ6ICtvYmpbIDAgXSwg
dG9wOiArb2JqWyAxIF0gfHwgMCB9OwoJCX0KCQlpZiAoICJsZWZ0IiBpbiBvYmogKSB7CgkJCXRo
aXMub2Zmc2V0LmNsaWNrLmxlZnQgPSBvYmoubGVmdCArIHRoaXMubWFyZ2lucy5sZWZ0OwoJCX0K
CQlpZiAoICJyaWdodCIgaW4gb2JqICkgewoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gdGhp
cy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIG9iai5yaWdodCArIHRoaXMubWFyZ2lucy5sZWZ0
OwoJCX0KCQlpZiAoICJ0b3AiIGluIG9iaiApIHsKCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0g
b2JqLnRvcCArIHRoaXMubWFyZ2lucy50b3A7CgkJfQoJCWlmICggImJvdHRvbSIgaW4gb2JqICkg
ewoJCQl0aGlzLm9mZnNldC5jbGljay50b3AgPSB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdo
dCAtIG9iai5ib3R0b20gKyB0aGlzLm1hcmdpbnMudG9wOwoJCX0KCX0sCgoJX2lzUm9vdE5vZGU6
IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCXJldHVybiAoIC8oaHRtbHxib2R5KS9pICkudGVzdCgg
ZWxlbWVudC50YWdOYW1lICkgfHwgZWxlbWVudCA9PT0gdGhpcy5kb2N1bWVudFsgMCBdOwoJfSwK
CglfZ2V0UGFyZW50T2Zmc2V0OiBmdW5jdGlvbigpIHsKCgkJLy9HZXQgdGhlIG9mZnNldFBhcmVu
dCBhbmQgY2FjaGUgaXRzIHBvc2l0aW9uCgkJdmFyIHBvID0gdGhpcy5vZmZzZXRQYXJlbnQub2Zm
c2V0KCksCgkJCWRvY3VtZW50ID0gdGhpcy5kb2N1bWVudFsgMCBdOwoKCQkvLyBUaGlzIGlzIGEg
c3BlY2lhbCBjYXNlIHdoZXJlIHdlIG5lZWQgdG8gbW9kaWZ5IGEgb2Zmc2V0IGNhbGN1bGF0ZWQg
b24gc3RhcnQsIHNpbmNlIHRoZQoJCS8vIGZvbGxvd2luZyBoYXBwZW5lZDoKCQkvLyAxLiBUaGUg
cG9zaXRpb24gb2YgdGhlIGhlbHBlciBpcyBhYnNvbHV0ZSwgc28gaXQncyBwb3NpdGlvbiBpcyBj
YWxjdWxhdGVkIGJhc2VkIG9uIHRoZQoJCS8vIG5leHQgcG9zaXRpb25lZCBwYXJlbnQKCQkvLyAy
LiBUaGUgYWN0dWFsIG9mZnNldCBwYXJlbnQgaXMgYSBjaGlsZCBvZiB0aGUgc2Nyb2xsIHBhcmVu
dCwgYW5kIHRoZSBzY3JvbGwgcGFyZW50IGlzbid0CgkJLy8gdGhlIGRvY3VtZW50LCB3aGljaCBt
ZWFucyB0aGF0IHRoZSBzY3JvbGwgaXMgaW5jbHVkZWQgaW4gdGhlIGluaXRpYWwgY2FsY3VsYXRp
b24gb2YgdGhlCgkJLy8gb2Zmc2V0IG9mIHRoZSBwYXJlbnQsIGFuZCBuZXZlciByZWNhbGN1bGF0
ZWQgdXBvbiBkcmFnCgkJaWYgKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmIHRo
aXMuc2Nyb2xsUGFyZW50WyAwIF0gIT09IGRvY3VtZW50ICYmCgkJCQkkLmNvbnRhaW5zKCB0aGlz
LnNjcm9sbFBhcmVudFsgMCBdLCB0aGk=</Default>
</Parameter>

<Parameter name="Frag6980641884580351053792260">
<Default>dCwgY29udGVudE9wdGlvbiApOwoJCX0KCgkJY29udGVudCA9IGNvbnRlbnRPcHRpb24uY2FsbCgg
dGFyZ2V0WyAwIF0sIGZ1bmN0aW9uKCByZXNwb25zZSApIHsKCgkJCS8vIElFIG1heSBpbnN0YW50
bHkgc2VydmUgYSBjYWNoZWQgcmVzcG9uc2UgZm9yIGFqYXggcmVxdWVzdHMKCQkJLy8gZGVsYXkg
dGhpcyBjYWxsIHRvIF9vcGVuIHNvIHRoZSBvdGhlciBjYWxsIHRvIF9vcGVuIHJ1bnMgZmlyc3QK
CQkJdGhhdC5fZGVsYXkoIGZ1bmN0aW9uKCkgewoKCQkJCS8vIElnbm9yZSBhc3luYyByZXNwb25z
ZSBpZiB0b29sdGlwIHdhcyBjbG9zZWQgYWxyZWFkeQoJCQkJaWYgKCAhdGFyZ2V0LmRhdGEoICJ1
aS10b29sdGlwLW9wZW4iICkgKSB7CgkJCQkJcmV0dXJuOwoJCQkJfQoKCQkJCS8vIEpRdWVyeSBj
cmVhdGVzIGEgc3BlY2lhbCBldmVudCBmb3IgZm9jdXNpbiB3aGVuIGl0IGRvZXNuJ3QKCQkJCS8v
IGV4aXN0IG5hdGl2ZWx5LiBUbyBpbXByb3ZlIHBlcmZvcm1hbmNlLCB0aGUgbmF0aXZlIGV2ZW50
CgkJCQkvLyBvYmplY3QgaXMgcmV1c2VkIGFuZCB0aGUgdHlwZSBpcyBjaGFuZ2VkLiBUaGVyZWZv
cmUsIHdlIGNhbid0CgkJCQkvLyByZWx5IG9uIHRoZSB0eXBlIGJlaW5nIGNvcnJlY3QgYWZ0ZXIg
dGhlIGV2ZW50IGZpbmlzaGVkCgkJCQkvLyBidWJibGluZywgc28gd2Ugc2V0IGl0IGJhY2sgdG8g
dGhlIHByZXZpb3VzIHZhbHVlLiAoIzg3NDApCgkJCQlpZiAoIGV2ZW50ICkgewoJCQkJCWV2ZW50
LnR5cGUgPSBldmVudFR5cGU7CgkJCQl9CgkJCQl0aGlzLl9vcGVuKCBldmVudCwgdGFyZ2V0LCBy
ZXNwb25zZSApOwoJCQl9ICk7CgkJfSApOwoJCWlmICggY29udGVudCApIHsKCQkJdGhpcy5fb3Bl
biggZXZlbnQsIHRhcmdldCwgY29udGVudCApOwoJCX0KCX0sCgoJX29wZW46IGZ1bmN0aW9uKCBl
dmVudCwgdGFyZ2V0LCBjb250ZW50ICkgewoJCXZhciB0b29sdGlwRGF0YSwgdG9vbHRpcCwgZGVs
YXllZFNob3csIGExMXlDb250ZW50LAoJCQlwb3NpdGlvbk9wdGlvbiA9ICQuZXh0ZW5kKCB7fSwg
dGhpcy5vcHRpb25zLnBvc2l0aW9uICk7CgoJCWlmICggIWNvbnRlbnQgKSB7CgkJCXJldHVybjsK
CQl9CgoJCS8vIENvbnRlbnQgY2FuIGJlIHVwZGF0ZWQgbXVsdGlwbGUgdGltZXMuIElmIHRoZSB0
b29sdGlwIGFscmVhZHkKCQkvLyBleGlzdHMsIHRoZW4ganVzdCB1cGRhdGUgdGhlIGNvbnRlbnQg
YW5kIGJhaWwuCgkJdG9vbHRpcERhdGEgPSB0aGlzLl9maW5kKCB0YXJnZXQgKTsKCQlpZiAoIHRv
b2x0aXBEYXRhICkgewoJCQl0b29sdGlwRGF0YS50b29sdGlwLmZpbmQoICIudWktdG9vbHRpcC1j
b250ZW50IiApLmh0bWwoIGNvbnRlbnQgKTsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gSWYgd2UgaGF2
ZSBhIHRpdGxlLCBjbGVhciBpdCB0byBwcmV2ZW50IHRoZSBuYXRpdmUgdG9vbHRpcAoJCS8vIHdl
IGhhdmUgdG8gY2hlY2sgZmlyc3QgdG8gYXZvaWQgZGVmaW5pbmcgYSB0aXRsZSBpZiBub25lIGV4
aXN0cwoJCS8vICh3ZSBkb24ndCB3YW50IHRvIGNhdXNlIGFuIGVsZW1lbnQgdG8gc3RhcnQgbWF0
Y2hpbmcgW3RpdGxlXSkKCQkvLwoJCS8vIFdlIHVzZSByZW1vdmVBdHRyIG9ubHkgZm9yIGtleSBl
dmVudHMsIHRvIGFsbG93IElFIHRvIGV4cG9ydCB0aGUgY29ycmVjdAoJCS8vIGFjY2Vzc2libGUg
YXR0cmlidXRlcy4gRm9yIG1vdXNlIGV2ZW50cywgc2V0IHRvIGVtcHR5IHN0cmluZyB0byBhdm9p
ZAoJCS8vIG5hdGl2ZSB0b29sdGlwIHNob3dpbmcgdXAgKGhhcHBlbnMgb25seSB3aGVuIHJlbW92
aW5nIGluc2lkZSBtb3VzZW92ZXIpLgoJCWlmICggdGFyZ2V0LmlzKCAiW3RpdGxlXSIgKSApIHsK
CQkJaWYgKCBldmVudCAmJiBldmVudC50eXBlID09PSAibW91c2VvdmVyIiApIHsKCQkJCXRhcmdl
dC5hdHRyKCAidGl0bGUiLCAiIiApOwoJCQl9IGVsc2UgewoJCQkJdGFyZ2V0LnJlbW92ZUF0dHIo
ICJ0aXRsZSIgKTsKCQkJfQoJCX0KCgkJdG9vbHRpcERhdGEgPSB0aGlzLl90b29sdGlwKCB0YXJn
ZXQgKTsKCQl0b29sdGlwID0gdG9vbHRpcERhdGEudG9vbHRpcDsKCQl0aGlzLl9hZGREZXNjcmli
ZWRCeSggdGFyZ2V0LCB0b29sdGlwLmF0dHIoICJpZCIgKSApOwoJCXRvb2x0aXAuZmluZCggIi51
aS10b29sdGlwLWNvbnRlbnQiICkuaHRtbCggY29udGVudCApOwoKCQkvLyBTdXBwb3J0OiBWb2lj
ZW92ZXIgb24gT1MgWCwgSkFXUyBvbiBJRSA8PSA5CgkJLy8gSkFXUyBhbm5vdW5jZXMgZGVsZXRp
b25zIGV2ZW4gd2hlbiBhcmlhLXJlbGV2YW50PSJhZGRpdGlvbnMiCgkJLy8gVm9pY2VvdmVyIHdp
bGwgc29tZXRpbWVzIHJlLXJlYWQgdGhlIGVudGlyZSBsb2cgcmVnaW9uJ3MgY29udGVudHMgZnJv
bSB0aGUgYmVnaW5uaW5nCgkJdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpOwoJCWEx
MXlDb250ZW50ID0gJCggIjxkaXY+IiApLmh0bWwoIHRvb2x0aXAuZmluZCggIi51aS10b29sdGlw
LWNvbnRlbnQiICkuaHRtbCgpICk7CgkJYTExeUNvbnRlbnQucmVtb3ZlQXR0ciggIm5hbWUiICku
ZmluZCggIltuYW1lXSIgKS5yZW1vdmVBdHRyKCAibmFtZSIgKTsKCQlhMTF5Q29udGVudC5yZW1v
dmVBdHRyKCAiaWQiICkuZmluZCggIltpZF0iICkucmVtb3ZlQXR0ciggImlkIiApOwoJCWExMXlD
b250ZW50LmFwcGVuZFRvKCB0aGlzLmxpdmVSZWdpb24gKTsKCgkJZnVuY3Rpb24gcG9zaXRpb24o
IGV2ZW50ICkgewoJCQlwb3NpdGlvbk9wdGlvbi5vZiA9IGV2ZW50OwoJCQlpZiAoIHRvb2x0aXAu
aXMoICI6aGlkZGVuIiApICkgewoJCQkJcmV0dXJuOwoJCQl9CgkJCXRvb2x0aXAucG9zaXRpb24o
IHBvc2l0aW9uT3B0aW9uICk7CgkJfQoJCWlmICggdGhpcy5vcHRpb25zLnRyYWNrICYmIGV2ZW50
ICYmIC9ebW91c2UvLnRlc3QoIGV2ZW50LnR5cGUgKSApIHsKCQkJdGhpcy5fb24oIHRoaXMuZG9j
dW1lbnQsIHsKCQkJCW1vdXNlbW92ZTogcG9zaXRpb24KCQkJfSApOwoKCQkJLy8gdHJpZ2dlciBv
bmNlIHRvIG92ZXJyaWRlIGVsZW1lbnQtcmVsYXRpdmUgcG9zaXRpb25pbmcKCQkJcG9zaXRpb24o
IGV2ZW50ICk7CgkJfSBlbHNlIHsKCQkJdG9vbHRpcC5wb3NpdGlvbiggJC5leHRlbmQoIHsKCQkJ
CW9mOiB0YXJnZXQKCQkJfSwgdGhpcy5vcHRpb25zLnBvc2l0aW9uICkgKTsKCQl9CgoJCXRvb2x0
aXAuaGlkZSgpOwoKCQl0aGlzLl9zaG93KCB0b29sdGlwLCB0aGlzLm9wdGlvbnMuc2hvdyApOwoK
CQkvLyBIYW5kbGUgdHJhY2tpbmcgdG9vbHRpcHMgdGhhdCBhcmUgc2hvd24gd2l0aCBhIGRlbGF5
ICgjODY0NCkuIEFzIHNvb24KCQkvLyBhcyB0aGUgdG9vbHRpcCBpcyB2aXNpYmxlLCBwb3NpdGlv
biB0aGUgdG9vbHRpcCB1c2luZyB0aGUgbW9zdCByZWNlbnQKCQkvLyBldmVudC4KCQkvLyBBZGRz
IHRoZSBjaGVjayB0byBhZGQgdGhlIHRpbWVycyBvbmx5IHdoZW4gYm90aCBkZWxheSBhbmQgdHJh
Y2sgb3B0aW9ucyBhcmUgc2V0ICgjMTQ2ODIpCgkJaWYgKCB0aGlzLm9wdGlvbnMudHJhY2sgJiYg
dGhpcy5vcHRpb25zLnNob3cgJiYgdGhpcy5vcHRpb25zLnNob3cuZGVsYXkgKSB7CgkJCWRlbGF5
ZWRTaG93ID0gdGhpcy5kZWxheWVkU2hvdyA9IHNldEludGVydmFsKCBmdW5jdGlvbigpIHsKCQkJ
CWlmICggdG9vbHRpcC5pcyggIjp2aXNpYmxlIiApICkgewoJCQkJCXBvc2l0aW9uKCBwb3NpdGlv
bk9wdGlvbi5vZiApOwoJCQkJCWNsZWFySW50ZXJ2YWwoIGRlbGF5ZWRTaG93ICk7CgkJCQl9CgkJ
CX0sICQuZnguaW50ZXJ2YWwgKTsKCQl9CgoJCXRoaXMuX3RyaWdnZXIoICJvcGVuIiwgZXZlbnQs
IHsgdG9vbHRpcDogdG9vbHRpcCB9ICk7Cgl9LAoKCV9yZWdpc3RlckNsb3NlSGFuZGxlcnM6IGZ1
bmN0aW9uKCBldmVudCwgdGFyZ2V0ICkgewoJCXZhciBldmVudHMgPSB7CgkJCWtleXVwOiBmdW5j
dGlvbiggZXZlbnQgKSB7CgkJCQlpZiAoIGV2ZW50LmtleUNvZGUgPT09ICQudWkua2V5Q29kZS5F
U0NBUEUgKSB7CgkJCQkJdmFyIGZha2VFdmVudCA9ICQuRXZlbnQoIGV2ZW50ICk7CgkJCQkJZmFr
ZUV2ZW50LmN1cnJlbnRUYXJnZXQgPSB0YXJnZXRbIDAgXTsKCQkJCQl0aGlzLmNsb3NlKCBmYWtl
RXZlbnQsIHRydWUgKTsKCQkJCX0KCQkJfQoJCX07CgoJCS8vIE9ubHkgYmluZCByZW1vdmUgaGFu
ZGxlciBmb3IgZGVsZWdhdGVkIHRhcmdldHMuIE5vbi1kZWxlZ2F0ZWQKCQkvLyB0b29sdGlwcyB3
aWxsIGhhbmRsZSB0aGlzIGluIGRlc3Ryb3kuCgkJaWYgKCB0YXJnZXRbIDAgXSAhPT0gdGhpcy5l
bGVtZW50WyAwIF0gKSB7CgkJCWV2ZW50cy5yZW1vdmUgPSBmdW5jdGlvbigpIHsKCQkJCXRoaXMu
X3JlbW92ZVRvb2x0aXAoIHRoaXMuX2ZpbmQoIHRhcmdldCApLnRvb2x0aXAgKTsKCQkJfTsKCQl9
CgoJCWlmICggIWV2ZW50IHx8IGV2ZW50LnR5cGUgPT09ICJtb3VzZW92ZXIiICkgewoJCQlldmVu
dHMubW91c2VsZWF2ZSA9ICJjbG9zZSI7CgkJfQoJCWlmICggIWV2ZW50IHx8IGV2ZW50LnR5cGUg
PT09ICJmb2N1c2luIiApIHsKCQkJZXZlbnRzLmZvY3Vzb3V0ID0gImNsb3NlIjsKCQl9CgkJdGhp
cy5fb24oIHRydWUsIHRhcmdldCwgZXZlbnRzICk7Cgl9LAoKCWNsb3NlOiBmdW5jdGlvbiggZXZl
bnQgKSB7CgkJdmFyIHRvb2x0aXAsCgkJCXRoYXQgPSB0aGlzLAoJCQl0YXJnZXQgPSAkKCBldmVu
dCA/IGV2ZW50LmN1cnJlbnRUYXJnZXQgOiB0aGlzLmVsZW1lbnQgKSwKCQkJdG9vbHRpcERhdGEg
PSB0aGlzLl9maW5kKCB0YXJnZXQgKTsKCgkJLy8gVGhlIHRvb2x0aXAgbWF5IGFscmVhZHkgYmUg
Y2xvc2VkCgkJaWYgKCAhdG9vbHRpcERhdGEgKSB7CgoJCQkvLyBXZSBzZXQgdWktdG9vbHRpcC1v
cGVuIGltbWVkaWF0ZWx5IHVwb24gb3BlbiAoaW4gb3BlbigpKSwgYnV0IG9ubHkgc2V0IHRoZQoJ
CQkvLyBhZGRpdGlvbmFsIGRhdGEgb25jZSB0aGVyZSdzIGFjdHVhbGx5IGNvbnRlbnQgdG8gc2hv
dyAoaW4gX29wZW4oKSkuIFNvIGV2ZW4gaWYgdGhlCgkJCS8vIHRvb2x0aXAgZG9lc24ndCBoYXZl
IGZ1bGwgZGF0YSwgd2UgYWx3YXlzIHJlbW92ZSB1aS10b29sdGlwLW9wZW4gaW4gY2FzZSB3ZSdy
ZSBpbgoJCQkvLyB0aGUgcGVyaW9kIGJldHdlZW4gb3BlbigpIGFuZCBfb3BlbigpLgoJCQl0YXJn
ZXQucmVtb3ZlRGF0YSggInVpLXRvb2x0aXAtb3BlbiIgKTsKCQkJcmV0dXJuOwoJCX0KCgkJdG9v
bHRpcCA9IHRvb2x0aXBEYXRhLnRvb2x0aXA7CgoJCS8vIERpc2FibGluZyBjbG9zZXMgdGhlIHRv
b2x0aXAsIHNvIHdlIG5lZWQgdG8gdHJhY2sgd2hlbiB3ZSdyZSBjbG9zaW5nCgkJLy8gdG8gYXZv
aWQgYW4gaW5maW5pdGUgbG9vcCBpbiBjYXNlIHRoZSB0b29sdGlwIGJlY29tZXMgZGlzYWJsZWQg
b24gY2xvc2UKCQlpZiAoIHRvb2x0aXBEYXRhLmNsb3NpbmcgKSB7CgkJCXJldHVybjsKCQl9CgoJ
CS8vIENsZWFyIHRoZSBpbnRlcnZhbCBmb3IgZGVsYXllZCB0cmFja2luZyB0b29sdGlwcwoJCWNs
ZWFySW50ZXJ2YWwoIHRoaXMuZGVsYXllZFNob3cgKTsKCgkJLy8gT25seSBzZXQgdGl0bGUgaWYg
d2UgaGFkIG9uZSBiZWZvcmUgKHNlZSBjb21tZW50IGluIF9vcGVuKCkpCgkJLy8gSWYgdGhlIHRp
dGxlIGF0dHJpYnV0ZSBoYXMgY2hhbmdlZCBzaW5jZSBvcGVuKCksIGRvbid0IHJlc3RvcmUKCQlp
ZiAoIHRhcmdldC5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKSAmJiAhdGFyZ2V0LmF0dHIoICJ0
aXRsZSIgKSApIHsKCQkJdGFyZ2V0LmF0dHIoICJ0aXRsZSIsIHRhcmdldC5kYXRhKCAidWktdG9v
bHRpcC10aXRsZSIgKSApOwoJCX0KCgkJdGhpcy5fcmVtb3ZlRGVzY3JpYmVkQnkoIHRhcmdldCAp
OwoKCQl0b29sdGlwRGF0YS5oaWRpbmcgPSB0cnVlOwoJCXRvb2x0aXAuc3RvcCggdHJ1ZSApOwoJ
CXRoaXMuX2hpZGUoIHRvb2x0aXAsIHRoaXMub3B0aW9ucy5oaWRlLCBmdW5jdGlvbigpIHsKCQkJ
dGhhdC5fcmVtb3ZlVG9vbHRpcCggJCggdGhpcyApICk7CgkJfSApOwoKCQl0YXJnZXQucmVtb3Zl
RGF0YSggInVpLXRvb2x0aXAtb3BlbiIgKTsKCQl0aGlzLl9vZmYoIHRhcmdldCwgIm1vdXNlbGVh
dmUgZm9jdXNvdXQga2V5dXAiICk7CgoJCS8vIFJlbW92ZSAncmVtb3ZlJyBiaW5kaW5nIG9ubHkg
b24gZGVsZWdhdGVkIHRhcmdldHMKCQlpZiAoIHRhcmdldFsgMCBdICE9PSB0aGlzLmVsZW1lbnRb
IDAgXSApIHsKCQkJdGhpcy5fb2ZmKCB0YXJnZXQsICJyZW1vdmUiICk7CgkJfQoJCXRoaXMuX29m
ZiggdGhpcy5kb2N1bWVudCwgIm1vdXNlbW92ZSIgKTsKCgkJaWYgKCBldmVudCAmJiBldmVudC50
eXBlID09PSAibW91c2VsZWF2ZSIgKSB7CgkJCSQuZWFjaCggdGhpcy5wYXJlbnRzLCBmdW5jdGlv
biggaWQsIHBhcmVudCApIHsKCQkJCSQoIHBhcmVudC5lbGVtZW50ICkuYXR0ciggInRpdGxlIiwg
cGFyZW50LnRpdGxlICk7CgkJCQlkZWxldGUgdGhhdC5wYXJlbnRzWyBpZCBdOwoJCQl9ICk7CgkJ
fQoKCQl0b29sdGlwRGF0YS5jbG9zaW5nID0gdHJ1ZTsKCQl0aGlzLl90cmlnZ2VyKCAiY2xvc2Ui
LCBldmVudCwgeyB0b29sdGlwOiB0b29sdGlwIH0gKTsKCQlpZiAoICF0b29sdGlwRGF0YS5oaWRp
bmcgKSB7CgkJCXRvb2x0aXBEYXRhLmNsb3NpbmcgPSBmYWxzZTsKCQl9Cgl9LAoKCV90b29sdGlw
OiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQl2YXIgdG9vbHRpcCA9ICQoICI8ZGl2PiIgKS5hdHRy
KCAicm9sZSIsICJ0b29sdGlwIiApLAoJCQljb250ZW50ID0gJCggIjxkaXY+IiApLmFwcGVuZFRv
KCB0b29sdGlwICksCgkJCWlkID0gdG9vbHRpcC51bmlxdWVJZCgpLmF0dHIoICJpZCIgKTsKCgkJ
dGhpcy5fYWRkQ2xhc3MoIGNvbnRlbnQsICJ1aS10b29sdGlwLWNvbnRlbnQiICk7CgkJdGhpcy5f
YWRkQ2xhc3MoIHRvb2x0aXAsICJ1aS10b29sdGlwIiwgInVpLXdpZGdldCB1aS13aWRnZXQtY29u
dGVudCIgKTsKCgkJdG9vbHRpcC5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oIGVsZW1lbnQgKSAp
OwoKCQlyZXR1cm4gdGhpcy50b29sdGlwc1sgaWQgXSA9IHsKCQkJZWxlbWVudDogZWxlbWVudCwK
CQkJdG9vbHRpcDogdG9vbHRpcAoJCX07Cgl9LAoKCV9maW5kOiBmdW5jdGlvbiggdGFyZ2V0ICkg
ewoJCXZhciBpZCA9IHRhcmdldC5kYXRhKCAidWktdG9vbHRpcC1pZCIgKTsKCQlyZXR1cm4gaWQg
PyB0aGlzLnRvb2x0aXBzWyBpZCBdIDogbnVsbDsKCX0sCgoJX3JlbW92ZVRvb2x0aXA6IGZ1bmN0
aW9uKCB0b29sdGlwICkgewoJCXRvb2x0aXAucmVtb3ZlKCk7CgkJZGVsZXRlIHRoaXMudG9vbHRp
cHNbIHRvb2x0aXAuYXR0ciggImlkIiApIF07Cgl9LAoKCV9hcHBlbmRUbzogZnVuY3Rpb24oIHRh
cmdldCApIHsKCQl2YXIgZWxlbWVudCA9IHRhcmdldC5jbG9zZXN0KCAiLnVpLWZyb250LCBkaWFs
b2ciICk7CgoJCWlmICggIWVsZW1lbnQubGVuZ3RoICkgewoJCQllbGVtZW50ID0gdGhpcy5kb2N1
bWVudFsgMCBdLmJvZHk7CgkJfQoKCQlyZXR1cm4gZWxlbWVudDsKCX0sCgoJX2Rlc3Ryb3k6IGZ1
bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpczsKCgkJLy8gQ2xvc2Ugb3BlbiB0b29sdGlwcwoJ
CSQuZWFjaCggdGhpcy50b29sdGlwcywgZnVuY3Rpb24oIGlkLCB0b29sdGlwRGF0YSApIHsKCgkJ
CS8vIERlbGVnYXRlIHRvIGNsb3NlIG1ldGhvZCB0byBoYW5kbGUgY29tbW9uIGNsZWFudXAKCQkJ
dmFyIGV2ZW50ID0gJC5FdmVudCggImJsdXIiICksCgkJCQllbGVtZW50ID0gdG9vbHRpcERhdGEu
ZWxlbWVudDsKCQkJZXZlbnQudGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldCA9IGVsZW1lbnRb
IDAgXTsKCQkJdGhhdC5jbG9zZSggZXZlbnQsIHRydWUgKTsKCgkJCS8vIFJlbW92ZSBpbW1lZGlh
dGVseTsgZGVzdHJveWluZyBhbiBvcGVuIHRvb2x0aXAgZG9lc24ndCB1c2UgdGhlCgkJCS8vIGhp
ZGUgYW5pbWF0aW9uCgkJCSQoICIjIiArIGlkICkucmVtb3ZlKCk7CgoJCQkvLyBSZXN0b3JlIHRo
ZSB0aXRsZQoJCQlpZiAoIGVsZW1lbnQuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiICkgKSB7CgoJ
CQkJLy8gSWYgdGhlIHRpdGxlIGF0dHJpYnV0ZSBoYXMgY2hhbmdlZCBzaW5jZSBvcGVuKCksIGRv
bid0IHJlc3RvcmUKCQkJCWlmICggIWVsZW1lbnQuYXR0ciggInRpdGxlIiApICkgewoJCQkJCWVs
ZW1lbnQuYXR0ciggInRpdGxlIiwgZWxlbWVudC5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKSAp
OwoJCQkJfQoJCQkJZWxlbWVudC5yZW1vdmVEYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKTsKCQkJ
fQoJCX0gKTsKCQl0aGlzLmxpdmVSZWdpb24ucmVtb3ZlKCk7Cgl9Cn0gKTsKCi8vIERFUFJFQ0FU
RUQKLy8gVE9ETzogU3dpdGNoIHJldHVybiBiYWNrIHRvIHdpZGdldCBkZWNsYXJhdGlvbiBhdCB0
b3Agb2YgZmlsZSB3aGVuIHRoaXMgaXMgcmVtb3ZlZAppZiAoICQudWlCYWNrQ29tcGF0ICE9PSBm
YWxzZSApIHsKCgkvLyBCYWNrY29tcGF0IGZvciB0b29sdGlwQ2xhc3Mgb3B0aW9uCgkkLndpZGdl
dCggInVpLnRvb2x0aXAiLCAkLnVpLnRvb2x0aXAsIHsKCQlvcHRpb25zOiB7CgkJCXRvb2x0aXBD
bGFzczogbnVsbAoJCX0sCgkJX3Rvb2x0aXA6IGZ1bmN0aW9uKCkgewoJCQl2YXIgdG9vbHRpcERh
dGEgPSB0aGlzLl9zdXBlckFwcGx5KCBhcmd1bWVudHMgKTsKCQkJaWYgKCB0aGlzLm9wdGlvbnMu
dG9vbHRpcENsYXNzICkgewoJCQkJdG9vbHRpcERhdGEudG9vbHRpcC5hZGRDbGFzcyggdGhpcy5v
cHRpb25zLnRvb2x0aXBDbGFzcyApOwoJCQl9CgkJCXJldHVybiB0b29sdGlwRGF0YTsKCQl9Cgl9
ICk7Cn0KCnZhciB3aWRnZXRzVG9vbHRpcCA9ICQudWkudG9vbHRpcDsKCgoKCn0pKTs=</Default>
</Parameter>

<Parameter name="Frag6980641884580351713692968">
<Default>eAoJCX07CgoJfSwKCgljbGlwVG9Cb3g6IGZ1bmN0aW9uKCBhbmltYXRpb24gKSB7CgkJcmV0dXJu
IHsKCQkJd2lkdGg6IGFuaW1hdGlvbi5jbGlwLnJpZ2h0IC0gYW5pbWF0aW9uLmNsaXAubGVmdCwK
CQkJaGVpZ2h0OiBhbmltYXRpb24uY2xpcC5ib3R0b20gLSBhbmltYXRpb24uY2xpcC50b3AsCgkJ
CWxlZnQ6IGFuaW1hdGlvbi5jbGlwLmxlZnQsCgkJCXRvcDogYW5pbWF0aW9uLmNsaXAudG9wCgkJ
fTsKCX0sCgoJLy8gSW5qZWN0cyByZWNlbnRseSBxdWV1ZWQgZnVuY3Rpb25zIHRvIGJlIGZpcnN0
IGluIGxpbmUgKGFmdGVyICJpbnByb2dyZXNzIikKCXVuc2hpZnQ6IGZ1bmN0aW9uKCBlbGVtZW50
LCBxdWV1ZUxlbmd0aCwgY291bnQgKSB7CgkJdmFyIHF1ZXVlID0gZWxlbWVudC5xdWV1ZSgpOwoK
CQlpZiAoIHF1ZXVlTGVuZ3RoID4gMSApIHsKCQkJcXVldWUuc3BsaWNlLmFwcGx5KCBxdWV1ZSwK
CQkJCVsgMSwgMCBdLmNvbmNhdCggcXVldWUuc3BsaWNlKCBxdWV1ZUxlbmd0aCwgY291bnQgKSAp
ICk7CgkJfQoJCWVsZW1lbnQuZGVxdWV1ZSgpOwoJfSwKCglzYXZlU3R5bGU6IGZ1bmN0aW9uKCBl
bGVtZW50ICkgewoJCWVsZW1lbnQuZGF0YSggZGF0YVNwYWNlU3R5bGUsIGVsZW1lbnRbIDAgXS5z
dHlsZS5jc3NUZXh0ICk7Cgl9LAoKCXJlc3RvcmVTdHlsZTogZnVuY3Rpb24oIGVsZW1lbnQgKSB7
CgkJZWxlbWVudFsgMCBdLnN0eWxlLmNzc1RleHQgPSBlbGVtZW50LmRhdGEoIGRhdGFTcGFjZVN0
eWxlICkgfHwgIiI7CgkJZWxlbWVudC5yZW1vdmVEYXRhKCBkYXRhU3BhY2VTdHlsZSApOwoJfSwK
Cgltb2RlOiBmdW5jdGlvbiggZWxlbWVudCwgbW9kZSApIHsKCQl2YXIgaGlkZGVuID0gZWxlbWVu
dC5pcyggIjpoaWRkZW4iICk7CgoJCWlmICggbW9kZSA9PT0gInRvZ2dsZSIgKSB7CgkJCW1vZGUg
PSBoaWRkZW4gPyAic2hvdyIgOiAiaGlkZSI7CgkJfQoJCWlmICggaGlkZGVuID8gbW9kZSA9PT0g
ImhpZGUiIDogbW9kZSA9PT0gInNob3ciICkgewoJCQltb2RlID0gIm5vbmUiOwoJCX0KCQlyZXR1
cm4gbW9kZTsKCX0sCgoJLy8gVHJhbnNsYXRlcyBhIFt0b3AsbGVmdF0gYXJyYXkgaW50byBhIGJh
c2VsaW5lIHZhbHVlCglnZXRCYXNlbGluZTogZnVuY3Rpb24oIG9yaWdpbiwgb3JpZ2luYWwgKSB7
CgkJdmFyIHksIHg7CgoJCXN3aXRjaCAoIG9yaWdpblsgMCBdICkgewoJCWNhc2UgInRvcCI6CgkJ
CXkgPSAwOwoJCQlicmVhazsKCQljYXNlICJtaWRkbGUiOgoJCQl5ID0gMC41OwoJCQlicmVhazsK
CQljYXNlICJib3R0b20iOgoJCQl5ID0gMTsKCQkJYnJlYWs7CgkJZGVmYXVsdDoKCQkJeSA9IG9y
aWdpblsgMCBdIC8gb3JpZ2luYWwuaGVpZ2h0OwoJCX0KCgkJc3dpdGNoICggb3JpZ2luWyAxIF0g
KSB7CgkJY2FzZSAibGVmdCI6CgkJCXggPSAwOwoJCQlicmVhazsKCQljYXNlICJjZW50ZXIiOgoJ
CQl4ID0gMC41OwoJCQlicmVhazsKCQljYXNlICJyaWdodCI6CgkJCXggPSAxOwoJCQlicmVhazsK
CQlkZWZhdWx0OgoJCQl4ID0gb3JpZ2luWyAxIF0gLyBvcmlnaW5hbC53aWR0aDsKCQl9CgoJCXJl
dHVybiB7CgkJCXg6IHgsCgkJCXk6IHkKCQl9OwoJfSwKCgkvLyBDcmVhdGVzIGEgcGxhY2Vob2xk
ZXIgZWxlbWVudCBzbyB0aGF0IHRoZSBvcmlnaW5hbCBlbGVtZW50IGNhbiBiZSBtYWRlIGFic29s
dXRlCgljcmVhdGVQbGFjZWhvbGRlcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJdmFyIHBsYWNl
aG9sZGVyLAoJCQljc3NQb3NpdGlvbiA9IGVsZW1lbnQuY3NzKCAicG9zaXRpb24iICksCgkJCXBv
c2l0aW9uID0gZWxlbWVudC5wb3NpdGlvbigpOwoKCQkvLyBMb2NrIGluIG1hcmdpbnMgZmlyc3Qg
dG8gYWNjb3VudCBmb3IgZm9ybSBlbGVtZW50cywgd2hpY2gKCQkvLyB3aWxsIGNoYW5nZSBtYXJn
aW4gaWYgeW91IGV4cGxpY2l0bHkgc2V0IGhlaWdodAoJCS8vIHNlZTogaHR0cDovL2pzZmlkZGxl
Lm5ldC9KWlNNdC8zLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTA3
MzgwCgkJLy8gU3VwcG9ydDogU2FmYXJpCgkJZWxlbWVudC5jc3MoIHsKCQkJbWFyZ2luVG9wOiBl
bGVtZW50LmNzcyggIm1hcmdpblRvcCIgKSwKCQkJbWFyZ2luQm90dG9tOiBlbGVtZW50LmNzcygg
Im1hcmdpbkJvdHRvbSIgKSwKCQkJbWFyZ2luTGVmdDogZWxlbWVudC5jc3MoICJtYXJnaW5MZWZ0
IiApLAoJCQltYXJnaW5SaWdodDogZWxlbWVudC5jc3MoICJtYXJnaW5SaWdodCIgKQoJCX0gKQoJ
CS5vdXRlcldpZHRoKCBlbGVtZW50Lm91dGVyV2lkdGgoKSApCgkJLm91dGVySGVpZ2h0KCBlbGVt
ZW50Lm91dGVySGVpZ2h0KCkgKTsKCgkJaWYgKCAvXihzdGF0aWN8cmVsYXRpdmUpLy50ZXN0KCBj
c3NQb3NpdGlvbiApICkgewoJCQljc3NQb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CgoJCQlwbGFjZWhv
bGRlciA9ICQoICI8IiArIGVsZW1lbnRbIDAgXS5ub2RlTmFtZSArICI+IiApLmluc2VydEFmdGVy
KCBlbGVtZW50ICkuY3NzKCB7CgoJCQkJLy8gQ29udmVydCBpbmxpbmUgdG8gaW5saW5lIGJsb2Nr
IHRvIGFjY291bnQgZm9yIGlubGluZSBlbGVtZW50cwoJCQkJLy8gdGhhdCB0dXJuIHRvIGlubGlu
ZSBibG9jayBiYXNlZCBvbiBjb250ZW50IChsaWtlIGltZykKCQkJCWRpc3BsYXk6IC9eKGlubGlu
ZXxydWJ5KS8udGVzdCggZWxlbWVudC5jc3MoICJkaXNwbGF5IiApICkgPwoJCQkJCSJpbmxpbmUt
YmxvY2siIDoKCQkJCQkiYmxvY2siLAoJCQkJdmlzaWJpbGl0eTogImhpZGRlbiIsCgoJCQkJLy8g
TWFyZ2lucyBuZWVkIHRvIGJlIHNldCB0byBhY2NvdW50IGZvciBtYXJnaW4gY29sbGFwc2UKCQkJ
CW1hcmdpblRvcDogZWxlbWVudC5jc3MoICJtYXJnaW5Ub3AiICksCgkJCQltYXJnaW5Cb3R0b206
IGVsZW1lbnQuY3NzKCAibWFyZ2luQm90dG9tIiApLAoJCQkJbWFyZ2luTGVmdDogZWxlbWVudC5j
c3MoICJtYXJnaW5MZWZ0IiApLAoJCQkJbWFyZ2luUmlnaHQ6IGVsZW1lbnQuY3NzKCAibWFyZ2lu
UmlnaHQiICksCgkJCQkiZmxvYXQiOiBlbGVtZW50LmNzcyggImZsb2F0IiApCgkJCX0gKQoJCQku
b3V0ZXJXaWR0aCggZWxlbWVudC5vdXRlcldpZHRoKCkgKQoJCQkub3V0ZXJIZWlnaHQoIGVsZW1l
bnQub3V0ZXJIZWlnaHQoKSApCgkJCS5hZGRDbGFzcyggInVpLWVmZmVjdHMtcGxhY2Vob2xkZXIi
ICk7CgoJCQllbGVtZW50LmRhdGEoIGRhdGFTcGFjZSArICJwbGFjZWhvbGRlciIsIHBsYWNlaG9s
ZGVyICk7CgkJfQoKCQllbGVtZW50LmNzcyggewoJCQlwb3NpdGlvbjogY3NzUG9zaXRpb24sCgkJ
CWxlZnQ6IHBvc2l0aW9uLmxlZnQsCgkJCXRvcDogcG9zaXRpb24udG9wCgkJfSApOwoKCQlyZXR1
cm4gcGxhY2Vob2xkZXI7Cgl9LAoKCXJlbW92ZVBsYWNlaG9sZGVyOiBmdW5jdGlvbiggZWxlbWVu
dCApIHsKCQl2YXIgZGF0YUtleSA9IGRhdGFTcGFjZSArICJwbGFjZWhvbGRlciIsCgkJCQlwbGFj
ZWhvbGRlciA9IGVsZW1lbnQuZGF0YSggZGF0YUtleSApOwoKCQlpZiAoIHBsYWNlaG9sZGVyICkg
ewoJCQlwbGFjZWhvbGRlci5yZW1vdmUoKTsKCQkJZWxlbWVudC5yZW1vdmVEYXRhKCBkYXRhS2V5
ICk7CgkJfQoJfSwKCgkvLyBSZW1vdmVzIGEgcGxhY2Vob2xkZXIgaWYgaXQgZXhpc3RzIGFuZCBy
ZXN0b3JlcwoJLy8gcHJvcGVydGllcyB0aGF0IHdlcmUgbW9kaWZpZWQgZHVyaW5nIHBsYWNlaG9s
ZGVyIGNyZWF0aW9uCgljbGVhblVwOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQkkLmVmZmVjdHMu
cmVzdG9yZVN0eWxlKCBlbGVtZW50ICk7CgkJJC5lZmZlY3RzLnJlbW92ZVBsYWNlaG9sZGVyKCBl
bGVtZW50ICk7Cgl9LAoKCXNldFRyYW5zaXRpb246IGZ1bmN0aW9uKCBlbGVtZW50LCBsaXN0LCBm
YWN0b3IsIHZhbHVlICkgewoJCXZhbHVlID0gdmFsdWUgfHwge307CgkJJC5lYWNoKCBsaXN0LCBm
dW5jdGlvbiggaSwgeCApIHsKCQkJdmFyIHVuaXQgPSBlbGVtZW50LmNzc1VuaXQoIHggKTsKCQkJ
aWYgKCB1bml0WyAwIF0gPiAwICkgewoJCQkJdmFsdWVbIHggXSA9IHVuaXRbIDAgXSAqIGZhY3Rv
ciArIHVuaXRbIDEgXTsKCQkJfQoJCX0gKTsKCQlyZXR1cm4gdmFsdWU7Cgl9Cn0gKTsKCi8vIFJl
dHVybiBhbiBlZmZlY3Qgb3B0aW9ucyBvYmplY3QgZm9yIHRoZSBnaXZlbiBwYXJhbWV0ZXJzOgpm
dW5jdGlvbiBfbm9ybWFsaXplQXJndW1lbnRzKCBlZmZlY3QsIG9wdGlvbnMsIHNwZWVkLCBjYWxs
YmFjayApIHsKCgkvLyBBbGxvdyBwYXNzaW5nIGFsbCBvcHRpb25zIGFzIHRoZSBmaXJzdCBwYXJh
bWV0ZXIKCWlmICggJC5pc1BsYWluT2JqZWN0KCBlZmZlY3QgKSApIHsKCQlvcHRpb25zID0gZWZm
ZWN0OwoJCWVmZmVjdCA9IGVmZmVjdC5lZmZlY3Q7Cgl9CgoJLy8gQ29udmVydCB0byBhbiBvYmpl
Y3QKCWVmZmVjdCA9IHsgZWZmZWN0OiBlZmZlY3QgfTsKCgkvLyBDYXRjaCAoZWZmZWN0LCBudWxs
LCAuLi4pCglpZiAoIG9wdGlvbnMgPT0gbnVsbCApIHsKCQlvcHRpb25zID0ge307Cgl9CgoJLy8g
Q2F0Y2ggKGVmZmVjdCwgY2FsbGJhY2spCglpZiAoICQuaXNGdW5jdGlvbiggb3B0aW9ucyApICkg
ewoJCWNhbGxiYWNrID0gb3B0aW9uczsKCQlzcGVlZCA9IG51bGw7CgkJb3B0aW9ucyA9IHt9OwoJ
fQoKCS8vIENhdGNoIChlZmZlY3QsIHNwZWVkLCA/KQoJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0g
Im51bWJlciIgfHwgJC5meC5zcGVlZHNbIG9wdGlvbnMgXSApIHsKCQljYWxsYmFjayA9IHNwZWVk
OwoJCXNwZWVkID0gb3B0aW9uczsKCQlvcHRpb25zID0ge307Cgl9CgoJLy8gQ2F0Y2ggKGVmZmVj
dCwgb3B0aW9ucywgY2FsbGJhY2spCglpZiAoICQuaXNGdW5jdGlvbiggc3BlZWQgKSApIHsKCQlj
YWxsYmFjayA9IHNwZWVkOwoJCXNwZWVkID0gbnVsbDsKCX0KCgkvLyBBZGQgb3B0aW9ucyB0byBl
ZmZlY3QKCWlmICggb3B0aW9ucyApIHsKCQkkLmV4dGVuZCggZWZmZWN0LCBvcHRpb25zICk7Cgl9
CgoJc3BlZWQgPSBzcGVlZCB8fCBvcHRpb25zLmR1cmF0aW9uOwoJZWZmZWN0LmR1cmF0aW9uID0g
JC5meC5vZmYgPyAwIDoKCQl0eXBlb2Ygc3BlZWQgPT09ICJudW1iZXIiID8gc3BlZWQgOgoJCXNw
ZWVkIGluICQuZnguc3BlZWRzID8gJC5meC5zcGVlZHNbIHNwZWVkIF0gOgoJCSQuZnguc3BlZWRz
Ll9kZWZhdWx0OwoKCWVmZmVjdC5jb21wbGV0ZSA9IGNhbGxiYWNrIHx8IG9wdGlvbnMuY29tcGxl
dGU7CgoJcmV0dXJuIGVmZmVjdDsKfQoKZnVuY3Rpb24gc3RhbmRhcmRBbmltYXRpb25PcHRpb24o
IG9wdGlvbiApIHsKCgkvLyBWYWxpZCBzdGFuZGFyZCBzcGVlZHMgKG5vdGhpbmcsIG51bWJlciwg
bmFtZWQgc3BlZWQpCglpZiAoICFvcHRpb24gfHwgdHlwZW9mIG9wdGlvbiA9PT0gIm51bWJlciIg
fHwgJC5meC5zcGVlZHNbIG9wdGlvbiBdICkgewoJCXJldHVybiB0cnVlOwoJfQoKCS8vIEludmFs
aWQgc3RyaW5ncyAtIHRyZWF0IGFzICJub3JtYWwiIHNwZWVkCglpZiAoIHR5cGVvZiBvcHRpb24g
PT09ICJzdHJpbmciICYmICEkLmVmZmVjdHMuZWZmZWN0WyBvcHRpb24gXSApIHsKCQlyZXR1cm4g
dHJ1ZTsKCX0KCgkvLyBDb21wbGV0ZSBjYWxsYmFjawoJaWYgKCAkLmlzRnVuY3Rpb24oIG9wdGlv
biApICkgewoJCXJldHVybiB0cnVlOwoJfQoKCS8vIE9wdGlvbnMgaGFzaCAoYnV0IG5vdCBuYW1p
bmcgYW4gZWZmZWN0KQoJaWYgKCB0eXBlb2Ygb3B0aW9uID09PSAib2JqZWN0IiAmJiAhb3B0aW9u
LmVmZmVjdCApIHsKCQlyZXR1cm4gdHJ1ZTsKCX0KCgkvLyBEaWRuJ3QgbWF0Y2ggYW55IHN0YW5k
YXJkIEFQSQoJcmV0dXJuIGZhbHNlOwp9CgokLmZuLmV4dGVuZCggewoJZWZmZWN0OiBmdW5jdGlv
biggLyogZWZmZWN0LCBvcHRpb25zLCBzcGVlZCwgY2FsbGJhY2sgKi8gKSB7CgkJdmFyIGFyZ3Mg
PSBfbm9ybWFsaXplQXJndW1lbnRzLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSwKCQkJZWZmZWN0
TWV0aG9kID0gJC5lZmZlY3RzLmVmZmVjdFsgYXJncy5lZmZlY3QgXSwKCQkJZGVmYXVsdE1vZGUg
PSBlZmZlY3RNZXRob2QubW9kZSwKCQkJcXVldWUgPSBhcmdzLnF1ZXVlLAoJCQlxdWV1ZU5hbWUg
PSBxdWV1ZSB8fCAiZngiLAoJCQljb21wbGV0ZSA9IGFyZ3MuY29tcGxldGUsCgkJCW1vZGUgPSBh
cmdzLm1vZGUsCgkJCW1vZGVzID0gW10sCgkJCXByZWZpbHRlciA9IGZ1bmN0aW9uKCBuZXh0ICkg
ewoJCQkJdmFyIGVsID0gJCggdGhpcyApLAoJCQkJCW5vcm1hbGl6ZWRNb2RlID0gJC5lZmZlY3Rz
Lm1vZGUoIGVsLCBtb2RlICkgfHwgZGVmYXVsdE1vZGU7CgoJCQkJLy8gU2VudGluZWwgZm9yIGR1
Y2stcHVuY2hpbmcgdGhlIDphbmltYXRlZCBwc3VlZG8tc2VsZWN0b3IKCQkJCWVsLmRhdGEoIGRh
dGFTcGFjZUFuaW1hdGVkLCB0cnVlICk7CgoJCQkJLy8gU2F2ZSBlZmZlY3QgbW9kZSBmb3IgbGF0
ZXIgdXNlLAoJCQkJLy8gd2UgY2FuJ3QganVzdCBjYWxsICQuZWZmZWN0cy5tb2RlIGFnYWluIGxh
dGVyLAoJCQkJLy8gYXMgdGhlIC5zaG93KCkgYmVsb3cgZGVzdHJveXMgdGhlIGluaXRpYWwgc3Rh
dGUKCQkJCW1vZGVzLnB1c2goIG5vcm1hbGl6ZWRNb2RlICk7CgoJCQkJLy8gU2VlICQudWlCYWNr
Q29tcGF0IGluc2lkZSBvZiBydW4oKSBmb3IgcmVtb3ZhbCBvZiBkZWZhdWx0TW9kZSBpbiAxLjEz
CgkJCQlpZiAoIGRlZmF1bHRNb2RlICYmICggbm9ybWFsaXplZE1vZGUgPT09ICJzaG93IiB8fAoJ
CQkJCQkoIG5vcm1hbGl6ZWRNb2RlID09PSBkZWZhdWx0TW9kZSAmJiBub3JtYWxpemVkTW9kZSA9
PT0gImhpZGUiICkgKSApIHsKCQkJCQllbC5zaG93KCk7CgkJCQl9CgoJCQkJaWYgKCAhZGVmYXVs
dE1vZGUgfHwgbm9ybWFsaXplZE1vZGUgIT09ICJub25lIiApIHsKCQkJCQkkLmVmZmVjdHMuc2F2
ZVN0eWxlKCBlbCApOwoJCQkJfQoKCQkJCWlmICggJC5pc0Z1bmN0aW9uKCBuZXh0ICkgKSB7CgkJ
CQkJbmV4dCgpOwoJCQkJfQoJCQl9OwoKCQlpZiAoICQuZngub2ZmIHx8ICFlZmZlY3RNZXRob2Qg
KSB7CgoJCQkvLyBEZWxlZ2F0ZSB0byB0aGUgb3JpZ2luYWwgbWV0aG9kIChlLmcuLCAuc2hvdygp
KSBpZiBwb3NzaWJsZQoJCQlpZiAoIG1vZGUgKSB7CgkJCQlyZXR1cm4gdGhpc1sgbW9kZSBdKCBh
cmdzLmR1cmF0aW9uLCBjb21wbGV0ZSApOwoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIHRoaXMuZWFj
aCggZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCBjb21wbGV0ZSApIHsKCQkJCQkJY29tcGxldGUuY2Fs
bCggdGhpcyApOwoJCQkJCX0KCQkJCX0gKTsKCQkJfQoJCX0KCgkJZnVuY3Rpb24gcnVuKCBuZXh0
ICkgewoJCQl2YXIgZWxlbSA9ICQoIHRoaXMgKTsKCgkJCWZ1bmN0aW9uIGNsZWFudXAoKSB7CgkJ
CQllbGVtLnJlbW92ZURhdGEoIGRhdGFTcGFjZUFuaW1hdGVkICk7CgoJCQkJJC5lZmZlY3RzLmNs
ZWFuVXAoIGVsZW0gKTsKCgkJCQlpZiAoIGFyZ3MubW9kZSA9PT0gImhpZGUiICkgewoJCQkJCWVs
ZW0uaGlkZSgpOwoJCQkJfQoKCQkJCWRvbmUoKTsKCQkJfQoKCQkJZnVuY3Rpb24gZG9uZSgpIHsK
CQkJCWlmICggJC5pc0Z1bmN0aW9uKCBjb21wbGV0ZSApICkgewoJCQkJCWNvbXBsZXRlLmNhbGwo
IGVsZW1bIDAgXSApOwoJCQkJfQoKCQkJCWlmICggJC5pc0Z1bmN0aW9uKCBuZXh0ICkgKSB7CgkJ
CQkJbmV4dCgpOwoJCQkJfQoJCQl9CgoJCQkvLyBPdmVycmlkZSBtb2RlIG9wdGlvbiBvbiBhIHBl
ciBlbGVtZW50IGJhc2lzLAoJCQkvLyBhcyB0b2dnbGUgY2FuIGJlIGVpdGhlciBzaG93IG9yIGhp
ZGUgZGVwZW5kaW5nIG9uIGVsZW1lbnQgc3RhdGUKCQkJYXJncy5tb2RlID0gbW9kZXMuc2hpZnQo
KTsKCgkJCWlmICggJC51aUJhY2tDb21wYXQgIT09IGZhbHNlICYmICFkZWZhdWx0TW9kZSApIHsK
CQkJCWlmICggZWxlbS5pcyggIjpoaWRkZW4iICkgPyBtb2RlID09PSAiaGlkZSIgOiBtb2RlID09
PSAic2hvdyIgKSB7CgoJCQkJCS8vIENhbGwgdGhlIGNvcmUgbWV0aG9kIHRvIHRyYWNrICJvbGRk
aXNwbGF5IiBwcm9wZXJseQoJCQkJCWVsZW1bIG1vZGUgXSgpOwoJCQkJCWRvbmUoKTsKCQkJCX0g
ZWxzZSB7CgkJCQkJZWZmZWN0TWV0aG9kLmNhbGwoIGVsZW1bIDAgXSwgYXJncywgZG9uZSApOwoJ
CQkJfQoJCQl9IGVsc2UgewoJCQkJaWYgKCBhcmdzLm1vZGUgPT09ICJub25lIiApIHsKCgkJCQkJ
Ly8gQ2FsbCB0aGUgY29yZSBtZXRob2QgdG8gdHJhY2sgIm9sZGRpc3BsYXkiIHByb3Blcmx5CgkJ
CQkJZWxlbVsgbW9kZSBdKCk7CgkJCQkJZG9uZSgpOwoJCQkJfSBlbHNlIHsKCQkJCQllZmZlY3RN
ZXRob2QuY2FsbCggZWxlbVsgMCBdLCBhcmdzLCBjbGVhbnVwICk7CgkJCQl9CgkJCX0KCQl9CgoJ
CS8vIFJ1biBwcmVmaWx0ZXIgb24gYWxsIGVsZW1lbnRzIGZpcnN0IHRvIGVuc3VyZSB0aGF0CgkJ
Ly8gYW55IHNob3dpbmcgb3IgaGlkaW5nIGhhcHBlbnMgYmVmb3JlIHBsYWNlaG9sZGVyIGNyZWF0
aW9uLAoJCS8vIHdoaWNoIGVuc3VyZXMgdGhhdCBhbnkgbGF5b3V0IGNoYW5nZXMgYXJlIGNvcnJl
Y3RseSBjYXB0dXJlZC4KCQlyZXR1cm4gcXVldWUgPT09IGZhbHNlID8KCQkJdGhpcy5lYWNoKCBw
cmVmaWx0ZXIgKS5lYWNoKCBydW4gKSA6CgkJCXRoaXMucXVldWUoIHF1ZXVlTmFtZSwgcHJlZmls
dGVyICkucXVldWUoIHF1ZXVlTmFtZSwgcnVuICk7Cgl9LAoKCXNob3c6ICggZnVuY3Rpb24oIG9y
aWcgKSB7CgkJcmV0dXJuIGZ1bmN0aW9uKCBvcHRpb24gKSB7CgkJCWlmICggc3RhbmRhcmRBbmlt
YXRpb25PcHRpb24oIG9wdGlvbiApICkgewoJCQkJcmV0dXJuIG9yaWcuYXBwbHkoIHRoaXMsIGFy
Z3VtZW50cyApOwoJCQl9IGVsc2UgewoJCQkJdmFyIGFyZ3MgPSBfbm9ybWFsaXplQXJndW1lbnRz
LmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCWFyZ3MubW9kZSA9ICJzaG93IjsKCQkJCXJl
dHVybiB0aGlzLmVmZmVjdC5jYWxsKCB0aGlzLCBhcmdzICk7CgkJCX0KCQl9OwoJfSApKCAkLmZu
LnNob3cgKSwKCgloaWRlOiAoIGZ1bmN0aW9uKCBvcmlnICkgewoJCXJldHVybiBmdW5jdGlvbigg
b3B0aW9uICkgewoJCQlpZiAoIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSApIHsK
CQkJCXJldHVybiBvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJfSBlbHNlIHsKCQkJ
CXZhciBhcmdzID0gX25vcm1hbGl6ZUFyZ3VtZW50cy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7
CgkJCQlhcmdzLm1vZGUgPSAiaGlkZSI7CgkJCQlyZXR1cm4gdGhpcy5lZmZlY3QuY2FsbCggdGhp
cywgYXJncyApOwoJCQl9CgkJfTsKCX0gKSggJC5mbi5oaWRlICksCgoJdG9nZ2xlOiAoIGZ1bmN0
aW9uKCBvcmlnICkgewoJCXJldHVybiBmdW5jdGlvbiggb3B0aW9uICkgewoJCQlpZiAoIHN0YW5k
YXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSB8fCB0eXBlb2Ygb3B0aW9uID09PSAiYm9vbGVh
biIgKSB7CgkJCQlyZXR1cm4gb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCX0gZWxz
ZSB7CgkJCQl2YXIgYXJncyA9IF9ub3JtYWxpemVBcmd1bWVudHMuYXBwbHkoIHRoaXMsIGFyZ3Vt
ZW50cyApOwoJCQkJYXJncy5tb2RlID0gInRvZ2dsZSI7CgkJCQlyZXR1cm4gdGhpcy5lZmZlY3Qu
Y2FsbCggdGhpcywgYXJncyApOwoJCQl9CgkJfTsKCX0gKSggJC5mbi50b2dnbGUgKSwKCgljc3NV
bml0OiBmdW5jdGlvbigga2V5ICkgewoJCXZhciBzdHlsZSA9IHRoaXMuY3NzKCBrZXkgKSwKCQkJ
dmFsID0gW107CgoJCSQuZWFjaCggWyAiZW0iLCAicHgiLCAiJSIsICJwdCIgXSwgZnVuY3Rpb24o
IGksIHVuaXQgKSB7CgkJCWlmICggc3R5bGUuaW5kZXhPZiggdW5pdCApID4gMCApIHsKCQkJCXZh
bCA9IFsgcGFyc2VGbG9hdCggc3R5bGUgKSwgdW5pdCBdOwoJCQl9CgkJfSApOwoJCXJldHVybiB2
YWw7Cgl9LAoKCWNzc0NsaXA6IGZ1bmN0aW9uKCBjbGlwT2JqICkgewoJCWlmICggY2xpcE9iaiAp
IHsKCQkJcmV0dXJuIHRoaXMuY3NzKCAiY2xpcCIsICJyZWN0KCIgKyBjbGlwT2JqLnRvcCArICJw
eCAiICsgY2xpcE9iai5yaWdodCArICJweCAiICsKCQkJCWNsaXBPYmouYm90dG9tICsgInB4ICIg
KyBjbGlwT2JqLmxlZnQgKyAicHgpIiApOwoJCX0KCQlyZXR1cm4gcGFyc2VDbGlwKCB0aGlzLmNz
cyggImNsaXAiICksIHRoaXMgKTsKCX0sCgoJdHJhbnNmZXI6IGZ1bmN0aW9uKCBvcHRpb25zLCBk
b25lICkgewoJCXZhciBlbGVtZW50ID0gJCggdGhpcyApLAoJCQl0YXJnZXQgPSAkKCBvcHRpb25z
LnRvICksCgkJCXRhcmdldEZpeGVkID0gdGFyZ2V0LmNzcyggInBvc2l0aW9uIiApID09PSAiZml4
ZWQiLAoJCQlib2R5ID0gJCggImJvZHkiICksCgkJCWZpeFRvcCA9IHRhcmdldEZpeGVkID8gYm9k
eS5zY3JvbGxUb3AoKSA6IDAsCgkJCWZpeExlZnQgPSB0YXJnZXRGaXhlZCA/IGJvZHkuc2Nyb2xs
TGVmdCgpIDogMCwKCQkJZW5kUG9zaXRpb24gPSB0YXJnZXQub2Zmc2V0KCksCgkJCWFuaW1hdGlv
biA9IHsKCQkJCXRvcDogZW5kUG9zaXRpb24udG9wIC0gZml4VG9wLAoJCQkJbGVmdDogZW5kUG9z
aXRpb24ubGVmdCAtIGZpeExlZnQsCgkJCQloZWlnaHQ6IHRhcmdldC5pbm5lckhlaWdodCgpLAoJ
CQkJd2lkdGg6IHRhcmdldC5pbm5lcldpZHRoKCkKCQkJfSwKCQkJc3RhcnRQb3NpdGlvbiA9IGVs
ZW1lbnQub2Zmc2V0KCksCgkJCXRyYW5zZmVyID0gJCggIjxkaXYgY2xhc3M9J3VpLWVmZmVjdHMt
dHJhbnNmZXInPjwvZGl2PiIgKQoJCQkJLmFwcGVuZFRvKCAiYm9keSIgKQoJCQkJLmFkZENsYXNz
KCBvcHRpb25zLmNsYXNzTmFtZSApCgkJCQkuY3NzKCB7CgkJCQkJdG9wOiBzdGFydFBvc2l0aW9u
LnRvcCAtIGZpeFRvcCwKCQkJCQlsZWZ0OiBzdGFydFBvc2l0aW9uLmxlZnQgLSBmaXhMZWZ0LAoJ
CQkJCWhlaWdodDogZWxlbWVudC5pbm5lckhlaWdodCgpLAoJCQkJCXdpZHRoOiBlbGVtZW50Lmlu
bmVyV2lkdGgoKSwKCQkJCQlwb3NpdGlvbjogdGFyZ2V0Rml4ZWQgPyAiZml4ZWQiIDogImFic29s
dXRlIgoJCQkJfSApCgkJCQkuYW5pbWF0ZSggYW5pbWF0aW9uLCBvcHRpb25zLmR1cmF0aW9uLCBv
cHRpb25zLmVhc2luZywgZnVuY3Rpb24oKSB7CgkJCQkJdHJhbnNmZXIucmVtb3ZlKCk7CgkJCQkJ
aWYgKCAkLmlzRnVuY3Rpb24oIGRvbmUgKSApIHsKCQkJCQkJZG9uZSgpOwoJCQkJCX0KCQkJCX0g
KTsKCX0KfSApOwoKZnVuY3Rpb24gcGFyc2VDbGlwKCBzdHIsIGVsZW1lbnQgKSB7CgkJdmFyIG91
dGVyV2lkdGggPSBlbGVtZW50Lm91dGVyV2lkdGgoKSwKCQkJb3V0ZXJIZWlnaHQgPSBlbGVtZW50
Lm91dGVySGVpZ2h0KCksCgkJCWNsaXBSZWdleCA9IC9ecmVjdFwoKC0/XGQqXC4/XGQqcHh8LT9c
ZCslfGF1dG8pLD9ccyooLT9cZCpcLj9cZCpweHwtP1xkKyV8YXV0byksP1xzKigtP1xkKlwuP1xk
KnB4fC0/XGQrJXxhdXRvKSw/XHMqKC0/XGQqXC4/XGQqcHh8LT9cZCslfGF1dG8pXCkkLywKCQkJ
dmFsdWVzID0gY2xpcFJlZ2V4LmV4ZWMoIHN0ciApIHx8IFsgIiIsIDAsIG91dGVyV2lkdGgsIG91
dGVySGVpZ2h0LCAwIF07CgoJCXJldHVybiB7CgkJCXRvcDogcGFyc2VGbG9hdCggdmFsdWVzWyAx
IF0gKSB8fCAwLAoJCQlyaWdodDogdmFsdWVzWyAyIF0gPT09ICJhdXRvIiA/IG91dGVyV2lkdGgg
OiBwYXJzZUZsb2F0KCB2YWx1ZXNbIDIgXSApLAoJCQlib3R0b206IHZhbHVlc1sgMyBdID09PSAi
YXV0byIgPyBvdXRlckhlaWdodCA6IHBhcnNlRmxvYXQoIHZhbHVlc1sgMyBdICksCgkJCWxlZnQ6
IHBhcnNlRmxvYXQoIHZhbHVlc1sgNCBdICkgfHwgMAoJCX07Cn0KCiQuZnguc3RlcC5jbGlwID0g
ZnVuY3Rpb24oIGZ4ICkgewoJaWYgKCAhZnguY2xpcEluaXQgKSB7CgkJZnguc3RhcnQgPSAkKCBm
eC5lbGVtICkuY3NzQ2xpcCgpOwoJCWlmICggdHlwZW9mIGZ4LmVuZCA9PT0gInN0cmluZyIgKSB7
CgkJCWZ4LmVuZCA9IHBhcnNlQ2xpcCggZnguZW5kLCBmeC5lbGVtICk7CgkJfQoJCWZ4LmNsaXBJ
bml0ID0gdHJ1ZTsKCX0KCgkkKCBmeC5lbGVtICkuY3NzQ2xpcCggewoJCXRvcDogZngucG9zICog
KCBmeC5lbmQudG9wIC0gZnguc3RhcnQudG9wICkgKyBmeC5zdGFydC50b3AsCgkJcmlnaHQ6IGZ4
LnBvcyAqICggZnguZW5kLnJpZ2h0IC0gZnguc3RhcnQucmlnaHQgKSArIGZ4LnN0YXJ0LnJpZ2h0
LAoJCWJvdHRvbTogZngucG9zICogKCBmeC5lbmQuYm90dG9tIC0gZnguc3RhcnQuYm90dG9tICkg
KyBmeC5zdGFydC5ib3R0b20sCgkJbGVmdDogZngucG9zICogKCBmeC5lbmQubGVmdCAtIGZ4LnN0
YXJ0LmxlZnQgKSArIGZ4LnN0YXJ0LmxlZnQKCX0gKTsKfTsKCn0gKSgpOwoKLyoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKi8KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEVBU0lORyAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Ki8KCiggZnVuY3Rpb24oKSB7CgovLyBCYXNlZCBvbiBlYXNpbmcgZXF1YXRpb25zIGZyb20gUm9i
ZXJ0IFBlbm5lciAoaHR0cDovL3d3dy5yb2JlcnRwZW5uZXIuY29tL2Vhc2luZykKCnZhciBiYXNl
RWFzaW5ncyA9IHt9OwoKJC5lYWNoKCBbICJRdWFkIiwgIkN1YmljIiwgIlF1YXJ0IiwgIlF1aW50
IiwgIkV4cG8iIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkgewoJYmFzZUVhc2luZ3NbIG5hbWUgXSA9
IGZ1bmN0aW9uKCBwICkgewoJCXJldHVybiBNYXRoLnBvdyggcCwgaSArIDIgKTsKCX07Cn0gKTsK
CiQuZXh0ZW5kKCBiYXNlRWFzaW5ncywgewoJU2luZTogZnVuY3Rpb24oIHAgKSB7CgkJcmV0dXJu
IDEgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgLyAyICk7Cgl9LAoJQ2lyYzogZnVuY3Rpb24oIHAg
KSB7CgkJcmV0dXJuIDEgLSBNYXRoLnNxcnQoIDEgLSBwICogcCApOwoJfSwKCUVsYXN0aWM6IGZ1
bmN0aW9uKCBwICkgewoJCXJldHVybiBwID09PSAwIHx8IHAgPT09IDEgPyBwIDoKCQkJLU1hdGgu
cG93KCAyLCA4ICogKCBwIC0gMSApICkgKiBNYXRoLnNpbiggKCAoIHAgLSAxICkgKiA4MCAtIDcu
NSApICogTWF0aC5QSSAvIDE1ICk7Cgl9LAoJQmFjazogZnVuY3Rpb24oIHAgKSB7CgkJcmV0dXJu
IHAgKiBwICogKCAzICogcCAtIDIgKTsKCX0sCglCb3VuY2U6IGZ1bmN0aW9uKCBwICkgewoJCXZh
ciBwb3cyLAoJCQlib3VuY2UgPSA0OwoKCQl3aGlsZSAoIHAgPCAoICggcG93MiA9IE1hdGgucG93
KCAyLCAtLWJvdW5jZSApICkgLSAxICkgLyAxMSApIHt9CgkJcmV0dXJuIDEgLyBNYXRoLnBvdygg
NCwgMyAtIGJvdW5jZSApIC0gNy41NjI1ICogTWF0aC5wb3coICggcG93MiAqIDMgLSAyICkgLyAy
MiAtIHAsIDIgKTsKCX0KfSApOwoKJC5lYWNoKCBiYXNlRWFzaW5ncywgZnVuY3Rpb24oIG5hbWUs
IGVhc2VJbiApIHsKCSQuZWFzaW5nWyAiZWFzZUluIiArIG5hbWUgXSA9IGVhc2VJbjsKCSQuZWFz
aW5nWyAiZWFzZU91dCIgKyBuYW1lIF0gPSBmdW5jdGlvbiggcCApIHsKCQlyZXR1cm4gMSAtIGVh
c2VJbiggMSAtIHAgKTsKCX07CgkkLmVhc2luZ1sgImVhc2VJbk91dCIgKyBuYW1lIF0gPSBmdW5j
dGlvbiggcCApIHsKCQlyZXR1cm4gcCA8IDAuNSA/CgkJCWVhc2VJbiggcCAqIDIgKSAvIDIgOgoJ
CQkxIC0gZWFzZUluKCBwICogLTIgKyAyICkgLyAyOwoJfTsKfSApOwoKfSApKCk7Cgp2YXIgZWZm
ZWN0ID0gJC5lZmZlY3RzOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBCbGluZCAxLjEyLjEK
ICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24g
YW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2Uu
CiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IEJsaW5kIEVmZmVj
dAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBCbGluZHMgdGhlIGVsZW1lbnQu
Ci8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9ibGluZC1lZmZlY3QvCi8vPj5kZW1v
czogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0QmxpbmQg
PSAkLmVmZmVjdHMuZGVmaW5lKCAiYmxpbmQiLCAiaGlkZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBk
b25lICkgewoJdmFyIG1hcCA9IHsKCQkJdXA6IFsgImJvdHRvbSIsICJ0b3AiIF0sCgkJCXZlcnRp
Y2FsOiBbICJib3R0b20iLCAidG9wIiBdLAoJCQlkb3duOiBbICJ0b3AiLCAiYm90dG9tIiBdLAoJ
CQlsZWZ0OiBbICJyaWdodCIsICJsZWZ0IiBdLAoJCQlob3Jpem9udGFsOiBbICJyaWdodCIsICJs
ZWZ0IiBdLAoJCQlyaWdodDogWyAibGVmdCIsICJyaWdodCIgXQoJCX0sCgkJZWxlbWVudCA9ICQo
IHRoaXMgKSwKCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAidXAiLAoJCXN0YXJ0
ID0gZWxlbWVudC5jc3NDbGlwKCksCgkJYW5pbWF0ZSA9IHsgY2xpcDogJC5leHRlbmQoIHt9LCBz
dGFydCApIH0sCgkJcGxhY2Vob2xkZXIgPSAkLmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIoIGVs
ZW1lbnQgKTsKCglhbmltYXRlLmNsaXBbIG1hcFsgZGlyZWN0aW9uIF1bIDAgXSBdID0gYW5pbWF0
ZS5jbGlwWyBtYXBbIGRpcmVjdGlvbiBdWyAxIF0gXTsKCglpZiAoIG9wdGlvbnMubW9kZSA9PT0g
InNob3ciICkgewoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0ZS5jbGlwICk7CgkJaWYgKCBwbGFj
ZWhvbGRlciApIHsKCQkJcGxhY2Vob2xkZXIuY3NzKCAkLmVmZmVjdHMuY2xpcFRvQm94KCBhbmlt
YXRlICkgKTsKCQl9CgoJCWFuaW1hdGUuY2xpcCA9IHN0YXJ0OwoJfQoKCWlmICggcGxhY2Vob2xk
ZXIgKSB7CgkJcGxhY2Vob2xkZXIuYW5pbWF0ZSggJC5lZmZlY3RzLmNsaXBUb0JveCggYW5pbWF0
ZSApLCBvcHRpb25zLmR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApOwoJfQoKCWVsZW1lbnQuYW5p
bWF0ZSggYW5pbWF0ZSwgewoJCXF1ZXVlOiBmYWxzZSwKCQlkdXJhdGlvbjogb3B0aW9ucy5kdXJh
dGlvbiwKCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLAoJCWNvbXBsZXRlOiBkb25lCgl9ICk7Cn0g
KTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgQm91bmNlIDEuMTIuMQogKiBodHRwOi8vanF1
ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29u
dHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2px
dWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogQm91bmNlIEVmZmVjdAovLz4+Z3JvdXA6
IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBCb3VuY2VzIGFuIGVsZW1lbnQgaG9yaXpvbnRhbGx5
IG9yIHZlcnRpY2FsbHkgbiB0aW1lcy4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29t
L2JvdW5jZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoK
CnZhciBlZmZlY3RzRWZmZWN0Qm91bmNlID0gJC5lZmZlY3RzLmRlZmluZSggImJvdW5jZSIsIGZ1
bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoJdmFyIHVwQW5pbSwgZG93bkFuaW0sIHJlZlZhbHVl
LAoJCWVsZW1lbnQgPSAkKCB0aGlzICksCgoJCS8vIERlZmF1bHRzOgoJCW1vZGUgPSBvcHRpb25z
Lm1vZGUsCgkJaGlkZSA9IG1vZGUgPT09ICJoaWRlIiwKCQlzaG93ID0gbW9kZSA9PT0gInNob3ci
LAoJCWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJ1cCIsCgkJZGlzdGFuY2UgPSBv
cHRpb25zLmRpc3RhbmNlLAoJCXRpbWVzID0gb3B0aW9ucy50aW1lcyB8fCA1LAoKCQkvLyBOdW1i
ZXIgb2YgaW50ZXJuYWwgYW5pbWF0aW9ucwoJCWFuaW1zID0gdGltZXMgKiAyICsgKCBzaG93IHx8
IGhpZGUgPyAxIDogMCApLAoJCXNwZWVkID0gb3B0aW9ucy5kdXJhdGlvbiAvIGFuaW1zLAoJCWVh
c2luZyA9IG9wdGlvbnMuZWFzaW5nLAoKCQkvLyBVdGlsaXR5OgoJCXJlZiA9ICggZGlyZWN0aW9u
ID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImRvd24iICkgPyAidG9wIiA6ICJsZWZ0IiwKCQlt
b3Rpb24gPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJsZWZ0IiApLAoJ
CWkgPSAwLAoKCQlxdWV1ZWxlbiA9IGVsZW1lbnQucXVldWUoKS5sZW5ndGg7CgoJJC5lZmZlY3Rz
LmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7CgoJcmVmVmFsdWUgPSBlbGVtZW50LmNzcygg
cmVmICk7CgoJLy8gRGVmYXVsdCBkaXN0YW5jZSBmb3IgdGhlIEJJR0dFU1QgYm91bmNlIGlzIHRo
ZSBvdXRlciBEaXN0YW5jZSAvIDMKCWlmICggIWRpc3RhbmNlICkgewoJCWRpc3RhbmNlID0gZWxl
bWVudFsgcmVmID09PSAidG9wIiA/ICJvdXRlckhlaWdodCIgOiAib3V0ZXJXaWR0aCIgXSgpIC8g
MzsKCX0KCglpZiAoIHNob3cgKSB7CgkJZG93bkFuaW0gPSB7IG9wYWNpdHk6IDEgfTsKCQlkb3du
QW5pbVsgcmVmIF0gPSByZWZWYWx1ZTsKCgkJLy8gSWYgd2UgYXJlIHNob3dpbmcsIGZvcmNlIG9w
YWNpdHkgMCBhbmQgc2V0IHRoZSBpbml0aWFsIHBvc2l0aW9uCgkJLy8gdGhlbiBkbyB0aGUgImZp
cnN0IiBhbmltYXRpb24KCQllbGVtZW50CgkJCS5jc3MoICJvcGFjaXR5IiwgMCApCgkJCS5jc3Mo
IHJlZiwgbW90aW9uID8gLWRpc3RhbmNlICogMiA6IGRpc3RhbmNlICogMiApCgkJCS5hbmltYXRl
KCBkb3duQW5pbSwgc3BlZWQsIGVhc2luZyApOwoJfQoKCS8vIFN0YXJ0IGF0IHRoZSBzbWFsbGVz
dCBkaXN0YW5jZSBpZiB3ZSBhcmUgaGlkaW5nCglpZiAoIGhpZGUgKSB7CgkJZGlzdGFuY2UgPSBk
aXN0YW5jZSAvIE1hdGgucG93KCAyLCB0aW1lcyAtIDEgKTsKCX0KCglkb3duQW5pbSA9IHt9OwoJ
ZG93bkFuaW1bIHJlZiBdID0gcmVmVmFsdWU7CgoJLy8gQm91bmNlcyB1cC9kb3duL2xlZnQvcmln
aHQgdGhlbiBiYWNrIHRvIDAgLS0gdGltZXMgKiAyIGFuaW1hdGlvbnMgaGFwcGVuIGhlcmUKCWZv
ciAoIDsgaSA8IHRpbWVzOyBpKysgKSB7CgkJdXBBbmltID0ge307CgkJdXBBbmltWyByZWYgXSA9
ICggbW90aW9uID8gIi09IiA6ICIrPSIgKSArIGRpc3RhbmNlOwoKCQllbGVtZW50CgkJCS5hbmlt
YXRlKCB1cEFuaW0sIHNwZWVkLCBlYXNpbmcgKQoJCQkuYW5pbWF0ZSggZG93bkFuaW0sIHNwZWVk
LCBlYXNpbmcgKTsKCgkJZGlzdGFuY2UgPSBoaWRlID8gZGlzdGFuY2UgKiAyIDogZGlzdGFuY2Ug
LyAyOwoJfQoKCS8vIExhc3QgQm91bmNlIHdoZW4gSGlkaW5nCglpZiAoIGhpZGUgKSB7CgkJdXBB
bmltID0geyBvcGFjaXR5OiAwIH07CgkJdXBBbmltWyByZWYgXSA9ICggbW90aW9uID8gIi09IiA6
ICIrPSIgKSArIGRpc3RhbmNlOwoKCQllbGVtZW50LmFuaW1hdGUoIHVwQW5pbSwgc3BlZWQsIGVh
c2luZyApOwoJfQoKCWVsZW1lbnQucXVldWUoIGRvbmUgKTsKCgkkLmVmZmVjdHMudW5zaGlmdCgg
ZWxlbWVudCwgcXVldWVsZW4sIGFuaW1zICsgMSApOwp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBF
ZmZlY3RzIENsaXAgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0
IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5k
ZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+
PmxhYmVsOiBDbGlwIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBD
bGlwcyB0aGUgZWxlbWVudCBvbiBhbmQgb2ZmIGxpa2UgYW4gb2xkIFRWLgovLz4+ZG9jczogaHR0
cDovL2FwaS5qcXVlcnl1aS5jb20vY2xpcC1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVy
eXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0Q2xpcCA9ICQuZWZmZWN0cy5kZWZp
bmUoICJjbGlwIiwgImhpZGUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCXZhciBzdGFy
dCwKCQlhbmltYXRlID0ge30sCgkJZWxlbWVudCA9ICQoIHRoaXMgKSwKCQlkaXJlY3Rpb24gPSBv
cHRpb25zLmRpcmVjdGlvbiB8fCAidmVydGljYWwiLAoJCWJvdGggPSBkaXJlY3Rpb24gPT09ICJi
b3RoIiwKCQlob3Jpem9udGFsID0gYm90aCB8fCBkaXJlY3Rpb24gPT09ICJob3Jpem9udGFsIiwK
CQl2ZXJ0aWNhbCA9IGJvdGggfHwgZGlyZWN0aW9uID09PSAidmVydGljYWwiOwoKCXN0YXJ0ID0g
ZWxlbWVudC5jc3NDbGlwKCk7CglhbmltYXRlLmNsaXAgPSB7CgkJdG9wOiB2ZXJ0aWNhbCA/ICgg
c3RhcnQuYm90dG9tIC0gc3RhcnQudG9wICkgLyAyIDogc3RhcnQudG9wLAoJCXJpZ2h0OiBob3Jp
em9udGFsID8gKCBzdGFydC5yaWdodCAtIHN0YXJ0LmxlZnQgKSAvIDIgOiBzdGFydC5yaWdodCwK
CQlib3R0b206IHZlcnRpY2FsID8gKCBzdGFydC5ib3R0b20gLSBzdGFydC50b3AgKSAvIDIgOiBz
dGFydC5ib3R0b20sCgkJbGVmdDogaG9yaXpvbnRhbCA/ICggc3RhcnQucmlnaHQgLSBzdGFydC5s
ZWZ0ICkgLyAyIDogc3RhcnQubGVmdAoJfTsKCgkkLmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIo
IGVsZW1lbnQgKTsKCglpZiAoIG9wdGlvbnMubW9kZSA9PT0gInNob3ciICkgewoJCWVsZW1lbnQu
Y3NzQ2xpcCggYW5pbWF0ZS5jbGlwICk7CgkJYW5pbWF0ZS5jbGlwID0gc3RhcnQ7Cgl9CgoJZWxl
bWVudC5hbmltYXRlKCBhbmltYXRlLCB7CgkJcXVldWU6IGZhbHNlLAoJCWR1cmF0aW9uOiBvcHRp
b25zLmR1cmF0aW9uLAoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsCgkJY29tcGxldGU6IGRvbmUK
CX0gKTsKCn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgRHJvcCAxLjEyLjEKICogaHR0
cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90
aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0
dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IERyb3AgRWZmZWN0Ci8vPj5n
cm91cDogRWZmZWN0cwovLz4+ZGVzY3JpcHRpb246IE1vdmVzIGFuIGVsZW1lbnQgaW4gb25lIGRp
cmVjdGlvbiBhbmQgaGlkZXMgaXQgYXQgdGhlIHNhbWUgdGltZS4KLy8+PmRvY3M6IGh0dHA6Ly9h
cGkuanF1ZXJ5dWkuY29tL2Ryb3AtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5j
b20vZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdERyb3AgPSAkLmVmZmVjdHMuZGVmaW5lKCAi
ZHJvcCIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7CgoJdmFyIGRpc3RhbmNl
LAoJCWVsZW1lbnQgPSAkKCB0aGlzICksCgkJbW9kZSA9IG9wdGlvbnMubW9kZSwKCQlzaG93ID0g
bW9kZSA9PT0gInNob3ciLAoJCWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJsZWZ0
IiwKCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiAp
ID8gInRvcCIgOiAibGVmdCIsCgkJbW90aW9uID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGly
ZWN0aW9uID09PSAibGVmdCIgKSA/ICItPSIgOiAiKz0iLAoJCW9wcG9zaXRlTW90aW9uID0gKCBt
b3Rpb24gPT09ICIrPSIgKSA/ICItPSIgOiAiKz0iLAoJCWFuaW1hdGlvbiA9IHsKCQkJb3BhY2l0
eTogMAoJCX07CgoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7CgoJZGlz
dGFuY2UgPSBvcHRpb25zLmRpc3RhbmNlIHx8CgkJZWxlbWVudFsgcmVmID09PSAidG9wIiA/ICJv
dXRlckhlaWdodCIgOiAib3V0ZXJXaWR0aCIgXSggdHJ1ZSApIC8gMjsKCglhbmltYXRpb25bIHJl
ZiBdID0gbW90aW9uICsgZGlzdGFuY2U7CgoJaWYgKCBzaG93ICkgewoJCWVsZW1lbnQuY3NzKCBh
bmltYXRpb24gKTsKCgkJYW5pbWF0aW9uWyByZWYgXSA9IG9wcG9zaXRlTW90aW9uICsgZGlzdGFu
Y2U7CgkJYW5pbWF0aW9uLm9wYWNpdHkgPSAxOwoJfQoKCS8vIEFuaW1hdGUKCWVsZW1lbnQuYW5p
bWF0ZSggYW5pbWF0aW9uLCB7CgkJcXVldWU6IGZhbHNlLAoJCWR1cmF0aW9uOiBvcHRpb25zLmR1
cmF0aW9uLAoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsCgkJY29tcGxldGU6IGRvbmUKCX0gKTsK
fSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBFeHBsb2RlIDEuMTIuMQogKiBodHRwOi8v
anF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIg
Y29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDov
L2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogRXhwbG9kZSBFZmZlY3QKLy8+Pmdy
b3VwOiBFZmZlY3RzCi8vIGpzY3M6ZGlzYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovLz4+ZGVzY3Jp
cHRpb246IEV4cGxvZGVzIGFuIGVsZW1lbnQgaW4gYWxsIGRpcmVjdGlvbnMgaW50byBuIHBpZWNl
cy4gSW1wbG9kZXMgYW4gZWxlbWVudCB0byBpdHMgb3JpZ2luYWwgd2hvbGVuZXNzLgovLyBqc2Nz
OmVuYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5j
b20vZXhwbG9kZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3Qv
CgoKCnZhciBlZmZlY3RzRWZmZWN0RXhwbG9kZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJleHBsb2Rl
IiwgImhpZGUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCgl2YXIgaSwgaiwgbGVmdCwg
dG9wLCBteCwgbXksCgkJcm93cyA9IG9wdGlvbnMucGllY2VzID8gTWF0aC5yb3VuZCggTWF0aC5z
cXJ0KCBvcHRpb25zLnBpZWNlcyApICkgOiAzLAoJCWNlbGxzID0gcm93cywKCQllbGVtZW50ID0g
JCggdGhpcyApLAoJCW1vZGUgPSBvcHRpb25zLm1vZGUsCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93
IiwKCgkJLy8gU2hvdyBhbmQgdGhlbiB2aXNpYmlsaXR5OmhpZGRlbiB0aGUgZWxlbWVudCBiZWZv
cmUgY2FsY3VsYXRpbmcgb2Zmc2V0CgkJb2Zmc2V0ID0gZWxlbWVudC5zaG93KCkuY3NzKCAidmlz
aWJpbGl0eSIsICJoaWRkZW4iICkub2Zmc2V0KCksCgoJCS8vIFdpZHRoIGFuZCBoZWlnaHQgb2Yg
YSBwaWVjZQoJCXdpZHRoID0gTWF0aC5jZWlsKCBlbGVtZW50Lm91dGVyV2lkdGgoKSAvIGNlbGxz
ICksCgkJaGVpZ2h0ID0gTWF0aC5jZWlsKCBlbGVtZW50Lm91dGVySGVpZ2h0KCkgLyByb3dzICks
CgkJcGllY2VzID0gW107CgoJLy8gQ2hpbGRyZW4gYW5pbWF0ZSBjb21wbGV0ZToKCWZ1bmN0aW9u
IGNoaWxkQ29tcGxldGUoKSB7CgkJcGllY2VzLnB1c2goIHRoaXMgKTsKCQlpZiAoIHBpZWNlcy5s
ZW5ndGggPT09IHJvd3MgKiBjZWxscyApIHsKCQkJYW5pbUNvbXBsZXRlKCk7CgkJfQoJfQoKCS8v
IENsb25lIHRoZSBlbGVtZW50IGZvciBlYWNoIHJvdyBhbmQgY2VsbC4KCWZvciAoIGkgPSAwOyBp
IDwgcm93czsgaSsrICkgeyAvLyA9PT0+CgkJdG9wID0gb2Zmc2V0LnRvcCArIGkgKiBoZWlnaHQ7
CgkJbXkgPSBpIC0gKCByb3dzIC0gMSApIC8gMjsKCgkJZm9yICggaiA9IDA7IGogPCBjZWxsczsg
aisrICkgeyAvLyB8fHwKCQkJbGVmdCA9IG9mZnNldC5sZWZ0ICsgaiAqIHdpZHRoOwoJCQlteCA9
IGogLSAoIGNlbGxzIC0gMSApIC8gMjsKCgkJCS8vIENyZWF0ZSBhIGNsb25lIG9mIHRoZSBub3cg
aGlkZGVuIG1haW4gZWxlbWVudCB0aGF0IHdpbGwgYmUgYWJzb2x1dGUgcG9zaXRpb25lZAoJCQkv
LyB3aXRoaW4gYSB3cmFwcGVyIGRpdiBvZmYgdGhlIC1sZWZ0IGFuZCAtdG9wIGVxdWFsIHRvIHNp
emUgb2Ygb3VyIHBpZWNlcwoJCQllbGVtZW50CgkJCQkuY2xvbmUoKQoJCQkJLmFwcGVuZFRvKCAi
Ym9keSIgKQoJCQkJLndyYXAoICI8ZGl2PjwvZGl2PiIgKQoJCQkJLmNzcyggewoJCQkJCXBvc2l0
aW9uOiAiYWJzb2x1dGUiLAoJCQkJCXZpc2liaWxpdHk6ICJ2aXNpYmxlIiwKCQkJCQlsZWZ0OiAt
aiAqIHdpZHRoLAoJCQkJCXRvcDogLWkgKiBoZWlnaHQKCQkJCX0gKQoKCQkJCS8vIFNlbGVjdCB0
aGUgd3JhcHBlciAtIG1ha2UgaXQgb3ZlcmZsb3c6IGhpZGRlbiBhbmQgYWJzb2x1dGUgcG9zaXRp
b25lZCBiYXNlZCBvbgoJCQkJLy8gd2hlcmUgdGhlIG9yaWdpbmFsIHdhcyBsb2NhdGVkICtsZWZ0
IGFuZCArdG9wIGVxdWFsIHRvIHRoZSBzaXplIG9mIHBpZWNlcwoJCQkJLnBhcmVudCgpCgkJCQkJ
LmFkZENsYXNzKCAidWktZWZmZWN0cy1leHBsb2RlIiApCgkJCQkJLmNzcyggewoJCQkJCQlwb3Np
dGlvbjogImFic29sdXRlIiwKCQkJCQkJb3ZlcmZsb3c6ICJoaWRkZW4iLAoJCQkJCQl3aWR0aDog
d2lkdGgsCgkJCQkJCWhlaWdodDogaGVpZ2h0LAoJCQkJCQlsZWZ0OiBsZWZ0ICsgKCBzaG93ID8g
bXggKiB3aWR0aCA6IDAgKSwKCQkJCQkJdG9wOiB0b3AgKyAoIHNob3cgPyBteSAqIGhlaWdodCA6
IDAgKSwKCQkJCQkJb3BhY2l0eTogc2hvdyA/IDAgOiAxCgkJCQkJfSApCgkJCQkJLmFuaW1hdGUo
IHsKCQkJCQkJbGVmdDogbGVmdCArICggc2hvdyA/IDAgOiBteCAqIHdpZHRoICksCgkJCQkJCXRv
cDogdG9wICsgKCBzaG93ID8gMCA6IG15ICogaGVpZ2h0ICksCgkJCQkJCW9wYWNpdHk6IHNob3cg
PyAxIDogMAoJCQkJCX0sIG9wdGlvbnMuZHVyYXRpb24gfHwgNTAwLCBvcHRpb25zLmVhc2luZywg
Y2hpbGRDb21wbGV0ZSApOwoJCX0KCX0KCglmdW5jdGlvbiBhbmltQ29tcGxldGUoKSB7CgkJZWxl
bWVudC5jc3MoIHsKCQkJdmlzaWJpbGl0eTogInZpc2libGUiCgkJfSApOwoJCSQoIHBpZWNlcyAp
LnJlbW92ZSgpOwoJCWRvbmUoKTsKCX0KfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBG
YWRlIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkg
Rm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBN
SVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDog
RmFkZSBFZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogRmFkZXMgdGhl
IGVsZW1lbnQuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9mYWRlLWVmZmVjdC8K
Ly8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZl
Y3RGYWRlID0gJC5lZmZlY3RzLmRlZmluZSggImZhZGUiLCAidG9nZ2xlIiwgZnVuY3Rpb24oIG9w
dGlvbnMsIGRvbmUgKSB7Cgl2YXIgc2hvdyA9IG9wdGlvbnMubW9kZSA9PT0gInNob3ciOwoKCSQo
IHRoaXMgKQoJCS5jc3MoICJvcGFjaXR5Iiwgc2hvdyA/IDAgOiAxICkKCQkuYW5pbWF0ZSggewoJ
CQlvcGFjaXR5OiBzaG93ID8gMSA6IDAKCQl9LCB7CgkJCXF1ZXVlOiBmYWxzZSwKCQkJZHVyYXRp
b246IG9wdGlvbnMuZHVyYXRpb24sCgkJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsCgkJCWNvbXBs
ZXRlOiBkb25lCgkJfSApOwp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBFZmZlY3RzIEZvbGQgMS4x
Mi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0
aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNl
bnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBGb2xkIEVm
ZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBGb2xkcyBhbiBlbGVtZW50
IGZpcnN0IGhvcml6b250YWxseSBhbmQgdGhlbiB2ZXJ0aWNhbGx5LgovLz4+ZG9jczogaHR0cDov
L2FwaS5qcXVlcnl1aS5jb20vZm9sZC1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVp
LmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0Rm9sZCA9ICQuZWZmZWN0cy5kZWZpbmUo
ICJmb2xkIiwgImhpZGUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCgkvLyBDcmVhdGUg
ZWxlbWVudAoJdmFyIGVsZW1lbnQgPSAkKCB0aGlzICksCgkJbW9kZSA9IG9wdGlvbnMubW9kZSwK
CQlzaG93ID0gbW9kZSA9PT0gInNob3ciLAoJCWhpZGUgPSBtb2RlID09PSAiaGlkZSIsCgkJc2l6
ZSA9IG9wdGlvbnMuc2l6ZSB8fCAxNSwKCQlwZXJjZW50ID0gLyhbMC05XSspJS8uZXhlYyggc2l6
ZSApLAoJCWhvcml6Rmlyc3QgPSAhIW9wdGlvbnMuaG9yaXpGaXJzdCwKCQlyZWYgPSBob3JpekZp
cnN0ID8gWyAicmlnaHQiLCAiYm90dG9tIiBdIDogWyAiYm90dG9tIiwgInJpZ2h0IiBdLAoJCWR1
cmF0aW9uID0gb3B0aW9ucy5kdXJhdGlvbiAvIDIsCgoJCXBsYWNlaG9sZGVyID0gJC5lZmZlY3Rz
LmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICksCgoJCXN0YXJ0ID0gZWxlbWVudC5jc3NDbGlw
KCksCgkJYW5pbWF0aW9uMSA9IHsgY2xpcDogJC5leHRlbmQoIHt9LCBzdGFydCApIH0sCgkJYW5p
bWF0aW9uMiA9IHsgY2xpcDogJC5leHRlbmQoIHt9LCBzdGFydCApIH0sCgoJCWRpc3RhbmNlID0g
WyBzdGFydFsgcmVmWyAwIF0gXSwgc3RhcnRbIHJlZlsgMSBdIF0gXSwKCgkJcXVldWVsZW4gPSBl
bGVtZW50LnF1ZXVlKCkubGVuZ3RoOwoKCWlmICggcGVyY2VudCApIHsKCQlzaXplID0gcGFyc2VJ
bnQoIHBlcmNlbnRbIDEgXSwgMTAgKSAvIDEwMCAqIGRpc3RhbmNlWyBoaWRlID8gMCA6IDEgXTsK
CX0KCWFuaW1hdGlvbjEuY2xpcFsgcmVmWyAwIF0gXSA9IHNpemU7CglhbmltYXRpb24yLmNsaXBb
IHJlZlsgMCBdIF0gPSBzaXplOwoJYW5pbWF0aW9uMi5jbGlwWyByZWZbIDEgXSBdID0gMDsKCglp
ZiAoIHNob3cgKSB7CgkJZWxlbWVudC5jc3NDbGlwKCBhbmltYXRpb24yLmNsaXAgKTsKCQlpZiAo
IHBsYWNlaG9sZGVyICkgewoJCQlwbGFjZWhvbGRlci5jc3MoICQuZWZmZWN0cy5jbGlwVG9Cb3go
IGFuaW1hdGlvbjIgKSApOwoJCX0KCgkJYW5pbWF0aW9uMi5jbGlwID0gc3RhcnQ7Cgl9CgoJLy8g
QW5pbWF0ZQoJZWxlbWVudAoJCS5xdWV1ZSggZnVuY3Rpb24oIG5leHQgKSB7CgkJCWlmICggcGxh
Y2Vob2xkZXIgKSB7CgkJCQlwbGFjZWhvbGRlcgoJCQkJCS5hbmltYXRlKCAkLmVmZmVjdHMuY2xp
cFRvQm94KCBhbmltYXRpb24xICksIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApCgkJCQkJLmFu
aW1hdGUoICQuZWZmZWN0cy5jbGlwVG9Cb3goIGFuaW1hdGlvbjIgKSwgZHVyYXRpb24sIG9wdGlv
bnMuZWFzaW5nICk7CgkJCX0KCgkJCW5leHQoKTsKCQl9ICkKCQkuYW5pbWF0ZSggYW5pbWF0aW9u
MSwgZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICkKCQkuYW5pbWF0ZSggYW5pbWF0aW9uMiwgZHVy
YXRpb24sIG9wdGlvbnMuZWFzaW5nICkKCQkucXVldWUoIGRvbmUgKTsKCgkkLmVmZmVjdHMudW5z
aGlmdCggZWxlbWVudCwgcXVldWVsZW4sIDQgKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZm
ZWN0cyBIaWdobGlnaHQgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJp
Z2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQg
dW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoK
Ly8+PmxhYmVsOiBIaWdobGlnaHQgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLz4+ZGVzY3Jp
cHRpb246IEhpZ2hsaWdodHMgdGhlIGJhY2tncm91bmQgb2YgYW4gZWxlbWVudCBpbiBhIGRlZmlu
ZWQgY29sb3IgZm9yIGEgY3VzdG9tIGR1cmF0aW9uLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVl
cnl1aS5jb20vaGlnaGxpZ2h0LWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29t
L2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZlY3RIaWdobGlnaHQgPSAkLmVmZmVjdHMuZGVmaW5l
KCAiaGlnaGxpZ2h0IiwgInNob3ciLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCXZhciBl
bGVtZW50ID0gJCggdGhpcyApLAoJCWFuaW1hdGlvbiA9IHsKCQkJYmFja2dyb3VuZENvbG9yOiBl
bGVtZW50LmNzcyggImJhY2tncm91bmRDb2xvciIgKQoJCX07CgoJaWYgKCBvcHRpb25zLm1vZGUg
PT09ICJoaWRlIiApIHsKCQlhbmltYXRpb24ub3BhY2l0eSA9IDA7Cgl9CgoJJC5lZmZlY3RzLnNh
dmVTdHlsZSggZWxlbWVudCApOwoKCWVsZW1lbnQKCQkuY3NzKCB7CgkJCWJhY2tncm91bmRJbWFn
ZTogIm5vbmUiLAoJCQliYWNrZ3JvdW5kQ29sb3I6IG9wdGlvbnMuY29sb3IgfHwgIiNmZmZmOTki
CgkJfSApCgkJLmFuaW1hdGUoIGFuaW1hdGlvbiwgewoJCQlxdWV1ZTogZmFsc2UsCgkJCWR1cmF0
aW9uOiBvcHRpb25zLmR1cmF0aW9uLAoJCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLAoJCQljb21w
bGV0ZTogZG9uZQoJCX0gKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTaXplIDEu
MTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRh
dGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGlj
ZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogU2l6ZSBF
ZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogUmVzaXplIGFuIGVsZW1l
bnQgdG8gYSBzcGVjaWZpZWQgd2lkdGggYW5kIGhlaWdodC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGku
anF1ZXJ5dWkuY29tL3NpemUtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20v
ZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdFNpemUgPSAkLmVmZmVjdHMuZGVmaW5lKCAic2l6
ZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoKCS8vIENyZWF0ZSBlbGVtZW50Cgl2YXIg
YmFzZWxpbmUsIGZhY3RvciwgdGVtcCwKCQllbGVtZW50ID0gJCggdGhpcyApLAoKCQkvLyBDb3B5
IGZvciBjaGlsZHJlbgoJCWNQcm9wcyA9IFsgImZvbnRTaXplIiBdLAoJCXZQcm9wcyA9IFsgImJv
cmRlclRvcFdpZHRoIiwgImJvcmRlckJvdHRvbVdpZHRoIiwgInBhZGRpbmdUb3AiLCAicGFkZGlu
Z0JvdHRvbSIgXSwKCQloUHJvcHMgPSBbICJib3JkZXJMZWZ0V2lkdGgiLCAiYm9yZGVyUmlnaHRX
aWR0aCIsICJwYWRkaW5nTGVmdCIsICJwYWRkaW5nUmlnaHQiIF0sCgoJCS8vIFNldCBvcHRpb25z
CgkJbW9kZSA9IG9wdGlvbnMubW9kZSwKCQlyZXN0b3JlID0gbW9kZSAhPT0gImVmZmVjdCIsCgkJ
c2NhbGUgPSBvcHRpb25zLnNjYWxlIHx8ICJib3RoIiwKCQlvcmlnaW4gPSBvcHRpb25zLm9yaWdp
biB8fCBbICJtaWRkbGUiLCAiY2VudGVyIiBdLAoJCXBvc2l0aW9uID0gZWxlbWVudC5jc3MoICJw
b3NpdGlvbiIgKSwKCQlwb3MgPSBlbGVtZW50LnBvc2l0aW9uKCksCgkJb3JpZ2luYWwgPSAkLmVm
ZmVjdHMuc2NhbGVkRGltZW5zaW9ucyggZWxlbWVudCApLAoJCWZyb20gPSBvcHRpb25zLmZyb20g
fHwgb3JpZ2luYWwsCgkJdG8gPSBvcHRpb25zLnRvIHx8ICQuZWZmZWN0cy5zY2FsZWREaW1lbnNp
b25zKCBlbGVtZW50LCAwICk7CgoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50
ICk7CgoJaWYgKCBtb2RlID09PSAic2hvdyIgKSB7CgkJdGVtcCA9IGZyb207CgkJZnJvbSA9IHRv
OwoJCXRvID0gdGVtcDsKCX0KCgkvLyBTZXQgc2NhbGluZyBmYWN0b3IKCWZhY3RvciA9IHsKCQlm
cm9tOiB7CgkJCXk6IGZyb20uaGVpZ2h0IC8gb3JpZ2luYWwuaGVpZ2h0LAoJCQl4OiBmcm9tLndp
ZHRoIC8gb3JpZ2luYWwud2lkdGgKCQl9LAoJCXRvOiB7CgkJCXk6IHRvLmhlaWdodCAvIG9yaWdp
bmFsLmhlaWdodCwKCQkJeDogdG8ud2lkdGggLyBvcmlnaW5hbC53aWR0aAoJCX0KCX07CgoJLy8g
U2NhbGUgdGhlIGNzcyBib3gKCWlmICggc2NhbGUgPT09ICJib3giIHx8IHNjYWxlID09PSAiYm90
aCIgKSB7CgoJCS8vIFZlcnRpY2FsIHByb3BzIHNjYWxpbmcKCQlpZiAoIGZhY3Rvci5mcm9tLnkg
IT09IGZhY3Rvci50by55ICkgewoJCQlmcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVs
ZW1lbnQsIHZQcm9wcywgZmFjdG9yLmZyb20ueSwgZnJvbSApOwoJCQl0byA9ICQuZWZmZWN0cy5z
ZXRUcmFuc2l0aW9uKCBlbGVtZW50LCB2UHJvcHMsIGZhY3Rvci50by55LCB0byApOwoJCX0KCgkJ
Ly8gSG9yaXpvbnRhbCBwcm9wcyBzY2FsaW5nCgkJaWYgKCBmYWN0b3IuZnJvbS54ICE9PSBmYWN0
b3IudG8ueCApIHsKCQkJZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbGVtZW50LCBo
UHJvcHMsIGZhY3Rvci5mcm9tLngsIGZyb20gKTsKCQkJdG8gPSAkLmVmZmVjdHMuc2V0VHJhbnNp
dGlvbiggZWxlbWVudCwgaFByb3BzLCBmYWN0b3IudG8ueCwgdG8gKTsKCQl9Cgl9CgoJLy8gU2Nh
bGUgdGhlIGNvbnRlbnQKCWlmICggc2NhbGUgPT09ICJjb250ZW50IiB8fCBzY2FsZSA9PT0gImJv
dGgiICkgewoKCQkvLyBWZXJ0aWNhbCBwcm9wcyBzY2FsaW5nCgkJaWYgKCBmYWN0b3IuZnJvbS55
ICE9PSBmYWN0b3IudG8ueSApIHsKCQkJZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBl
bGVtZW50LCBjUHJvcHMsIGZhY3Rvci5mcm9tLnksIGZyb20gKTsKCQkJdG8gPSAkLmVmZmVjdHMu
c2V0VHJhbnNpdGlvbiggZWxlbWVudCwgY1Byb3BzLCBmYWN0b3IudG8ueSwgdG8gKTsKCQl9Cgl9
CgoJLy8gQWRqdXN0IHRoZSBwb3NpdGlvbiBwcm9wZXJ0aWVzIGJhc2VkIG9uIHRoZSBwcm92aWRl
ZCBvcmlnaW4gcG9pbnRzCglpZiAoIG9yaWdpbiApIHsKCQliYXNlbGluZSA9ICQuZWZmZWN0cy5n
ZXRCYXNlbGluZSggb3JpZ2luLCBvcmlnaW5hbCApOwoJCWZyb20udG9wID0gKCBvcmlnaW5hbC5v
dXRlckhlaWdodCAtIGZyb20ub3V0ZXJIZWlnaHQgKSAqIGJhc2VsaW5lLnkgKyBwb3MudG9wOwoJ
CWZyb20ubGVmdCA9ICggb3JpZ2luYWwub3V0ZXJXaWR0aCAtIGZyb20ub3V0ZXJXaWR0aCApICog
YmFzZWxpbmUueCArIHBvcy5sZWZ0OwoJCXRvLnRvcCA9ICggb3JpZ2luYWwub3V0ZXJIZWlnaHQg
LSB0by5vdXRlckhlaWdodCApICogYmFzZWxpbmUueSArIHBvcy50b3A7CgkJdG8ubGVmdCA9ICgg
b3JpZ2luYWwub3V0ZXJXaWR0aCAtIHRvLm91dGVyV2lkdGggKSAqIGJhc2VsaW5lLnggKyBwb3Mu
bGVmdDsKCX0KCWVsZW1lbnQuY3NzKCBmcm9tICk7CgoJLy8gQW5pbWF0ZSB0aGUgY2hpbGRyZW4g
aWYgZGVzaXJlZAoJaWYgKCBzY2FsZSA9PT0gImNvbnRlbnQiIHx8IHNjYWxlID09PSAiYm90aCIg
KSB7CgoJCXZQcm9wcyA9IHZQcm9wcy5jb25jYXQoIFsgIm1hcmdpblRvcCIsICJtYXJnaW5Cb3R0
b20iIF0gKS5jb25jYXQoIGNQcm9wcyApOwoJCWhQcm9wcyA9IGhQcm9wcy5jb25jYXQoIFsgIm1h
cmdpbkxlZnQiLCAibWFyZ2luUmlnaHQiIF0gKTsKCgkJLy8gT25seSBhbmltYXRlIGNoaWxkcmVu
IHdpdGggd2lkdGggYXR0cmlidXRlcyBzcGVjaWZpZWQKCQkvLyBUT0RPOiBpcyB0aGlzIHJpZ2h0
PyBzaG91bGQgd2UgaW5jbHVkZSBhbnl0aGluZyB3aXRoIGNzcyB3aWR0aCBzcGVjaWZpZWQgYXMg
d2VsbAoJCWVsZW1lbnQuZmluZCggIipbd2lkdGhdIiApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2
YXIgY2hpbGQgPSAkKCB0aGlzICksCgkJCQljaGlsZE9yaWdpbmFsID0gJC5lZmZlY3RzLnNjYWxl
ZERpbWVuc2lvbnMoIGNoaWxkICksCgkJCQljaGlsZEZyb20gPSB7CgkJCQkJaGVpZ2h0OiBjaGls
ZE9yaWdpbmFsLmhlaWdodCAqIGZhY3Rvci5mcm9tLnksCgkJCQkJd2lkdGg6IGNoaWxkT3JpZ2lu
YWwud2lkdGggKiBmYWN0b3IuZnJvbS54LAoJCQkJCW91dGVySGVpZ2h0OiBjaGlsZE9yaWdpbmFs
Lm91dGVySGVpZ2h0ICogZmFjdG9yLmZyb20ueSwKCQkJCQlvdXRlcldpZHRoOiBjaGlsZE9yaWdp
bmFsLm91dGVyV2lkdGggKiBmYWN0b3IuZnJvbS54CgkJCQl9LAoJCQkJY2hpbGRUbyA9IHsKCQkJ
CQloZWlnaHQ6IGNoaWxkT3JpZ2luYWwuaGVpZ2h0ICogZmFjdG9yLnRvLnksCgkJCQkJd2lkdGg6
IGNoaWxkT3JpZ2luYWwud2lkdGggKiBmYWN0b3IudG8ueCwKCQkJCQlvdXRlckhlaWdodDogY2hp
bGRPcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IudG8ueSwKCQkJCQlvdXRlcldpZHRoOiBjaGlsZE9y
aWdpbmFsLndpZHRoICogZmFjdG9yLnRvLngKCQkJCX07CgoJCQkvLyBWZXJ0aWNhbCBwcm9wcyBz
Y2FsaW5nCgkJCWlmICggZmFjdG9yLmZyb20ueSAhPT0gZmFjdG9yLnRvLnkgKSB7CgkJCQljaGls
ZEZyb20gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggY2hpbGQsIHZQcm9wcywgZmFjdG9yLmZy
b20ueSwgY2hpbGRGcm9tICk7CgkJCQljaGlsZFRvID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24o
IGNoaWxkLCB2UHJvcHMsIGZhY3Rvci50by55LCBjaGlsZFRvICk7CgkJCX0KCgkJCS8vIEhvcml6
b250YWwgcHJvcHMgc2NhbGluZwoJCQlpZiAoIGZhY3Rvci5mcm9tLnggIT09IGZhY3Rvci50by54
ICkgewoJCQkJY2hpbGRGcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGNoaWxkLCBoUHJv
cHMsIGZhY3Rvci5mcm9tLngsIGNoaWxkRnJvbSApOwoJCQkJY2hpbGRUbyA9ICQuZWZmZWN0cy5z
ZXRUcmFuc2l0aW9uKCBjaGlsZCwgaFByb3BzLCBmYWN0b3IudG8ueCwgY2hpbGRUbyApOwoJCQl9
CgoJCQlpZiAoIHJlc3RvcmUgKSB7CgkJCQkkLmVmZmVjdHMuc2F2ZVN0eWxlKCBjaGlsZCApOwoJ
CQl9CgoJCQkvLyBBbmltYXRlIGNoaWxkcmVuCgkJCWNoaWxkLmNzcyggY2hpbGRGcm9tICk7CgkJ
CWNoaWxkLmFuaW1hdGUoIGNoaWxkVG8sIG9wdGlvbnMuZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5n
LCBmdW5jdGlvbigpIHsKCgkJCQkvLyBSZXN0b3JlIGNoaWxkcmVuCgkJCQlpZiAoIHJlc3RvcmUg
KSB7CgkJCQkJJC5lZmZlY3RzLnJlc3RvcmVTdHlsZSggY2hpbGQgKTsKCQkJCX0KCQkJfSApOwoJ
CX0gKTsKCX0KCgkvLyBBbmltYXRlCgllbGVtZW50LmFuaW1hdGUoIHRvLCB7CgkJcXVldWU6IGZh
bHNlLAoJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLAoJCWVhc2luZzogb3B0aW9ucy5lYXNp
bmcsCgkJY29tcGxldGU6IGZ1bmN0aW9uKCkgewoKCQkJdmFyIG9mZnNldCA9IGVsZW1lbnQub2Zm
c2V0KCk7CgoJCQlpZiAoIHRvLm9wYWNpdHkgPT09IDAgKSB7CgkJCQllbGVtZW50LmNzcyggIm9w
YWNpdHkiLCBmcm9tLm9wYWNpdHkgKTsKCQkJfQoKCQkJaWYgKCAhcmVzdG9yZSApIHsKCQkJCWVs
ZW1lbnQKCQkJCQkuY3NzKCAicG9zaXRpb24iLCBwb3NpdGlvbiA9PT0gInN0YXRpYyIgPyAicmVs
YXRpdmUiIDogcG9zaXRpb24gKQoJCQkJCS5vZmZzZXQoIG9mZnNldCApOwoKCQkJCS8vIE5lZWQg
dG8gc2F2ZSBzdHlsZSBoZXJlIHNvIHRoYXQgYXV0b21hdGljIHN0eWxlIHJlc3RvcmF0aW9uCgkJ
CQkvLyBkb2Vzbid0IHJlc3RvcmUgdG8gdGhlIG9yaWdpbmFsIHN0eWxlcyBmcm9tIGJlZm9yZSB0
aGUgYW5pbWF0aW9uLgoJCQkJJC5lZmZlY3RzLnNhdmVTdHlsZSggZWxlbWVudCApOwoJCQl9CgoJ
CQlkb25lKCk7CgkJfQoJfSApOwoKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTY2Fs
ZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZv
dW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlU
IGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFNj
YWxlIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBHcm93cyBvciBz
aHJpbmtzIGFuIGVsZW1lbnQgYW5kIGl0cyBjb250ZW50LgovLz4+ZG9jczogaHR0cDovL2FwaS5q
cXVlcnl1aS5jb20vc2NhbGUtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20v
ZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdFNjYWxlID0gJC5lZmZlY3RzLmRlZmluZSggInNj
YWxlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7CgoJLy8gQ3JlYXRlIGVsZW1lbnQKCXZh
ciBlbCA9ICQoIHRoaXMgKSwKCQltb2RlID0gb3B0aW9ucy5tb2RlLAoJCXBlcmNlbnQgPSBwYXJz
ZUludCggb3B0aW9ucy5wZXJjZW50LCAxMCApIHx8CgkJCSggcGFyc2VJbnQoIG9wdGlvbnMucGVy
Y2VudCwgMTAgKSA9PT0gMCA/IDAgOiAoIG1vZGUgIT09ICJlZmZlY3QiID8gMCA6IDEwMCApICks
CgoJCW5ld09wdGlvbnMgPSAkLmV4dGVuZCggdHJ1ZSwgewoJCQlmcm9tOiAkLmVmZmVjdHMuc2Nh
bGVkRGltZW5zaW9ucyggZWwgKSwKCQkJdG86ICQuZWZmZWN0cy5zY2FsZWREaW1lbnNpb25zKCBl
bCwgcGVyY2VudCwgb3B0aW9ucy5kaXJlY3Rpb24gfHwgImJvdGgiICksCgkJCW9yaWdpbjogb3B0
aW9ucy5vcmlnaW4gfHwgWyAibWlkZGw=</Default>
</Parameter>

<Parameter name="Frag6980641884580381696867754">
<Default>ci11bnNlbGVjdGFibGUiOyAvLyBUaGUgbmFtZSBvZiB0aGUgdW5zZWxlY3RhYmxlIGNlbGwgbWFy
a2VyIGNsYXNzCgl0aGlzLl9jdXJyZW50Q2xhc3MgPSAidWktZGF0ZXBpY2tlci1jdXJyZW50LWRh
eSI7IC8vIFRoZSBuYW1lIG9mIHRoZSBjdXJyZW50IGRheSBtYXJrZXIgY2xhc3MKCXRoaXMuX2Rh
eU92ZXJDbGFzcyA9ICJ1aS1kYXRlcGlja2VyLWRheXMtY2VsbC1vdmVyIjsgLy8gVGhlIG5hbWUg
b2YgdGhlIGRheSBob3ZlciBtYXJrZXIgY2xhc3MKCXRoaXMucmVnaW9uYWwgPSBbXTsgLy8gQXZh
aWxhYmxlIHJlZ2lvbmFsIHNldHRpbmdzLCBpbmRleGVkIGJ5IGxhbmd1YWdlIGNvZGUKCXRoaXMu
cmVnaW9uYWxbICIiIF0gPSB7IC8vIERlZmF1bHQgcmVnaW9uYWwgc2V0dGluZ3MKCQljbG9zZVRl
eHQ6ICJEb25lIiwgLy8gRGlzcGxheSB0ZXh0IGZvciBjbG9zZSBsaW5rCgkJcHJldlRleHQ6ICJQ
cmV2IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBwcmV2aW91cyBtb250aCBsaW5rCgkJbmV4dFRleHQ6
ICJOZXh0IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBuZXh0IG1vbnRoIGxpbmsKCQljdXJyZW50VGV4
dDogIlRvZGF5IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBjdXJyZW50IG1vbnRoIGxpbmsKCQltb250
aE5hbWVzOiBbICJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVu
ZSIsCgkJCSJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwi
RGVjZW1iZXIiIF0sIC8vIE5hbWVzIG9mIG1vbnRocyBmb3IgZHJvcC1kb3duIGFuZCBmb3JtYXR0
aW5nCgkJbW9udGhOYW1lc1Nob3J0OiBbICJKYW4iLCAiRmViIiwgIk1hciIsICJBcHIiLCAiTWF5
IiwgIkp1biIsICJKdWwiLCAiQXVnIiwgIlNlcCIsICJPY3QiLCAiTm92IiwgIkRlYyIgXSwgLy8g
Rm9yIGZvcm1hdHRpbmcKCQlkYXlOYW1lczogWyAiU3VuZGF5IiwgIk1vbmRheSIsICJUdWVzZGF5
IiwgIldlZG5lc2RheSIsICJUaHVyc2RheSIsICJGcmlkYXkiLCAiU2F0dXJkYXkiIF0sIC8vIEZv
ciBmb3JtYXR0aW5nCgkJZGF5TmFtZXNTaG9ydDogWyAiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2Vk
IiwgIlRodSIsICJGcmkiLCAiU2F0IiBdLCAvLyBGb3IgZm9ybWF0dGluZwoJCWRheU5hbWVzTWlu
OiBbICJTdSIsIk1vIiwiVHUiLCJXZSIsIlRoIiwiRnIiLCJTYSIgXSwgLy8gQ29sdW1uIGhlYWRp
bmdzIGZvciBkYXlzIHN0YXJ0aW5nIGF0IFN1bmRheQoJCXdlZWtIZWFkZXI6ICJXayIsIC8vIENv
bHVtbiBoZWFkZXIgZm9yIHdlZWsgb2YgdGhlIHllYXIKCQlkYXRlRm9ybWF0OiAibW0vZGQveXki
LCAvLyBTZWUgZm9ybWF0IG9wdGlvbnMgb24gcGFyc2VEYXRlCgkJZmlyc3REYXk6IDAsIC8vIFRo
ZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWssIFN1biA9IDAsIE1vbiA9IDEsIC4uLgoJCWlzUlRMOiBm
YWxzZSwgLy8gVHJ1ZSBpZiByaWdodC10by1sZWZ0IGxhbmd1YWdlLCBmYWxzZSBpZiBsZWZ0LXRv
LXJpZ2h0CgkJc2hvd01vbnRoQWZ0ZXJZZWFyOiBmYWxzZSwgLy8gVHJ1ZSBpZiB0aGUgeWVhciBz
ZWxlY3QgcHJlY2VkZXMgbW9udGgsIGZhbHNlIGZvciBtb250aCB0aGVuIHllYXIKCQl5ZWFyU3Vm
Zml4OiAiIiAvLyBBZGRpdGlvbmFsIHRleHQgdG8gYXBwZW5kIHRvIHRoZSB5ZWFyIGluIHRoZSBt
b250aCBoZWFkZXJzCgl9OwoJdGhpcy5fZGVmYXVsdHMgPSB7IC8vIEdsb2JhbCBkZWZhdWx0cyBm
b3IgYWxsIHRoZSBkYXRlIHBpY2tlciBpbnN0YW5jZXMKCQlzaG93T246ICJmb2N1cyIsIC8vICJm
b2N1cyIgZm9yIHBvcHVwIG9uIGZvY3VzLAoJCQkvLyAiYnV0dG9uIiBmb3IgdHJpZ2dlciBidXR0
b24sIG9yICJib3RoIiBmb3IgZWl0aGVyCgkJc2hvd0FuaW06ICJmYWRlSW4iLCAvLyBOYW1lIG9m
IGpRdWVyeSBhbmltYXRpb24gZm9yIHBvcHVwCgkJc2hvd09wdGlvbnM6IHt9LCAvLyBPcHRpb25z
IGZvciBlbmhhbmNlZCBhbmltYXRpb25zCgkJZGVmYXVsdERhdGU6IG51bGwsIC8vIFVzZWQgd2hl
biBmaWVsZCBpcyBibGFuazogYWN0dWFsIGRhdGUsCgkJCS8vICsvLW51bWJlciBmb3Igb2Zmc2V0
IGZyb20gdG9kYXksIG51bGwgZm9yIHRvZGF5CgkJYXBwZW5kVGV4dDogIiIsIC8vIERpc3BsYXkg
dGV4dCBmb2xsb3dpbmcgdGhlIGlucHV0IGJveCwgZS5nLiBzaG93aW5nIHRoZSBmb3JtYXQKCQli
dXR0b25UZXh0OiAiLi4uIiwgLy8gVGV4dCBmb3IgdHJpZ2dlciBidXR0b24KCQlidXR0b25JbWFn
ZTogIiIsIC8vIFVSTCBmb3IgdHJpZ2dlciBidXR0b24gaW1hZ2UKCQlidXR0b25JbWFnZU9ubHk6
IGZhbHNlLCAvLyBUcnVlIGlmIHRoZSBpbWFnZSBhcHBlYXJzIGFsb25lLCBmYWxzZSBpZiBpdCBh
cHBlYXJzIG9uIGEgYnV0dG9uCgkJaGlkZUlmTm9QcmV2TmV4dDogZmFsc2UsIC8vIFRydWUgdG8g
aGlkZSBuZXh0L3ByZXZpb3VzIG1vbnRoIGxpbmtzCgkJCS8vIGlmIG5vdCBhcHBsaWNhYmxlLCBm
YWxzZSB0byBqdXN0IGRpc2FibGUgdGhlbQoJCW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQ6IGZhbHNl
LCAvLyBUcnVlIGlmIGRhdGUgZm9ybWF0dGluZyBhcHBsaWVkIHRvIHByZXYvdG9kYXkvbmV4dCBs
aW5rcwoJCWdvdG9DdXJyZW50OiBmYWxzZSwgLy8gVHJ1ZSBpZiB0b2RheSBsaW5rIGdvZXMgYmFj
ayB0byBjdXJyZW50IHNlbGVjdGlvbiBpbnN0ZWFkCgkJY2hhbmdlTW9udGg6IGZhbHNlLCAvLyBU
cnVlIGlmIG1vbnRoIGNhbiBiZSBzZWxlY3RlZCBkaXJlY3RseSwgZmFsc2UgaWYgb25seSBwcmV2
L25leHQKCQljaGFuZ2VZZWFyOiBmYWxzZSwgLy8gVHJ1ZSBpZiB5ZWFyIGNhbiBiZSBzZWxlY3Rl
ZCBkaXJlY3RseSwgZmFsc2UgaWYgb25seSBwcmV2L25leHQKCQl5ZWFyUmFuZ2U6ICJjLTEwOmMr
MTAiLCAvLyBSYW5nZSBvZiB5ZWFycyB0byBkaXNwbGF5IGluIGRyb3AtZG93biwKCQkJLy8gZWl0
aGVyIHJlbGF0aXZlIHRvIHRvZGF5J3MgeWVhciAoLW5uOitubiksIHJlbGF0aXZlIHRvIGN1cnJl
bnRseSBkaXNwbGF5ZWQgeWVhcgoJCQkvLyAoYy1ubjpjK25uKSwgYWJzb2x1dGUgKG5ubm46bm5u
biksIG9yIGEgY29tYmluYXRpb24gb2YgdGhlIGFib3ZlIChubm5uOi1uKQoJCXNob3dPdGhlck1v
bnRoczogZmFsc2UsIC8vIFRydWUgdG8gc2hvdyBkYXRlcyBpbiBvdGhlciBtb250aHMsIGZhbHNl
IHRvIGxlYXZlIGJsYW5rCgkJc2VsZWN0T3RoZXJNb250aHM6IGZhbHNlLCAvLyBUcnVlIHRvIGFs
bG93IHNlbGVjdGlvbiBvZiBkYXRlcyBpbiBvdGhlciBtb250aHMsIGZhbHNlIGZvciB1bnNlbGVj
dGFibGUKCQlzaG93V2VlazogZmFsc2UsIC8vIFRydWUgdG8gc2hvdyB3ZWVrIG9mIHRoZSB5ZWFy
LCBmYWxzZSB0byBub3Qgc2hvdyBpdAoJCWNhbGN1bGF0ZVdlZWs6IHRoaXMuaXNvODYwMVdlZWss
IC8vIEhvdyB0byBjYWxjdWxhdGUgdGhlIHdlZWsgb2YgdGhlIHllYXIsCgkJCS8vIHRha2VzIGEg
RGF0ZSBhbmQgcmV0dXJucyB0aGUgbnVtYmVyIG9mIHRoZSB3ZWVrIGZvciBpdAoJCXNob3J0WWVh
ckN1dG9mZjogIisxMCIsIC8vIFNob3J0IHllYXIgdmFsdWVzIDwgdGhpcyBhcmUgaW4gdGhlIGN1
cnJlbnQgY2VudHVyeSwKCQkJLy8gPiB0aGlzIGFyZSBpbiB0aGUgcHJldmlvdXMgY2VudHVyeSwK
CQkJLy8gc3RyaW5nIHZhbHVlIHN0YXJ0aW5nIHdpdGggIisiIGZvciBjdXJyZW50IHllYXIgKyB2
YWx1ZQoJCW1pbkRhdGU6IG51bGwsIC8vIFRoZSBlYXJsaWVzdCBzZWxlY3RhYmxlIGRhdGUsIG9y
IG51bGwgZm9yIG5vIGxpbWl0CgkJbWF4RGF0ZTogbnVsbCwgLy8gVGhlIGxhdGVzdCBzZWxlY3Rh
YmxlIGRhdGUsIG9yIG51bGwgZm9yIG5vIGxpbWl0CgkJZHVyYXRpb246ICJmYXN0IiwgLy8gRHVy
YXRpb24gb2YgZGlzcGxheS9jbG9zdXJlCgkJYmVmb3JlU2hvd0RheTogbnVsbCwgLy8gRnVuY3Rp
b24gdGhhdCB0YWtlcyBhIGRhdGUgYW5kIHJldHVybnMgYW4gYXJyYXkgd2l0aAoJCQkvLyBbMF0g
PSB0cnVlIGlmIHNlbGVjdGFibGUsIGZhbHNlIGlmIG5vdCwgWzFdID0gY3VzdG9tIENTUyBjbGFz
cyBuYW1lKHMpIG9yICIiLAoJCQkvLyBbMl0gPSBjZWxsIHRpdGxlIChvcHRpb25hbCksIGUuZy4g
JC5kYXRlcGlja2VyLm5vV2Vla2VuZHMKCQliZWZvcmVTaG93OiBudWxsLCAvLyBGdW5jdGlvbiB0
aGF0IHRha2VzIGFuIGlucHV0IGZpZWxkIGFuZAoJCQkvLyByZXR1cm5zIGEgc2V0IG9mIGN1c3Rv
bSBzZXR0aW5ncyBmb3IgdGhlIGRhdGUgcGlja2VyCgkJb25TZWxlY3Q6IG51bGwsIC8vIERlZmlu
ZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gYSBkYXRlIGlzIHNlbGVjdGVkCgkJb25DaGFuZ2VN
b250aFllYXI6IG51bGwsIC8vIERlZmluZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gdGhlIG1v
bnRoIG9yIHllYXIgaXMgY2hhbmdlZAoJCW9uQ2xvc2U6IG51bGwsIC8vIERlZmluZSBhIGNhbGxi
YWNrIGZ1bmN0aW9uIHdoZW4gdGhlIGRhdGVwaWNrZXIgaXMgY2xvc2VkCgkJbnVtYmVyT2ZNb250
aHM6IDEsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc2hvdyBhdCBhIHRpbWUKCQlzaG93Q3VycmVu
dEF0UG9zOiAwLCAvLyBUaGUgcG9zaXRpb24gaW4gbXVsdGlwZSBtb250aHMgYXQgd2hpY2ggdG8g
c2hvdyB0aGUgY3VycmVudCBtb250aCAoc3RhcnRpbmcgYXQgMCkKCQlzdGVwTW9udGhzOiAxLCAv
LyBOdW1iZXIgb2YgbW9udGhzIHRvIHN0ZXAgYmFjay9mb3J3YXJkCgkJc3RlcEJpZ01vbnRoczog
MTIsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc3RlcCBiYWNrL2ZvcndhcmQgZm9yIHRoZSBiaWcg
bGlua3MKCQlhbHRGaWVsZDogIiIsIC8vIFNlbGVjdG9yIGZvciBhbiBhbHRlcm5hdGUgZmllbGQg
dG8gc3RvcmUgc2VsZWN0ZWQgZGF0ZXMgaW50bwoJCWFsdEZvcm1hdDogIiIsIC8vIFRoZSBkYXRl
IGZvcm1hdCB0byB1c2UgZm9yIHRoZSBhbHRlcm5hdGUgZmllbGQKCQljb25zdHJhaW5JbnB1dDog
dHJ1ZSwgLy8gVGhlIGlucHV0IGlzIGNvbnN0cmFpbmVkIGJ5IHRoZSBjdXJyZW50IGRhdGUgZm9y
bWF0CgkJc2hvd0J1dHRvblBhbmVsOiBmYWxzZSwgLy8gVHJ1ZSB0byBzaG93IGJ1dHRvbiBwYW5l
bCwgZmFsc2UgdG8gbm90IHNob3cgaXQKCQlhdXRvU2l6ZTogZmFsc2UsIC8vIFRydWUgdG8gc2l6
ZSB0aGUgaW5wdXQgZm9yIHRoZSBkYXRlIGZvcm1hdCwgZmFsc2UgdG8gbGVhdmUgYXMgaXMKCQlk
aXNhYmxlZDogZmFsc2UgLy8gVGhlIGluaXRpYWwgZGlzYWJsZWQgc3RhdGUKCX07CgkkLmV4dGVu
ZCggdGhpcy5fZGVmYXVsdHMsIHRoaXMucmVnaW9uYWxbICIiIF0gKTsKCXRoaXMucmVnaW9uYWwu
ZW4gPSAkLmV4dGVuZCggdHJ1ZSwge30sIHRoaXMucmVnaW9uYWxbICIiIF0gKTsKCXRoaXMucmVn
aW9uYWxbICJlbi1VUyIgXSA9ICQuZXh0ZW5kKCB0cnVlLCB7fSwgdGhpcy5yZWdpb25hbC5lbiAp
OwoJdGhpcy5kcERpdiA9IGRhdGVwaWNrZXJfYmluZEhvdmVyKCAkKCAiPGRpdiBpZD0nIiArIHRo
aXMuX21haW5EaXZJZCArICInIGNsYXNzPSd1aS1kYXRlcGlja2VyIHVpLXdpZGdldCB1aS13aWRn
ZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCc+PC9kaXY+IiApICk7
Cn0KCiQuZXh0ZW5kKCBEYXRlcGlja2VyLnByb3RvdHlwZSwgewoJLyogQ2xhc3MgbmFtZSBhZGRl
ZCB0byBlbGVtZW50cyB0byBpbmRpY2F0ZSBhbHJlYWR5IGNvbmZpZ3VyZWQgd2l0aCBhIGRhdGUg
cGlja2VyLiAqLwoJbWFya2VyQ2xhc3NOYW1lOiAiaGFzRGF0ZXBpY2tlciIsCgoJLy9LZWVwIHRy
YWNrIG9mIHRoZSBtYXhpbXVtIG51bWJlciBvZiByb3dzIGRpc3BsYXllZCAoc2VlICM3MDQzKQoJ
bWF4Um93czogNCwKCgkvLyBUT0RPIHJlbmFtZSB0byAid2lkZ2V0IiB3aGVuIHN3aXRjaGluZyB0
byB3aWRnZXQgZmFjdG9yeQoJX3dpZGdldERhdGVwaWNrZXI6IGZ1bmN0aW9uKCkgewoJCXJldHVy
biB0aGlzLmRwRGl2OwoJfSwKCgkvKiBPdmVycmlkZSB0aGUgZGVmYXVsdCBzZXR0aW5ncyBmb3Ig
YWxsIGluc3RhbmNlcyBvZiB0aGUgZGF0ZSBwaWNrZXIuCgkgKiBAcGFyYW0gIHNldHRpbmdzICBv
YmplY3QgLSB0aGUgbmV3IHNldHRpbmdzIHRvIHVzZSBhcyBkZWZhdWx0cyAoYW5vbnltb3VzIG9i
amVjdCkKCSAqIEByZXR1cm4gdGhlIG1hbmFnZXIgb2JqZWN0CgkgKi8KCXNldERlZmF1bHRzOiBm
dW5jdGlvbiggc2V0dGluZ3MgKSB7CgkJZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoIHRoaXMuX2Rl
ZmF1bHRzLCBzZXR0aW5ncyB8fCB7fSApOwoJCXJldHVybiB0aGlzOwoJfSwKCgkvKiBBdHRhY2gg
dGhlIGRhdGUgcGlja2VyIHRvIGEgalF1ZXJ5IHNlbGVjdGlvbi4KCSAqIEBwYXJhbSAgdGFyZ2V0
CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAq
IEBwYXJhbSAgc2V0dGluZ3MgIG9iamVjdCAtIHRoZSBuZXcgc2V0dGluZ3MgdG8gdXNlIGZvciB0
aGlzIGRhdGUgcGlja2VyIGluc3RhbmNlIChhbm9ueW1vdXMpCgkgKi8KCV9hdHRhY2hEYXRlcGlj
a2VyOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHsKCQl2YXIgbm9kZU5hbWUsIGlubGlu
ZSwgaW5zdDsKCQlub2RlTmFtZSA9IHRhcmdldC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoJCWlu
bGluZSA9ICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3BhbiIgKTsKCQlp
ZiAoICF0YXJnZXQuaWQgKSB7CgkJCXRoaXMudXVpZCArPSAxOwoJCQl0YXJnZXQuaWQgPSAiZHAi
ICsgdGhpcy51dWlkOwoJCX0KCQlpbnN0ID0gdGhpcy5fbmV3SW5zdCggJCggdGFyZ2V0ICksIGlu
bGluZSApOwoJCWluc3Quc2V0dGluZ3MgPSAkLmV4dGVuZCgge30sIHNldHRpbmdzIHx8IHt9ICk7
CgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQkJdGhpcy5fY29ubmVjdERhdGVwaWNr
ZXIoIHRhcmdldCwgaW5zdCApOwoJCX0gZWxzZSBpZiAoIGlubGluZSApIHsKCQkJdGhpcy5faW5s
aW5lRGF0ZXBpY2tlciggdGFyZ2V0LCBpbnN0ICk7CgkJfQoJfSwKCgkvKiBDcmVhdGUgYSBuZXcg
aW5zdGFuY2Ugb2JqZWN0LiAqLwoJX25ld0luc3Q6IGZ1bmN0aW9uKCB0YXJnZXQsIGlubGluZSAp
IHsKCQl2YXIgaWQgPSB0YXJnZXRbIDAgXS5pZC5yZXBsYWNlKCAvKFteQS1aYS16MC05X1wtXSkv
ZywgIlxcXFwkMSIgKTsgLy8gZXNjYXBlIGpRdWVyeSBtZXRhIGNoYXJzCgkJcmV0dXJuIHsgaWQ6
IGlkLCBpbnB1dDogdGFyZ2V0LCAvLyBhc3NvY2lhdGVkIHRhcmdldAoJCQlzZWxlY3RlZERheTog
MCwgc2VsZWN0ZWRNb250aDogMCwgc2VsZWN0ZWRZZWFyOiAwLCAvLyBjdXJyZW50IHNlbGVjdGlv
bgoJCQlkcmF3TW9udGg6IDAsIGRyYXdZZWFyOiAwLCAvLyBtb250aCBiZWluZyBkcmF3bgoJCQlp
bmxpbmU6IGlubGluZSwgLy8gaXMgZGF0ZXBpY2tlciBpbmxpbmUgb3Igbm90CgkJCWRwRGl2OiAo
ICFpbmxpbmUgPyB0aGlzLmRwRGl2IDogLy8gcHJlc2VudGF0aW9uIGRpdgoJCQlkYXRlcGlja2Vy
X2JpbmRIb3ZlciggJCggIjxkaXYgY2xhc3M9JyIgKyB0aGlzLl9pbmxpbmVDbGFzcyArICIgdWkt
ZGF0ZXBpY2tlciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4
IHVpLWNvcm5lci1hbGwnPjwvZGl2PiIgKSApICkgfTsKCX0sCgoJLyogQXR0YWNoIHRoZSBkYXRl
IHBpY2tlciB0byBhbiBpbnB1dCBmaWVsZC4gKi8KCV9jb25uZWN0RGF0ZXBpY2tlcjogZnVuY3Rp
b24oIHRhcmdldCwgaW5zdCApIHsKCQl2YXIgaW5wdXQgPSAkKCB0YXJnZXQgKTsKCQlpbnN0LmFw
cGVuZCA9ICQoIFtdICk7CgkJaW5zdC50cmlnZ2VyID0gJCggW10gKTsKCQlpZiAoIGlucHV0Lmhh
c0NsYXNzKCB0aGlzLm1hcmtlckNsYXNzTmFtZSApICkgewoJCQlyZXR1cm47CgkJfQoJCXRoaXMu
X2F0dGFjaG1lbnRzKCBpbnB1dCwgaW5zdCApOwoJCWlucHV0LmFkZENsYXNzKCB0aGlzLm1hcmtl
ckNsYXNzTmFtZSApLm9uKCAia2V5ZG93biIsIHRoaXMuX2RvS2V5RG93biApLgoJCQlvbiggImtl
eXByZXNzIiwgdGhpcy5fZG9LZXlQcmVzcyApLm9uKCAia2V5dXAiLCB0aGlzLl9kb0tleVVwICk7
CgkJdGhpcy5fYXV0b1NpemUoIGluc3QgKTsKCQkkLmRhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIi
LCBpbnN0ICk7CgoJCS8vSWYgZGlzYWJsZWQgb3B0aW9uIGlzIHRydWUsIGRpc2FibGUgdGhlIGRh
dGVwaWNrZXIgb25jZSBpdCBoYXMgYmVlbiBhdHRhY2hlZCB0byB0aGUgaW5wdXQgKHNlZSB0aWNr
ZXQgIzU2NjUpCgkJaWYgKCBpbnN0LnNldHRpbmdzLmRpc2FibGVkICkgewoJCQl0aGlzLl9kaXNh
YmxlRGF0ZXBpY2tlciggdGFyZ2V0ICk7CgkJfQoJfSwKCgkvKiBNYWtlIGF0dGFjaG1lbnRzIGJh
c2VkIG9uIHNldHRpbmdzLiAqLwoJX2F0dGFjaG1lbnRzOiBmdW5jdGlvbiggaW5wdXQsIGluc3Qg
KSB7CgkJdmFyIHNob3dPbiwgYnV0dG9uVGV4dCwgYnV0dG9uSW1hZ2UsCgkJCWFwcGVuZFRleHQg
PSB0aGlzLl9nZXQoIGluc3QsICJhcHBlbmRUZXh0IiApLAoJCQlpc1JUTCA9IHRoaXMuX2dldCgg
aW5zdCwgImlzUlRMIiApOwoKCQlpZiAoIGluc3QuYXBwZW5kICkgewoJCQlpbnN0LmFwcGVuZC5y
ZW1vdmUoKTsKCQl9CgkJaWYgKCBhcHBlbmRUZXh0ICkgewoJCQlpbnN0LmFwcGVuZCA9ICQoICI8
c3BhbiBjbGFzcz0nIiArIHRoaXMuX2FwcGVuZENsYXNzICsgIic+IiArIGFwcGVuZFRleHQgKyAi
PC9zcGFuPiIgKTsKCQkJaW5wdXRbIGlzUlRMID8gImJlZm9yZSIgOiAiYWZ0ZXIiIF0oIGluc3Qu
YXBwZW5kICk7CgkJfQoKCQlpbnB1dC5vZmYoICJmb2N1cyIsIHRoaXMuX3Nob3dEYXRlcGlja2Vy
ICk7CgoJCWlmICggaW5zdC50cmlnZ2VyICkgewoJCQlpbnN0LnRyaWdnZXIucmVtb3ZlKCk7CgkJ
fQoKCQlzaG93T24gPSB0aGlzLl9nZXQoIGluc3QsICJzaG93T24iICk7CgkJaWYgKCBzaG93T24g
PT09ICJmb2N1cyIgfHwgc2hvd09uID09PSAiYm90aCIgKSB7IC8vIHBvcC11cCBkYXRlIHBpY2tl
ciB3aGVuIGluIHRoZSBtYXJrZWQgZmllbGQKCQkJaW5wdXQub24oICJmb2N1cyIsIHRoaXMuX3No
b3dEYXRlcGlja2VyICk7CgkJfQoJCWlmICggc2hvd09uID09PSAiYnV0dG9uIiB8fCBzaG93T24g
PT09ICJib3RoIiApIHsgLy8gcG9wLXVwIGRhdGUgcGlja2VyIHdoZW4gYnV0dG9uIGNsaWNrZWQK
CQkJYnV0dG9uVGV4dCA9IHRoaXMuX2dldCggaW5zdCwgImJ1dHRvblRleHQiICk7CgkJCWJ1dHRv
bkltYWdlID0gdGhpcy5fZ2V0KCBpbnN0LCAiYnV0dG9uSW1hZ2UiICk7CgkJCWluc3QudHJpZ2dl
ciA9ICQoIHRoaXMuX2dldCggaW5zdCwgImJ1dHRvbkltYWdlT25seSIgKSA/CgkJCQkkKCAiPGlt
Zy8+IiApLmFkZENsYXNzKCB0aGlzLl90cmlnZ2VyQ2xhc3MgKS4KCQkJCQlhdHRyKCB7IHNyYzog
YnV0dG9uSW1hZ2UsIGFsdDogYnV0dG9uVGV4dCwgdGl0bGU6IGJ1dHRvblRleHQgfSApIDoKCQkJ
CSQoICI8YnV0dG9uIHR5cGU9J2J1dHRvbic+PC9idXR0b24+IiApLmFkZENsYXNzKCB0aGlzLl90
cmlnZ2VyQ2xhc3MgKS4KCQkJCQlodG1sKCAhYnV0dG9uSW1hZ2UgPyBidXR0b25UZXh0IDogJCgg
IjxpbWcvPiIgKS5hdHRyKAoJCQkJCXsgc3JjOmJ1dHRvbkltYWdlLCBhbHQ6YnV0dG9uVGV4dCwg
dGl0bGU6YnV0dG9uVGV4dCB9ICkgKSApOwoJCQlpbnB1dFsgaXNSVEwgPyAiYmVmb3JlIiA6ICJh
ZnRlciIgXSggaW5zdC50cmlnZ2VyICk7CgkJCWluc3QudHJpZ2dlci5vbiggImNsaWNrIiwgZnVu
Y3Rpb24oKSB7CgkJCQlpZiAoICQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgJC5k
YXRlcGlja2VyLl9sYXN0SW5wdXQgPT09IGlucHV0WyAwIF0gKSB7CgkJCQkJJC5kYXRlcGlja2Vy
Ll9oaWRlRGF0ZXBpY2tlcigpOwoJCQkJfSBlbHNlIGlmICggJC5kYXRlcGlja2VyLl9kYXRlcGlj
a2VyU2hvd2luZyAmJiAkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCAhPT0gaW5wdXRbIDAgXSApIHsK
CQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7CgkJCQkJJC5kYXRlcGlja2VyLl9z
aG93RGF0ZXBpY2tlciggaW5wdXRbIDAgXSApOwoJCQkJfSBlbHNlIHsKCQkJCQkkLmRhdGVwaWNr
ZXIuX3Nob3dEYXRlcGlja2VyKCBpbnB1dFsgMCBdICk7CgkJCQl9CgkJCQlyZXR1cm4gZmFsc2U7
CgkJCX0gKTsKCQl9Cgl9LAoKCS8qIEFwcGx5IHRoZSBtYXhpbXVtIGxlbmd0aCBmb3IgdGhlIGRh
dGUgZm9ybWF0LiAqLwoJX2F1dG9TaXplOiBmdW5jdGlvbiggaW5zdCApIHsKCQlpZiAoIHRoaXMu
X2dldCggaW5zdCwgImF1dG9TaXplIiApICYmICFpbnN0LmlubGluZSApIHsKCQkJdmFyIGZpbmRN
YXgsIG1heCwgbWF4SSwgaSwKCQkJCWRhdGUgPSBuZXcgRGF0ZSggMjAwOSwgMTIgLSAxLCAyMCAp
LCAvLyBFbnN1cmUgZG91YmxlIGRpZ2l0cwoJCQkJZGF0ZUZvcm1hdCA9IHRoaXMuX2dldCggaW5z
dCwgImRhdGVGb3JtYXQiICk7CgoJCQlpZiAoIGRhdGVGb3JtYXQubWF0Y2goIC9bRE1dLyApICkg
ewoJCQkJZmluZE1heCA9IGZ1bmN0aW9uKCBuYW1lcyApIHsKCQkJCQltYXggPSAwOwoJCQkJCW1h
eEkgPSAwOwoJCQkJCWZvciAoIGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKysgKSB7CgkJCQkJ
CWlmICggbmFtZXNbIGkgXS5sZW5ndGggPiBtYXggKSB7CgkJCQkJCQltYXggPSBuYW1lc1sgaSBd
Lmxlbmd0aDsKCQkJCQkJCW1heEkgPSBpOwoJCQkJCQl9CgkJCQkJfQoJCQkJCXJldHVybiBtYXhJ
OwoJCQkJfTsKCQkJCWRhdGUuc2V0TW9udGgoIGZpbmRNYXgoIHRoaXMuX2dldCggaW5zdCwgKCBk
YXRlRm9ybWF0Lm1hdGNoKCAvTU0vICkgPwoJCQkJCSJtb250aE5hbWVzIiA6ICJtb250aE5hbWVz
U2hvcnQiICkgKSApICk7CgkJCQlkYXRlLnNldERhdGUoIGZpbmRNYXgoIHRoaXMuX2dldCggaW5z
dCwgKCBkYXRlRm9ybWF0Lm1hdGNoKCAvREQvICkgPwoJCQkJCSJkYXlOYW1lcyIgOiAiZGF5TmFt
ZXNTaG9ydCIgKSApICkgKyAyMCAtIGRhdGUuZ2V0RGF5KCkgKTsKCQkJfQoJCQlpbnN0LmlucHV0
LmF0dHIoICJzaXplIiwgdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgZGF0ZSApLmxlbmd0aCApOwoJ
CX0KCX0sCgoJLyogQXR0YWNoIGFuIGlubGluZSBkYXRlIHBpY2tlciB0byBhIGRpdi4gKi8KCV9p
bmxpbmVEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0LCBpbnN0ICkgewoJCXZhciBkaXZTcGFu
ID0gJCggdGFyZ2V0ICk7CgkJaWYgKCBkaXZTcGFuLmhhc0NsYXNzKCB0aGlzLm1hcmtlckNsYXNz
TmFtZSApICkgewoJCQlyZXR1cm47CgkJfQoJCWRpdlNwYW4uYWRkQ2xhc3MoIHRoaXMubWFya2Vy
Q2xhc3NOYW1lICkuYXBwZW5kKCBpbnN0LmRwRGl2ICk7CgkJJC5kYXRhKCB0YXJnZXQsICJkYXRl
cGlja2VyIiwgaW5zdCApOwoJCXRoaXMuX3NldERhdGUoIGluc3QsIHRoaXMuX2dldERlZmF1bHRE
YXRlKCBpbnN0ICksIHRydWUgKTsKCQl0aGlzLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7CgkJ
dGhpcy5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7CgoJCS8vSWYgZGlzYWJsZWQgb3B0aW9uIGlz
IHRydWUsIGRpc2FibGUgdGhlIGRhdGVwaWNrZXIgYmVmb3JlIHNob3dpbmcgaXQgKHNlZSB0aWNr
ZXQgIzU2NjUpCgkJaWYgKCBpbnN0LnNldHRpbmdzLmRpc2FibGVkICkgewoJCQl0aGlzLl9kaXNh
YmxlRGF0ZXBpY2tlciggdGFyZ2V0ICk7CgkJfQoKCQkvLyBTZXQgZGlzcGxheTpibG9jayBpbiBw
bGFjZSBvZiBpbnN0LmRwRGl2LnNob3coKSB3aGljaCB3b24ndCB3b3JrIG9uIGRpc2Nvbm5lY3Rl
ZCBlbGVtZW50cwoJCS8vIGh0dHA6Ly9idWdzLmpxdWVyeXVpLmNvbS90aWNrZXQvNzU1MiAtIEEg
RGF0ZXBpY2tlciBjcmVhdGVkIG9uIGEgZGV0YWNoZWQgZGl2IGhhcyB6ZXJvIGhlaWdodAoJCWlu
c3QuZHBEaXYuY3NzKCAiZGlzcGxheSIsICJibG9jayIgKTsKCX0sCgoJLyogUG9wLXVwIHRoZSBk
YXRlIHBpY2tlciBpbiBhICJkaWFsb2ciIGJveC4KCSAqIEBwYXJhbSAgaW5wdXQgZWxlbWVudCAt
IGlnbm9yZWQKCSAqIEBwYXJhbSAgZGF0ZQlzdHJpbmcgb3IgRGF0ZSAtIHRoZSBpbml0aWFsIGRh
dGUgdG8gZGlzcGxheQoJICogQHBhcmFtICBvblNlbGVjdCAgZnVuY3Rpb24gLSB0aGUgZnVuY3Rp
b24gdG8gY2FsbCB3aGVuIGEgZGF0ZSBpcyBzZWxlY3RlZAoJICogQHBhcmFtICBzZXR0aW5ncyAg
b2JqZWN0IC0gdXBkYXRlIHRoZSBkaWFsb2cgZGF0ZSBwaWNrZXIgaW5zdGFuY2UncyBzZXR0aW5n
cyAoYW5vbnltb3VzIG9iamVjdCkKCSAqIEBwYXJhbSAgcG9zIGludFsyXSAtIGNvb3JkaW5hdGVz
IGZvciB0aGUgZGlhbG9nJ3MgcG9zaXRpb24gd2l0aGluIHRoZSBzY3JlZW4gb3IKCSAqCQkJCQll
dmVudCAtIHdpdGggeC95IGNvb3JkaW5hdGVzIG9yCgkgKgkJCQkJbGVhdmUgZW1wdHkgZm9yIGRl
ZmF1bHQgKHNjcmVlbiBjZW50cmUpCgkgKiBAcmV0dXJuIHRoZSBtYW5hZ2VyIG9iamVjdAoJICov
CglfZGlhbG9nRGF0ZXBpY2tlcjogZnVuY3Rpb24oIGlucHV0LCBkYXRlLCBvblNlbGVjdCwgc2V0
dGluZ3MsIHBvcyApIHsKCQl2YXIgaWQsIGJyb3dzZXJXaWR0aCwgYnJvd3NlckhlaWdodCwgc2Ny
b2xsWCwgc2Nyb2xsWSwKCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3Q7IC8vIGludGVybmFsIGlu
c3RhbmNlCgoJCWlmICggIWluc3QgKSB7CgkJCXRoaXMudXVpZCArPSAxOwoJCQlpZCA9ICJkcCIg
KyB0aGlzLnV1aWQ7CgkJCXRoaXMuX2RpYWxvZ0lucHV0ID0gJCggIjxpbnB1dCB0eXBlPSd0ZXh0
JyBpZD0nIiArIGlkICsKCQkJCSInIHN0eWxlPSdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEw
MHB4OyB3aWR0aDogMHB4OycvPiIgKTsKCQkJdGhpcy5fZGlhbG9nSW5wdXQub24oICJrZXlkb3du
IiwgdGhpcy5fZG9LZXlEb3duICk7CgkJCSQoICJib2R5IiApLmFwcGVuZCggdGhpcy5fZGlhbG9n
SW5wdXQgKTsKCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3QgPSB0aGlzLl9uZXdJbnN0KCB0aGlz
Ll9kaWFsb2dJbnB1dCwgZmFsc2UgKTsKCQkJaW5zdC5zZXR0aW5ncyA9IHt9OwoJCQkkLmRhdGEo
IHRoaXMuX2RpYWxvZ0lucHV0WyAwIF0sICJkYXRlcGlja2VyIiwgaW5zdCApOwoJCX0KCQlkYXRl
cGlja2VyX2V4dGVuZFJlbW92ZSggaW5zdC5zZXR0aW5ncywgc2V0dGluZ3MgfHwge30gKTsKCQlk
YXRlID0gKCBkYXRlICYmIGRhdGUuY29uc3RydWN0b3IgPT09IERhdGUgPyB0aGlzLl9mb3JtYXRE
YXRlKCBpbnN0LCBkYXRlICkgOiBkYXRlICk7CgkJdGhpcy5fZGlhbG9nSW5wdXQudmFsKCBkYXRl
ICk7CgoJCXRoaXMuX3BvcyA9ICggcG9zID8gKCBwb3MubGVuZ3RoID8gcG9zIDogWyBwb3MucGFn
ZVgsIHBvcy5wYWdlWSBdICkgOiBudWxsICk7CgkJaWYgKCAhdGhpcy5fcG9zICkgewoJCQlicm93
c2VyV2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7CgkJCWJyb3dz
ZXJIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0OwoJCQlzY3Jv
bGxYID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgfHwgZG9jdW1lbnQuYm9k
eS5zY3JvbGxMZWZ0OwoJCQlzY3JvbGxZID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9s
bFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDsKCQkJdGhpcy5fcG9zID0gLy8gc2hvdWxk
IHVzZSBhY3R1YWwgd2lkdGgvaGVpZ2h0IGJlbG93CgkJCQlbICggYnJvd3NlcldpZHRoIC8gMiAp
IC0gMTAwICsgc2Nyb2xsWCwgKCBicm93c2VySGVpZ2h0IC8gMiApIC0gMTUwICsgc2Nyb2xsWSBd
OwoJCX0KCgkJLy8gTW92ZSBpbnB1dCBvbiBzY3JlZW4gZm9yIGZvY3VzLCBidXQgaGlkZGVuIGJl
aGluZCBkaWFsb2cKCQl0aGlzLl9kaWFsb2dJbnB1dC5jc3MoICJsZWZ0IiwgKCB0aGlzLl9wb3Nb
IDAgXSArIDIwICkgKyAicHgiICkuY3NzKCAidG9wIiwgdGhpcy5fcG9zWyAxIF0gKyAicHgiICk7
CgkJaW5zdC5zZXR0aW5ncy5vblNlbGVjdCA9IG9uU2VsZWN0OwoJCXRoaXMuX2luRGlhbG9nID0g
dHJ1ZTsKCQl0aGlzLmRwRGl2LmFkZENsYXNzKCB0aGlzLl9kaWFsb2dDbGFzcyApOwoJCXRoaXMu
X3Nob3dEYXRlcGlja2VyKCB0aGlzLl9kaWFsb2dJbnB1dFsgMCBdICk7CgkJaWYgKCAkLmJsb2Nr
VUkgKSB7CgkJCSQuYmxvY2tVSSggdGhpcy5kcERpdiApOwoJCX0KCQkkLmRhdGEoIHRoaXMuX2Rp
YWxvZ0lucHV0WyAwIF0sICJkYXRlcGlja2VyIiwgaW5zdCApOwoJCXJldHVybiB0aGlzOwoJfSwK
CgkvKiBEZXRhY2ggYSBkYXRlcGlja2VyIGZyb20gaXRzIGNvbnRyb2wuCgkgKiBAcGFyYW0gIHRh
cmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFu
CgkgKi8KCV9kZXN0cm95RGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCApIHsKCQl2YXIgbm9k
ZU5hbWUsCgkJCSR0YXJnZXQgPSAkKCB0YXJnZXQgKSwKCQkJaW5zdCA9ICQuZGF0YSggdGFyZ2V0
LCAiZGF0ZXBpY2tlciIgKTsKCgkJaWYgKCAhJHRhcmdldC5oYXNDbGFzcyggdGhpcy5tYXJrZXJD
bGFzc05hbWUgKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5h
bWUudG9Mb3dlckNhc2UoKTsKCQkkLnJlbW92ZURhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIiICk7
CgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQkJaW5zdC5hcHBlbmQucmVtb3ZlKCk7
CgkJCWluc3QudHJpZ2dlci5yZW1vdmUoKTsKCQkJJHRhcmdldC5yZW1vdmVDbGFzcyggdGhpcy5t
YXJrZXJDbGFzc05hbWUgKS4KCQkJCW9mZiggImZvY3VzIiwgdGhpcy5fc2hvd0RhdGVwaWNrZXIg
KS4KCQkJCW9mZiggImtleWRvd24iLCB0aGlzLl9kb0tleURvd24gKS4KCQkJCW9mZiggImtleXBy
ZXNzIiwgdGhpcy5fZG9LZXlQcmVzcyApLgoJCQkJb2ZmKCAia2V5dXAiLCB0aGlzLl9kb0tleVVw
ICk7CgkJfSBlbHNlIGlmICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3Bh
biIgKSB7CgkJCSR0YXJnZXQucmVtb3ZlQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NOYW1lICkuZW1w
dHkoKTsKCQl9CgoJCWlmICggZGF0ZXBpY2tlcl9pbnN0QWN0aXZlID09PSBpbnN0ICkgewoJCQlk
YXRlcGlja2VyX2luc3RBY3RpdmUgPSBudWxsOwoJCX0KCX0sCgoJLyogRW5hYmxlIHRoZSBkYXRl
IHBpY2tlciB0byBhIGpRdWVyeSBzZWxlY3Rpb24uCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50
IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuCgkgKi8KCV9lbmFi
bGVEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCXZhciBub2RlTmFtZSwgaW5saW5l
LAoJCQkkdGFyZ2V0ID0gJCggdGFyZ2V0ICksCgkJCWluc3QgPSAkLmRhdGEoIHRhcmdldCwgImRh
dGVwaWNrZXIiICk7CgoJCWlmICggISR0YXJnZXQuaGFzQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NO
YW1lICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCW5vZGVOYW1lID0gdGFyZ2V0Lm5vZGVOYW1lLnRv
TG93ZXJDYXNlKCk7CgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQkJdGFyZ2V0LmRp
c2FibGVkID0gZmFsc2U7CgkJCWluc3QudHJpZ2dlci5maWx0ZXIoICJidXR0b24iICkuCgkJCQll
YWNoKCBmdW5jdGlvbigpIHsgdGhpcy5kaXNhYmxlZCA9IGZhbHNlOyB9ICkuZW5kKCkuCgkJCQlm
aWx0ZXIoICJpbWciICkuY3NzKCB7IG9wYWNpdHk6ICIxLjAiLCBjdXJzb3I6ICIiIH0gKTsKCQl9
IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gImRpdiIgfHwgbm9kZU5hbWUgPT09ICJzcGFuIiApIHsK
CQkJaW5saW5lID0gJHRhcmdldC5jaGlsZHJlbiggIi4iICsgdGhpcy5faW5saW5lQ2xhc3MgKTsK
CQkJaW5saW5lLmNoaWxkcmVuKCkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKTsK
CQkJaW5saW5lLmZpbmQoICJzZWxlY3QudWktZGF0ZXBpY2tlci1tb250aCwgc2VsZWN0LnVpLWRh
dGVwaWNrZXIteWVhciIgKS4KCQkJCXByb3AoICJkaXNhYmxlZCIsIGZhbHNlICk7CgkJfQoJCXRo
aXMuX2Rpc2FibGVkSW5wdXRzID0gJC5tYXAoIHRoaXMuX2Rpc2FibGVkSW5wdXRzLAoJCQlmdW5j
dGlvbiggdmFsdWUgKSB7IHJldHVybiAoIHZhbHVlID09PSB0YXJnZXQgPyBudWxsIDogdmFsdWUg
KTsgfSApOyAvLyBkZWxldGUgZW50cnkKCX0sCgoJLyogRGlzYWJsZSB0aGUgZGF0ZSBwaWNrZXIg
dG8gYSBqUXVlcnkgc2VsZWN0aW9uLgoJICogQHBhcmFtICB0YXJnZXQJZWxlbWVudCAtIHRoZSB0
YXJnZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3BhbgoJICovCglfZGlzYWJsZURhdGVw
aWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7CgkJdmFyIG5vZGVOYW1lLCBpbmxpbmUsCgkJCSR0
YXJnZXQgPSAkKCB0YXJnZXQgKSwKCQkJaW5zdCA9ICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tl
ciIgKTsKCgkJaWYgKCAhJHRhcmdldC5oYXNDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKSAp
IHsKCQkJcmV0dXJuOwoJCX0KCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNh
c2UoKTsKCQlpZiAoIG5vZGVOYW1lID09PSAiaW5wdXQiICkgewoJCQl0YXJnZXQuZGlzYWJsZWQg
PSB0cnVlOwoJCQlpbnN0LnRyaWdnZXIuZmlsdGVyKCAiYnV0dG9uIiApLgoJCQkJZWFjaCggZnVu
Y3Rpb24oKSB7IHRoaXMuZGlzYWJsZWQgPSB0cnVlOyB9ICkuZW5kKCkuCgkJCQlmaWx0ZXIoICJp
bWciICkuY3NzKCB7IG9wYWNpdHk6ICIwLjUiLCBjdXJzb3I6ICJkZWZhdWx0IiB9ICk7CgkJfSBl
bHNlIGlmICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3BhbiIgKSB7CgkJ
CWlubGluZSA9ICR0YXJnZXQuY2hpbGRyZW4oICIuIiArIHRoaXMuX2lubGluZUNsYXNzICk7CgkJ
CWlubGluZS5jaGlsZHJlbigpLmFkZENsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICk7CgkJCWlu
bGluZS5maW5kKCAic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlj
a2VyLXllYXIiICkuCgkJCQlwcm9wKCAiZGlzYWJsZWQiLCB0cnVlICk7CgkJfQoJCXRoaXMuX2Rp
c2FibGVkSW5wdXRzID0gJC5tYXAoIHRoaXMuX2Rpc2FibGVkSW5wdXRzLAoJCQlmdW5jdGlvbigg
dmFsdWUgKSB7IHJldHVybiAoIHZhbHVlID09PSB0YXJnZXQgPyBudWxsIDogdmFsdWUgKTsgfSAp
OyAvLyBkZWxldGUgZW50cnkKCQl0aGlzLl9kaXNhYmxlZElucHV0c1sgdGhpcy5fZGlzYWJsZWRJ
bnB1dHMubGVuZ3RoIF0gPSB0YXJnZXQ7Cgl9LAoKCS8qIElzIHRoZSBmaXJzdCBmaWVsZCBpbiBh
IGpRdWVyeSBjb2xsZWN0aW9uIGRpc2FibGVkIGFzIGEgZGF0ZXBpY2tlcj8KCSAqIEBwYXJhbSAg
dGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNw
YW4KCSAqIEByZXR1cm4gYm9vbGVhbiAtIHRydWUgaWYgZGlzYWJsZWQsIGZhbHNlIGlmIGVuYWJs
ZWQKCSAqLwoJX2lzRGlzYWJsZWREYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCWlm
ICggIXRhcmdldCApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQlmb3IgKCB2YXIgaSA9IDA7IGkg
PCB0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGg7IGkrKyApIHsKCQkJaWYgKCB0aGlzLl9kaXNh
YmxlZElucHV0c1sgaSBdID09PSB0YXJnZXQgKSB7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoJCX0K
CQlyZXR1cm4gZmFsc2U7Cgl9LAoKCS8qIFJldHJpZXZlIHRoZSBpbnN0YW5jZSBkYXRhIGZvciB0
aGUgdGFyZ2V0IGNvbnRyb2wuCgkgKiBAcGFyYW0gIHRhcmdldCAgZWxlbWVudCAtIHRoZSB0YXJn
ZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3BhbgoJICogQHJldHVybiAgb2JqZWN0IC0g
dGhlIGFzc29jaWF0ZWQgaW5zdGFuY2UgZGF0YQoJICogQHRocm93cyAgZXJyb3IgaWYgYSBqUXVl
cnkgcHJvYmxlbSBnZXR0aW5nIGRhdGEKCSAqLwoJX2dldEluc3Q6IGZ1bmN0aW9uKCB0YXJnZXQg
KSB7CgkJdHJ5IHsKCQkJcmV0dXJuICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsKCQl9
CgkJY2F0Y2ggKCBlcnIgKSB7CgkJCXRocm93ICJNaXNzaW5nIGluc3RhbmNlIGRhdGEgZm9yIHRo
aXMgZGF0ZXBpY2tlciI7CgkJfQoJfSwKCgkvKiBVcGRhdGUgb3IgcmV0cmlldmUgdGhlIHNldHRp
bmdzIGZvciBhIGRhdGUgcGlja2VyIGF0dGFjaGVkIHRvIGFuIGlucHV0IGZpZWxkIG9yIGRpdmlz
aW9uLgoJICogQHBhcmFtICB0YXJnZXQgIGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxk
IG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqIEBwYXJhbSAgbmFtZQlvYmplY3QgLSB0aGUgbmV3IHNl
dHRpbmdzIHRvIHVwZGF0ZSBvcgoJICoJCQkJc3RyaW5nIC0gdGhlIG5hbWUgb2YgdGhlIHNldHRp
bmcgdG8gY2hhbmdlIG9yIHJldHJpZXZlLAoJICoJCQkJd2hlbiByZXRyaWV2aW5nIGFsc28gImFs
bCIgZm9yIGFsbCBpbnN0YW5jZSBzZXR0aW5ncyBvcgoJICoJCQkJImRlZmF1bHRzIiBmb3IgYWxs
IGdsb2JhbCBkZWZhdWx0cwoJICogQHBhcmFtICB2YWx1ZSAgIGFueSAtIHRoZSBuZXcgdmFsdWUg
Zm9yIHRoZSBzZXR0aW5nCgkgKgkJCQkob21pdCBpZiBhYm92ZSBpcyBhbiBvYmplY3Qgb3IgdG8g
cmV0cmlldmUgYSB2YWx1ZSkKCSAqLwoJX29wdGlvbkRhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJn
ZXQsIG5hbWUsIHZhbHVlICkgewoJCXZhciBzZXR0aW5ncywgZGF0ZSwgbWluRGF0ZSwgbWF4RGF0
ZSwKCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldCApOwoKCQlpZiAoIGFyZ3VtZW50cy5s
ZW5ndGggPT09IDIgJiYgdHlwZW9mIG5hbWUgPT09ICJzdHJpbmciICkgewoJCQlyZXR1cm4gKCBu
YW1lID09PSAiZGVmYXVsdHMiID8gJC5leHRlbmQoIHt9LCAkLmRhdGVwaWNrZXIuX2RlZmF1bHRz
ICkgOgoJCQkJKCBpbnN0ID8gKCBuYW1lID09PSAiYWxsIiA/ICQuZXh0ZW5kKCB7fSwgaW5zdC5z
ZXR0aW5ncyApIDoKCQkJCXRoaXMuX2dldCggaW5zdCwgbmFtZSApICkgOiBudWxsICkgKTsKCQl9
CgoJCXNldHRpbmdzID0gbmFtZSB8fCB7fTsKCQlpZiAoIHR5cGVvZiBuYW1lID09PSAic3RyaW5n
IiApIHsKCQkJc2V0dGluZ3MgPSB7fTsKCQkJc2V0dGluZ3NbIG5hbWUgXSA9IHZhbHVlOwoJCX0K
CgkJaWYgKCBpbnN0ICkgewoJCQlpZiAoIHRoaXMuX2N1ckluc3QgPT09IGluc3QgKSB7CgkJCQl0
aGlzLl9oaWRlRGF0ZXBpY2tlcigpOwoJCQl9CgoJCQlkYXRlID0gdGhpcy5fZ2V0RGF0ZURhdGVw
aWNrZXIoIHRhcmdldCwgdHJ1ZSApOwoJCQltaW5EYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSgg
aW5zdCwgIm1pbiIgKTsKCQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJt
YXgiICk7CgkJCWRhdGVwaWNrZXJfZXh0ZW5kUmVtb3ZlKCBpbnN0LnNldHRpbmdzLCBzZXR0aW5n
cyApOwoKCQkJLy8gcmVmb3JtYXQgdGhlIG9sZCBtaW5EYXRlL21heERhdGUgdmFsdWVzIGlmIGRh
dGVGb3JtYXQgY2hhbmdlcyBhbmQgYSBuZXcgbWluRGF0ZS9tYXhEYXRlIGlzbid0IHByb3ZpZGVk
CgkJCWlmICggbWluRGF0ZSAhPT0gbnVsbCAmJiBzZXR0aW5ncy5kYXRlRm9ybWF0ICE9PSB1bmRl
ZmluZWQgJiYgc2V0dGluZ3MubWluRGF0ZSA9PT0gdW5kZWZpbmVkICkgewoJCQkJaW5zdC5zZXR0
aW5ncy5taW5EYXRlID0gdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgbWluRGF0ZSApOwoJCQl9CgkJ
CWlmICggbWF4RGF0ZSAhPT0gbnVsbCAmJiBzZXR0aW5ncy5kYXRlRm9ybWF0ICE9PSB1bmRlZmlu
ZWQgJiYgc2V0dGluZ3MubWF4RGF0ZSA9PT0gdW5kZWZpbmVkICkgewoJCQkJaW5zdC5zZXR0aW5n
cy5tYXhEYXRlID0gdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgbWF4RGF0ZSApOwoJCQl9CgkJCWlm
ICggImRpc2FibGVkIiBpbiBzZXR0aW5ncyApIHsKCQkJCWlmICggc2V0dGluZ3MuZGlzYWJsZWQg
KSB7CgkJCQkJdGhpcy5fZGlzYWJsZURhdGVwaWNrZXIoIHRhcmdldCApOwoJCQkJfSBlbHNlIHsK
CQkJCQl0aGlzLl9lbmFibGVEYXRlcGlja2VyKCB0YXJnZXQgKTsKCQkJCX0KCQkJfQoJCQl0aGlz
Ll9hdHRhY2htZW50cyggJCggdGFyZ2V0ICksIGluc3QgKTsKCQkJdGhpcy5fYXV0b1NpemUoIGlu
c3QgKTsKCQkJdGhpcy5fc2V0RGF0ZSggaW5zdCwgZGF0ZSApOwoJCQl0aGlzLl91cGRhdGVBbHRl
cm5hdGUoIGluc3QgKTsKCQkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOwoJCX0KCX0s
CgoJLy8gQ2hhbmdlIG1ldGhvZCBkZXByZWNhdGVkCglfY2hhbmdlRGF0ZXBpY2tlcjogZnVuY3Rp
b24oIHRhcmdldCwgbmFtZSwgdmFsdWUgKSB7CgkJdGhpcy5fb3B0aW9uRGF0ZXBpY2tlciggdGFy
Z2V0LCBuYW1lLCB2YWx1ZSApOwoJfSwKCgkvKiBSZWRyYXcgdGhlIGRhdGUgcGlja2VyIGF0dGFj
aGVkIHRvIGFuIGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uLgoJICogQHBhcmFtICB0YXJnZXQgIGVs
ZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqLwoJ
X3JlZnJlc2hEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCXZhciBpbnN0ID0gdGhp
cy5fZ2V0SW5zdCggdGFyZ2V0ICk7CgkJaWYgKCBpbnN0ICkgewoJCQl0aGlzLl91cGRhdGVEYXRl
cGlja2VyKCBpbnN0ICk7CgkJfQoJfSwKCgkvKiBTZXQgdGhlIGRhdGVzIGZvciBhIGpRdWVyeSBz
ZWxlY3Rpb24uCgkgKiBAcGFyYW0gIHRhcmdldCBlbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBm
aWVsZCBvciBkaXZpc2lvbiBvciBzcGFuCgkgKiBAcGFyYW0gIGRhdGUJRGF0ZSAtIHRoZSBuZXcg
ZGF0ZQoJICovCglfc2V0RGF0ZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQsIGRhdGUgKSB7
CgkJdmFyIGluc3QgPSB0aGlzLl9nZXRJbnN0KCB0YXJnZXQgKTsKCQlpZiAoIGluc3QgKSB7CgkJ
CXRoaXMuX3NldERhdGUoIGluc3QsIGRhdGUgKTsKCQkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcigg
aW5zdCApOwoJCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoIGluc3QgKTsKCQl9Cgl9LAoKCS8qIEdl
dCB0aGUgZGF0ZShzKSBmb3IgdGhlIGZpcnN0IGVudHJ5IGluIGEgalF1ZXJ5IHNlbGVjdGlvbi4K
CSAqIEBwYXJhbSAgdGFyZ2V0IGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRp
dmlzaW9uIG9yIHNwYW4KCSAqIEBwYXJhbSAgbm9EZWZhdWx0IGJvb2xlYW4gLSB0cnVlIGlmIG5v
IGRlZmF1bHQgZGF0ZSBpcyB0byBiZSB1c2VkCgkgKiBAcmV0dXJuIERhdGUgLSB0aGUgY3VycmVu
dCBkYXRlCgkgKi8KCV9nZXREYXRlRGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCwgbm9EZWZh
dWx0ICkgewoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0ICk7CgkJaWYgKCBpbnN0
ICYmICFpbnN0LmlubGluZSApIHsKCQkJdGhpcy5fc2V0RGF0ZUZyb21GaWVsZCggaW5zdCwgbm9E
ZWZhdWx0ICk7CgkJfQoJCXJldHVybiAoIGluc3QgPyB0aGlzLl9nZXREYXRlKCBpbnN0ICkgOiBu
dWxsICk7Cgl9LAoKCS8qIEhhbmRsZSBrZXlzdHJva2VzLiAqLwoJX2RvS2V5RG93bjogZnVuY3Rp
b24oIGV2ZW50ICkgewoJCXZhciBvblNlbGVjdCwgZGF0ZVN0ciwgc2VsLAoJCQlpbnN0ID0gJC5k
YXRlcGlja2VyLl9nZXRJbnN0KCBldmVudC50YXJnZXQgKSwKCQkJaGFuZGxlZCA9IHRydWUsCgkJ
CWlzUlRMID0gaW5zdC5kcERpdi5pcyggIi51aS1kYXRlcGlja2VyLXJ0bCIgKTsKCgkJaW5zdC5f
a2V5RXZlbnQgPSB0cnVlOwoJCWlmICggJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyAp
IHsKCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsKCQkJCWNhc2UgOTogJC5kYXRlcGlja2Vy
Ll9oaWRlRGF0ZXBpY2tlcigpOwoJCQkJCQloYW5kbGVkID0gZmFsc2U7CgkJCQkJCWJyZWFrOyAv
LyBoaWRlIG9uIHRhYiBvdXQKCQkJCWNhc2UgMTM6IHNlbCA9ICQoICJ0ZC4iICsgJC5kYXRlcGlj
a2VyLl9kYXlPdmVyQ2xhc3MgKyAiOm5vdCguIiArCgkJCQkJCQkJCSQuZGF0ZXBpY2tlci5fY3Vy
cmVudENsYXNzICsgIikiLCBpbnN0LmRwRGl2ICk7CgkJCQkJCWlmICggc2VsWyAwIF0gKSB7CgkJ
CQkJCQkkLmRhdGVwaWNrZXIuX3NlbGVjdERheSggZXZlbnQudGFyZ2V0LCBpbnN0LnNlbGVjdGVk
TW9udGgsIGluc3Quc2VsZWN0ZWRZZWFyLCBzZWxbIDAgXSApOwoJCQkJCQl9CgoJCQkJCQlvblNl
bGVjdCA9ICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAib25TZWxlY3QiICk7CgkJCQkJCWlmICgg
b25TZWxlY3QgKSB7CgkJCQkJCQlkYXRlU3RyID0gJC5kYXRlcGlja2VyLl9mb3JtYXREYXRlKCBp
bnN0ICk7CgoJCQkJCQkJLy8gVHJpZ2dlciBjdXN0b20gY2FsbGJhY2sKCQkJCQkJCW9uU2VsZWN0
LmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WyAwIF0gOiBudWxsICksIFsgZGF0ZVN0
ciwgaW5zdCBdICk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRl
cGlja2VyKCk7CgkJCQkJCX0KCgkJCQkJCXJldHVybiBmYWxzZTsgLy8gZG9uJ3Qgc3VibWl0IHRo
ZSBmb3JtCgkJCQljYXNlIDI3OiAkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7CgkJCQkJ
CWJyZWFrOyAvLyBoaWRlIG9uIGVzY2FwZQoJCQkJY2FzZSAzMzogJC5kYXRlcGlja2VyLl9hZGp1
c3REYXRlKCBldmVudC50YXJnZXQsICggZXZlbnQuY3RybEtleSA/CgkJCQkJCQktJC5kYXRlcGlj
a2VyLl9nZXQoIGluc3QsICJzdGVwQmlnTW9udGhzIiApIDoKCQkJCQkJCS0kLmRhdGVwaWNrZXIu
X2dldCggaW5zdCwgInN0ZXBNb250aHMiICkgKSwgIk0iICk7CgkJCQkJCWJyZWFrOyAvLyBwcmV2
aW91cyBtb250aC95ZWFyIG9uIHBhZ2UgdXAvKyBjdHJsCgkJCQljYXNlIDM0OiAkLmRhdGVwaWNr
ZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBldmVudC5jdHJsS2V5ID8KCQkJCQkJCSsk
LmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBCaWdNb250aHMiICkgOgoJCQkJCQkJKyQuZGF0
ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSApLCAiTSIgKTsKCQkJCQkJYnJlYWs7
IC8vIG5leHQgbW9udGgveWVhciBvbiBwYWdlIGRvd24vKyBjdHJsCgkJCQljYXNlIDM1OiBpZiAo
IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsKCQkJCQkJCSQuZGF0ZXBpY2tlci5f
Y2xlYXJEYXRlKCBldmVudC50YXJnZXQgKTsKCQkJCQkJfQoJCQkJCQloYW5kbGVkID0gZXZlbnQu
Y3RybEtleSB8fCBldmVudC5tZXRhS2V5OwoJCQkJCQlicmVhazsgLy8gY2xlYXIgb24gY3RybCBv
ciBjb21tYW5kICtlbmQKCQkJCWNhc2UgMzY6IGlmICggZXZlbnQuY3RybEtleSB8fCBldmVudC5t
ZXRhS2V5ICkgewoJCQkJCQkJJC5kYXRlcGlja2VyLl9nb3RvVG9kYXkoIGV2ZW50LnRhcmdldCAp
OwoJCQkJCQl9CgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7
CgkJCQkJCWJyZWFrOyAvLyBjdXJyZW50IG9uIGN0cmwgb3IgY29tbWFuZCAraG9tZQoJCQkJY2Fz
ZSAzNzogaWYgKCBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgKSB7CgkJCQkJCQkkLmRh
dGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBpc1JUTCA/ICsxIDogLTEgKSwg
IkQiICk7CgkJCQkJCX0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0
YUtleTsKCgkJCQkJCS8vIC0xIGRheSBvbiBjdHJsIG9yIGNvbW1hbmQgK2xlZnQKCQkJCQkJaWYg
KCBldmVudC5vcmlnaW5hbEV2ZW50LmFsdEtleSApIHsKCQkJCQkJCSQuZGF0ZXBpY2tlci5fYWRq
dXN0RGF0ZSggZXZlbnQudGFyZ2V0LCAoIGV2ZW50LmN0cmxLZXkgPwoJCQkJCQkJCS0kLmRhdGVw
aWNrZXIuX2dldCggaW5zdCwgInN0ZXBCaWdNb250aHMiICkgOgoJCQkJCQkJCS0kLmRhdGVwaWNr
ZXIuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICkgKSwgIk0iICk7CgkJCQkJCX0KCgkJCQkJCS8v
IG5leHQgbW9udGgveWVhciBvbiBhbHQgK2xlZnQgb24gTWFjCgkJCQkJCWJyZWFrOwoJCQkJY2Fz
ZSAzODogaWYgKCBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgKSB7CgkJCQkJCQkkLmRh
dGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgLTcsICJEIiApOwoJCQkJCQl9CgkJ
CQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7CgkJCQkJCWJyZWFr
OyAvLyAtMSB3ZWVrIG9uIGN0cmwgb3IgY29tbWFuZCArdXAKCQkJCWNhc2UgMzk6IGlmICggZXZl
bnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5ICkgewoJCQkJCQkJJC5kYXRlcGlja2VyLl9hZGp1
c3REYXRlKCBldmVudC50YXJnZXQsICggaXNSVEwgPyAtMSA6ICsxICksICJEIiApOwoJCQkJCQl9
CgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7CgoJCQkJCQkv
LyArMSBkYXkgb24gY3RybCBvciBjb21tYW5kICtyaWdodAoJCQkJCQlpZiAoIGV2ZW50Lm9yaWdp
bmFsRXZlbnQuYWx0S2V5ICkgewoJCQkJCQkJJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVu
dC50YXJnZXQsICggZXZlbnQuY3RybEtleSA/CgkJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBp
bnN0LCAic3RlcEJpZ01vbnRocyIgKSA6CgkJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0
LCAic3RlcE1vbnRocyIgKSApLCAiTSIgKTsKCQkJCQkJfQoKCQkJCQkJLy8gbmV4dCBtb250aC95
ZWFyIG9uIGFsdCArcmlnaHQKCQkJCQkJYnJlYWs7CgkJCQljYXNlIDQwOiBpZiAoIGV2ZW50LmN0
cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsKCQkJCQkJCSQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0
ZSggZXZlbnQudGFyZ2V0LCArNywgIkQiICk7CgkJCQkJCX0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50
LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsKCQkJCQkJYnJlYWs7IC8vICsxIHdlZWsgb24gY3Ry
bCBvciBjb21tYW5kICtkb3duCgkJCQlkZWZhdWx0OiBoYW5kbGVkID0gZmFsc2U7CgkJCX0KCQl9
IGVsc2UgaWYgKCBldmVudC5rZXlDb2RlID09PSAzNiAmJiBldmVudC5jdHJsS2V5ICkgeyAvLyBk
aXNwbGF5IHRoZSBkYXRlIHBpY2tlciBvbiBjdHJsK2hvbWUKCQkJJC5kYXRlcGlja2VyLl9zaG93
RGF0ZXBpY2tlciggdGhpcyApOwoJCX0gZWxzZSB7CgkJCWhhbmRsZWQgPSBmYWxzZTsKCQl9CgoJ
CWlmICggaGFuZGxlZCApIHsKCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJZXZlbnQuc3Rv
cFByb3BhZ2F0aW9uKCk7CgkJfQoJfSwKCgkvKiBGaWx0ZXIgZW50ZXJlZCBjaGFyYWN0ZXJzIC0g
YmFzZWQgb24gZGF0ZSBmb3JtYXQuICovCglfZG9LZXlQcmVzczogZnVuY3Rpb24oIGV2ZW50ICkg
ewoJCXZhciBjaGFycywgY2hyLAoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KCBldmVu
dC50YXJnZXQgKTsKCgkJaWYgKCAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgImNvbnN0cmFpbklu
cHV0IiApICkgewoJCQljaGFycyA9ICQuZGF0ZXBpY2tlci5fcG9zc2libGVDaGFycyggJC5kYXRl
cGlja2VyLl9nZXQoIGluc3QsICJkYXRlRm9ybWF0IiApICk7CgkJCWNociA9IFN0cmluZy5mcm9t
Q2hhckNvZGUoIGV2ZW50LmNoYXJDb2RlID09IG51bGwgPyBldmVudC5rZXlDb2RlIDogZXZlbnQu
Y2hhckNvZGUgKTsKCQkJcmV0dXJuIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSB8fCAo
IGNociA8ICIgIiB8fCAhY2hhcnMgfHwgY2hhcnMuaW5kZXhPZiggY2hyICkgPiAtMSApOwoJCX0K
CX0sCgoJLyogU3luY2hyb25pc2UgbWFudWFsIGVudHJ5IGFuZCBmaWVsZC9hbHRlcm5hdGUgZmll
bGQuICovCglfZG9LZXlVcDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBkYXRlLAoJCQlpbnN0
ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KCBldmVudC50YXJnZXQgKTsKCgkJaWYgKCBpbnN0Lmlu
cHV0LnZhbCgpICE9PSBpbnN0Lmxhc3RWYWwgKSB7CgkJCXRyeSB7CgkJCQlkYXRlID0gJC5kYXRl
cGlja2VyLnBhcnNlRGF0ZSggJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJkYXRlRm9ybWF0IiAp
LAoJCQkJCSggaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQudmFsKCkgOiBudWxsICksCgkJCQkJJC5k
YXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApOwoKCQkJCWlmICggZGF0ZSApIHsg
Ly8gb25seSBpZiB2YWxpZAoJCQkJCSQuZGF0ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZCggaW5z
dCApOwoJCQkJCSQuZGF0ZXBpY2tlci5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7CgkJCQkJJC5k
YXRlcGlja2VyLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7CgkJCQl9CgkJCX0KCQkJY2F0Y2gg
KCBlcnIgKSB7CgkJCX0KCQl9CgkJcmV0dXJuIHRydWU7Cgl9LAoKCS8qIFBvcC11cCB0aGUgZGF0
ZSBwaWNrZXIgZm9yIGEgZ2l2ZW4gaW5wdXQgZmllbGQuCgkgKiBJZiBmYWxzZSByZXR1cm5lZCBm
cm9tIGJlZm9yZVNob3cgZXZlbnQgaGFuZGxlciBkbyBub3Qgc2hvdy4KCSAqIEBwYXJhbSAgaW5w
dXQgIGVsZW1lbnQgLSB0aGUgaW5wdXQgZmllbGQgYXR0YWNoZWQgdG8gdGhlIGRhdGUgcGlja2Vy
IG9yCgkgKgkJCQkJZXZlbnQgLSBpZiB0cmlnZ2VyZWQgYnkgZm9jdXMKCSAqLwoJX3Nob3dEYXRl
cGlja2VyOiBmdW5jdGlvbiggaW5wdXQgKSB7CgkJaW5wdXQgPSBpbnB1dC50YXJnZXQgfHwgaW5w
dXQ7CgkJaWYgKCBpbnB1dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAiaW5wdXQiICkgeyAv
LyBmaW5kIGZyb20gYnV0dG9uL2ltYWdlIHRyaWdnZXIKCQkJaW5wdXQgPSAkKCAiaW5wdXQiLCBp
bnB1dC5wYXJlbnROb2RlIClbIDAgXTsKCQl9CgoJCWlmICggJC5kYXRlcGlja2VyLl9pc0Rpc2Fi
bGVkRGF0ZXBpY2tlciggaW5wdXQgKSB8fCAkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCA9PT0gaW5w
dXQgKSB7IC8vIGFscmVhZHkgaGVyZQoJCQlyZXR1cm47CgkJfQoKCQl2YXIgaW5zdCwgYmVmb3Jl
U2hvdywgYmVmb3JlU2hvd1NldHRpbmdzLCBpc0ZpeGVkLAoJCQlvZmZzZXQsIHNob3dBbmltLCBk
dXJhdGlvbjsKCgkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCggaW5wdXQgKTsKCQlpZiAo
ICQuZGF0ZXBpY2tlci5fY3VySW5zdCAmJiAkLmRhdGVwaWNrZXIuX2N1ckluc3QgIT09IGluc3Qg
KSB7CgkJCSQuZGF0ZXBpY2tlci5fY3VySW5zdC5kcERpdi5zdG9wKCB0cnVlLCB0cnVlICk7CgkJ
CWlmICggaW5zdCAmJiAkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nICkgewoJCQkJJC5k
YXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlciggJC5kYXRlcGlja2VyLl9jdXJJbnN0LmlucHV0WyAw
IF0gKTsKCQkJfQoJCX0KCgkJYmVmb3JlU2hvdyA9ICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAi
YmVmb3JlU2hvdyIgKTsKCQliZWZvcmVTaG93U2V0dGluZ3MgPSBiZWZvcmVTaG93ID8gYmVmb3Jl
U2hvdy5hcHBseSggaW5wdXQsIFsgaW5wdXQsIGluc3QgXSApIDoge307CgkJaWYgKCBiZWZvcmVT
aG93U2V0dGluZ3MgPT09IGZhbHNlICkgewoJCQlyZXR1cm47CgkJfQoJCWRhdGVwaWNrZXJfZXh0
ZW5kUmVtb3ZlKCBpbnN0LnNldHRpbmdzLCBiZWZvcmVTaG93U2V0dGluZ3MgKTsKCgkJaW5zdC5s
YXN0VmFsID0gbnVsbDsKCQkkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCA9IGlucHV0OwoJCSQuZGF0
ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZCggaW5zdCApOwoKCQlpZiAoICQuZGF0ZXBpY2tlci5f
aW5EaWFsb2cgKSB7IC8vIGhpZGUgY3Vyc29yCgkJCWlucHV0LnZhbHVlID0gIiI7CgkJfQoJCWlm
ICggISQuZGF0ZXBpY2tlci5fcG9zICkgeyAvLyBwb3NpdGlvbiBiZWxvdyBpbnB1dAoJCQkkLmRh
dGVwaWNrZXIuX3BvcyA9ICQuZGF0ZXBpY2tlci5fZmluZFBvcyggaW5wdXQgKTsKCQkJJC5kYXRl
cGlja2VyLl9wb3NbIDEgXSArPSBpbnB1dC5vZmZzZXRIZWlnaHQ7IC8vIGFkZCB0aGUgaGVpZ2h0
CgkJfQoKCQlpc0ZpeGVkID0gZmFsc2U7CgkJJCggaW5wdXQgKS5wYXJlbnRzKCkuZWFjaCggZnVu
Y3Rpb24oKSB7CgkJCWlzRml4ZWQgfD0gJCggdGhpcyApLmNzcyggInBvc2l0aW9uIiApID09PSAi
Zml4ZWQiOwoJCQlyZXR1cm4gIWlzRml4ZWQ7CgkJfSApOwoKCQlvZmZzZXQgPSB7IGxlZnQ6ICQu
ZGF0ZXBpY2tlci5fcG9zWyAwIF0sIHRvcDogJC5kYXRlcGlja2VyLl9wb3NbIDEgXSB9OwoJCSQu
ZGF0ZXBpY2tlci5fcG9zID0gbnVsbDsKCgkJLy90byBhdm9pZCBmbGFzaGVzIG9uIEZpcmVmb3gK
CQlpbnN0LmRwRGl2LmVtcHR5KCk7CgoJCS8vIGRldGVybWluZSBzaXppbmcgb2Zmc2NyZWVuCgkJ
aW5zdC5kcERpdi5jc3MoIHsgcG9zaXRpb246ICJhYnNvbHV0ZSIsIGRpc3BsYXk6ICJibG9jayIs
IHRvcDogIi0xMDAwcHgiIH0gKTsKCQkkLmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIoIGlu
c3QgKTsKCgkJLy8gZml4IHdpZHRoIGZvciBkeW5hbWljIG51bWJlciBvZiBkYXRlIHBpY2tlcnMK
CQkvLyBhbmQgYWRqdXN0IHBvc2l0aW9uIGJlZm9yZSBzaG93aW5nCgkJb2Zmc2V0ID0gJC5kYXRl
cGlja2VyLl9jaGVja09mZnNldCggaW5zdCwgb2Zmc2V0LCBpc0ZpeGVkICk7CgkJaW5zdC5kcERp
di5jc3MoIHsgcG9zaXRpb246ICggJC5kYXRlcGlja2VyLl9pbkRpYWxvZyAmJiAkLmJsb2NrVUkg
PwoJCQkic3RhdGljIiA6ICggaXNGaXhlZCA/ICJmaXhlZCIgOiAiYWJzb2x1dGUiICkgKSwgZGlz
cGxheTogIm5vbmUiLAoJCQlsZWZ0OiBvZmZzZXQubGVmdCArICJweCIsIHRvcDogb2Zmc2V0LnRv
cCArICJweCIgfSApOwoKCQlpZiAoICFpbnN0LmlubGluZSApIHsKCQkJc2hvd0FuaW0gPSAkLmRh
dGVwaWNrZXIuX2dldCggaW5zdCwgInNob3dBbmltIiApOwoJCQlkdXJhdGlvbiA9ICQuZGF0ZXBp
Y2tlci5fZ2V0KCBpbnN0LCAiZHVyYXRpb24iICk7CgkJCWluc3QuZHBEaXYuY3NzKCAiei1pbmRl
eCIsIGRhdGVwaWNrZXJfZ2V0WmluZGV4KCAkKCBpbnB1dCApICkgKyAxICk7CgkJCSQuZGF0ZXBp
Y2tlci5fZGF0ZXBpY2tlclNob3dpbmcgPSB0cnVlOwoKCQkJaWYgKCAkLmVmZmVjdHMgJiYgJC5l
ZmZlY3RzLmVmZmVjdFsgc2hvd0FuaW0gXSApIHsKCQkJCWluc3QuZHBEaXYuc2hvdyggc2hvd0Fu
aW0sICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic2hvd09wdGlvbnMiICksIGR1cmF0aW9uICk7
CgkJCX0gZWxzZSB7CgkJCQlpbnN0LmRwRGl2WyBzaG93QW5pbSB8fCAic2hvdyIgXSggc2hvd0Fu
aW0gPyBkdXJhdGlvbiA6IG51bGwgKTsKCQkJfQoKCQkJaWYgKCAkLmRhdGVwaWNrZXIuX3Nob3Vs
ZEZvY3VzSW5wdXQoIGluc3QgKSApIHsKCQkJCWluc3QuaW5wdXQudHJpZ2dlciggImZvY3VzIiAp
OwoJCQl9CgoJCQkkLmRhdGVwaWNrZXIuX2N1ckluc3QgPSBpbnN0OwoJCX0KCX0sCgoJLyogR2Vu
ZXJhdGUgdGhlIGRhdGUgcGlja2VyIGNvbnRlbnQuICovCglfdXBkYXRlRGF0ZXBpY2tlcjogZnVu
Y3Rpb24oIGluc3QgKSB7CgkJdGhpcy5tYXhSb3dzID0gNDsgLy9SZXNldCB0aGUgbWF4IG51bWJl
ciBvZiByb3dzIGJlaW5nIGRpc3BsYXllZCAoc2VlICM3MDQzKQoJCWRhdGVwaWNrZXJfaW5zdEFj
dGl2ZSA9IGluc3Q7IC8vIGZvciBkZWxlZ2F0ZSBob3ZlciBldmVudHMKCQlpbnN0LmRwRGl2LmVt
cHR5KCkuYXBwZW5kKCB0aGlzLl9nZW5lcmF0ZUhUTUwoIGluc3QgKSApOwoJCXRoaXMuX2F0dGFj
aEhhbmRsZXJzKCBpbnN0ICk7CgoJCXZhciBvcmlneWVhcnNodG1sLAoJCQludW1Nb250aHMgPSB0
aGlzLl9nZXROdW1iZXJPZk1vbnRocyggaW5zdCApLAoJCQljb2xzID0gbnVtTW9udGhzWyAxIF0s
CgkJCXdpZHRoID0gMTcsCgkJCWFjdGl2ZUNlbGwgPSBpbnN0LmRwRGl2LmZpbmQoICIuIiArIHRo
aXMuX2RheU92ZXJDbGFzcyArICIgYSIgKTsKCgkJaWYgKCBhY3RpdmVDZWxsLmxlbmd0aCA+IDAg
KSB7CgkJCWRhdGVwaWNrZXJfaGFuZGxlTW91c2VvdmVyLmFwcGx5KCBhY3RpdmVDZWxsLmdldCgg
MCApICk7CgkJfQoKCQlpbnN0LmRwRGl2LnJlbW92ZUNsYXNzKCAidWktZGF0ZXBpY2tlci1tdWx0
aS0yIHVpLWRhdGVwaWNrZXItbXVsdGktMyB1aS1kYXRlcGlja2VyLW11bHRpLTQiICkud2lkdGgo
ICIiICk7CgkJaWYgKCBjb2xzID4gMSApIHsKCQkJaW5zdC5kcERpdi5hZGRDbGFzcyggInVpLWRh
dGVwaWNrZXItbXVsdGktIiArIGNvbHMgKS5jc3MoICJ3aWR0aCIsICggd2lkdGggKiBjb2xzICkg
KyAiZW0iICk7CgkJfQoJCWluc3QuZHBEaXZbICggbnVtTW9udGhzWyAwIF0gIT09IDEgfHwgbnVt
TW9udGhzWyAxIF0gIT09IDEgPyAiYWRkIiA6ICJyZW1vdmUiICkgKwoJCQkiQ2xhc3MiIF0oICJ1
aS1kYXRlcGlja2VyLW11bHRpIiApOwoJCWluc3QuZHBEaXZbICggdGhpcy5fZ2V0KCBpbnN0LCAi
aXNSVEwiICkgPyAiYWRkIiA6ICJyZW1vdmUiICkgKwoJCQkiQ2xhc3MiIF0oICJ1aS1kYXRlcGlj
a2VyLXJ0bCIgKTsKCgkJaWYgKCBpbnN0ID09PSAkLmRhdGVwaWNrZXIuX2N1ckluc3QgJiYgJC5k
YXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyAmJiAkLmRhdGVwaWNrZXIuX3Nob3VsZEZvY3Vz
SW5wdXQoIGluc3QgKSApIHsKCQkJaW5zdC5pbnB1dC50cmlnZ2VyKCAiZm9jdXMiICk7CgkJfQoK
CQkvLyBEZWZmZXJlZCByZW5kZXIgb2YgdGhlIHllYXJzIHNlbGVjdCAodG8gYXZvaWQgZmxhc2hl
cyBvbiBGaXJlZm94KQoJCWlmICggaW5zdC55ZWFyc2h0bWwgKSB7CgkJCW9yaWd5ZWFyc2h0bWwg
PSBpbnN0LnllYXJzaHRtbDsKCQkJc2V0VGltZW91dCggZnVuY3Rpb24oKSB7CgoJCQkJLy9hc3N1
cmUgdGhhdCBpbnN0LnllYXJzaHRtbCBkaWRuJ3QgY2hhbmdlLgoJCQkJaWYgKCBvcmlneWVhcnNo
dG1sID09PSBpbnN0LnllYXJzaHRtbCAmJiBpbnN0LnllYXJzaHRtbCApIHsKCQkJCQlpbnN0LmRw
RGl2LmZpbmQoICJzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyOmZpcnN0IiApLnJlcGxhY2VXaXRo
KCBpbnN0LnllYXJzaHRtbCApOwoJCQkJfQoJCQkJb3JpZ3llYXJzaHRtbCA9IGluc3QueWVhcnNo
dG1sID0gbnVsbDsKCQkJfSwgMCApOwoJCX0KCX0sCgoJLy8gIzY2OTQgLSBkb24ndCBmb2N1cyB0
aGUgaW5wdXQgaWYgaXQncyBhbHJlYWR5IGZvY3VzZWQKCS8vIHRoaXMgYnJlYWtzIHRoZSBjaGFu
Z2UgZXZlbnQgaW4gSUUKCS8vIFN1cHBvcnQ6IElFIGFuZCBqUXVlcnkgPDEuOQoJX3Nob3VsZEZv
Y3VzSW5wdXQ6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXJldHVybiBpbnN0LmlucHV0ICYmIGluc3Qu
aW5wdXQuaXMoICI6dmlzaWJsZSIgKSAmJiAhaW5zdC5pbnB1dC5pcyggIjpkaXNhYmxlZCIgKSAm
JiAhaW5zdC5pbnB1dC5pcyggIjpmb2N1cyIgKTsKCX0sCgoJLyogQ2hlY2sgcG9zaXRpb25pbmcg
dG8gcmVtYWluIG9uIHNjcmVlbi4gKi8KCV9jaGVja09mZnNldDogZnVuY3Rpb24oIGluc3QsIG9m
ZnNldCwgaXNGaXhlZCApIHsKCQl2YXIgZHBXaWR0aCA9IGluc3QuZHBEaXYub3V0ZXJXaWR0aCgp
LAoJCQlkcEhlaWdodCA9IGluc3QuZHBEaXYub3V0ZXJIZWlnaHQoKSwKCQkJaW5wdXRXaWR0aCA9
IGluc3QuaW5wdXQgPyBpbnN0LmlucHV0Lm91dGVyV2lkdGgoKSA6IDAsCgkJCWlucHV0SGVpZ2h0
ID0gaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQub3V0ZXJIZWlnaHQoKSA6IDAsCgkJCXZpZXdXaWR0
aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCArICggaXNGaXhlZCA/IDAg
OiAkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoKSApLAoJCQl2aWV3SGVpZ2h0ID0gZG9jdW1lbnQu
ZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCArICggaXNGaXhlZCA/IDAgOiAkKCBkb2N1bWVu
dCApLnNjcm9sbFRvcCgpICk7CgoJCW9mZnNldC5sZWZ0IC09ICggdGhpcy5fZ2V0KCBpbnN0LCAi
aXNSVEwiICkgPyAoIGRwV2lkdGggLSBpbnB1dFdpZHRoICkgOiAwICk7CgkJb2Zmc2V0LmxlZnQg
LT0gKCBpc0ZpeGVkICYmIG9mZnNldC5sZWZ0ID09PSBpbnN0LmlucHV0Lm9mZnNldCgpLmxlZnQg
KSA/ICQoIGRvY3VtZW50ICkuc2Nyb2xsTGVmdCgpIDogMDsKCQlvZmZzZXQudG9wIC09ICggaXNG
aXhlZCAmJiBvZmZzZXQudG9wID09PSAoIGluc3QuaW5wdXQub2Zmc2V0KCkudG9wICsgaW5wdXRI
ZWlnaHQgKSApID8gJCggZG9jdW1lbnQgKS5zY3JvbGxUb3AoKSA6IDA7CgoJCS8vIE5vdyBjaGVj
ayBpZiBkYXRlcGlja2VyIGlzIHNob3dpbmcgb3V0c2lkZSB3aW5kb3cgdmlld3BvcnQgLSBtb3Zl
IHRvIGEgYmV0dGVyIHBsYWNlIGlmIHNvLgoJCW9mZnNldC5sZWZ0IC09IE1hdGgubWluKCBvZmZz
ZXQubGVmdCwgKCBvZmZzZXQubGVmdCArIGRwV2lkdGggPiB2aWV3V2lkdGggJiYgdmlld1dpZHRo
ID4gZHBXaWR0aCApID8KCQkJTWF0aC4=</Default>
</Parameter>

<Parameter name="Frag6980641884580382854271225">
<Default>cy5vZmZzZXRQYXJlbnRbIDAgXSApICkgewoJCQlwby5sZWZ0ICs9IHRoaXMuc2Nyb2xsUGFyZW50
LnNjcm9sbExlZnQoKTsKCQkJcG8udG9wICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgp
OwoJCX0KCgkJaWYgKCB0aGlzLl9pc1Jvb3ROb2RlKCB0aGlzLm9mZnNldFBhcmVudFsgMCBdICkg
KSB7CgkJCXBvID0geyB0b3A6IDAsIGxlZnQ6IDAgfTsKCQl9CgoJCXJldHVybiB7CgkJCXRvcDog
cG8udG9wICsgKCBwYXJzZUludCggdGhpcy5vZmZzZXRQYXJlbnQuY3NzKCAiYm9yZGVyVG9wV2lk
dGgiICksIDEwICkgfHwgMCApLAoJCQlsZWZ0OiBwby5sZWZ0ICsgKCBwYXJzZUludCggdGhpcy5v
ZmZzZXRQYXJlbnQuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKQoJCX07CgoJ
fSwKCglfZ2V0UmVsYXRpdmVPZmZzZXQ6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy5jc3NQb3Np
dGlvbiAhPT0gInJlbGF0aXZlIiApIHsKCQkJcmV0dXJuIHsgdG9wOiAwLCBsZWZ0OiAwIH07CgkJ
fQoKCQl2YXIgcCA9IHRoaXMuZWxlbWVudC5wb3NpdGlvbigpLAoJCQlzY3JvbGxJc1Jvb3ROb2Rl
ID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApOwoKCQlyZXR1cm4g
ewoJCQl0b3A6IHAudG9wIC0gKCBwYXJzZUludCggdGhpcy5oZWxwZXIuY3NzKCAidG9wIiApLCAx
MCApIHx8IDAgKSArCgkJCQkoICFzY3JvbGxJc1Jvb3ROb2RlID8gdGhpcy5zY3JvbGxQYXJlbnQu
c2Nyb2xsVG9wKCkgOiAwICksCgkJCWxlZnQ6IHAubGVmdCAtICggcGFyc2VJbnQoIHRoaXMuaGVs
cGVyLmNzcyggImxlZnQiICksIDEwICkgfHwgMCApICsKCQkJCSggIXNjcm9sbElzUm9vdE5vZGUg
PyB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkgOiAwICkKCQl9OwoKCX0sCgoJX2NhY2hl
TWFyZ2luczogZnVuY3Rpb24oKSB7CgkJdGhpcy5tYXJnaW5zID0gewoJCQlsZWZ0OiAoIHBhcnNl
SW50KCB0aGlzLmVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKSwgMTAgKSB8fCAwICksCgkJCXRv
cDogKCBwYXJzZUludCggdGhpcy5lbGVtZW50LmNzcyggIm1hcmdpblRvcCIgKSwgMTAgKSB8fCAw
ICksCgkJCXJpZ2h0OiAoIHBhcnNlSW50KCB0aGlzLmVsZW1lbnQuY3NzKCAibWFyZ2luUmlnaHQi
ICksIDEwICkgfHwgMCApLAoJCQlib3R0b206ICggcGFyc2VJbnQoIHRoaXMuZWxlbWVudC5jc3Mo
ICJtYXJnaW5Cb3R0b20iICksIDEwICkgfHwgMCApCgkJfTsKCX0sCgoJX2NhY2hlSGVscGVyUHJv
cG9ydGlvbnM6IGZ1bmN0aW9uKCkgewoJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMgPSB7CgkJCXdp
ZHRoOiB0aGlzLmhlbHBlci5vdXRlcldpZHRoKCksCgkJCWhlaWdodDogdGhpcy5oZWxwZXIub3V0
ZXJIZWlnaHQoKQoJCX07Cgl9LAoKCV9zZXRDb250YWlubWVudDogZnVuY3Rpb24oKSB7CgoJCXZh
ciBpc1VzZXJTY3JvbGxhYmxlLCBjLCBjZSwKCQkJbyA9IHRoaXMub3B0aW9ucywKCQkJZG9jdW1l
bnQgPSB0aGlzLmRvY3VtZW50WyAwIF07CgoJCXRoaXMucmVsYXRpdmVDb250YWluZXIgPSBudWxs
OwoKCQlpZiAoICFvLmNvbnRhaW5tZW50ICkgewoJCQl0aGlzLmNvbnRhaW5tZW50ID0gbnVsbDsK
CQkJcmV0dXJuOwoJCX0KCgkJaWYgKCBvLmNvbnRhaW5tZW50ID09PSAid2luZG93IiApIHsKCQkJ
dGhpcy5jb250YWlubWVudCA9IFsKCQkJCSQoIHdpbmRvdyApLnNjcm9sbExlZnQoKSAtIHRoaXMu
b2Zmc2V0LnJlbGF0aXZlLmxlZnQgLSB0aGlzLm9mZnNldC5wYXJlbnQubGVmdCwKCQkJCSQoIHdp
bmRvdyApLnNjcm9sbFRvcCgpIC0gdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wIC0gdGhpcy5vZmZz
ZXQucGFyZW50LnRvcCwKCQkJCSQoIHdpbmRvdyApLnNjcm9sbExlZnQoKSArICQoIHdpbmRvdyAp
LndpZHRoKCkgLQoJCQkJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSB0aGlzLm1hcmdp
bnMubGVmdCwKCQkJCSQoIHdpbmRvdyApLnNjcm9sbFRvcCgpICsKCQkJCQkoICQoIHdpbmRvdyAp
LmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQgKSAtCgkJ
CQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0aGlzLm1hcmdpbnMudG9wCgkJCV07
CgkJCXJldHVybjsKCQl9CgoJCWlmICggby5jb250YWlubWVudCA9PT0gImRvY3VtZW50IiApIHsK
CQkJdGhpcy5jb250YWlubWVudCA9IFsKCQkJCTAsCgkJCQkwLAoJCQkJJCggZG9jdW1lbnQgKS53
aWR0aCgpIC0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIHRoaXMubWFyZ2lucy5sZWZ0
LAoJCQkJKCAkKCBkb2N1bWVudCApLmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9k
ZS5zY3JvbGxIZWlnaHQgKSAtCgkJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0
aGlzLm1hcmdpbnMudG9wCgkJCV07CgkJCXJldHVybjsKCQl9CgoJCWlmICggby5jb250YWlubWVu
dC5jb25zdHJ1Y3RvciA9PT0gQXJyYXkgKSB7CgkJCXRoaXMuY29udGFpbm1lbnQgPSBvLmNvbnRh
aW5tZW50OwoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJwYXJlbnQi
ICkgewoJCQlvLmNvbnRhaW5tZW50ID0gdGhpcy5oZWxwZXJbIDAgXS5wYXJlbnROb2RlOwoJCX0K
CgkJYyA9ICQoIG8uY29udGFpbm1lbnQgKTsKCQljZSA9IGNbIDAgXTsKCgkJaWYgKCAhY2UgKSB7
CgkJCXJldHVybjsKCQl9CgoJCWlzVXNlclNjcm9sbGFibGUgPSAvKHNjcm9sbHxhdXRvKS8udGVz
dCggYy5jc3MoICJvdmVyZmxvdyIgKSApOwoKCQl0aGlzLmNvbnRhaW5tZW50ID0gWwoJCQkoIHBh
cnNlSW50KCBjLmNzcyggImJvcmRlckxlZnRXaWR0aCIgKSwgMTAgKSB8fCAwICkgKwoJCQkJKCBw
YXJzZUludCggYy5jc3MoICJwYWRkaW5nTGVmdCIgKSwgMTAgKSB8fCAwICksCgkJCSggcGFyc2VJ
bnQoIGMuY3NzKCAiYm9yZGVyVG9wV2lkdGgiICksIDEwICkgfHwgMCApICsKCQkJCSggcGFyc2VJ
bnQoIGMuY3NzKCAicGFkZGluZ1RvcCIgKSwgMTAgKSB8fCAwICksCgkJCSggaXNVc2VyU2Nyb2xs
YWJsZSA/IE1hdGgubWF4KCBjZS5zY3JvbGxXaWR0aCwgY2Uub2Zmc2V0V2lkdGggKSA6IGNlLm9m
ZnNldFdpZHRoICkgLQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJSaWdodFdpZHRoIiAp
LCAxMCApIHx8IDAgKSAtCgkJCQkoIHBhcnNlSW50KCBjLmNzcyggInBhZGRpbmdSaWdodCIgKSwg
MTAgKSB8fCAwICkgLQoJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtCgkJCQl0aGlz
Lm1hcmdpbnMubGVmdCAtCgkJCQl0aGlzLm1hcmdpbnMucmlnaHQsCgkJCSggaXNVc2VyU2Nyb2xs
YWJsZSA/IE1hdGgubWF4KCBjZS5zY3JvbGxIZWlnaHQsIGNlLm9mZnNldEhlaWdodCApIDogY2Uu
b2Zmc2V0SGVpZ2h0ICkgLQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJCb3R0b21XaWR0
aCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJwYWRkaW5nQm90dG9t
IiApLCAxMCApIHx8IDAgKSAtCgkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtCgkJ
CQl0aGlzLm1hcmdpbnMudG9wIC0KCQkJCXRoaXMubWFyZ2lucy5ib3R0b20KCQldOwoJCXRoaXMu
cmVsYXRpdmVDb250YWluZXIgPSBjOwoJfSwKCglfY29udmVydFBvc2l0aW9uVG86IGZ1bmN0aW9u
KCBkLCBwb3MgKSB7CgoJCWlmICggIXBvcyApIHsKCQkJcG9zID0gdGhpcy5wb3NpdGlvbjsKCQl9
CgoJCXZhciBtb2QgPSBkID09PSAiYWJzb2x1dGUiID8gMSA6IC0xLAoJCQlzY3JvbGxJc1Jvb3RO
b2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApOwoKCQlyZXR1
cm4gewoJCQl0b3A6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBv
cy50b3AJKwoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJlbGF0
aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZzZXQu
cmVsYXRpdmUudG9wICogbW9kICsKCgkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdp
dGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LnRv
cCAqIG1vZCAtCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRo
aXMub2Zmc2V0LnNjcm9sbC50b3AgOgoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiB0aGlz
Lm9mZnNldC5zY3JvbGwudG9wICkgKSAqIG1vZCApCgkJCSksCgkJCWxlZnQ6ICgKCgkJCQkvLyBU
aGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBvcy5sZWZ0ICsKCgkJCQkvLyBPbmx5IGZv
ciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50
IHRvIG9mZnNldCBwYXJlbnQKCQkJCXRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQgKiBtb2QgKwoK
CQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQg
KyBib3JkZXIpCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQubGVmdCAqIG1vZAktCgkJCQkoICggdGhp
cy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0
IDoKCQkJCQkoIHNjcm9sbElzUm9vdE5vZGUgPyAwIDogdGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQg
KSApICogbW9kICkKCQkJKQoJCX07CgoJfSwKCglfZ2VuZXJhdGVQb3NpdGlvbjogZnVuY3Rpb24o
IGV2ZW50LCBjb25zdHJhaW5Qb3NpdGlvbiApIHsKCgkJdmFyIGNvbnRhaW5tZW50LCBjbywgdG9w
LCBsZWZ0LAoJCQlvID0gdGhpcy5vcHRpb25zLAoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5f
aXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApLAoJCQlwYWdlWCA9IGV2ZW50LnBh
Z2VYLAoJCQlwYWdlWSA9IGV2ZW50LnBhZ2VZOwoKCQkvLyBDYWNoZSB0aGUgc2Nyb2xsCgkJaWYg
KCAhc2Nyb2xsSXNSb290Tm9kZSB8fCAhdGhpcy5vZmZzZXQuc2Nyb2xsICkgewoJCQl0aGlzLm9m
ZnNldC5zY3JvbGwgPSB7CgkJCQl0b3A6IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpLAoJ
CQkJbGVmdDogdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpCgkJCX07CgkJfQoKCQkvKgoJ
CSAqIC0gUG9zaXRpb24gY29uc3RyYWluaW5nIC0KCQkgKiBDb25zdHJhaW4gdGhlIHBvc2l0aW9u
IHRvIGEgbWl4IG9mIGdyaWQsIGNvbnRhaW5tZW50LgoJCSAqLwoKCQkvLyBJZiB3ZSBhcmUgbm90
IGRyYWdnaW5nIHlldCwgd2Ugd29uJ3QgY2hlY2sgZm9yIG9wdGlvbnMKCQlpZiAoIGNvbnN0cmFp
blBvc2l0aW9uICkgewoJCQlpZiAoIHRoaXMuY29udGFpbm1lbnQgKSB7CgkJCQlpZiAoIHRoaXMu
cmVsYXRpdmVDb250YWluZXIgKSB7CgkJCQkJY28gPSB0aGlzLnJlbGF0aXZlQ29udGFpbmVyLm9m
ZnNldCgpOwoJCQkJCWNvbnRhaW5tZW50ID0gWwoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAwIF0g
KyBjby5sZWZ0LAoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAxIF0gKyBjby50b3AsCgkJCQkJCXRo
aXMuY29udGFpbm1lbnRbIDIgXSArIGNvLmxlZnQsCgkJCQkJCXRoaXMuY29udGFpbm1lbnRbIDMg
XSArIGNvLnRvcAoJCQkJCV07CgkJCQl9IGVsc2UgewoJCQkJCWNvbnRhaW5tZW50ID0gdGhpcy5j
b250YWlubWVudDsKCQkJCX0KCgkJCQlpZiAoIGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQuY2xp
Y2subGVmdCA8IGNvbnRhaW5tZW50WyAwIF0gKSB7CgkJCQkJcGFnZVggPSBjb250YWlubWVudFsg
MCBdICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdDsKCQkJCX0KCQkJCWlmICggZXZlbnQucGFnZVkg
LSB0aGlzLm9mZnNldC5jbGljay50b3AgPCBjb250YWlubWVudFsgMSBdICkgewoJCQkJCXBhZ2VZ
ID0gY29udGFpbm1lbnRbIDEgXSArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcDsKCQkJCX0KCQkJCWlm
ICggZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID4gY29udGFpbm1lbnRbIDIg
XSApIHsKCQkJCQlwYWdlWCA9IGNvbnRhaW5tZW50WyAyIF0gKyB0aGlzLm9mZnNldC5jbGljay5s
ZWZ0OwoJCQkJfQoJCQkJaWYgKCBldmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+
IGNvbnRhaW5tZW50WyAzIF0gKSB7CgkJCQkJcGFnZVkgPSBjb250YWlubWVudFsgMyBdICsgdGhp
cy5vZmZzZXQuY2xpY2sudG9wOwoJCQkJfQoJCQl9CgoJCQlpZiAoIG8uZ3JpZCApIHsKCgkJCQkv
L0NoZWNrIGZvciBncmlkIGVsZW1lbnRzIHNldCB0byAwIHRvIHByZXZlbnQgZGl2aWRlIGJ5IDAg
ZXJyb3IgY2F1c2luZyBpbnZhbGlkCgkJCQkvLyBhcmd1bWVudCBlcnJvcnMgaW4gSUUgKHNlZSB0
aWNrZXQgIzY5NTApCgkJCQl0b3AgPSBvLmdyaWRbIDEgXSA/IHRoaXMub3JpZ2luYWxQYWdlWSAr
IE1hdGgucm91bmQoICggcGFnZVkgLQoJCQkJCXRoaXMub3JpZ2luYWxQYWdlWSApIC8gby5ncmlk
WyAxIF0gKSAqIG8uZ3JpZFsgMSBdIDogdGhpcy5vcmlnaW5hbFBhZ2VZOwoJCQkJcGFnZVkgPSBj
b250YWlubWVudCA/ICggKCB0b3AgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPj0gY29udGFpbm1l
bnRbIDEgXSB8fAoJCQkJCXRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+IGNvbnRhaW5tZW50
WyAzIF0gKSA/CgkJCQkJCXRvcCA6CgkJCQkJCSggKCB0b3AgLSB0aGlzLm9mZnNldC5jbGljay50
b3AgPj0gY29udGFpbm1lbnRbIDEgXSApID8KCQkJCQkJCXRvcCAtIG8uZ3JpZFsgMSBdIDogdG9w
ICsgby5ncmlkWyAxIF0gKSApIDogdG9wOwoKCQkJCWxlZnQgPSBvLmdyaWRbIDAgXSA/IHRoaXMu
b3JpZ2luYWxQYWdlWCArCgkJCQkJTWF0aC5yb3VuZCggKCBwYWdlWCAtIHRoaXMub3JpZ2luYWxQ
YWdlWCApIC8gby5ncmlkWyAwIF0gKSAqIG8uZ3JpZFsgMCBdIDoKCQkJCQl0aGlzLm9yaWdpbmFs
UGFnZVg7CgkJCQlwYWdlWCA9IGNvbnRhaW5tZW50ID8gKCAoIGxlZnQgLSB0aGlzLm9mZnNldC5j
bGljay5sZWZ0ID49IGNvbnRhaW5tZW50WyAwIF0gfHwKCQkJCQlsZWZ0IC0gdGhpcy5vZmZzZXQu
Y2xpY2subGVmdCA+IGNvbnRhaW5tZW50WyAyIF0gKSA/CgkJCQkJCWxlZnQgOgoJCQkJCQkoICgg
bGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPj0gY29udGFpbm1lbnRbIDAgXSApID8KCQkJ
CQkJCWxlZnQgLSBvLmdyaWRbIDAgXSA6IGxlZnQgKyBvLmdyaWRbIDAgXSApICkgOiBsZWZ0OwoJ
CQl9CgoJCQlpZiAoIG8uYXhpcyA9PT0gInkiICkgewoJCQkJcGFnZVggPSB0aGlzLm9yaWdpbmFs
UGFnZVg7CgkJCX0KCgkJCWlmICggby5heGlzID09PSAieCIgKSB7CgkJCQlwYWdlWSA9IHRoaXMu
b3JpZ2luYWxQYWdlWTsKCQkJfQoJCX0KCgkJcmV0dXJuIHsKCQkJdG9wOiAoCgoJCQkJLy8gVGhl
IGFic29sdXRlIG1vdXNlIHBvc2l0aW9uCgkJCQlwYWdlWSAtCgoJCQkJLy8gQ2xpY2sgb2Zmc2V0
IChyZWxhdGl2ZSB0byB0aGUgZWxlbWVudCkKCQkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCAtCgoJ
CQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0
IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50CgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50
b3AgLQoKCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChv
ZmZzZXQgKyBib3JkZXIpCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICsKCQkJCSggdGhpcy5j
c3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMub2Zmc2V0LnNjcm9sbC50b3AgOgoJ
CQkJCSggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwudG9wICkgKQoJ
CQkpLAoJCQlsZWZ0OiAoCgoJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uCgkJCQlw
YWdlWCAtCgoJCQkJLy8gQ2xpY2sgb2Zmc2V0IChyZWxhdGl2ZSB0byB0aGUgZWxlbWVudCkKCQkJ
CXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgLQoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0
aW9uZWQgbm9kZXM6IFJlbGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVu
dAoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAtCgoJCQkJLy8gVGhlIG9mZnNldFBhcmVu
dCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikKCQkJCXRoaXMub2Zm
c2V0LnBhcmVudC5sZWZ0ICsKCQkJCSggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJ
CQkJLXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0IDoKCQkJCQkoIHNjcm9sbElzUm9vdE5vZGUgPyAw
IDogdGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQgKSApCgkJCSkKCQl9OwoKCX0sCgoJX2NsZWFyOiBm
dW5jdGlvbigpIHsKCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5oZWxwZXIsICJ1aS1kcmFnZ2Fi
bGUtZHJhZ2dpbmciICk7CgkJaWYgKCB0aGlzLmhlbHBlclsgMCBdICE9PSB0aGlzLmVsZW1lbnRb
IDAgXSAmJiAhdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsICkgewoJCQl0aGlzLmhlbHBlci5yZW1v
dmUoKTsKCQl9CgkJdGhpcy5oZWxwZXIgPSBudWxsOwoJCXRoaXMuY2FuY2VsSGVscGVyUmVtb3Zh
bCA9IGZhbHNlOwoJCWlmICggdGhpcy5kZXN0cm95T25DbGVhciApIHsKCQkJdGhpcy5kZXN0cm95
KCk7CgkJfQoJfSwKCgkvLyBGcm9tIG5vdyBvbiBidWxrIHN0dWZmIC0gbWFpbmx5IGhlbHBlcnMK
CglfdHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGV2ZW50LCB1aSApIHsKCQl1aSA9IHVpIHx8IHRo
aXMuX3VpSGFzaCgpOwoJCSQudWkucGx1Z2luLmNhbGwoIHRoaXMsIHR5cGUsIFsgZXZlbnQsIHVp
LCB0aGlzIF0sIHRydWUgKTsKCgkJLy8gQWJzb2x1dGUgcG9zaXRpb24gYW5kIG9mZnNldCAoc2Vl
ICM2ODg0ICkgaGF2ZSB0byBiZSByZWNhbGN1bGF0ZWQgYWZ0ZXIgcGx1Z2lucwoJCWlmICggL14o
ZHJhZ3xzdGFydHxzdG9wKS8udGVzdCggdHlwZSApICkgewoJCQl0aGlzLnBvc2l0aW9uQWJzID0g
dGhpcy5fY29udmVydFBvc2l0aW9uVG8oICJhYnNvbHV0ZSIgKTsKCQkJdWkub2Zmc2V0ID0gdGhp
cy5wb3NpdGlvbkFiczsKCQl9CgkJcmV0dXJuICQuV2lkZ2V0LnByb3RvdHlwZS5fdHJpZ2dlci5j
YWxsKCB0aGlzLCB0eXBlLCBldmVudCwgdWkgKTsKCX0sCgoJcGx1Z2luczoge30sCgoJX3VpSGFz
aDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHsKCQkJaGVscGVyOiB0aGlzLmhlbHBlciwKCQkJcG9z
aXRpb246IHRoaXMucG9zaXRpb24sCgkJCW9yaWdpbmFsUG9zaXRpb246IHRoaXMub3JpZ2luYWxQ
b3NpdGlvbiwKCQkJb2Zmc2V0OiB0aGlzLnBvc2l0aW9uQWJzCgkJfTsKCX0KCn0gKTsKCiQudWku
cGx1Z2luLmFkZCggImRyYWdnYWJsZSIsICJjb25uZWN0VG9Tb3J0YWJsZSIsIHsKCXN0YXJ0OiBm
dW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7CgkJdmFyIHVpU29ydGFibGUgPSAkLmV4
dGVuZCgge30sIHVpLCB7CgkJCWl0ZW06IGRyYWdnYWJsZS5lbGVtZW50CgkJfSApOwoKCQlkcmFn
Z2FibGUuc29ydGFibGVzID0gW107CgkJJCggZHJhZ2dhYmxlLm9wdGlvbnMuY29ubmVjdFRvU29y
dGFibGUgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIHNvcnRhYmxlID0gJCggdGhpcyApLnNv
cnRhYmxlKCAiaW5zdGFuY2UiICk7CgoJCQlpZiAoIHNvcnRhYmxlICYmICFzb3J0YWJsZS5vcHRp
b25zLmRpc2FibGVkICkgewoJCQkJZHJhZ2dhYmxlLnNvcnRhYmxlcy5wdXNoKCBzb3J0YWJsZSAp
OwoKCQkJCS8vIFJlZnJlc2hQb3NpdGlvbnMgaXMgY2FsbGVkIGF0IGRyYWcgc3RhcnQgdG8gcmVm
cmVzaCB0aGUgY29udGFpbmVyQ2FjaGUKCQkJCS8vIHdoaWNoIGlzIHVzZWQgaW4gZHJhZy4gVGhp
cyBlbnN1cmVzIGl0J3MgaW5pdGlhbGl6ZWQgYW5kIHN5bmNocm9uaXplZAoJCQkJLy8gd2l0aCBh
bnkgY2hhbmdlcyB0aGF0IG1pZ2h0IGhhdmUgaGFwcGVuZWQgb24gdGhlIHBhZ2Ugc2luY2UgaW5p
dGlhbGl6YXRpb24uCgkJCQlzb3J0YWJsZS5yZWZyZXNoUG9zaXRpb25zKCk7CgkJCQlzb3J0YWJs
ZS5fdHJpZ2dlciggImFjdGl2YXRlIiwgZXZlbnQsIHVpU29ydGFibGUgKTsKCQkJfQoJCX0gKTsK
CX0sCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7CgkJdmFyIHVpU29y
dGFibGUgPSAkLmV4dGVuZCgge30sIHVpLCB7CgkJCWl0ZW06IGRyYWdnYWJsZS5lbGVtZW50CgkJ
fSApOwoKCQlkcmFnZ2FibGUuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IGZhbHNlOwoKCQkkLmVhY2go
IGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0aW9uKCkgewoJCQl2YXIgc29ydGFibGUgPSB0aGlz
OwoKCQkJaWYgKCBzb3J0YWJsZS5pc092ZXIgKSB7CgkJCQlzb3J0YWJsZS5pc092ZXIgPSAwOwoK
CQkJCS8vIEFsbG93IHRoaXMgc29ydGFibGUgdG8gaGFuZGxlIHJlbW92aW5nIHRoZSBoZWxwZXIK
CQkJCWRyYWdnYWJsZS5jYW5jZWxIZWxwZXJSZW1vdmFsID0gdHJ1ZTsKCQkJCXNvcnRhYmxlLmNh
bmNlbEhlbHBlclJlbW92YWwgPSBmYWxzZTsKCgkJCQkvLyBVc2UgX3N0b3JlZENTUyBUbyByZXN0
b3JlIHByb3BlcnRpZXMgaW4gdGhlIHNvcnRhYmxlLAoJCQkJLy8gYXMgdGhpcyBhbHNvIGhhbmRs
ZXMgcmV2ZXJ0ICgjOTY3NSkgc2luY2UgdGhlIGRyYWdnYWJsZQoJCQkJLy8gbWF5IGhhdmUgbW9k
aWZpZWQgdGhlbSBpbiB1bmV4cGVjdGVkIHdheXMgKCM4ODA5KQoJCQkJc29ydGFibGUuX3N0b3Jl
ZENTUyA9IHsKCQkJCQlwb3NpdGlvbjogc29ydGFibGUucGxhY2Vob2xkZXIuY3NzKCAicG9zaXRp
b24iICksCgkJCQkJdG9wOiBzb3J0YWJsZS5wbGFjZWhvbGRlci5jc3MoICJ0b3AiICksCgkJCQkJ
bGVmdDogc29ydGFibGUucGxhY2Vob2xkZXIuY3NzKCAibGVmdCIgKQoJCQkJfTsKCgkJCQlzb3J0
YWJsZS5fbW91c2VTdG9wKCBldmVudCApOwoKCQkJCS8vIE9uY2UgZHJhZyBoYXMgZW5kZWQsIHRo
ZSBzb3J0YWJsZSBzaG91bGQgcmV0dXJuIHRvIHVzaW5nCgkJCQkvLyBpdHMgb3JpZ2luYWwgaGVs
cGVyLCBub3QgdGhlIHNoYXJlZCBoZWxwZXIgZnJvbSBkcmFnZ2FibGUKCQkJCXNvcnRhYmxlLm9w
dGlvbnMuaGVscGVyID0gc29ydGFibGUub3B0aW9ucy5faGVscGVyOwoJCQl9IGVsc2UgewoKCQkJ
CS8vIFByZXZlbnQgdGhpcyBTb3J0YWJsZSBmcm9tIHJlbW92aW5nIHRoZSBoZWxwZXIuCgkJCQkv
LyBIb3dldmVyLCBkb24ndCBzZXQgdGhlIGRyYWdnYWJsZSB0byByZW1vdmUgdGhlIGhlbHBlcgoJ
CQkJLy8gZWl0aGVyIGFzIGFub3RoZXIgY29ubmVjdGVkIFNvcnRhYmxlIG1heSB5ZXQgaGFuZGxl
IHRoZSByZW1vdmFsLgoJCQkJc29ydGFibGUuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IHRydWU7CgoJ
CQkJc29ydGFibGUuX3RyaWdnZXIoICJkZWFjdGl2YXRlIiwgZXZlbnQsIHVpU29ydGFibGUgKTsK
CQkJfQoJCX0gKTsKCX0sCglkcmFnOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7
CgkJJC5lYWNoKCBkcmFnZ2FibGUuc29ydGFibGVzLCBmdW5jdGlvbigpIHsKCQkJdmFyIGlubmVy
bW9zdEludGVyc2VjdGluZyA9IGZhbHNlLAoJCQkJc29ydGFibGUgPSB0aGlzOwoKCQkJLy8gQ29w
eSBvdmVyIHZhcmlhYmxlcyB0aGF0IHNvcnRhYmxlJ3MgX2ludGVyc2VjdHNXaXRoIHVzZXMKCQkJ
c29ydGFibGUucG9zaXRpb25BYnMgPSBkcmFnZ2FibGUucG9zaXRpb25BYnM7CgkJCXNvcnRhYmxl
LmhlbHBlclByb3BvcnRpb25zID0gZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zOwoJCQlzb3J0
YWJsZS5vZmZzZXQuY2xpY2sgPSBkcmFnZ2FibGUub2Zmc2V0LmNsaWNrOwoKCQkJaWYgKCBzb3J0
YWJsZS5faW50ZXJzZWN0c1dpdGgoIHNvcnRhYmxlLmNvbnRhaW5lckNhY2hlICkgKSB7CgkJCQlp
bm5lcm1vc3RJbnRlcnNlY3RpbmcgPSB0cnVlOwoKCQkJCSQuZWFjaCggZHJhZ2dhYmxlLnNvcnRh
YmxlcywgZnVuY3Rpb24oKSB7CgoJCQkJCS8vIENvcHkgb3ZlciB2YXJpYWJsZXMgdGhhdCBzb3J0
YWJsZSdzIF9pbnRlcnNlY3RzV2l0aCB1c2VzCgkJCQkJdGhpcy5wb3NpdGlvbkFicyA9IGRyYWdn
YWJsZS5wb3NpdGlvbkFiczsKCQkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zID0gZHJhZ2dhYmxl
LmhlbHBlclByb3BvcnRpb25zOwoJCQkJCXRoaXMub2Zmc2V0LmNsaWNrID0gZHJhZ2dhYmxlLm9m
ZnNldC5jbGljazsKCgkJCQkJaWYgKCB0aGlzICE9PSBzb3J0YWJsZSAmJgoJCQkJCQkJdGhpcy5f
aW50ZXJzZWN0c1dpdGgoIHRoaXMuY29udGFpbmVyQ2FjaGUgKSAmJgoJCQkJCQkJJC5jb250YWlu
cyggc29ydGFibGUuZWxlbWVudFsgMCBdLCB0aGlzLmVsZW1lbnRbIDAgXSApICkgewoJCQkJCQlp
bm5lcm1vc3RJbnRlcnNlY3RpbmcgPSBmYWxzZTsKCQkJCQl9CgoJCQkJCXJldHVybiBpbm5lcm1v
c3RJbnRlcnNlY3Rpbmc7CgkJCQl9ICk7CgkJCX0KCgkJCWlmICggaW5uZXJtb3N0SW50ZXJzZWN0
aW5nICkgewoKCQkJCS8vIElmIGl0IGludGVyc2VjdHMsIHdlIHVzZSBhIGxpdHRsZSBpc092ZXIg
dmFyaWFibGUgYW5kIHNldCBpdCBvbmNlLAoJCQkJLy8gc28gdGhhdCB0aGUgbW92ZS1pbiBzdHVm
ZiBnZXRzIGZpcmVkIG9ubHkgb25jZS4KCQkJCWlmICggIXNvcnRhYmxlLmlzT3ZlciApIHsKCQkJ
CQlzb3J0YWJsZS5pc092ZXIgPSAxOwoKCQkJCQkvLyBTdG9yZSBkcmFnZ2FibGUncyBwYXJlbnQg
aW4gY2FzZSB3ZSBuZWVkIHRvIHJlYXBwZW5kIHRvIGl0IGxhdGVyLgoJCQkJCWRyYWdnYWJsZS5f
cGFyZW50ID0gdWkuaGVscGVyLnBhcmVudCgpOwoKCQkJCQlzb3J0YWJsZS5jdXJyZW50SXRlbSA9
IHVpLmhlbHBlcgoJCQkJCQkuYXBwZW5kVG8oIHNvcnRhYmxlLmVsZW1lbnQgKQoJCQkJCQkuZGF0
YSggInVpLXNvcnRhYmxlLWl0ZW0iLCB0cnVlICk7CgoJCQkJCS8vIFN0b3JlIGhlbHBlciBvcHRp
b24gdG8gbGF0ZXIgcmVzdG9yZSBpdAoJCQkJCXNvcnRhYmxlLm9wdGlvbnMuX2hlbHBlciA9IHNv
cnRhYmxlLm9wdGlvbnMuaGVscGVyOwoKCQkJCQlzb3J0YWJsZS5vcHRpb25zLmhlbHBlciA9IGZ1
bmN0aW9uKCkgewoJCQkJCQlyZXR1cm4gdWkuaGVscGVyWyAwIF07CgkJCQkJfTsKCgkJCQkJLy8g
RmlyZSB0aGUgc3RhcnQgZXZlbnRzIG9mIHRoZSBzb3J0YWJsZSB3aXRoIG91ciBwYXNzZWQgYnJv
d3NlciBldmVudCwKCQkJCQkvLyBhbmQgb3VyIG93biBoZWxwZXIgKHNvIGl0IGRvZXNuJ3QgY3Jl
YXRlIGEgbmV3IG9uZSkKCQkJCQlldmVudC50YXJnZXQgPSBzb3J0YWJsZS5jdXJyZW50SXRlbVsg
MCBdOwoJCQkJCXNvcnRhYmxlLl9tb3VzZUNhcHR1cmUoIGV2ZW50LCB0cnVlICk7CgkJCQkJc29y
dGFibGUuX21vdXNlU3RhcnQoIGV2ZW50LCB0cnVlLCB0cnVlICk7CgoJCQkJCS8vIEJlY2F1c2Ug
dGhlIGJyb3dzZXIgZXZlbnQgaXMgd2F5IG9mZiB0aGUgbmV3IGFwcGVuZGVkIHBvcnRsZXQsCgkJ
CQkJLy8gbW9kaWZ5IG5lY2Vzc2FyeSB2YXJpYWJsZXMgdG8gcmVmbGVjdCB0aGUgY2hhbmdlcwoJ
CQkJCXNvcnRhYmxlLm9mZnNldC5jbGljay50b3AgPSBkcmFnZ2FibGUub2Zmc2V0LmNsaWNrLnRv
cDsKCQkJCQlzb3J0YWJsZS5vZmZzZXQuY2xpY2subGVmdCA9IGRyYWdnYWJsZS5vZmZzZXQuY2xp
Y2subGVmdDsKCQkJCQlzb3J0YWJsZS5vZmZzZXQucGFyZW50LmxlZnQgLT0gZHJhZ2dhYmxlLm9m
ZnNldC5wYXJlbnQubGVmdCAtCgkJCQkJCXNvcnRhYmxlLm9mZnNldC5wYXJlbnQubGVmdDsKCQkJ
CQlzb3J0YWJsZS5vZmZzZXQucGFyZW50LnRvcCAtPSBkcmFnZ2FibGUub2Zmc2V0LnBhcmVudC50
b3AgLQoJCQkJCQlzb3J0YWJsZS5vZmZzZXQucGFyZW50LnRvcDsKCgkJCQkJZHJhZ2dhYmxlLl90
cmlnZ2VyKCAidG9Tb3J0YWJsZSIsIGV2ZW50ICk7CgoJCQkJCS8vIEluZm9ybSBkcmFnZ2FibGUg
dGhhdCB0aGUgaGVscGVyIGlzIGluIGEgdmFsaWQgZHJvcCB6b25lLAoJCQkJCS8vIHVzZWQgc29s
ZWx5IGluIHRoZSByZXZlcnQgb3B0aW9uIHRvIGhhbmRsZSAidmFsaWQvaW52YWxpZCIuCgkJCQkJ
ZHJhZ2dhYmxlLmRyb3BwZWQgPSBzb3J0YWJsZS5lbGVtZW50OwoKCQkJCQkvLyBOZWVkIHRvIHJl
ZnJlc2hQb3NpdGlvbnMgb2YgYWxsIHNvcnRhYmxlcyBpbiB0aGUgY2FzZSB0aGF0CgkJCQkJLy8g
YWRkaW5nIHRvIG9uZSBzb3J0YWJsZSBjaGFuZ2VzIHRoZSBsb2NhdGlvbiBvZiB0aGUgb3RoZXIg
c29ydGFibGVzICgjOTY3NSkKCQkJCQkkLmVhY2goIGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0
aW9uKCkgewoJCQkJCQl0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKTsKCQkJCQl9ICk7CgoJCQkJCS8v
IEhhY2sgc28gcmVjZWl2ZS91cGRhdGUgY2FsbGJhY2tzIHdvcmsgKG1vc3RseSkKCQkJCQlkcmFn
Z2FibGUuY3VycmVudEl0ZW0gPSBkcmFnZ2FibGUuZWxlbWVudDsKCQkJCQlzb3J0YWJsZS5mcm9t
T3V0c2lkZSA9IGRyYWdnYWJsZTsKCQkJCX0KCgkJCQlpZiAoIHNvcnRhYmxlLmN1cnJlbnRJdGVt
ICkgewoJCQkJCXNvcnRhYmxlLl9tb3VzZURyYWcoIGV2ZW50ICk7CgoJCQkJCS8vIENvcHkgdGhl
IHNvcnRhYmxlJ3MgcG9zaXRpb24gYmVjYXVzZSB0aGUgZHJhZ2dhYmxlJ3MgY2FuIHBvdGVudGlh
bGx5IHJlZmxlY3QKCQkJCQkvLyBhIHJlbGF0aXZlIHBvc2l0aW9uLCB3aGlsZSBzb3J0YWJsZSBp
cyBhbHdheXMgYWJzb2x1dGUsIHdoaWNoIHRoZSBkcmFnZ2VkCgkJCQkJLy8gZWxlbWVudCBoYXMg
bm93IGJlY29tZS4gKCM4ODA5KQoJCQkJCXVpLnBvc2l0aW9uID0gc29ydGFibGUucG9zaXRpb247
CgkJCQl9CgkJCX0gZWxzZSB7CgoJCQkJLy8gSWYgaXQgZG9lc24ndCBpbnRlcnNlY3Qgd2l0aCB0
aGUgc29ydGFibGUsIGFuZCBpdCBpbnRlcnNlY3RlZCBiZWZvcmUsCgkJCQkvLyB3ZSBmYWtlIHRo
ZSBkcmFnIHN0b3Agb2YgdGhlIHNvcnRhYmxlLCBidXQgbWFrZSBzdXJlIGl0IGRvZXNuJ3QgcmVt
b3ZlCgkJCQkvLyB0aGUgaGVscGVyIGJ5IHVzaW5nIGNhbmNlbEhlbHBlclJlbW92YWwuCgkJCQlp
ZiAoIHNvcnRhYmxlLmlzT3ZlciApIHsKCgkJCQkJc29ydGFibGUuaXNPdmVyID0gMDsKCQkJCQlz
b3J0YWJsZS5jYW5jZWxIZWxwZXJSZW1vdmFsID0gdHJ1ZTsKCgkJCQkJLy8gQ2FsbGluZyBzb3J0
YWJsZSdzIG1vdXNlU3RvcCB3b3VsZCB0cmlnZ2VyIGEgcmV2ZXJ0LAoJCQkJCS8vIHNvIHJldmVy
dCBtdXN0IGJlIHRlbXBvcmFyaWx5IGZhbHNlIHVudGlsIGFmdGVyIG1vdXNlU3RvcCBpcyBjYWxs
ZWQuCgkJCQkJc29ydGFibGUub3B0aW9ucy5fcmV2ZXJ0ID0gc29ydGFibGUub3B0aW9ucy5yZXZl
cnQ7CgkJCQkJc29ydGFibGUub3B0aW9ucy5yZXZlcnQgPSBmYWxzZTsKCgkJCQkJc29ydGFibGUu
X3RyaWdnZXIoICJvdXQiLCBldmVudCwgc29ydGFibGUuX3VpSGFzaCggc29ydGFibGUgKSApOwoJ
CQkJCXNvcnRhYmxlLl9tb3VzZVN0b3AoIGV2ZW50LCB0cnVlICk7CgoJCQkJCS8vIFJlc3RvcmUg
c29ydGFibGUgYmVoYXZpb3JzIHRoYXQgd2VyZSBtb2RmaWVkCgkJCQkJLy8gd2hlbiB0aGUgZHJh
Z2dhYmxlIGVudGVyZWQgdGhlIHNvcnRhYmxlIGFyZWEgKCM5NDgxKQoJCQkJCXNvcnRhYmxlLm9w
dGlvbnMucmV2ZXJ0ID0gc29ydGFibGUub3B0aW9ucy5fcmV2ZXJ0OwoJCQkJCXNvcnRhYmxlLm9w
dGlvbnMuaGVscGVyID0gc29ydGFibGUub3B0aW9ucy5faGVscGVyOwoKCQkJCQlpZiAoIHNvcnRh
YmxlLnBsYWNlaG9sZGVyICkgewoJCQkJCQlzb3J0YWJsZS5wbGFjZWhvbGRlci5yZW1vdmUoKTsK
CQkJCQl9CgoJCQkJCS8vIFJlc3RvcmUgYW5kIHJlY2FsY3VsYXRlIHRoZSBkcmFnZ2FibGUncyBv
ZmZzZXQgY29uc2lkZXJpbmcgdGhlIHNvcnRhYmxlCgkJCQkJLy8gbWF5IGhhdmUgbW9kaWZpZWQg
dGhlbSBpbiB1bmV4cGVjdGVkIHdheXMuICgjODgwOSwgIzEwNjY5KQoJCQkJCXVpLmhlbHBlci5h
cHBlbmRUbyggZHJhZ2dhYmxlLl9wYXJlbnQgKTsKCQkJCQlkcmFnZ2FibGUuX3JlZnJlc2hPZmZz
ZXRzKCBldmVudCApOwoJCQkJCXVpLnBvc2l0aW9uID0gZHJhZ2dhYmxlLl9nZW5lcmF0ZVBvc2l0
aW9uKCBldmVudCwgdHJ1ZSApOwoKCQkJCQlkcmFnZ2FibGUuX3RyaWdnZXIoICJmcm9tU29ydGFi
bGUiLCBldmVudCApOwoKCQkJCQkvLyBJbmZvcm0gZHJhZ2dhYmxlIHRoYXQgdGhlIGhlbHBlciBp
cyBubyBsb25nZXIgaW4gYSB2YWxpZCBkcm9wIHpvbmUKCQkJCQlkcmFnZ2FibGUuZHJvcHBlZCA9
IGZhbHNlOwoKCQkJCQkvLyBOZWVkIHRvIHJlZnJlc2hQb3NpdGlvbnMgb2YgYWxsIHNvcnRhYmxl
cyBqdXN0IGluIGNhc2UgcmVtb3ZpbmcKCQkJCQkvLyBmcm9tIG9uZSBzb3J0YWJsZSBjaGFuZ2Vz
IHRoZSBsb2NhdGlvbiBvZiBvdGhlciBzb3J0YWJsZXMgKCM5Njc1KQoJCQkJCSQuZWFjaCggZHJh
Z2dhYmxlLnNvcnRhYmxlcywgZnVuY3Rpb24oKSB7CgkJCQkJCXRoaXMucmVmcmVzaFBvc2l0aW9u
cygpOwoJCQkJCX0gKTsKCQkJCX0KCQkJfQoJCX0gKTsKCX0KfSApOwoKJC51aS5wbHVnaW4uYWRk
KCAiZHJhZ2dhYmxlIiwgImN1cnNvciIsIHsKCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpLCBp
bnN0YW5jZSApIHsKCQl2YXIgdCA9ICQoICJib2R5IiApLAoJCQlvID0gaW5zdGFuY2Uub3B0aW9u
czsKCgkJaWYgKCB0LmNzcyggImN1cnNvciIgKSApIHsKCQkJby5fY3Vyc29yID0gdC5jc3MoICJj
dXJzb3IiICk7CgkJfQoJCXQuY3NzKCAiY3Vyc29yIiwgby5jdXJzb3IgKTsKCX0sCglzdG9wOiBm
dW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsKCQl2YXIgbyA9IGluc3RhbmNlLm9wdGlv
bnM7CgkJaWYgKCBvLl9jdXJzb3IgKSB7CgkJCSQoICJib2R5IiApLmNzcyggImN1cnNvciIsIG8u
X2N1cnNvciApOwoJCX0KCX0KfSApOwoKJC51aS5wbHVnaW4uYWRkKCAiZHJhZ2dhYmxlIiwgIm9w
YWNpdHkiLCB7CglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaW5zdGFuY2UgKSB7CgkJdmFy
IHQgPSAkKCB1aS5oZWxwZXIgKSwKCQkJbyA9IGluc3RhbmNlLm9wdGlvbnM7CgkJaWYgKCB0LmNz
cyggIm9wYWNpdHkiICkgKSB7CgkJCW8uX29wYWNpdHkgPSB0LmNzcyggIm9wYWNpdHkiICk7CgkJ
fQoJCXQuY3NzKCAib3BhY2l0eSIsIG8ub3BhY2l0eSApOwoJfSwKCXN0b3A6IGZ1bmN0aW9uKCBl
dmVudCwgdWksIGluc3RhbmNlICkgewoJCXZhciBvID0gaW5zdGFuY2Uub3B0aW9uczsKCQlpZiAo
IG8uX29wYWNpdHkgKSB7CgkJCSQoIHVpLmhlbHBlciApLmNzcyggIm9wYWNpdHkiLCBvLl9vcGFj
aXR5ICk7CgkJfQoJfQp9ICk7CgokLnVpLnBsdWdpbi5hZGQoICJkcmFnZ2FibGUiLCAic2Nyb2xs
IiwgewoJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWksIGkgKSB7CgkJaWYgKCAhaS5zY3JvbGxQ
YXJlbnROb3RIaWRkZW4gKSB7CgkJCWkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuID0gaS5oZWxwZXIu
c2Nyb2xsUGFyZW50KCBmYWxzZSApOwoJCX0KCgkJaWYgKCBpLnNjcm9sbFBhcmVudE5vdEhpZGRl
blsgMCBdICE9PSBpLmRvY3VtZW50WyAwIF0gJiYKCQkJCWkuc2Nyb2xsUGFyZW50Tm90SGlkZGVu
WyAwIF0udGFnTmFtZSAhPT0gIkhUTUwiICkgewoJCQlpLm92ZXJmbG93T2Zmc2V0ID0gaS5zY3Jv
bGxQYXJlbnROb3RIaWRkZW4ub2Zmc2V0KCk7CgkJfQoJfSwKCWRyYWc6IGZ1bmN0aW9uKCBldmVu
dCwgdWksIGkgICkgewoKCQl2YXIgbyA9IGkub3B0aW9ucywKCQkJc2Nyb2xsZWQgPSBmYWxzZSwK
CQkJc2Nyb2xsUGFyZW50ID0gaS5zY3JvbGxQYXJlbnROb3RIaWRkZW5bIDAgXSwKCQkJZG9jdW1l
bnQgPSBpLmRvY3VtZW50WyAwIF07CgoJCWlmICggc2Nyb2xsUGFyZW50ICE9PSBkb2N1bWVudCAm
JiBzY3JvbGxQYXJlbnQudGFnTmFtZSAhPT0gIkhUTUwiICkgewoJCQlpZiAoICFvLmF4aXMgfHwg
by5heGlzICE9PSAieCIgKSB7CgkJCQlpZiAoICggaS5vdmVyZmxvd09mZnNldC50b3AgKyBzY3Jv
bGxQYXJlbnQub2Zmc2V0SGVpZ2h0ICkgLSBldmVudC5wYWdlWSA8CgkJCQkJCW8uc2Nyb2xsU2Vu
c2l0aXZpdHkgKSB7CgkJCQkJc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCA9IHNjcm9sbGVkID0gc2Ny
b2xsUGFyZW50LnNjcm9sbFRvcCArIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9IGVsc2UgaWYgKCBldmVu
dC5wYWdlWSAtIGkub3ZlcmZsb3dPZmZzZXQudG9wIDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsK
CQkJCQlzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wID0gc2Nyb2xsZWQgPSBzY3JvbGxQYXJlbnQuc2Ny
b2xsVG9wIC0gby5zY3JvbGxTcGVlZDsKCQkJCX0KCQkJfQoKCQkJaWYgKCAhby5heGlzIHx8IG8u
YXhpcyAhPT0gInkiICkgewoJCQkJaWYgKCAoIGkub3ZlcmZsb3dPZmZzZXQubGVmdCArIHNjcm9s
bFBhcmVudC5vZmZzZXRXaWR0aCApIC0gZXZlbnQucGFnZVggPAoJCQkJCQlvLnNjcm9sbFNlbnNp
dGl2aXR5ICkgewoJCQkJCXNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0ID0gc2Nyb2xsZWQgPSBzY3Jv
bGxQYXJlbnQuc2Nyb2xsTGVmdCArIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9IGVsc2UgaWYgKCBldmVu
dC5wYWdlWCAtIGkub3ZlcmZsb3dPZmZzZXQubGVmdCA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7
CgkJCQkJc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQgPSBzY3JvbGxlZCA9IHNjcm9sbFBhcmVudC5z
Y3JvbGxMZWZ0IC0gby5zY3JvbGxTcGVlZDsKCQkJCX0KCQkJfQoKCQl9IGVsc2UgewoKCQkJaWYg
KCAhby5heGlzIHx8IG8uYXhpcyAhPT0gIngiICkgewoJCQkJaWYgKCBldmVudC5wYWdlWSAtICQo
IGRvY3VtZW50ICkuc2Nyb2xsVG9wKCkgPCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNj
cm9sbGVkID0gJCggZG9jdW1lbnQgKS5zY3JvbGxUb3AoICQoIGRvY3VtZW50ICkuc2Nyb2xsVG9w
KCkgLSBvLnNjcm9sbFNwZWVkICk7CgkJCQl9IGVsc2UgaWYgKCAkKCB3aW5kb3cgKS5oZWlnaHQo
KSAtICggZXZlbnQucGFnZVkgLSAkKCBkb2N1bWVudCApLnNjcm9sbFRvcCgpICkgPAoJCQkJCQlv
LnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNjcm9sbGVkID0gJCggZG9jdW1lbnQgKS5zY3Jv
bGxUb3AoICQoIGRvY3VtZW50ICkuc2Nyb2xsVG9wKCkgKyBvLnNjcm9sbFNwZWVkICk7CgkJCQl9
CgkJCX0KCgkJCWlmICggIW8uYXhpcyB8fCBvLmF4aXMgIT09ICJ5IiApIHsKCQkJCWlmICggZXZl
bnQucGFnZVggLSAkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoKSA8IG8uc2Nyb2xsU2Vuc2l0aXZp
dHkgKSB7CgkJCQkJc2Nyb2xsZWQgPSAkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoCgkJCQkJCSQo
IGRvY3VtZW50ICkuc2Nyb2xsTGVmdCgpIC0gby5zY3JvbGxTcGVlZAoJCQkJCSk7CgkJCQl9IGVs
c2UgaWYgKCAkKCB3aW5kb3cgKS53aWR0aCgpIC0gKCBldmVudC5wYWdlWCAtICQoIGRvY3VtZW50
ICkuc2Nyb2xsTGVmdCgpICkgPAoJCQkJCQlvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNj
cm9sbGVkID0gJCggZG9jdW1lbnQgKS5zY3JvbGxMZWZ0KAoJCQkJCQkkKCBkb2N1bWVudCApLnNj
cm9sbExlZnQoKSArIG8uc2Nyb2xsU3BlZWQKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCX0KCgkJaWYg
KCBzY3JvbGxlZCAhPT0gZmFsc2UgJiYgJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91
ciApIHsKCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIGksIGV2ZW50ICk7CgkJfQoK
CX0KfSApOwoKJC51aS5wbHVnaW4uYWRkKCAiZHJhZ2dhYmxlIiwgInNuYXAiLCB7CglzdGFydDog
ZnVuY3Rpb24oIGV2ZW50LCB1aSwgaSApIHsKCgkJdmFyIG8gPSBpLm9wdGlvbnM7CgoJCWkuc25h
cEVsZW1lbnRzID0gW107CgoJCSQoIG8uc25hcC5jb25zdHJ1Y3RvciAhPT0gU3RyaW5nID8gKCBv
LnNuYXAuaXRlbXMgfHwgIjpkYXRhKHVpLWRyYWdnYWJsZSkiICkgOiBvLnNuYXAgKQoJCQkuZWFj
aCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgJHQgPSAkKCB0aGlzICksCgkJCQkJJG8gPSAkdC5vZmZz
ZXQoKTsKCQkJCWlmICggdGhpcyAhPT0gaS5lbGVtZW50WyAwIF0gKSB7CgkJCQkJaS5zbmFwRWxl
bWVudHMucHVzaCggewoJCQkJCQlpdGVtOiB0aGlzLAoJCQkJCQl3aWR0aDogJHQub3V0ZXJXaWR0
aCgpLCBoZWlnaHQ6ICR0Lm91dGVySGVpZ2h0KCksCgkJCQkJCXRvcDogJG8udG9wLCBsZWZ0OiAk
by5sZWZ0CgkJCQkJfSApOwoJCQkJfQoJCQl9ICk7CgoJfSwKCWRyYWc6IGZ1bmN0aW9uKCBldmVu
dCwgdWksIGluc3QgKSB7CgoJCXZhciB0cywgYnMsIGxzLCBycywgbCwgciwgdCwgYiwgaSwgZmly
c3QsCgkJCW8gPSBpbnN0Lm9wdGlvbnMsCgkJCWQgPSBvLnNuYXBUb2xlcmFuY2UsCgkJCXgxID0g
dWkub2Zmc2V0LmxlZnQsIHgyID0geDEgKyBpbnN0LmhlbHBlclByb3BvcnRpb25zLndpZHRoLAoJ
CQl5MSA9IHVpLm9mZnNldC50b3AsIHkyID0geTEgKyBpbnN0LmhlbHBlclByb3BvcnRpb25zLmhl
aWdodDsKCgkJZm9yICggaSA9IGluc3Quc25hcEVsZW1lbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsg
aS0tICkgewoKCQkJbCA9IGluc3Quc25hcEVsZW1lbnRzWyBpIF0ubGVmdCAtIGluc3QubWFyZ2lu
cy5sZWZ0OwoJCQlyID0gbCArIGluc3Quc25hcEVsZW1lbnRzWyBpIF0ud2lkdGg7CgkJCXQgPSBp
bnN0LnNuYXBFbGVtZW50c1sgaSBdLnRvcCAtIGluc3QubWFyZ2lucy50b3A7CgkJCWIgPSB0ICsg
aW5zdC5zbmFwRWxlbWVudHNbIGkgXS5oZWlnaHQ7CgoJCQlpZiAoIHgyIDwgbCAtIGQgfHwgeDEg
PiByICsgZCB8fCB5MiA8IHQgLSBkIHx8IHkxID4gYiArIGQgfHwKCQkJCQkhJC5jb250YWlucygg
aW5zdC5zbmFwRWxlbWVudHNbIGkgXS5pdGVtLm93bmVyRG9jdW1lbnQsCgkJCQkJaW5zdC5zbmFw
RWxlbWVudHNbIGkgXS5pdGVtICkgKSB7CgkJCQlpZiAoIGluc3Quc25hcEVsZW1lbnRzWyBpIF0u
c25hcHBpbmcgKSB7CgkJCQkJKCBpbnN0Lm9wdGlvbnMuc25hcC5yZWxlYXNlICYmCgkJCQkJCWlu
c3Qub3B0aW9ucy5zbmFwLnJlbGVhc2UuY2FsbCgKCQkJCQkJCWluc3QuZWxlbWVudCwKCQkJCQkJ
CWV2ZW50LAoJCQkJCQkJJC5leHRlbmQoIGluc3QuX3VpSGFzaCgpLCB7IHNuYXBJdGVtOiBpbnN0
LnNuYXBFbGVtZW50c1sgaSBdLml0ZW0gfSApCgkJCQkJCSkgKTsKCQkJCX0KCQkJCWluc3Quc25h
cEVsZW1lbnRzWyBpIF0uc25hcHBpbmcgPSBmYWxzZTsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQlp
ZiAoIG8uc25hcE1vZGUgIT09ICJpbm5lciIgKSB7CgkJCQl0cyA9IE1hdGguYWJzKCB0IC0geTIg
KSA8PSBkOwoJCQkJYnMgPSBNYXRoLmFicyggYiAtIHkxICkgPD0gZDsKCQkJCWxzID0gTWF0aC5h
YnMoIGwgLSB4MiApIDw9IGQ7CgkJCQlycyA9IE1hdGguYWJzKCByIC0geDEgKSA8PSBkOwoJCQkJ
aWYgKCB0cyApIHsKCQkJCQl1aS5wb3NpdGlvbi50b3AgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25U
byggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IHQgLSBpbnN0LmhlbHBlclByb3BvcnRpb25zLmhl
aWdodCwKCQkJCQkJbGVmdDogMAoJCQkJCX0gKS50b3A7CgkJCQl9CgkJCQlpZiAoIGJzICkgewoJ
CQkJCXVpLnBvc2l0aW9uLnRvcCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCAicmVsYXRpdmUi
LCB7CgkJCQkJCXRvcDogYiwKCQkJCQkJbGVmdDogMAoJCQkJCX0gKS50b3A7CgkJCQl9CgkJCQlp
ZiAoIGxzICkgewoJCQkJCXVpLnBvc2l0aW9uLmxlZnQgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25U
byggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IDAsCgkJCQkJCWxlZnQ6IGwgLSBpbnN0LmhlbHBl
clByb3BvcnRpb25zLndpZHRoCgkJCQkJfSApLmxlZnQ7CgkJCQl9CgkJCQlpZiAoIHJzICkgewoJ
CQkJCXVpLnBvc2l0aW9uLmxlZnQgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZl
IiwgewoJCQkJCQl0b3A6IDAsCgkJCQkJCWxlZnQ6IHIKCQkJCQl9ICkubGVmdDsKCQkJCX0KCQkJ
fQoKCQkJZmlyc3QgPSAoIHRzIHx8IGJzIHx8IGxzIHx8IHJzICk7CgoJCQlpZiAoIG8uc25hcE1v
ZGUgIT09ICJvdXRlciIgKSB7CgkJCQl0cyA9IE1hdGguYWJzKCB0IC0geTEgKSA8PSBkOwoJCQkJ
YnMgPSBNYXRoLmFicyggYiAtIHkyICkgPD0gZDsKCQkJCWxzID0gTWF0aC5hYnMoIGwgLSB4MSAp
IDw9IGQ7CgkJCQlycyA9IE1hdGguYWJzKCByIC0geDIgKSA8PSBkOwoJCQkJaWYgKCB0cyApIHsK
CQkJCQl1aS5wb3NpdGlvbi50b3AgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZl
IiwgewoJCQkJCQl0b3A6IHQsCgkJCQkJCWxlZnQ6IDAKCQkJCQl9ICkudG9wOwoJCQkJfQoJCQkJ
aWYgKCBicyApIHsKCQkJCQl1aS5wb3NpdGlvbi50b3AgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25U
byggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IGIgLSBpbnN0LmhlbHBlclByb3BvcnRpb25zLmhl
aWdodCwKCQkJCQkJbGVmdDogMAoJCQkJCX0gKS50b3A7CgkJCQl9CgkJCQlpZiAoIGxzICkgewoJ
CQkJCXVpLnBvc2l0aW9uLmxlZnQgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZl
IiwgewoJCQkJCQl0b3A6IDAsCgkJCQkJCWxlZnQ6IGwKCQkJCQl9ICkubGVmdDsKCQkJCX0KCQkJ
CWlmICggcnMgKSB7CgkJCQkJdWkucG9zaXRpb24ubGVmdCA9IGluc3QuX2NvbnZlcnRQb3NpdGlv
blRvKCAicmVsYXRpdmUiLCB7CgkJCQkJCXRvcDogMCwKCQkJCQkJbGVmdDogciAtIGluc3QuaGVs
cGVyUHJvcG9ydGlvbnMud2lkdGgKCQkJCQl9ICkubGVmdDsKCQkJCX0KCQkJfQoKCQkJaWYgKCAh
aW5zdC5zbmFwRWxlbWVudHNbIGkgXS5zbmFwcGluZyAmJiAoIHRzIHx8IGJzIHx8IGxzIHx8IHJz
IHx8IGZpcnN0ICkgKSB7CgkJCQkoIGluc3Qub3B0aW9ucy5zbmFwLnNuYXAgJiYKCQkJCQlpbnN0
Lm9wdGlvbnMuc25hcC5zbmFwLmNhbGwoCgkJCQkJCWluc3QuZWxlbWVudCwKCQkJCQkJZXZlbnQs
CgkJCQkJCSQuZXh0ZW5kKCBpbnN0Ll91aUhhc2goKSwgewoJCQkJCQkJc25hcEl0ZW06IGluc3Qu
c25hcEVsZW1lbnRzWyBpIF0uaXRlbQoJCQkJCQl9ICkgKSApOwoJCQl9CgkJCWluc3Quc25hcEVs
ZW1lbnRzWyBpIF0uc25hcHBpbmcgPSAoIHRzIHx8IGJzIHx8IGxzIHx8IHJzIHx8IGZpcnN0ICk7
CgoJCX0KCgl9Cn0gKTsKCiQudWkucGx1Z2luLmFkZCggImRyYWdnYWJsZSIsICJzdGFjayIsIHsK
CXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsKCQl2YXIgbWluLAoJCQlv
ID0gaW5zdGFuY2Uub3B0aW9ucywKCQkJZ3JvdXAgPSAkLm1ha2VBcnJheSggJCggby5zdGFjayAp
ICkuc29ydCggZnVuY3Rpb24oIGEsIGIgKSB7CgkJCQlyZXR1cm4gKCBwYXJzZUludCggJCggYSAp
LmNzcyggInpJbmRleCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJCSggcGFyc2VJbnQoICQoIGIgKS5j
c3MoICJ6SW5kZXgiICksIDEwICkgfHwgMCApOwoJCQl9ICk7CgoJCWlmICggIWdyb3VwLmxlbmd0
aCApIHsgcmV0dXJuOyB9CgoJCW1pbiA9IHBhcnNlSW50KCAkKCBncm91cFsgMCBdICkuY3NzKCAi
ekluZGV4IiApLCAxMCApIHx8IDA7CgkJJCggZ3JvdXAgKS5lYWNoKCBmdW5jdGlvbiggaSApIHsK
CQkJJCggdGhpcyApLmNzcyggInpJbmRleCIsIG1pbiArIGkgKTsKCQl9ICk7CgkJdGhpcy5jc3Mo
ICJ6SW5kZXgiLCAoIG1pbiArIGdyb3VwLmxlbmd0aCApICk7Cgl9Cn0gKTsKCiQudWkucGx1Z2lu
LmFkZCggImRyYWdnYWJsZSIsICJ6SW5kZXgiLCB7CglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1
aSwgaW5zdGFuY2UgKSB7CgkJdmFyIHQgPSAkKCB1aS5oZWxwZXIgKSwKCQkJbyA9IGluc3RhbmNl
Lm9wdGlvbnM7CgoJCWlmICggdC5jc3MoICJ6SW5kZXgiICkgKSB7CgkJCW8uX3pJbmRleCA9IHQu
Y3NzKCAiekluZGV4IiApOwoJCX0KCQl0LmNzcyggInpJbmRleCIsIG8uekluZGV4ICk7Cgl9LAoJ
c3RvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaW5zdGFuY2UgKSB7CgkJdmFyIG8gPSBpbnN0YW5j
ZS5vcHRpb25zOwoKCQlpZiAoIG8uX3pJbmRleCApIHsKCQkJJCggdWkuaGVscGVyICkuY3NzKCAi
ekluZGV4Iiwgby5fekluZGV4ICk7CgkJfQoJfQp9ICk7Cgp2YXIgd2lkZ2V0c0RyYWdnYWJsZSA9
ICQudWkuZHJhZ2dhYmxlOwoKCi8qIQogKiBqUXVlcnkgVUkgUmVzaXphYmxlIDEuMTIuMQogKiBo
dHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQg
b3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICog
aHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogUmVzaXphYmxlCi8vPj5n
cm91cDogSW50ZXJhY3Rpb25zCi8vPj5kZXNjcmlwdGlvbjogRW5hYmxlcyByZXNpemUgZnVuY3Rp
b25hbGl0eSBmb3IgYW55IGVsZW1lbnQuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNv
bS9yZXNpemFibGUvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9yZXNpemFibGUvCi8v
Pj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVj
dHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvcmVzaXphYmxlLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8u
Li90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKJC53aWRnZXQoICJ1aS5yZXNpemFibGUiLCAkLnVp
Lm1vdXNlLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCXdpZGdldEV2ZW50UHJlZml4OiAicmVzaXpl
IiwKCW9wdGlvbnM6IHsKCQlhbHNvUmVzaXplOiBmYWxzZSwKCQlhbmltYXRlOiBmYWxzZSwKCQlh
bmltYXRlRHVyYXRpb246ICJzbG93IiwKCQlhbmltYXRlRWFzaW5nOiAic3dpbmciLAoJCWFzcGVj
dFJhdGlvOiBmYWxzZSwKCQlhdXRvSGlkZTogZmFsc2UsCgkJY2xhc3NlczogewoJCQkidWktcmVz
aXphYmxlLXNlIjogInVpLWljb24gdWktaWNvbi1ncmlwc21hbGwtZGlhZ29uYWwtc2UiCgkJfSwK
CQljb250YWlubWVudDogZmFsc2UsCgkJZ2hvc3Q6IGZhbHNlLAoJCWdyaWQ6IGZhbHNlLAoJCWhh
bmRsZXM6ICJlLHMsc2UiLAoJCWhlbHBlcjogZmFsc2UsCgkJbWF4SGVpZ2h0OiBudWxsLAoJCW1h
eFdpZHRoOiBudWxsLAoJCW1pbkhlaWdodDogMTAsCgkJbWluV2lkdGg6IDEwLAoKCQkvLyBTZWUg
Izc5NjAKCQl6SW5kZXg6IDkwLAoKCQkvLyBDYWxsYmFja3MKCQlyZXNpemU6IG51bGwsCgkJc3Rh
cnQ6IG51bGwsCgkJc3RvcDogbnVsbAoJfSwKCglfbnVtOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJ
cmV0dXJuIHBhcnNlRmxvYXQoIHZhbHVlICkgfHwgMDsKCX0sCgoJX2lzTnVtYmVyOiBmdW5jdGlv
biggdmFsdWUgKSB7CgkJcmV0dXJuICFpc05hTiggcGFyc2VGbG9hdCggdmFsdWUgKSApOwoJfSwK
CglfaGFzU2Nyb2xsOiBmdW5jdGlvbiggZWwsIGEgKSB7CgoJCWlmICggJCggZWwgKS5jc3MoICJv
dmVyZmxvdyIgKSA9PT0gImhpZGRlbiIgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXZhciBz
Y3JvbGwgPSAoIGEgJiYgYSA9PT0gImxlZnQiICkgPyAic2Nyb2xsTGVmdCIgOiAic2Nyb2xsVG9w
IiwKCQkJaGFzID0gZmFsc2U7CgoJCWlmICggZWxbIHNjcm9sbCBdID4gMCApIHsKCQkJcmV0dXJu
IHRydWU7CgkJfQoKCQkvLyBUT0RPOiBkZXRlcm1pbmUgd2hpY2ggY2FzZXMgYWN0dWFsbHkgY2F1
c2UgdGhpcyB0byBoYXBwZW4KCQkvLyBpZiB0aGUgZWxlbWVudCBkb2Vzbid0IGhhdmUgdGhlIHNj
cm9sbCBzZXQsIHNlZSBpZiBpdCdzIHBvc3NpYmxlIHRvCgkJLy8gc2V0IHRoZSBzY3JvbGwKCQll
bFsgc2Nyb2xsIF0gPSAxOwoJCWhhcyA9ICggZWxbIHNjcm9sbCBdID4gMCApOwoJCWVsWyBzY3Jv
bGwgXSA9IDA7CgkJcmV0dXJuIGhhczsKCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgoJCXZh
ciBtYXJnaW5zLAoJCQlvID0gdGhpcy5vcHRpb25zLAoJCQl0aGF0ID0gdGhpczsKCQl0aGlzLl9h
ZGRDbGFzcyggInVpLXJlc2l6YWJsZSIgKTsKCgkJJC5leHRlbmQoIHRoaXMsIHsKCQkJX2FzcGVj
dFJhdGlvOiAhISggby5hc3BlY3RSYXRpbyApLAoJCQlhc3BlY3RSYXRpbzogby5hc3BlY3RSYXRp
bywKCQkJb3JpZ2luYWxFbGVtZW50OiB0aGlzLmVsZW1lbnQsCgkJCV9wcm9wb3J0aW9uYWxseVJl
c2l6ZUVsZW1lbnRzOiBbXSwKCQkJX2hlbHBlcjogby5oZWxwZXIgfHwgby5naG9zdCB8fCBvLmFu
aW1hdGUgPyBvLmhlbHBlciB8fCAidWktcmVzaXphYmxlLWhlbHBlciIgOiBudWxsCgkJfSApOwoK
CQkvLyBXcmFwIHRoZSBlbGVtZW50IGlmIGl0IGNhbm5vdCBob2xkIGNoaWxkIG5vZGVzCgkJaWYg
KCB0aGlzLmVsZW1lbnRbIDAgXS5ub2RlTmFtZS5tYXRjaCggL14oY2FudmFzfHRleHRhcmVhfGlu
cHV0fHNlbGVjdHxidXR0b258aW1nKSQvaSApICkgewoKCQkJdGhpcy5lbGVtZW50LndyYXAoCgkJ
CQkkKCAiPGRpdiBjbGFzcz0ndWktd3JhcHBlcicgc3R5bGU9J292ZXJmbG93OiBoaWRkZW47Jz48
L2Rpdj4iICkuY3NzKCB7CgkJCQkJcG9zaXRpb246IHRoaXMuZWxlbWVudC5jc3MoICJwb3NpdGlv
biIgKSwKCQkJCQl3aWR0aDogdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSwKCQkJCQloZWlnaHQ6
IHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpLAoJCQkJCXRvcDogdGhpcy5lbGVtZW50LmNzcygg
InRvcCIgKSwKCQkJCQlsZWZ0OiB0aGlzLmVsZW1lbnQuY3NzKCAibGVmdCIgKQoJCQkJfSApCgkJ
CSk7CgoJCQl0aGlzLmVsZW1lbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50KCkuZGF0YSgKCQkJCSJ1
aS1yZXNpemFibGUiLCB0aGlzLmVsZW1lbnQucmVzaXphYmxlKCAiaW5zdGFuY2UiICkKCQkJKTsK
CgkJCXRoaXMuZWxlbWVudElzV3JhcHBlciA9IHRydWU7CgoJCQltYXJnaW5zID0gewoJCQkJbWFy
Z2luVG9wOiB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJtYXJnaW5Ub3AiICksCgkJCQltYXJn
aW5SaWdodDogdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAibWFyZ2luUmlnaHQiICksCgkJCQlt
YXJnaW5Cb3R0b206IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggIm1hcmdpbkJvdHRvbSIgKSwK
CQkJCW1hcmdpbkxlZnQ6IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggIm1hcmdpbkxlZnQiICkK
CQkJfTsKCgkJCXRoaXMuZWxlbWVudC5jc3MoIG1hcmdpbnMgKTsKCQkJdGhpcy5vcmlnaW5hbEVs
ZW1lbnQuY3NzKCAibWFyZ2luIiwgMCApOwoKCQkJLy8gc3VwcG9ydDogU2FmYXJpCgkJCS8vIFBy
ZXZlbnQgU2FmYXJpIHRleHRhcmVhIHJlc2l6ZQoJCQl0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGUg
PSB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJyZXNpemUiICk7CgkJCXRoaXMub3JpZ2luYWxF
bGVtZW50LmNzcyggInJlc2l6ZSIsICJub25lIiApOwoKCQkJdGhpcy5fcHJvcG9ydGlvbmFsbHlS
ZXNpemVFbGVtZW50cy5wdXNoKCB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoIHsKCQkJCXBvc2l0
aW9uOiAic3RhdGljIiwKCQkJCXpvb206IDEsCgkJCQlkaXNwbGF5OiAiYmxvY2siCgkJCX0gKSAp
OwoKCQkJLy8gU3VwcG9ydDogSUU5CgkJCS8vIGF2b2lkIElFIGp1bXAgKGhhcmQgc2V0IHRoZSBt
YXJnaW4pCgkJCXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggbWFyZ2lucyApOwoKCQkJdGhpcy5f
cHJvcG9ydGlvbmFsbHlSZXNpemUoKTsKCQl9CgoJCXRoaXMuX3NldHVwSGFuZGxlcygpOwoKCQlp
ZiAoIG8uYXV0b0hpZGUgKSB7CgkJCSQoIHRoaXMuZWxlbWVudCApCgkJCQkub24oICJtb3VzZWVu
dGVyIiwgZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCBvLmRpc2FibGVkICkgewoJCQkJCQlyZXR1cm47
CgkJCQkJfQoJCQkJCXRoYXQuX3JlbW92ZUNsYXNzKCAidWktcmVzaXphYmxlLWF1dG9oaWRlIiAp
OwoJCQkJCXRoYXQuX2hhbmRsZXMuc2hvdygpOwoJCQkJfSApCgkJCQkub24oICJtb3VzZWxlYXZl
IiwgZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCBvLmRpc2FibGVkICkgewoJCQkJCQlyZXR1cm47CgkJ
CQkJfQoJCQkJCWlmICggIXRoYXQucmVzaXppbmcgKSB7CgkJCQkJCXRoYXQuX2FkZENsYXNzKCAi
dWktcmVzaXphYmxlLWF1dG9oaWRlIiApOwoJCQkJCQl0aGF0Ll9oYW5kbGVzLmhpZGUoKTsKCQkJ
CQl9CgkJCQl9ICk7CgkJfQoKCQl0aGlzLl9tb3VzZUluaXQoKTsKCX0sCgoJX2Rlc3Ryb3k6IGZ1
bmN0aW9uKCkgewoKCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsKCgkJdmFyIHdyYXBwZXIsCgkJCV9k
ZXN0cm95ID0gZnVuY3Rpb24oIGV4cCApIHsKCQkJCSQoIGV4cCApCgkJCQkJLnJlbW92ZURhdGEo
ICJyZXNpemFibGUiICkKCQkJCQkucmVtb3ZlRGF0YSggInVpLXJlc2l6YWJsZSIgKQoJCQkJCS5v
ZmYoICIucmVzaXphYmxlIiApCgkJCQkJLmZpbmQoICIudWktcmVzaXphYmxlLWhhbmRsZSIgKQoJ
CQkJCQkucmVtb3ZlKCk7CgkJCX07CgoJCS8vIFRPRE86IFVud3JhcCBhdCBzYW1lIERPTSBwb3Np
dGlvbgoJCWlmICggdGhpcy5lbGVtZW50SXNXcmFwcGVyICkgewoJCQlfZGVzdHJveSggdGhpcy5l
bGVtZW50ICk7CgkJCXdyYXBwZXIgPSB0aGlzLmVsZW1lbnQ7CgkJCXRoaXMub3JpZ2luYWxFbGVt
ZW50LmNzcyggewoJCQkJcG9zaXRpb246IHdyYXBwZXIuY3NzKCAicG9zaXRpb24iICksCgkJCQl3
aWR0aDogd3JhcHBlci5vdXRlcldpZHRoKCksCgkJCQloZWlnaHQ6IHdyYXBwZXIub3V0ZXJIZWln
aHQoKSwKCQkJCXRvcDogd3JhcHBlci5jc3MoICJ0b3AiICksCgkJCQlsZWZ0OiB3cmFwcGVyLmNz
cyggImxlZnQiICkKCQkJfSApLmluc2VydEFmdGVyKCB3cmFwcGVyICk7CgkJCXdyYXBwZXIucmVt
b3ZlKCk7CgkJfQoKCQl0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJyZXNpemUiLCB0aGlzLm9y
aWdpbmFsUmVzaXplU3R5bGUgKTsKCQlfZGVzdHJveSggdGhpcy5vcmlnaW5hbEVsZW1lbnQgKTsK
CgkJcmV0dXJuIHRoaXM7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkg
ewoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCXN3aXRjaCAoIGtleSApIHsKCQljYXNl
ICJoYW5kbGVzIjoKCQkJdGhpcy5fcmVtb3ZlSGFuZGxlcygpOwoJCQl0aGlzLl9zZXR1cEhhbmRs
ZXMoKTsKCQkJYnJlYWs7CgkJZGVmYXVsdDoKCQkJYnJlYWs7CgkJfQoJfSwKCglfc2V0dXBIYW5k
bGVzOiBmdW5jdGlvbigpIHsKCQl2YXIgbyA9IHRoaXMub3B0aW9ucywgaGFuZGxlLCBpLCBuLCBo
bmFtZSwgYXhpcywgdGhhdCA9IHRoaXM7CgkJdGhpcy5oYW5kbGVzID0gby5oYW5kbGVzIHx8CgkJ
CSggISQoICIudWktcmVzaXphYmxlLWhhbmRsZSIsIHRoaXMuZWxlbWVudCApLmxlbmd0aCA/CgkJ
CQkiZSxzLHNlIiA6IHsKCQkJCQluOiAiLnVpLXJlc2l6YWJsZS1uIiwKCQkJCQllOiAiLnVpLXJl
c2l6YWJsZS1lIiwKCQkJCQlzOiAiLnVpLXJlc2l6YWJsZS1zIiwKCQkJCQl3OiAiLnVpLXJlc2l6
YWJsZS13IiwKCQkJCQlzZTogIi51aS1yZXNpemFibGUtc2UiLAoJCQkJCXN3OiAiLnVpLXJlc2l6
YWJsZS1zdyIsCgkJCQkJbmU6ICIudWktcmVzaXphYmxlLW5lIiwKCQkJCQludzogIi51aS1yZXNp
emFibGUtbnciCgkJCQl9ICk7CgoJCXRoaXMuX2hhbmRsZXMgPSAkKCk7CgkJaWYgKCB0aGlzLmhh
bmRsZXMuY29uc3RydWN0b3IgPT09IFN0cmluZyApIHsKCgkJCWlmICggdGhpcy5oYW5kbGVzID09
PSAiYWxsIiApIHsKCQkJCXRoaXMuaGFuZGxlcyA9ICJuLGUscyx3LHNlLHN3LG5lLG53IjsKCQkJ
fQoKCQkJbiA9IHRoaXMuaGFuZGxlcy5zcGxpdCggIiwiICk7CgkJCXRoaXMuaGFuZGxlcyA9IHt9
OwoKCQkJZm9yICggaSA9IDA7IGkgPCBuLmxlbmd0aDsgaSsrICkgewoKCQkJCWhhbmRsZSA9ICQu
dHJpbSggblsgaSBdICk7CgkJCQlobmFtZSA9ICJ1aS1yZXNpemFibGUtIiArIGhhbmRsZTsKCQkJ
CWF4aXMgPSAkKCAiPGRpdj4iICk7CgkJCQl0aGlzLl9hZGRDbGFzcyggYXhpcywgInVpLXJlc2l6
YWJsZS1oYW5kbGUgIiArIGhuYW1lICk7CgoJCQkJYXhpcy5jc3MoIHsgekluZGV4OiBvLnpJbmRl
eCB9ICk7CgoJCQkJdGhpcy5oYW5kbGVzWyBoYW5kbGUgXSA9ICIudWktcmVzaXphYmxlLSIgKyBo
YW5kbGU7CgkJCQl0aGlzLmVsZW1lbnQuYXBwZW5kKCBheGlzICk7CgkJCX0KCgkJfQoKCQl0aGlz
Ll9yZW5kZXJBeGlzID0gZnVuY3Rpb24oIHRhcmdldCApIHsKCgkJCXZhciBpLCBheGlzLCBwYWRQ
b3MsIHBhZFdyYXBwZXI7CgoJCQl0YXJnZXQgPSB0YXJnZXQgfHwgdGhpcy5lbGVtZW50OwoKCQkJ
Zm9yICggaSBpbiB0aGlzLmhhbmRsZXMgKSB7CgoJCQkJaWYgKCB0aGlzLmhhbmRsZXNbIGkgXS5j
b25zdHJ1Y3RvciA9PT0gU3RyaW5nICkgewoJCQkJCXRoaXMuaGFuZGxlc1sgaSBdID0gdGhpcy5l
bGVtZW50LmNoaWxkcmVuKCB0aGlzLmhhbmRsZXNbIGkgXSApLmZpcnN0KCkuc2hvdygpOwoJCQkJ
fSBlbHNlIGlmICggdGhpcy5oYW5kbGVzWyBpIF0uanF1ZXJ5IHx8IHRoaXMuaGFuZGxlc1sgaSBd
Lm5vZGVUeXBlICkgewoJCQkJCXRoaXMuaGFuZGxlc1sgaSBdID0gJCggdGhpcy5oYW5kbGVzWyBp
IF0gKTsKCQkJCQl0aGlzLl9vbiggdGhpcy5oYW5kbGVzWyBpIF0sIHsgIm1vdXNlZG93biI6IHRo
YXQuX21vdXNlRG93biB9ICk7CgkJCQl9CgoJCQkJaWYgKCB0aGlzLmVsZW1lbnRJc1dyYXBwZXIg
JiYKCQkJCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnRbIDAgXQoJCQkJCQkJLm5vZGVOYW1lCgkJCQkJ
CQkubWF0Y2goIC9eKHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b24pJC9pICkgKSB7CgkJCQkJ
YXhpcyA9ICQoIHRoaXMuaGFuZGxlc1sgaSBdLCB0aGlzLmVsZW1lbnQgKTsKCgkJCQkJcGFkV3Jh
cHBlciA9IC9zd3xuZXxud3xzZXxufHMvLnRlc3QoIGkgKSA/CgkJCQkJCWF4aXMub3V0ZXJIZWln
aHQoKSA6CgkJCQkJCWF4aXMub3V0ZXJXaWR0aCgpOwoKCQkJCQlwYWRQb3MgPSBbICJwYWRkaW5n
IiwKCQkJCQkJL25lfG53fG4vLnRlc3QoIGkgKSA/ICJUb3AiIDoKCQkJCQkJL3NlfHN3fHMvLnRl
c3QoIGkgKSA/ICJCb3R0b20iIDoKCQkJCQkJL15lJC8udGVzdCggaSApID8gIlJpZ2h0IiA6ICJM
ZWZ0IiBdLmpvaW4oICIiICk7CgoJCQkJCXRhcmdldC5jc3MoIHBhZFBvcywgcGFkV3JhcHBlciAp
OwoKCQkJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOwoJCQkJfQoKCQkJCXRoaXMuX2hh
bmRsZXMgPSB0aGlzLl9oYW5kbGVzLmFkZCggdGhpcy5oYW5kbGVzWyBpIF0gKTsKCQkJfQoJCX07
CgoJCS8vIFRPRE86IG1ha2UgcmVuZGVyQXhpcyBhIHByb3RvdHlwZSBmdW5jdGlvbgoJCXRoaXMu
X3JlbmRlckF4aXMoIHRoaXMuZWxlbWVudCApOwoKCQl0aGlzLl9oYW5kbGVzID0gdGhpcy5faGFu
ZGxlcy5hZGQoIHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXJlc2l6YWJsZS1oYW5kbGUiICkgKTsK
CQl0aGlzLl9oYW5kbGVzLmRpc2FibGVTZWxlY3Rpb24oKTsKCgkJdGhpcy5faGFuZGxlcy5vbigg
Im1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewoJCQlpZiAoICF0aGF0LnJlc2l6aW5nICkgewoJCQkJ
aWYgKCB0aGlzLmNsYXNzTmFtZSApIHsKCQkJCQlheGlzID0gdGhpcy5jbGFzc05hbWUubWF0Y2go
IC91aS1yZXNpemFibGUtKHNlfHN3fG5lfG53fG58ZXxzfHcpL2kgKTsKCQkJCX0KCQkJCXRoYXQu
YXhpcyA9IGF4aXMgJiYgYXhpc1sgMSBdID8gYXhpc1sgMSBdIDogInNlIjsKCQkJfQoJCX0gKTsK
CgkJaWYgKCBvLmF1dG9IaWRlICkgewoJCQl0aGlzLl9oYW5kbGVzLmhpZGUoKTsKCQkJdGhpcy5f
YWRkQ2xhc3MoICJ1aS1yZXNpemFibGUtYXV0b2hpZGUiICk7CgkJfQoJfSwKCglfcmVtb3ZlSGFu
ZGxlczogZnVuY3Rpb24oKSB7CgkJdGhpcy5faGFuZGxlcy5yZW1vdmUoKTsKCX0sCgoJX21vdXNl
Q2FwdHVyZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBpLCBoYW5kbGUsCgkJCWNhcHR1cmUg
PSBmYWxzZTsKCgkJZm9yICggaSBpbiB0aGlzLmhhbmRsZXMgKSB7CgkJCWhhbmRsZSA9ICQoIHRo
aXMuaGFuZGxlc1sgaSBdIClbIDAgXTsKCQkJaWYgKCBoYW5kbGUgPT09IGV2ZW50LnRhcmdldCB8
fCAkLmNvbnRhaW5zKCBoYW5kbGUsIGV2ZW50LnRhcmdldCApICkgewoJCQkJY2FwdHVyZSA9IHRy
dWU7CgkJCX0KCQl9CgoJCXJldHVybiAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIGNhcHR1cmU7
Cgl9LAoKCV9tb3VzZVN0YXJ0OiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBjdXJsZWZ0LCBj
dXJ0b3AsIGN1cnNvciwKCQkJbyA9IHRoaXMub3B0aW9ucywKCQkJZWwgPSB0aGlzLmVsZW1lbnQ7
CgoJCXRoaXMucmVzaXppbmcgPSB0cnVlOwoKCQl0aGlzLl9yZW5kZXJQcm94eSgpOwoKCQljdXJs
ZWZ0ID0gdGhpcy5fbnVtKCB0aGlzLmhlbHBlci5jc3MoICJsZWZ0IiApICk7CgkJY3VydG9wID0g
dGhpcy5fbnVtKCB0aGlzLmhlbHBlci4=</Default>
</Parameter>

<Parameter name="Frag6980641884580382862203514">
<Default>dWVJZCgpLnByZXBlbmRUbyggdGhpcy51aURpYWxvZ1RpdGxlYmFyICk7CgkJdGhpcy5fYWRkQ2xh
c3MoIHVpRGlhbG9nVGl0bGUsICJ1aS1kaWFsb2ctdGl0bGUiICk7CgkJdGhpcy5fdGl0bGUoIHVp
RGlhbG9nVGl0bGUgKTsKCgkJdGhpcy51aURpYWxvZ1RpdGxlYmFyLnByZXBlbmRUbyggdGhpcy51
aURpYWxvZyApOwoKCQl0aGlzLnVpRGlhbG9nLmF0dHIoIHsKCQkJImFyaWEtbGFiZWxsZWRieSI6
IHVpRGlhbG9nVGl0bGUuYXR0ciggImlkIiApCgkJfSApOwoJfSwKCglfdGl0bGU6IGZ1bmN0aW9u
KCB0aXRsZSApIHsKCQlpZiAoIHRoaXMub3B0aW9ucy50aXRsZSApIHsKCQkJdGl0bGUudGV4dCgg
dGhpcy5vcHRpb25zLnRpdGxlICk7CgkJfSBlbHNlIHsKCQkJdGl0bGUuaHRtbCggIiYjMTYwOyIg
KTsKCQl9Cgl9LAoKCV9jcmVhdGVCdXR0b25QYW5lOiBmdW5jdGlvbigpIHsKCQl0aGlzLnVpRGlh
bG9nQnV0dG9uUGFuZSA9ICQoICI8ZGl2PiIgKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aURp
YWxvZ0J1dHRvblBhbmUsICJ1aS1kaWFsb2ctYnV0dG9ucGFuZSIsCgkJCSJ1aS13aWRnZXQtY29u
dGVudCB1aS1oZWxwZXItY2xlYXJmaXgiICk7CgoJCXRoaXMudWlCdXR0b25TZXQgPSAkKCAiPGRp
dj4iICkKCQkJLmFwcGVuZFRvKCB0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZSApOwoJCXRoaXMuX2Fk
ZENsYXNzKCB0aGlzLnVpQnV0dG9uU2V0LCAidWktZGlhbG9nLWJ1dHRvbnNldCIgKTsKCgkJdGhp
cy5fY3JlYXRlQnV0dG9ucygpOwoJfSwKCglfY3JlYXRlQnV0dG9uczogZnVuY3Rpb24oKSB7CgkJ
dmFyIHRoYXQgPSB0aGlzLAoJCQlidXR0b25zID0gdGhpcy5vcHRpb25zLmJ1dHRvbnM7CgoJCS8v
IElmIHdlIGFscmVhZHkgaGF2ZSBhIGJ1dHRvbiBwYW5lLCByZW1vdmUgaXQKCQl0aGlzLnVpRGlh
bG9nQnV0dG9uUGFuZS5yZW1vdmUoKTsKCQl0aGlzLnVpQnV0dG9uU2V0LmVtcHR5KCk7CgoJCWlm
ICggJC5pc0VtcHR5T2JqZWN0KCBidXR0b25zICkgfHwgKCAkLmlzQXJyYXkoIGJ1dHRvbnMgKSAm
JiAhYnV0dG9ucy5sZW5ndGggKSApIHsKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMudWlEaWFs
b2csICJ1aS1kaWFsb2ctYnV0dG9ucyIgKTsKCQkJcmV0dXJuOwoJCX0KCgkJJC5lYWNoKCBidXR0
b25zLCBmdW5jdGlvbiggbmFtZSwgcHJvcHMgKSB7CgkJCXZhciBjbGljaywgYnV0dG9uT3B0aW9u
czsKCQkJcHJvcHMgPSAkLmlzRnVuY3Rpb24oIHByb3BzICkgPwoJCQkJeyBjbGljazogcHJvcHMs
IHRleHQ6IG5hbWUgfSA6CgkJCQlwcm9wczsKCgkJCS8vIERlZmF1bHQgdG8gYSBub24tc3VibWl0
dGluZyBidXR0b24KCQkJcHJvcHMgPSAkLmV4dGVuZCggeyB0eXBlOiAiYnV0dG9uIiB9LCBwcm9w
cyApOwoKCQkJLy8gQ2hhbmdlIHRoZSBjb250ZXh0IGZvciB0aGUgY2xpY2sgY2FsbGJhY2sgdG8g
YmUgdGhlIG1haW4gZWxlbWVudAoJCQljbGljayA9IHByb3BzLmNsaWNrOwoJCQlidXR0b25PcHRp
b25zID0gewoJCQkJaWNvbjogcHJvcHMuaWNvbiwKCQkJCWljb25Qb3NpdGlvbjogcHJvcHMuaWNv
blBvc2l0aW9uLAoJCQkJc2hvd0xhYmVsOiBwcm9wcy5zaG93TGFiZWwsCgoJCQkJLy8gRGVwcmVj
YXRlZCBvcHRpb25zCgkJCQlpY29uczogcHJvcHMuaWNvbnMsCgkJCQl0ZXh0OiBwcm9wcy50ZXh0
CgkJCX07CgoJCQlkZWxldGUgcHJvcHMuY2xpY2s7CgkJCWRlbGV0ZSBwcm9wcy5pY29uOwoJCQlk
ZWxldGUgcHJvcHMuaWNvblBvc2l0aW9uOwoJCQlkZWxldGUgcHJvcHMuc2hvd0xhYmVsOwoKCQkJ
Ly8gRGVwcmVjYXRlZCBvcHRpb25zCgkJCWRlbGV0ZSBwcm9wcy5pY29uczsKCQkJaWYgKCB0eXBl
b2YgcHJvcHMudGV4dCA9PT0gImJvb2xlYW4iICkgewoJCQkJZGVsZXRlIHByb3BzLnRleHQ7CgkJ
CX0KCgkJCSQoICI8YnV0dG9uPjwvYnV0dG9uPiIsIHByb3BzICkKCQkJCS5idXR0b24oIGJ1dHRv
bk9wdGlvbnMgKQoJCQkJLmFwcGVuZFRvKCB0aGF0LnVpQnV0dG9uU2V0ICkKCQkJCS5vbiggImNs
aWNrIiwgZnVuY3Rpb24oKSB7CgkJCQkJY2xpY2suYXBwbHkoIHRoYXQuZWxlbWVudFsgMCBdLCBh
cmd1bWVudHMgKTsKCQkJCX0gKTsKCQl9ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudWlEaWFs
b2csICJ1aS1kaWFsb2ctYnV0dG9ucyIgKTsKCQl0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZS5hcHBl
bmRUbyggdGhpcy51aURpYWxvZyApOwoJfSwKCglfbWFrZURyYWdnYWJsZTogZnVuY3Rpb24oKSB7
CgkJdmFyIHRoYXQgPSB0aGlzLAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQlmdW5jdGlv
biBmaWx0ZXJlZFVpKCB1aSApIHsKCQkJcmV0dXJuIHsKCQkJCXBvc2l0aW9uOiB1aS5wb3NpdGlv
biwKCQkJCW9mZnNldDogdWkub2Zmc2V0CgkJCX07CgkJfQoKCQl0aGlzLnVpRGlhbG9nLmRyYWdn
YWJsZSggewoJCQljYW5jZWw6ICIudWktZGlhbG9nLWNvbnRlbnQsIC51aS1kaWFsb2ctdGl0bGVi
YXItY2xvc2UiLAoJCQloYW5kbGU6ICIudWktZGlhbG9nLXRpdGxlYmFyIiwKCQkJY29udGFpbm1l
bnQ6ICJkb2N1bWVudCIsCgkJCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCQkJdGhh
dC5fYWRkQ2xhc3MoICQoIHRoaXMgKSwgInVpLWRpYWxvZy1kcmFnZ2luZyIgKTsKCQkJCXRoYXQu
X2Jsb2NrRnJhbWVzKCk7CgkJCQl0aGF0Ll90cmlnZ2VyKCAiZHJhZ1N0YXJ0IiwgZXZlbnQsIGZp
bHRlcmVkVWkoIHVpICkgKTsKCQkJfSwKCQkJZHJhZzogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsK
CQkJCXRoYXQuX3RyaWdnZXIoICJkcmFnIiwgZXZlbnQsIGZpbHRlcmVkVWkoIHVpICkgKTsKCQkJ
fSwKCQkJc3RvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJCXZhciBsZWZ0ID0gdWkub2Zm
c2V0LmxlZnQgLSB0aGF0LmRvY3VtZW50LnNjcm9sbExlZnQoKSwKCQkJCQl0b3AgPSB1aS5vZmZz
ZXQudG9wIC0gdGhhdC5kb2N1bWVudC5zY3JvbGxUb3AoKTsKCgkJCQlvcHRpb25zLnBvc2l0aW9u
ID0gewoJCQkJCW15OiAibGVmdCB0b3AiLAoJCQkJCWF0OiAibGVmdCIgKyAoIGxlZnQgPj0gMCA/
ICIrIiA6ICIiICkgKyBsZWZ0ICsgIiAiICsKCQkJCQkJInRvcCIgKyAoIHRvcCA+PSAwID8gIisi
IDogIiIgKSArIHRvcCwKCQkJCQlvZjogdGhhdC53aW5kb3cKCQkJCX07CgkJCQl0aGF0Ll9yZW1v
dmVDbGFzcyggJCggdGhpcyApLCAidWktZGlhbG9nLWRyYWdnaW5nIiApOwoJCQkJdGhhdC5fdW5i
bG9ja0ZyYW1lcygpOwoJCQkJdGhhdC5fdHJpZ2dlciggImRyYWdTdG9wIiwgZXZlbnQsIGZpbHRl
cmVkVWkoIHVpICkgKTsKCQkJfQoJCX0gKTsKCX0sCgoJX21ha2VSZXNpemFibGU6IGZ1bmN0aW9u
KCkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywKCQkJaGFu
ZGxlcyA9IG9wdGlvbnMucmVzaXphYmxlLAoKCQkJLy8gLnVpLXJlc2l6YWJsZSBoYXMgcG9zaXRp
b246IHJlbGF0aXZlIGRlZmluZWQgaW4gdGhlIHN0eWxlc2hlZXQKCQkJLy8gYnV0IGRpYWxvZ3Mg
aGF2ZSB0byB1c2UgYWJzb2x1dGUgb3IgZml4ZWQgcG9zaXRpb25pbmcKCQkJcG9zaXRpb24gPSB0
aGlzLnVpRGlhbG9nLmNzcyggInBvc2l0aW9uIiApLAoJCQlyZXNpemVIYW5kbGVzID0gdHlwZW9m
IGhhbmRsZXMgPT09ICJzdHJpbmciID8KCQkJCWhhbmRsZXMgOgoJCQkJIm4sZSxzLHcsc2Usc3cs
bmUsbnciOwoKCQlmdW5jdGlvbiBmaWx0ZXJlZFVpKCB1aSApIHsKCQkJcmV0dXJuIHsKCQkJCW9y
aWdpbmFsUG9zaXRpb246IHVpLm9yaWdpbmFsUG9zaXRpb24sCgkJCQlvcmlnaW5hbFNpemU6IHVp
Lm9yaWdpbmFsU2l6ZSwKCQkJCXBvc2l0aW9uOiB1aS5wb3NpdGlvbiwKCQkJCXNpemU6IHVpLnNp
emUKCQkJfTsKCQl9CgoJCXRoaXMudWlEaWFsb2cucmVzaXphYmxlKCB7CgkJCWNhbmNlbDogIi51
aS1kaWFsb2ctY29udGVudCIsCgkJCWNvbnRhaW5tZW50OiAiZG9jdW1lbnQiLAoJCQlhbHNvUmVz
aXplOiB0aGlzLmVsZW1lbnQsCgkJCW1heFdpZHRoOiBvcHRpb25zLm1heFdpZHRoLAoJCQltYXhI
ZWlnaHQ6IG9wdGlvbnMubWF4SGVpZ2h0LAoJCQltaW5XaWR0aDogb3B0aW9ucy5taW5XaWR0aCwK
CQkJbWluSGVpZ2h0OiB0aGlzLl9taW5IZWlnaHQoKSwKCQkJaGFuZGxlczogcmVzaXplSGFuZGxl
cywKCQkJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJCQl0aGF0Ll9hZGRDbGFzcygg
JCggdGhpcyApLCAidWktZGlhbG9nLXJlc2l6aW5nIiApOwoJCQkJdGhhdC5fYmxvY2tGcmFtZXMo
KTsKCQkJCXRoYXQuX3RyaWdnZXIoICJyZXNpemVTdGFydCIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1
aSApICk7CgkJCX0sCgkJCXJlc2l6ZTogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJCXRoYXQu
X3RyaWdnZXIoICJyZXNpemUiLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOwoJCQl9LAoJCQlz
dG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCQkJdmFyIG9mZnNldCA9IHRoYXQudWlEaWFs
b2cub2Zmc2V0KCksCgkJCQkJbGVmdCA9IG9mZnNldC5sZWZ0IC0gdGhhdC5kb2N1bWVudC5zY3Jv
bGxMZWZ0KCksCgkJCQkJdG9wID0gb2Zmc2V0LnRvcCAtIHRoYXQuZG9jdW1lbnQuc2Nyb2xsVG9w
KCk7CgoJCQkJb3B0aW9ucy5oZWlnaHQgPSB0aGF0LnVpRGlhbG9nLmhlaWdodCgpOwoJCQkJb3B0
aW9ucy53aWR0aCA9IHRoYXQudWlEaWFsb2cud2lkdGgoKTsKCQkJCW9wdGlvbnMucG9zaXRpb24g
PSB7CgkJCQkJbXk6ICJsZWZ0IHRvcCIsCgkJCQkJYXQ6ICJsZWZ0IiArICggbGVmdCA+PSAwID8g
IisiIDogIiIgKSArIGxlZnQgKyAiICIgKwoJCQkJCQkidG9wIiArICggdG9wID49IDAgPyAiKyIg
OiAiIiApICsgdG9wLAoJCQkJCW9mOiB0aGF0LndpbmRvdwoJCQkJfTsKCQkJCXRoYXQuX3JlbW92
ZUNsYXNzKCAkKCB0aGlzICksICJ1aS1kaWFsb2ctcmVzaXppbmciICk7CgkJCQl0aGF0Ll91bmJs
b2NrRnJhbWVzKCk7CgkJCQl0aGF0Ll90cmlnZ2VyKCAicmVzaXplU3RvcCIsIGV2ZW50LCBmaWx0
ZXJlZFVpKCB1aSApICk7CgkJCX0KCQl9ICkKCQkJLmNzcyggInBvc2l0aW9uIiwgcG9zaXRpb24g
KTsKCX0sCgoJX3RyYWNrRm9jdXM6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX29uKCB0aGlzLndpZGdl
dCgpLCB7CgkJCWZvY3VzaW46IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX21ha2VGb2N1
c1RhcmdldCgpOwoJCQkJdGhpcy5fZm9jdXNlZEVsZW1lbnQgPSAkKCBldmVudC50YXJnZXQgKTsK
CQkJfQoJCX0gKTsKCX0sCgoJX21ha2VGb2N1c1RhcmdldDogZnVuY3Rpb24oKSB7CgkJdGhpcy5f
dW50cmFja0luc3RhbmNlKCk7CgkJdGhpcy5fdHJhY2tpbmdJbnN0YW5jZXMoKS51bnNoaWZ0KCB0
aGlzICk7Cgl9LAoKCV91bnRyYWNrSW5zdGFuY2U6IGZ1bmN0aW9uKCkgewoJCXZhciBpbnN0YW5j
ZXMgPSB0aGlzLl90cmFja2luZ0luc3RhbmNlcygpLAoJCQlleGlzdHMgPSAkLmluQXJyYXkoIHRo
aXMsIGluc3RhbmNlcyApOwoJCWlmICggZXhpc3RzICE9PSAtMSApIHsKCQkJaW5zdGFuY2VzLnNw
bGljZSggZXhpc3RzLCAxICk7CgkJfQoJfSwKCglfdHJhY2tpbmdJbnN0YW5jZXM6IGZ1bmN0aW9u
KCkgewoJCXZhciBpbnN0YW5jZXMgPSB0aGlzLmRvY3VtZW50LmRhdGEoICJ1aS1kaWFsb2ctaW5z
dGFuY2VzIiApOwoJCWlmICggIWluc3RhbmNlcyApIHsKCQkJaW5zdGFuY2VzID0gW107CgkJCXRo
aXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1pbnN0YW5jZXMiLCBpbnN0YW5jZXMgKTsKCQl9
CgkJcmV0dXJuIGluc3RhbmNlczsKCX0sCgoJX21pbkhlaWdodDogZnVuY3Rpb24oKSB7CgkJdmFy
IG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7CgoJCXJldHVybiBvcHRpb25zLmhlaWdodCA9PT0gImF1
dG8iID8KCQkJb3B0aW9ucy5taW5IZWlnaHQgOgoJCQlNYXRoLm1pbiggb3B0aW9ucy5taW5IZWln
aHQsIG9wdGlvbnMuaGVpZ2h0ICk7Cgl9LAoKCV9wb3NpdGlvbjogZnVuY3Rpb24oKSB7CgoJCS8v
IE5lZWQgdG8gc2hvdyB0aGUgZGlhbG9nIHRvIGdldCB0aGUgYWN0dWFsIG9mZnNldCBpbiB0aGUg
cG9zaXRpb24gcGx1Z2luCgkJdmFyIGlzVmlzaWJsZSA9IHRoaXMudWlEaWFsb2cuaXMoICI6dmlz
aWJsZSIgKTsKCQlpZiAoICFpc1Zpc2libGUgKSB7CgkJCXRoaXMudWlEaWFsb2cuc2hvdygpOwoJ
CX0KCQl0aGlzLnVpRGlhbG9nLnBvc2l0aW9uKCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKTsKCQlp
ZiAoICFpc1Zpc2libGUgKSB7CgkJCXRoaXMudWlEaWFsb2cuaGlkZSgpOwoJCX0KCX0sCgoJX3Nl
dE9wdGlvbnM6IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJcmVz
aXplID0gZmFsc2UsCgkJCXJlc2l6YWJsZU9wdGlvbnMgPSB7fTsKCgkJJC5lYWNoKCBvcHRpb25z
LCBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQkJdGhhdC5fc2V0T3B0aW9uKCBrZXksIHZhbHVl
ICk7CgoJCQlpZiAoIGtleSBpbiB0aGF0LnNpemVSZWxhdGVkT3B0aW9ucyApIHsKCQkJCXJlc2l6
ZSA9IHRydWU7CgkJCX0KCQkJaWYgKCBrZXkgaW4gdGhhdC5yZXNpemFibGVSZWxhdGVkT3B0aW9u
cyApIHsKCQkJCXJlc2l6YWJsZU9wdGlvbnNbIGtleSBdID0gdmFsdWU7CgkJCX0KCQl9ICk7CgoJ
CWlmICggcmVzaXplICkgewoJCQl0aGlzLl9zaXplKCk7CgkJCXRoaXMuX3Bvc2l0aW9uKCk7CgkJ
fQoJCWlmICggdGhpcy51aURpYWxvZy5pcyggIjpkYXRhKHVpLXJlc2l6YWJsZSkiICkgKSB7CgkJ
CXRoaXMudWlEaWFsb2cucmVzaXphYmxlKCAib3B0aW9uIiwgcmVzaXphYmxlT3B0aW9ucyApOwoJ
CX0KCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJdmFyIGlzRHJh
Z2dhYmxlLCBpc1Jlc2l6YWJsZSwKCQkJdWlEaWFsb2cgPSB0aGlzLnVpRGlhbG9nOwoKCQlpZiAo
IGtleSA9PT0gImRpc2FibGVkIiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5fc3VwZXIoIGtl
eSwgdmFsdWUgKTsKCgkJaWYgKCBrZXkgPT09ICJhcHBlbmRUbyIgKSB7CgkJCXRoaXMudWlEaWFs
b2cuYXBwZW5kVG8oIHRoaXMuX2FwcGVuZFRvKCkgKTsKCQl9CgoJCWlmICgga2V5ID09PSAiYnV0
dG9ucyIgKSB7CgkJCXRoaXMuX2NyZWF0ZUJ1dHRvbnMoKTsKCQl9CgoJCWlmICgga2V5ID09PSAi
Y2xvc2VUZXh0IiApIHsKCQkJdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UuYnV0dG9uKCB7CgoJ
CQkJLy8gRW5zdXJlIHRoYXQgd2UgYWx3YXlzIHBhc3MgYSBzdHJpbmcKCQkJCWxhYmVsOiAkKCAi
PGE+IiApLnRleHQoICIiICsgdGhpcy5vcHRpb25zLmNsb3NlVGV4dCApLmh0bWwoKQoJCQl9ICk7
CgkJfQoKCQlpZiAoIGtleSA9PT0gImRyYWdnYWJsZSIgKSB7CgkJCWlzRHJhZ2dhYmxlID0gdWlE
aWFsb2cuaXMoICI6ZGF0YSh1aS1kcmFnZ2FibGUpIiApOwoJCQlpZiAoIGlzRHJhZ2dhYmxlICYm
ICF2YWx1ZSApIHsKCQkJCXVpRGlhbG9nLmRyYWdnYWJsZSggImRlc3Ryb3kiICk7CgkJCX0KCgkJ
CWlmICggIWlzRHJhZ2dhYmxlICYmIHZhbHVlICkgewoJCQkJdGhpcy5fbWFrZURyYWdnYWJsZSgp
OwoJCQl9CgkJfQoKCQlpZiAoIGtleSA9PT0gInBvc2l0aW9uIiApIHsKCQkJdGhpcy5fcG9zaXRp
b24oKTsKCQl9CgoJCWlmICgga2V5ID09PSAicmVzaXphYmxlIiApIHsKCgkJCS8vIGN1cnJlbnRs
eSByZXNpemFibGUsIGJlY29taW5nIG5vbi1yZXNpemFibGUKCQkJaXNSZXNpemFibGUgPSB1aURp
YWxvZy5pcyggIjpkYXRhKHVpLXJlc2l6YWJsZSkiICk7CgkJCWlmICggaXNSZXNpemFibGUgJiYg
IXZhbHVlICkgewoJCQkJdWlEaWFsb2cucmVzaXphYmxlKCAiZGVzdHJveSIgKTsKCQkJfQoKCQkJ
Ly8gQ3VycmVudGx5IHJlc2l6YWJsZSwgY2hhbmdpbmcgaGFuZGxlcwoJCQlpZiAoIGlzUmVzaXph
YmxlICYmIHR5cGVvZiB2YWx1ZSA9PT0gInN0cmluZyIgKSB7CgkJCQl1aURpYWxvZy5yZXNpemFi
bGUoICJvcHRpb24iLCAiaGFuZGxlcyIsIHZhbHVlICk7CgkJCX0KCgkJCS8vIEN1cnJlbnRseSBu
b24tcmVzaXphYmxlLCBiZWNvbWluZyByZXNpemFibGUKCQkJaWYgKCAhaXNSZXNpemFibGUgJiYg
dmFsdWUgIT09IGZhbHNlICkgewoJCQkJdGhpcy5fbWFrZVJlc2l6YWJsZSgpOwoJCQl9CgkJfQoK
CQlpZiAoIGtleSA9PT0gInRpdGxlIiApIHsKCQkJdGhpcy5fdGl0bGUoIHRoaXMudWlEaWFsb2dU
aXRsZWJhci5maW5kKCAiLnVpLWRpYWxvZy10aXRsZSIgKSApOwoJCX0KCX0sCgoJX3NpemU6IGZ1
bmN0aW9uKCkgewoKCQkvLyBJZiB0aGUgdXNlciBoYXMgcmVzaXplZCB0aGUgZGlhbG9nLCB0aGUg
LnVpLWRpYWxvZyBhbmQgLnVpLWRpYWxvZy1jb250ZW50CgkJLy8gZGl2cyB3aWxsIGJvdGggaGF2
ZSB3aWR0aCBhbmQgaGVpZ2h0IHNldCwgc28gd2UgbmVlZCB0byByZXNldCB0aGVtCgkJdmFyIG5v
bkNvbnRlbnRIZWlnaHQsIG1pbkNvbnRlbnRIZWlnaHQsIG1heENvbnRlbnRIZWlnaHQsCgkJCW9w
dGlvbnMgPSB0aGlzLm9wdGlvbnM7CgoJCS8vIFJlc2V0IGNvbnRlbnQgc2l6aW5nCgkJdGhpcy5l
bGVtZW50LnNob3coKS5jc3MoIHsKCQkJd2lkdGg6ICJhdXRvIiwKCQkJbWluSGVpZ2h0OiAwLAoJ
CQltYXhIZWlnaHQ6ICJub25lIiwKCQkJaGVpZ2h0OiAwCgkJfSApOwoKCQlpZiAoIG9wdGlvbnMu
bWluV2lkdGggPiBvcHRpb25zLndpZHRoICkgewoJCQlvcHRpb25zLndpZHRoID0gb3B0aW9ucy5t
aW5XaWR0aDsKCQl9CgoJCS8vIFJlc2V0IHdyYXBwZXIgc2l6aW5nCgkJLy8gZGV0ZXJtaW5lIHRo
ZSBoZWlnaHQgb2YgYWxsIHRoZSBub24tY29udGVudCBlbGVtZW50cwoJCW5vbkNvbnRlbnRIZWln
aHQgPSB0aGlzLnVpRGlhbG9nLmNzcyggewoJCQloZWlnaHQ6ICJhdXRvIiwKCQkJd2lkdGg6IG9w
dGlvbnMud2lkdGgKCQl9ICkKCQkJLm91dGVySGVpZ2h0KCk7CgkJbWluQ29udGVudEhlaWdodCA9
IE1hdGgubWF4KCAwLCBvcHRpb25zLm1pbkhlaWdodCAtIG5vbkNvbnRlbnRIZWlnaHQgKTsKCQlt
YXhDb250ZW50SGVpZ2h0ID0gdHlwZW9mIG9wdGlvbnMubWF4SGVpZ2h0ID09PSAibnVtYmVyIiA/
CgkJCU1hdGgubWF4KCAwLCBvcHRpb25zLm1heEhlaWdodCAtIG5vbkNvbnRlbnRIZWlnaHQgKSA6
CgkJCSJub25lIjsKCgkJaWYgKCBvcHRpb25zLmhlaWdodCA9PT0gImF1dG8iICkgewoJCQl0aGlz
LmVsZW1lbnQuY3NzKCB7CgkJCQltaW5IZWlnaHQ6IG1pbkNvbnRlbnRIZWlnaHQsCgkJCQltYXhI
ZWlnaHQ6IG1heENvbnRlbnRIZWlnaHQsCgkJCQloZWlnaHQ6ICJhdXRvIgoJCQl9ICk7CgkJfSBl
bHNlIHsKCQkJdGhpcy5lbGVtZW50LmhlaWdodCggTWF0aC5tYXgoIDAsIG9wdGlvbnMuaGVpZ2h0
IC0gbm9uQ29udGVudEhlaWdodCApICk7CgkJfQoKCQlpZiAoIHRoaXMudWlEaWFsb2cuaXMoICI6
ZGF0YSh1aS1yZXNpemFibGUpIiApICkgewoJCQl0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSggIm9w
dGlvbiIsICJtaW5IZWlnaHQiLCB0aGlzLl9taW5IZWlnaHQoKSApOwoJCX0KCX0sCgoJX2Jsb2Nr
RnJhbWVzOiBmdW5jdGlvbigpIHsKCQl0aGlzLmlmcmFtZUJsb2NrcyA9IHRoaXMuZG9jdW1lbnQu
ZmluZCggImlmcmFtZSIgKS5tYXAoIGZ1bmN0aW9uKCkgewoJCQl2YXIgaWZyYW1lID0gJCggdGhp
cyApOwoKCQkJcmV0dXJuICQoICI8ZGl2PiIgKQoJCQkJLmNzcyggewoJCQkJCXBvc2l0aW9uOiAi
YWJzb2x1dGUiLAoJCQkJCXdpZHRoOiBpZnJhbWUub3V0ZXJXaWR0aCgpLAoJCQkJCWhlaWdodDog
aWZyYW1lLm91dGVySGVpZ2h0KCkKCQkJCX0gKQoJCQkJLmFwcGVuZFRvKCBpZnJhbWUucGFyZW50
KCkgKQoJCQkJLm9mZnNldCggaWZyYW1lLm9mZnNldCgpIClbIDAgXTsKCQl9ICk7Cgl9LAoKCV91
bmJsb2NrRnJhbWVzOiBmdW5jdGlvbigpIHsKCQlpZiAoIHRoaXMuaWZyYW1lQmxvY2tzICkgewoJ
CQl0aGlzLmlmcmFtZUJsb2Nrcy5yZW1vdmUoKTsKCQkJZGVsZXRlIHRoaXMuaWZyYW1lQmxvY2tz
OwoJCX0KCX0sCgoJX2FsbG93SW50ZXJhY3Rpb246IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAo
ICQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktZGlhbG9nIiApLmxlbmd0aCApIHsKCQkJ
cmV0dXJuIHRydWU7CgkJfQoKCQkvLyBUT0RPOiBSZW1vdmUgaGFjayB3aGVuIGRhdGVwaWNrZXIg
aW1wbGVtZW50cwoJCS8vIHRoZSAudWktZnJvbnQgbG9naWMgKCM4OTg5KQoJCXJldHVybiAhISQo
IGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktZGF0ZXBpY2tlciIgKS5sZW5ndGg7Cgl9LAoK
CV9jcmVhdGVPdmVybGF5OiBmdW5jdGlvbigpIHsKCQlpZiAoICF0aGlzLm9wdGlvbnMubW9kYWwg
KSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIFdlIHVzZSBhIGRlbGF5IGluIGNhc2UgdGhlIG92ZXJs
YXkgaXMgY3JlYXRlZCBmcm9tIGFuCgkJLy8gZXZlbnQgdGhhdCB3ZSdyZSBnb2luZyB0byBiZSBj
YW5jZWxsaW5nICgjMjgwNCkKCQl2YXIgaXNPcGVuaW5nID0gdHJ1ZTsKCQl0aGlzLl9kZWxheSgg
ZnVuY3Rpb24oKSB7CgkJCWlzT3BlbmluZyA9IGZhbHNlOwoJCX0gKTsKCgkJaWYgKCAhdGhpcy5k
b2N1bWVudC5kYXRhKCAidWktZGlhbG9nLW92ZXJsYXlzIiApICkgewoKCQkJLy8gUHJldmVudCB1
c2Ugb2YgYW5jaG9ycyBhbmQgaW5wdXRzCgkJCS8vIFVzaW5nIF9vbigpIGZvciBhbiBldmVudCBo
YW5kbGVyIHNoYXJlZCBhY3Jvc3MgbWFueSBpbnN0YW5jZXMgaXMKCQkJLy8gc2FmZSBiZWNhdXNl
IHRoZSBkaWFsb2dzIHN0YWNrIGFuZCBtdXN0IGJlIGNsb3NlZCBpbiByZXZlcnNlIG9yZGVyCgkJ
CXRoaXMuX29uKCB0aGlzLmRvY3VtZW50LCB7CgkJCQlmb2N1c2luOiBmdW5jdGlvbiggZXZlbnQg
KSB7CgkJCQkJaWYgKCBpc09wZW5pbmcgKSB7CgkJCQkJCXJldHVybjsKCQkJCQl9CgoJCQkJCWlm
ICggIXRoaXMuX2FsbG93SW50ZXJhY3Rpb24oIGV2ZW50ICkgKSB7CgkJCQkJCWV2ZW50LnByZXZl
bnREZWZhdWx0KCk7CgkJCQkJCXRoaXMuX3RyYWNraW5nSW5zdGFuY2VzKClbIDAgXS5fZm9jdXNU
YWJiYWJsZSgpOwoJCQkJCX0KCQkJCX0KCQkJfSApOwoJCX0KCgkJdGhpcy5vdmVybGF5ID0gJCgg
IjxkaXY+IiApCgkJCS5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOwoKCQl0aGlzLl9hZGRD
bGFzcyggdGhpcy5vdmVybGF5LCBudWxsLCAidWktd2lkZ2V0LW92ZXJsYXkgdWktZnJvbnQiICk7
CgkJdGhpcy5fb24oIHRoaXMub3ZlcmxheSwgewoJCQltb3VzZWRvd246ICJfa2VlcEZvY3VzIgoJ
CX0gKTsKCQl0aGlzLmRvY3VtZW50LmRhdGEoICJ1aS1kaWFsb2ctb3ZlcmxheXMiLAoJCQkoIHRo
aXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1vdmVybGF5cyIgKSB8fCAwICkgKyAxICk7Cgl9
LAoKCV9kZXN0cm95T3ZlcmxheTogZnVuY3Rpb24oKSB7CgkJaWYgKCAhdGhpcy5vcHRpb25zLm1v
ZGFsICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIHRoaXMub3ZlcmxheSApIHsKCQkJdmFyIG92
ZXJsYXlzID0gdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLW92ZXJsYXlzIiApIC0gMTsK
CgkJCWlmICggIW92ZXJsYXlzICkgewoJCQkJdGhpcy5fb2ZmKCB0aGlzLmRvY3VtZW50LCAiZm9j
dXNpbiIgKTsKCQkJCXRoaXMuZG9jdW1lbnQucmVtb3ZlRGF0YSggInVpLWRpYWxvZy1vdmVybGF5
cyIgKTsKCQkJfSBlbHNlIHsKCQkJCXRoaXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1vdmVy
bGF5cyIsIG92ZXJsYXlzICk7CgkJCX0KCgkJCXRoaXMub3ZlcmxheS5yZW1vdmUoKTsKCQkJdGhp
cy5vdmVybGF5ID0gbnVsbDsKCQl9Cgl9Cn0gKTsKCi8vIERFUFJFQ0FURUQKLy8gVE9ETzogc3dp
dGNoIHJldHVybiBiYWNrIHRvIHdpZGdldCBkZWNsYXJhdGlvbiBhdCB0b3Agb2YgZmlsZSB3aGVu
IHRoaXMgaXMgcmVtb3ZlZAppZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSApIHsKCgkvLyBC
YWNrY29tcGF0IGZvciBkaWFsb2dDbGFzcyBvcHRpb24KCSQud2lkZ2V0KCAidWkuZGlhbG9nIiwg
JC51aS5kaWFsb2csIHsKCQlvcHRpb25zOiB7CgkJCWRpYWxvZ0NsYXNzOiAiIgoJCX0sCgkJX2Ny
ZWF0ZVdyYXBwZXI6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlcigpOwoJCQl0aGlzLnVpRGlh
bG9nLmFkZENsYXNzKCB0aGlzLm9wdGlvbnMuZGlhbG9nQ2xhc3MgKTsKCQl9LAoJCV9zZXRPcHRp
b246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCQlpZiAoIGtleSA9PT0gImRpYWxvZ0NsYXNz
IiApIHsKCQkJCXRoaXMudWlEaWFsb2cKCQkJCQkucmVtb3ZlQ2xhc3MoIHRoaXMub3B0aW9ucy5k
aWFsb2dDbGFzcyApCgkJCQkJLmFkZENsYXNzKCB2YWx1ZSApOwoJCQl9CgkJCXRoaXMuX3N1cGVy
QXBwbHkoIGFyZ3VtZW50cyApOwoJCX0KCX0gKTsKfQoKdmFyIHdpZGdldHNEaWFsb2cgPSAkLnVp
LmRpYWxvZzsKCgovKiEKICogalF1ZXJ5IFVJIERyb3BwYWJsZSAxLjEyLjEKICogaHR0cDovL2px
dWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNv
bnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9q
cXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IERyb3BwYWJsZQovLz4+Z3JvdXA6IElu
dGVyYWN0aW9ucwovLz4+ZGVzY3JpcHRpb246IEVuYWJsZXMgZHJvcCB0YXJnZXRzIGZvciBkcmFn
Z2FibGUgZWxlbWVudHMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kcm9wcGFi
bGUvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9kcm9wcGFibGUvCgoKCiQud2lkZ2V0
KCAidWkuZHJvcHBhYmxlIiwgewoJdmVyc2lvbjogIjEuMTIuMSIsCgl3aWRnZXRFdmVudFByZWZp
eDogImRyb3AiLAoJb3B0aW9uczogewoJCWFjY2VwdDogIioiLAoJCWFkZENsYXNzZXM6IHRydWUs
CgkJZ3JlZWR5OiBmYWxzZSwKCQlzY29wZTogImRlZmF1bHQiLAoJCXRvbGVyYW5jZTogImludGVy
c2VjdCIsCgoJCS8vIENhbGxiYWNrcwoJCWFjdGl2YXRlOiBudWxsLAoJCWRlYWN0aXZhdGU6IG51
bGwsCgkJZHJvcDogbnVsbCwKCQlvdXQ6IG51bGwsCgkJb3ZlcjogbnVsbAoJfSwKCV9jcmVhdGU6
IGZ1bmN0aW9uKCkgewoKCQl2YXIgcHJvcG9ydGlvbnMsCgkJCW8gPSB0aGlzLm9wdGlvbnMsCgkJ
CWFjY2VwdCA9IG8uYWNjZXB0OwoKCQl0aGlzLmlzb3ZlciA9IGZhbHNlOwoJCXRoaXMuaXNvdXQg
PSB0cnVlOwoKCQl0aGlzLmFjY2VwdCA9ICQuaXNGdW5jdGlvbiggYWNjZXB0ICkgPyBhY2NlcHQg
OiBmdW5jdGlvbiggZCApIHsKCQkJcmV0dXJuIGQuaXMoIGFjY2VwdCApOwoJCX07CgoJCXRoaXMu
cHJvcG9ydGlvbnMgPSBmdW5jdGlvbiggLyogdmFsdWVUb1dyaXRlICovICkgewoJCQlpZiAoIGFy
Z3VtZW50cy5sZW5ndGggKSB7CgoJCQkJLy8gU3RvcmUgdGhlIGRyb3BwYWJsZSdzIHByb3BvcnRp
b25zCgkJCQlwcm9wb3J0aW9ucyA9IGFyZ3VtZW50c1sgMCBdOwoJCQl9IGVsc2UgewoKCQkJCS8v
IFJldHJpZXZlIG9yIGRlcml2ZSB0aGUgZHJvcHBhYmxlJ3MgcHJvcG9ydGlvbnMKCQkJCXJldHVy
biBwcm9wb3J0aW9ucyA/CgkJCQkJcHJvcG9ydGlvbnMgOgoJCQkJCXByb3BvcnRpb25zID0gewoJ
CQkJCQl3aWR0aDogdGhpcy5lbGVtZW50WyAwIF0ub2Zmc2V0V2lkdGgsCgkJCQkJCWhlaWdodDog
dGhpcy5lbGVtZW50WyAwIF0ub2Zmc2V0SGVpZ2h0CgkJCQkJfTsKCQkJfQoJCX07CgoJCXRoaXMu
X2FkZFRvTWFuYWdlciggby5zY29wZSApOwoKCQlvLmFkZENsYXNzZXMgJiYgdGhpcy5fYWRkQ2xh
c3MoICJ1aS1kcm9wcGFibGUiICk7CgoJfSwKCglfYWRkVG9NYW5hZ2VyOiBmdW5jdGlvbiggc2Nv
cGUgKSB7CgoJCS8vIEFkZCB0aGUgcmVmZXJlbmNlIGFuZCBwb3NpdGlvbnMgdG8gdGhlIG1hbmFn
ZXIKCQkkLnVpLmRkbWFuYWdlci5kcm9wcGFibGVzWyBzY29wZSBdID0gJC51aS5kZG1hbmFnZXIu
ZHJvcHBhYmxlc1sgc2NvcGUgXSB8fCBbXTsKCQkkLnVpLmRkbWFuYWdlci5kcm9wcGFibGVzWyBz
Y29wZSBdLnB1c2goIHRoaXMgKTsKCX0sCgoJX3NwbGljZTogZnVuY3Rpb24oIGRyb3AgKSB7CgkJ
dmFyIGkgPSAwOwoJCWZvciAoIDsgaSA8IGRyb3AubGVuZ3RoOyBpKysgKSB7CgkJCWlmICggZHJv
cFsgaSBdID09PSB0aGlzICkgewoJCQkJZHJvcC5zcGxpY2UoIGksIDEgKTsKCQkJfQoJCX0KCX0s
CgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCXZhciBkcm9wID0gJC51aS5kZG1hbmFnZXIuZHJv
cHBhYmxlc1sgdGhpcy5vcHRpb25zLnNjb3BlIF07CgoJCXRoaXMuX3NwbGljZSggZHJvcCApOwoJ
fSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCgkJaWYgKCBrZXkgPT09
ICJhY2NlcHQiICkgewoJCQl0aGlzLmFjY2VwdCA9ICQuaXNGdW5jdGlvbiggdmFsdWUgKSA/IHZh
bHVlIDogZnVuY3Rpb24oIGQgKSB7CgkJCQlyZXR1cm4gZC5pcyggdmFsdWUgKTsKCQkJfTsKCQl9
IGVsc2UgaWYgKCBrZXkgPT09ICJzY29wZSIgKSB7CgkJCXZhciBkcm9wID0gJC51aS5kZG1hbmFn
ZXIuZHJvcHBhYmxlc1sgdGhpcy5vcHRpb25zLnNjb3BlIF07CgoJCQl0aGlzLl9zcGxpY2UoIGRy
b3AgKTsKCQkJdGhpcy5fYWRkVG9NYW5hZ2VyKCB2YWx1ZSApOwoJCX0KCgkJdGhpcy5fc3VwZXIo
IGtleSwgdmFsdWUgKTsKCX0sCgoJX2FjdGl2YXRlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFy
IGRyYWdnYWJsZSA9ICQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ7CgoJCXRoaXMuX2FkZEFjdGl2ZUNs
YXNzKCk7CgkJaWYgKCBkcmFnZ2FibGUgKSB7CgkJCXRoaXMuX3RyaWdnZXIoICJhY3RpdmF0ZSIs
IGV2ZW50LCB0aGlzLnVpKCBkcmFnZ2FibGUgKSApOwoJCX0KCX0sCgoJX2RlYWN0aXZhdGU6IGZ1
bmN0aW9uKCBldmVudCApIHsKCQl2YXIgZHJhZ2dhYmxlID0gJC51aS5kZG1hbmFnZXIuY3VycmVu
dDsKCgkJdGhpcy5fcmVtb3ZlQWN0aXZlQ2xhc3MoKTsKCQlpZiAoIGRyYWdnYWJsZSApIHsKCQkJ
dGhpcy5fdHJpZ2dlciggImRlYWN0aXZhdGUiLCBldmVudCwgdGhpcy51aSggZHJhZ2dhYmxlICkg
KTsKCQl9Cgl9LAoKCV9vdmVyOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBkcmFnZ2FibGUg
PSAkLnVpLmRkbWFuYWdlci5jdXJyZW50OwoKCQkvLyBCYWlsIGlmIGRyYWdnYWJsZSBhbmQgZHJv
cHBhYmxlIGFyZSBzYW1lIGVsZW1lbnQKCQlpZiAoICFkcmFnZ2FibGUgfHwgKCBkcmFnZ2FibGUu
Y3VycmVudEl0ZW0gfHwKCQkJCWRyYWdnYWJsZS5lbGVtZW50IClbIDAgXSA9PT0gdGhpcy5lbGVt
ZW50WyAwIF0gKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggdGhpcy5hY2NlcHQuY2FsbCggdGhp
cy5lbGVtZW50WyAwIF0sICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8CgkJCQlkcmFnZ2FibGUu
ZWxlbWVudCApICkgKSB7CgkJCXRoaXMuX2FkZEhvdmVyQ2xhc3MoKTsKCQkJdGhpcy5fdHJpZ2dl
ciggIm92ZXIiLCBldmVudCwgdGhpcy51aSggZHJhZ2dhYmxlICkgKTsKCQl9CgoJfSwKCglfb3V0
OiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBkcmFnZ2FibGUgPSAkLnVpLmRkbWFuYWdlci5j
dXJyZW50OwoKCQkvLyBCYWlsIGlmIGRyYWdnYWJsZSBhbmQgZHJvcHBhYmxlIGFyZSBzYW1lIGVs
ZW1lbnQKCQlpZiAoICFkcmFnZ2FibGUgfHwgKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwKCQkJ
CWRyYWdnYWJsZS5lbGVtZW50IClbIDAgXSA9PT0gdGhpcy5lbGVtZW50WyAwIF0gKSB7CgkJCXJl
dHVybjsKCQl9CgoJCWlmICggdGhpcy5hY2NlcHQuY2FsbCggdGhpcy5lbGVtZW50WyAwIF0sICgg
ZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8CgkJCQlkcmFnZ2FibGUuZWxlbWVudCApICkgKSB7CgkJ
CXRoaXMuX3JlbW92ZUhvdmVyQ2xhc3MoKTsKCQkJdGhpcy5fdHJpZ2dlciggIm91dCIsIGV2ZW50
LCB0aGlzLnVpKCBkcmFnZ2FibGUgKSApOwoJCX0KCgl9LAoKCV9kcm9wOiBmdW5jdGlvbiggZXZl
bnQsIGN1c3RvbSApIHsKCgkJdmFyIGRyYWdnYWJsZSA9IGN1c3RvbSB8fCAkLnVpLmRkbWFuYWdl
ci5jdXJyZW50LAoJCQljaGlsZHJlbkludGVyc2VjdGlvbiA9IGZhbHNlOwoKCQkvLyBCYWlsIGlm
IGRyYWdnYWJsZSBhbmQgZHJvcHBhYmxlIGFyZSBzYW1lIGVsZW1lbnQKCQlpZiAoICFkcmFnZ2Fi
bGUgfHwgKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwKCQkJCWRyYWdnYWJsZS5lbGVtZW50IClb
IDAgXSA9PT0gdGhpcy5lbGVtZW50WyAwIF0gKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXRo
aXMuZWxlbWVudAoJCQkuZmluZCggIjpkYXRhKHVpLWRyb3BwYWJsZSkiICkKCQkJLm5vdCggIi51
aS1kcmFnZ2FibGUtZHJhZ2dpbmciICkKCQkJLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJdmFyIGlu
c3QgPSAkKCB0aGlzICkuZHJvcHBhYmxlKCAiaW5zdGFuY2UiICk7CgkJCQlpZiAoCgkJCQkJaW5z
dC5vcHRpb25zLmdyZWVkeSAmJgoJCQkJCSFpbnN0Lm9wdGlvbnMuZGlzYWJsZWQgJiYKCQkJCQlp
bnN0Lm9wdGlvbnMuc2NvcGUgPT09IGRyYWdnYWJsZS5vcHRpb25zLnNjb3BlICYmCgkJCQkJaW5z
dC5hY2NlcHQuY2FsbCgKCQkJCQkJaW5zdC5lbGVtZW50WyAwIF0sICggZHJhZ2dhYmxlLmN1cnJl
bnRJdGVtIHx8IGRyYWdnYWJsZS5lbGVtZW50ICkKCQkJCQkpICYmCgkJCQkJaW50ZXJzZWN0KAoJ
CQkJCQlkcmFnZ2FibGUsCgkJCQkJCSQuZXh0ZW5kKCBpbnN0LCB7IG9mZnNldDogaW5zdC5lbGVt
ZW50Lm9mZnNldCgpIH0gKSwKCQkJCQkJaW5zdC5vcHRpb25zLnRvbGVyYW5jZSwgZXZlbnQKCQkJ
CQkpCgkJCQkpIHsKCQkJCQljaGlsZHJlbkludGVyc2VjdGlvbiA9IHRydWU7CgkJCQkJcmV0dXJu
IGZhbHNlOyB9CgkJCX0gKTsKCQlpZiAoIGNoaWxkcmVuSW50ZXJzZWN0aW9uICkgewoJCQlyZXR1
cm4gZmFsc2U7CgkJfQoKCQlpZiAoIHRoaXMuYWNjZXB0LmNhbGwoIHRoaXMuZWxlbWVudFsgMCBd
LAoJCQkJKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwgZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkg
ewoJCQl0aGlzLl9yZW1vdmVBY3RpdmVDbGFzcygpOwoJCQl0aGlzLl9yZW1vdmVIb3ZlckNsYXNz
KCk7CgoJCQl0aGlzLl90cmlnZ2VyKCAiZHJvcCIsIGV2ZW50LCB0aGlzLnVpKCBkcmFnZ2FibGUg
KSApOwoJCQlyZXR1cm4gdGhpcy5lbGVtZW50OwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoKCX0sCgoJ
dWk6IGZ1bmN0aW9uKCBjICkgewoJCXJldHVybiB7CgkJCWRyYWdnYWJsZTogKCBjLmN1cnJlbnRJ
dGVtIHx8IGMuZWxlbWVudCApLAoJCQloZWxwZXI6IGMuaGVscGVyLAoJCQlwb3NpdGlvbjogYy5w
b3NpdGlvbiwKCQkJb2Zmc2V0OiBjLnBvc2l0aW9uQWJzCgkJfTsKCX0sCgoJLy8gRXh0ZW5zaW9u
IHBvaW50cyBqdXN0IHRvIG1ha2UgYmFja2NvbXBhdCBzYW5lIGFuZCBhdm9pZCBkdXBsaWNhdGlu
ZyBsb2dpYwoJLy8gVE9ETzogUmVtb3ZlIGluIDEuMTMgYWxvbmcgd2l0aCBjYWxsIHRvIGl0IGJl
bG93CglfYWRkSG92ZXJDbGFzczogZnVuY3Rpb24oKSB7CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1k
cm9wcGFibGUtaG92ZXIiICk7Cgl9LAoKCV9yZW1vdmVIb3ZlckNsYXNzOiBmdW5jdGlvbigpIHsK
CQl0aGlzLl9yZW1vdmVDbGFzcyggInVpLWRyb3BwYWJsZS1ob3ZlciIgKTsKCX0sCgoJX2FkZEFj
dGl2ZUNsYXNzOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9hZGRDbGFzcyggInVpLWRyb3BwYWJsZS1h
Y3RpdmUiICk7Cgl9LAoKCV9yZW1vdmVBY3RpdmVDbGFzczogZnVuY3Rpb24oKSB7CgkJdGhpcy5f
cmVtb3ZlQ2xhc3MoICJ1aS1kcm9wcGFibGUtYWN0aXZlIiApOwoJfQp9ICk7Cgp2YXIgaW50ZXJz
ZWN0ID0gJC51aS5pbnRlcnNlY3QgPSAoIGZ1bmN0aW9uKCkgewoJZnVuY3Rpb24gaXNPdmVyQXhp
cyggeCwgcmVmZXJlbmNlLCBzaXplICkgewoJCXJldHVybiAoIHggPj0gcmVmZXJlbmNlICkgJiYg
KCB4IDwgKCByZWZlcmVuY2UgKyBzaXplICkgKTsKCX0KCglyZXR1cm4gZnVuY3Rpb24oIGRyYWdn
YWJsZSwgZHJvcHBhYmxlLCB0b2xlcmFuY2VNb2RlLCBldmVudCApIHsKCgkJaWYgKCAhZHJvcHBh
YmxlLm9mZnNldCApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJdmFyIHgxID0gKCBkcmFnZ2Fi
bGUucG9zaXRpb25BYnMgfHwKCQkJCWRyYWdnYWJsZS5wb3NpdGlvbi5hYnNvbHV0ZSApLmxlZnQg
KyBkcmFnZ2FibGUubWFyZ2lucy5sZWZ0LAoJCQl5MSA9ICggZHJhZ2dhYmxlLnBvc2l0aW9uQWJz
IHx8CgkJCQlkcmFnZ2FibGUucG9zaXRpb24uYWJzb2x1dGUgKS50b3AgKyBkcmFnZ2FibGUubWFy
Z2lucy50b3AsCgkJCXgyID0geDEgKyBkcmFnZ2FibGUuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgs
CgkJCXkyID0geTEgKyBkcmFnZ2FibGUuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LAoJCQlsID0g
ZHJvcHBhYmxlLm9mZnNldC5sZWZ0LAoJCQl0ID0gZHJvcHBhYmxlLm9mZnNldC50b3AsCgkJCXIg
PSBsICsgZHJvcHBhYmxlLnByb3BvcnRpb25zKCkud2lkdGgsCgkJCWIgPSB0ICsgZHJvcHBhYmxl
LnByb3BvcnRpb25zKCkuaGVpZ2h0OwoKCQlzd2l0Y2ggKCB0b2xlcmFuY2VNb2RlICkgewoJCWNh
c2UgImZpdCI6CgkJCXJldHVybiAoIGwgPD0geDEgJiYgeDIgPD0gciAmJiB0IDw9IHkxICYmIHky
IDw9IGIgKTsKCQljYXNlICJpbnRlcnNlY3QiOgoJCQlyZXR1cm4gKCBsIDwgeDEgKyAoIGRyYWdn
YWJsZS5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAvIDIgKSAmJiAvLyBSaWdodCBIYWxmCgkJCQl4
MiAtICggZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC8gMiApIDwgciAmJiAvLyBM
ZWZ0IEhhbGYKCQkJCXQgPCB5MSArICggZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLmhlaWdo
dCAvIDIgKSAmJiAvLyBCb3R0b20gSGFsZgoJCQkJeTIgLSAoIGRyYWdnYWJsZS5oZWxwZXJQcm9w
b3J0aW9ucy5oZWlnaHQgLyAyICkgPCBiICk7IC8vIFRvcCBIYWxmCgkJY2FzZSAicG9pbnRlciI6
CgkJCXJldHVybiBpc092ZXJBeGlzKCBldmVudC5wYWdlWSwgdCwgZHJvcHBhYmxlLnByb3BvcnRp
b25zKCkuaGVpZ2h0ICkgJiYKCQkJCWlzT3ZlckF4aXMoIGV2ZW50LnBhZ2VYLCBsLCBkcm9wcGFi
bGUucHJvcG9ydGlvbnMoKS53aWR0aCApOwoJCWNhc2UgInRvdWNoIjoKCQkJcmV0dXJuICgKCQkJ
CSggeTEgPj0gdCAmJiB5MSA8PSBiICkgfHwgLy8gVG9wIGVkZ2UgdG91Y2hpbmcKCQkJCSggeTIg
Pj0gdCAmJiB5MiA8PSBiICkgfHwgLy8gQm90dG9tIGVkZ2UgdG91Y2hpbmcKCQkJCSggeTEgPCB0
ICYmIHkyID4gYiApIC8vIFN1cnJvdW5kZWQgdmVydGljYWxseQoJCQkpICYmICgKCQkJCSggeDEg
Pj0gbCAmJiB4MSA8PSByICkgfHwgLy8gTGVmdCBlZGdlIHRvdWNoaW5nCgkJCQkoIHgyID49IGwg
JiYgeDIgPD0gciApIHx8IC8vIFJpZ2h0IGVkZ2UgdG91Y2hpbmcKCQkJCSggeDEgPCBsICYmIHgy
ID4gciApIC8vIFN1cnJvdW5kZWQgaG9yaXpvbnRhbGx5CgkJCSk7CgkJZGVmYXVsdDoKCQkJcmV0
dXJuIGZhbHNlOwoJCX0KCX07Cn0gKSgpOwoKLyoKCVRoaXMgbWFuYWdlciB0cmFja3Mgb2Zmc2V0
cyBvZiBkcmFnZ2FibGVzIGFuZCBkcm9wcGFibGVzCiovCiQudWkuZGRtYW5hZ2VyID0gewoJY3Vy
cmVudDogbnVsbCwKCWRyb3BwYWJsZXM6IHsgImRlZmF1bHQiOiBbXSB9LAoJcHJlcGFyZU9mZnNl
dHM6IGZ1bmN0aW9uKCB0LCBldmVudCApIHsKCgkJdmFyIGksIGosCgkJCW0gPSAkLnVpLmRkbWFu
YWdlci5kcm9wcGFibGVzWyB0Lm9wdGlvbnMuc2NvcGUgXSB8fCBbXSwKCQkJdHlwZSA9IGV2ZW50
ID8gZXZlbnQudHlwZSA6IG51bGwsIC8vIHdvcmthcm91bmQgZm9yICMyMzE3CgkJCWxpc3QgPSAo
IHQuY3VycmVudEl0ZW0gfHwgdC5lbGVtZW50ICkuZmluZCggIjpkYXRhKHVpLWRyb3BwYWJsZSki
ICkuYWRkQmFjaygpOwoKCQlkcm9wcGFibGVzTG9vcDogZm9yICggaSA9IDA7IGkgPCBtLmxlbmd0
aDsgaSsrICkgewoKCQkJLy8gTm8gZGlzYWJsZWQgYW5kIG5vbi1hY2NlcHRlZAoJCQlpZiAoIG1b
IGkgXS5vcHRpb25zLmRpc2FibGVkIHx8ICggdCAmJiAhbVsgaSBdLmFjY2VwdC5jYWxsKCBtWyBp
IF0uZWxlbWVudFsgMCBdLAoJCQkJCSggdC5jdXJyZW50SXRlbSB8fCB0LmVsZW1lbnQgKSApICkg
KSB7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJLy8gRmlsdGVyIG91dCBlbGVtZW50cyBpbiB0aGUg
Y3VycmVudCBkcmFnZ2VkIGl0ZW0KCQkJZm9yICggaiA9IDA7IGogPCBsaXN0Lmxlbmd0aDsgaisr
ICkgewoJCQkJaWYgKCBsaXN0WyBqIF0gPT09IG1bIGkgXS5lbGVtZW50WyAwIF0gKSB7CgkJCQkJ
bVsgaSBdLnByb3BvcnRpb25zKCkuaGVpZ2h0ID0gMDsKCQkJCQljb250aW51ZSBkcm9wcGFibGVz
TG9vcDsKCQkJCX0KCQkJfQoKCQkJbVsgaSBdLnZpc2libGUgPSBtWyBpIF0uZWxlbWVudC5jc3Mo
ICJkaXNwbGF5IiApICE9PSAibm9uZSI7CgkJCWlmICggIW1bIGkgXS52aXNpYmxlICkgewoJCQkJ
Y29udGludWU7CgkJCX0KCgkJCS8vIEFjdGl2YXRlIHRoZSBkcm9wcGFibGUgaWYgdXNlZCBkaXJl
Y3RseSBmcm9tIGRyYWdnYWJsZXMKCQkJaWYgKCB0eXBlID09PSAibW91c2Vkb3duIiApIHsKCQkJ
CW1bIGkgXS5fYWN0aXZhdGUuY2FsbCggbVsgaSBdLCBldmVudCApOwoJCQl9CgoJCQltWyBpIF0u
b2Zmc2V0ID0gbVsgaSBdLmVsZW1lbnQub2Zmc2V0KCk7CgkJCW1bIGkgXS5wcm9wb3J0aW9ucygg
ewoJCQkJd2lkdGg6IG1bIGkgXS5lbGVtZW50WyAwIF0ub2Zmc2V0V2lkdGgsCgkJCQloZWlnaHQ6
IG1bIGkgXS5lbGVtZW50WyAwIF0ub2Zmc2V0SGVpZ2h0CgkJCX0gKTsKCgkJfQoKCX0sCglkcm9w
OiBmdW5jdGlvbiggZHJhZ2dhYmxlLCBldmVudCApIHsKCgkJdmFyIGRyb3BwZWQgPSBmYWxzZTsK
CgkJLy8gQ3JlYXRlIGEgY29weSBvZiB0aGUgZHJvcHBhYmxlcyBpbiBjYXNlIHRoZSBsaXN0IGNo
YW5nZXMgZHVyaW5nIHRoZSBkcm9wICgjOTExNikKCQkkLmVhY2goICggJC51aS5kZG1hbmFnZXIu
ZHJvcHBhYmxlc1sgZHJhZ2dhYmxlLm9wdGlvbnMuc2NvcGUgXSB8fCBbXSApLnNsaWNlKCksIGZ1
bmN0aW9uKCkgewoKCQkJaWYgKCAhdGhpcy5vcHRpb25zICkgewoJCQkJcmV0dXJuOwoJCQl9CgkJ
CWlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlZCAmJiB0aGlzLnZpc2libGUgJiYKCQkJCQlpbnRl
cnNlY3QoIGRyYWdnYWJsZSwgdGhpcywgdGhpcy5vcHRpb25zLnRvbGVyYW5jZSwgZXZlbnQgKSAp
IHsKCQkJCWRyb3BwZWQgPSB0aGlzLl9kcm9wLmNhbGwoIHRoaXMsIGV2ZW50ICkgfHwgZHJvcHBl
ZDsKCQkJfQoKCQkJaWYgKCAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIHRoaXMudmlzaWJsZSAm
JiB0aGlzLmFjY2VwdC5jYWxsKCB0aGlzLmVsZW1lbnRbIDAgXSwKCQkJCQkoIGRyYWdnYWJsZS5j
dXJyZW50SXRlbSB8fCBkcmFnZ2FibGUuZWxlbWVudCApICkgKSB7CgkJCQl0aGlzLmlzb3V0ID0g
dHJ1ZTsKCQkJCXRoaXMuaXNvdmVyID0gZmFsc2U7CgkJCQl0aGlzLl9kZWFjdGl2YXRlLmNhbGwo
IHRoaXMsIGV2ZW50ICk7CgkJCX0KCgkJfSApOwoJCXJldHVybiBkcm9wcGVkOwoKCX0sCglkcmFn
U3RhcnQ6IGZ1bmN0aW9uKCBkcmFnZ2FibGUsIGV2ZW50ICkgewoKCQkvLyBMaXN0ZW4gZm9yIHNj
cm9sbGluZyBzbyB0aGF0IGlmIHRoZSBkcmFnZ2luZyBjYXVzZXMgc2Nyb2xsaW5nIHRoZSBwb3Np
dGlvbiBvZiB0aGUKCQkvLyBkcm9wcGFibGVzIGNhbiBiZSByZWNhbGN1bGF0ZWQgKHNlZSAjNTAw
MykKCQlkcmFnZ2FibGUuZWxlbWVudC5wYXJlbnRzVW50aWwoICJib2R5IiApLm9uKCAic2Nyb2xs
LmRyb3BwYWJsZSIsIGZ1bmN0aW9uKCkgewoJCQlpZiAoICFkcmFnZ2FibGUub3B0aW9ucy5yZWZy
ZXNoUG9zaXRpb25zICkgewoJCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIGRyYWdn
YWJsZSwgZXZlbnQgKTsKCQkJfQoJCX0gKTsKCX0sCglkcmFnOiBmdW5jdGlvbiggZHJhZ2dhYmxl
LCBldmVudCApIHsKCgkJLy8gSWYgeW91IGhhdmUgYSBoaWdobHkgZHluYW1pYyBwYWdlLCB5b3Ug
bWlnaHQgdHJ5IHRoaXMgb3B0aW9uLiBJdCByZW5kZXJzIHBvc2l0aW9ucwoJCS8vIGV2ZXJ5IHRp
bWUgeW91IG1vdmUgdGhlIG1vdXNlLgoJCWlmICggZHJhZ2dhYmxlLm9wdGlvbnMucmVmcmVzaFBv
c2l0aW9ucyApIHsKCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIGRyYWdnYWJsZSwg
ZXZlbnQgKTsKCQl9CgoJCS8vIFJ1biB0aHJvdWdoIGFsbCBkcm9wcGFibGVzIGFuZCBjaGVjayB0
aGVpciBwb3NpdGlvbnMgYmFzZWQgb24gc3BlY2lmaWMgdG9sZXJhbmNlIG9wdGlvbnMKCQkkLmVh
Y2goICQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIGRyYWdnYWJsZS5vcHRpb25zLnNjb3BlIF0g
fHwgW10sIGZ1bmN0aW9uKCkgewoKCQkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgfHwgdGhp
cy5ncmVlZHlDaGlsZCB8fCAhdGhpcy52aXNpYmxlICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQl2
YXIgcGFyZW50SW5zdGFuY2UsIHNjb3BlLCBwYXJlbnQsCgkJCQlpbnRlcnNlY3RzID0gaW50ZXJz
ZWN0KCBkcmFnZ2FibGUsIHRoaXMsIHRoaXMub3B0aW9ucy50b2xlcmFuY2UsIGV2ZW50ICksCgkJ
CQljID0gIWludGVyc2VjdHMgJiYgdGhpcy5pc292ZXIgPwoJCQkJCSJpc291dCIgOgoJCQkJCSgg
aW50ZXJzZWN0cyAmJiAhdGhpcy5pc292ZXIgPyAiaXNvdmVyIiA6IG51bGwgKTsKCQkJaWYgKCAh
YyApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJaWYgKCB0aGlzLm9wdGlvbnMuZ3JlZWR5ICkgewoK
CQkJCS8vIGZpbmQgZHJvcHBhYmxlIHBhcmVudHMgd2l0aCBzYW1lIHNjb3BlCgkJCQlzY29wZSA9
IHRoaXMub3B0aW9ucy5zY29wZTsKCQkJCXBhcmVudCA9IHRoaXMuZWxlbWVudC5wYXJlbnRzKCAi
OmRhdGEodWktZHJvcHBhYmxlKSIgKS5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQkJCXJldHVybiAk
KCB0aGlzICkuZHJvcHBhYmxlKCAiaW5zdGFuY2UiICkub3B0aW9ucy5zY29wZSA9PT0gc2NvcGU7
CgkJCQl9ICk7CgoJCQkJaWYgKCBwYXJlbnQubGVuZ3RoICkgewoJCQkJCXBhcmVudEluc3RhbmNl
ID0gJCggcGFyZW50WyAwIF0gKS5kcm9wcGFibGUoICJpbnN0YW5jZSIgKTsKCQkJCQlwYXJlbnRJ
bnN0YW5jZS5ncmVlZHlDaGlsZCA9ICggYyA9PT0gImlzb3ZlciIgKTsKCQkJCX0KCQkJfQoKCQkJ
Ly8gV2UganVzdCBtb3ZlZCBpbnRvIGEgZ3JlZWR5IGNoaWxkCgkJCWlmICggcGFyZW50SW5zdGFu
Y2UgJiYgYyA9PT0gImlzb3ZlciIgKSB7CgkJCQlwYXJlbnRJbnN0YW5jZS5pc292ZXIgPSBmYWxz
ZTsKCQkJCXBhcmVudEluc3RhbmNlLmlzb3V0ID0gdHJ1ZTsKCQkJCXBhcmVudEluc3RhbmNlLl9v
dXQuY2FsbCggcGFyZW50SW5zdGFuY2UsIGV2ZW50ICk7CgkJCX0KCgkJCXRoaXNbIGMgXSA9IHRy
dWU7CgkJCXRoaXNbIGMgPT09ICJpc291dCIgPyAiaXNvdmVyIiA6ICJpc291dCIgXSA9IGZhbHNl
OwoJCQl0aGlzWyBjID09PSAiaXNvdmVyIiA/ICJfb3ZlciIgOiAiX291dCIgXS5jYWxsKCB0aGlz
LCBldmVudCApOwoKCQkJLy8gV2UganVzdCBtb3ZlZCBvdXQgb2YgYSBncmVlZHkgY2hpbGQKCQkJ
aWYgKCBwYXJlbnRJbnN0YW5jZSAmJiBjID09PSAiaXNvdXQiICkgewoJCQkJcGFyZW50SW5zdGFu
Y2UuaXNvdXQgPSBmYWxzZTsKCQkJCXBhcmVudEluc3RhbmNlLmlzb3ZlciA9IHRydWU7CgkJCQlw
YXJlbnRJbnN0YW5jZS5fb3Zlci5jYWxsKCBwYXJlbnRJbnN0YW5jZSwgZXZlbnQgKTsKCQkJfQoJ
CX0gKTsKCgl9LAoJZHJhZ1N0b3A6IGZ1bmN0aW9uKCBkcmFnZ2FibGUsIGV2ZW50ICkgewoJCWRy
YWdnYWJsZS5lbGVtZW50LnBhcmVudHNVbnRpbCggImJvZHkiICkub2ZmKCAic2Nyb2xsLmRyb3Bw
YWJsZSIgKTsKCgkJLy8gQ2FsbCBwcmVwYXJlT2Zmc2V0cyBvbmUgZmluYWwgdGltZSBzaW5jZSBJ
RSBkb2VzIG5vdCBmaXJlIHJldHVybiBzY3JvbGwgZXZlbnRzIHdoZW4KCQkvLyBvdmVyZmxvdyB3
YXMgY2F1c2VkIGJ5IGRyYWcgKHNlZSAjNTAwMykKCQlpZiAoICFkcmFnZ2FibGUub3B0aW9ucy5y
ZWZyZXNoUG9zaXRpb25zICkgewoJCQkkLnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyggZHJh
Z2dhYmxlLCBldmVudCApOwoJCX0KCX0KfTsKCi8vIERFUFJFQ0FURUQKLy8gVE9ETzogc3dpdGNo
IHJldHVybiBiYWNrIHRvIHdpZGdldCBkZWNsYXJhdGlvbiBhdCB0b3Agb2YgZmlsZSB3aGVuIHRo
aXMgaXMgcmVtb3ZlZAppZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSApIHsKCgkvLyBCYWNr
Y29tcGF0IGZvciBhY3RpdmVDbGFzcyBhbmQgaG92ZXJDbGFzcyBvcHRpb25zCgkkLndpZGdldCgg
InVpLmRyb3BwYWJsZSIsICQudWkuZHJvcHBhYmxlLCB7CgkJb3B0aW9uczogewoJCQlob3ZlckNs
YXNzOiBmYWxzZSwKCQkJYWN0aXZlQ2xhc3M6IGZhbHNlCgkJfSwKCQlfYWRkQWN0aXZlQ2xhc3M6
IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlcigpOwoJCQlpZiAoIHRoaXMub3B0aW9ucy5hY3Rp
dmVDbGFzcyApIHsKCQkJCXRoaXMuZWxlbWVudC5hZGRDbGFzcyggdGhpcy5vcHRpb25zLmFjdGl2
ZUNsYXNzICk7CgkJCX0KCQl9LAoJCV9yZW1vdmVBY3RpdmVDbGFzczogZnVuY3Rpb24oKSB7CgkJ
CXRoaXMuX3N1cGVyKCk7CgkJCWlmICggdGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzICkgewoJCQkJ
dGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MgKTsKCQkJ
fQoJCX0sCgkJX2FkZEhvdmVyQ2xhc3M6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlcigpOwoJ
CQlpZiAoIHRoaXMub3B0aW9ucy5ob3ZlckNsYXNzICkgewoJCQkJdGhpcy5lbGVtZW50LmFkZENs
YXNzKCB0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyApOwoJCQl9CgkJfSwKCQlfcmVtb3ZlSG92ZXJD
bGFzczogZnVuY3Rpb24oKSB7CgkJCXRoaXMuX3N1cGVyKCk7CgkJCWlmICggdGhpcy5vcHRpb25z
LmhvdmVyQ2xhc3MgKSB7CgkJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3MoIHRoaXMub3B0aW9u
cy5ob3ZlckNsYXNzICk7CgkJCX0KCQl9Cgl9ICk7Cn0KCnZhciB3aWRnZXRzRHJvcHBhYmxlID0g
JC51aS5kcm9wcGFibGU7CgoKLyohCiAqIGpRdWVyeSBVSSBQcm9ncmVzc2JhciAxLjEyLjEKICog
aHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5k
IG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAq
IGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFByb2dyZXNzYmFyCi8v
Pj5ncm91cDogV2lkZ2V0cwovLyBqc2NzOmRpc2FibGUgbWF4aW11bUxpbmVMZW5ndGgKLy8+PmRl
c2NyaXB0aW9uOiBEaXNwbGF5cyBhIHN0YXR1cyBpbmRpY2F0b3IgZm9yIGxvYWRpbmcgc3RhdGUs
IHN0YW5kYXJkIHBlcmNlbnRhZ2UsIGFuZCBvdGhlciBwcm9ncmVzcyBpbmRpY2F0b3JzLgovLyBq
c2NzOmVuYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1
aS5jb20vcHJvZ3Jlc3NiYXIvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9wcm9ncmVz
c2Jhci8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5j
c3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9wcm9ncmVzc2Jhci5jc3MKLy8+PmNzcy50
aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoKCnZhciB3aWRnZXRzUHJvZ3Jlc3Ni
YXIgPSAkLndpZGdldCggInVpLnByb2dyZXNzYmFyIiwgewoJdmVyc2lvbjogIjEuMTIuMSIsCglv
cHRpb25zOiB7CgkJY2xhc3NlczogewoJCQkidWktcHJvZ3Jlc3NiYXIiOiAidWktY29ybmVyLWFs
bCIsCgkJCSJ1aS1wcm9ncmVzc2Jhci12YWx1ZSI6ICJ1aS1jb3JuZXItbGVmdCIsCgkJCSJ1aS1w
cm9ncmVzc2Jhci1jb21wbGV0ZSI6ICJ1aS1jb3JuZXItcmlnaHQiCgkJfSwKCQltYXg6IDEwMCwK
CQl2YWx1ZTogMCwKCgkJY2hhbmdlOiBudWxsLAoJCWNvbXBsZXRlOiBudWxsCgl9LAoKCW1pbjog
MCwKCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCgkJLy8gQ29uc3RyYWluIGluaXRpYWwgdmFsdWUK
CQl0aGlzLm9sZFZhbHVlID0gdGhpcy5vcHRpb25zLnZhbHVlID0gdGhpcy5fY29uc3RyYWluZWRW
YWx1ZSgpOwoKCQl0aGlzLmVsZW1lbnQuYXR0ciggewoKCQkJLy8gT25seSBzZXQgc3RhdGljIHZh
bHVlczsgYXJpYS12YWx1ZW5vdyBhbmQgYXJpYS12YWx1ZW1heCBhcmUKCQkJLy8gc2V0IGluc2lk
ZSBfcmVmcmVzaFZhbHVlKCkKCQkJcm9sZTogInByb2dyZXNzYmFyIiwKCQkJImFyaWEtdmFsdWVt
aW4iOiB0aGlzLm1pbgoJCX0gKTsKCQl0aGlzLl9hZGRDbGFzcyggInVpLXByb2dyZXNzYmFyIiwg
InVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCIgKTsKCgkJdGhpcy52YWx1ZURpdiA9ICQoICI8
ZGl2PiIgKS5hcHBlbmRUbyggdGhpcy5lbGVtZW50ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMu
dmFsdWVEaXYsICJ1aS1wcm9ncmVzc2Jhci12YWx1ZSIsICJ1aS13aWRnZXQtaGVhZGVyIiApOwoJ
CXRoaXMuX3JlZnJlc2hWYWx1ZSgpOwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhp
cy5lbGVtZW50LnJlbW92ZUF0dHIoICJyb2xlIGFyaWEtdmFsdWVtaW4gYXJpYS12YWx1ZW1heCBh
cmlhLXZhbHVlbm93IiApOwoKCQl0aGlzLnZhbHVlRGl2LnJlbW92ZSgpOwoJfSwKCgl2YWx1ZTog
ZnVuY3Rpb24oIG5ld1ZhbHVlICkgewoJCWlmICggbmV3VmFsdWUgPT09IHVuZGVmaW5lZCApIHsK
CQkJcmV0dXJuIHRoaXMub3B0aW9ucy52YWx1ZTsKCQl9CgoJCXRoaXMub3B0aW9ucy52YWx1ZSA9
IHRoaXMuX2NvbnN0cmFpbmVkVmFsdWUoIG5ld1ZhbHVlICk7CgkJdGhpcy5fcmVmcmVzaFZhbHVl
KCk7Cgl9LAoKCV9jb25zdHJhaW5lZFZhbHVlOiBmdW5jdGlvbiggbmV3VmFsdWUgKSB7CgkJaWYg
KCBuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkICkgewoJCQluZXdWYWx1ZSA9IHRoaXMub3B0aW9ucy52
YWx1ZTsKCQl9CgoJCXRoaXMuaW5kZXRlcm1pbmF0ZSA9IG5ld1ZhbHVlID09PSBmYWxzZTsKCgkJ
Ly8gU2FuaXRpemUgdmFsdWUKCQlpZiAoIHR5cGVvZiBuZXdWYWx1ZSAhPT0gIm51bWJlciIgKSB7
CgkJCW5ld1ZhbHVlID0gMDsKCQl9CgoJCXJldHVybiB0aGlzLmluZGV0ZXJtaW5hdGUgPyBmYWxz
ZSA6CgkJCU1hdGgubWluKCB0aGlzLm9wdGlvbnMubWF4LCBNYXRoLm1heCggdGhpcy5taW4sIG5l
d1ZhbHVlICkgKTsKCX0sCgoJX3NldE9wdGlvbnM6IGZ1bmN0aW9uKCBvcHRpb25zICkgewoKCQkv
LyBFbnN1cmUgInZhbHVlIiBvcHRpb24gaXMgc2V0IGFmdGVyIG90aGVyIHZhbHVlcyAobGlrZSBt
YXgpCgkJdmFyIHZhbHVlID0gb3B0aW9ucy52YWx1ZTsKCQlkZWxldGUgb3B0aW9ucy52YWx1ZTsK
CgkJdGhpcy5fc3VwZXIoIG9wdGlvbnMgKTsKCgkJdGhpcy5vcHRpb25zLnZhbHVlID0gdGhpcy5f
Y29uc3RyYWluZWRWYWx1ZSggdmFsdWUgKTsKCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCX0sCgoJ
X3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJaWYgKCBrZXkgPT09ICJtYXgi
ICkgewoKCQkJLy8gRG9uJ3QgYWxsb3cgYSBtYXggbGVzcyB0aGFuIG1pbgoJCQl2YWx1ZSA9IE1h
dGgubWF4KCB0aGlzLm1pbiwgdmFsdWUgKTsKCQl9CgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUg
KTsKCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpcy5f
c3VwZXIoIHZhbHVlICk7CgoJCXRoaXMuZWxlbWVudC5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsIHZh
bHVlICk7CgkJdGhpcy5fdG9nZ2xlQ2xhc3MoIG51bGwsICJ1aS1zdGF0ZS1kaXNhYmxlZCIsICEh
dmFsdWUgKTsKCX0sCgoJX3BlcmNlbnRhZ2U6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmlu
ZGV0ZXJtaW5hdGUgPwoJCQkxMDAgOgoJCQkxMDAgKiAoIHRoaXMub3B0aW9ucy52YWx1ZSAtIHRo
aXMubWluICkgLyAoIHRoaXMub3B0aW9ucy5tYXggLSB0aGlzLm1pbiApOwoJfSwKCglfcmVmcmVz
aFZhbHVlOiBmdW5jdGlvbigpIHsKCQl2YXIgdmFsdWUgPSB0aGlzLm9wdGlvbnMudmFsdWUsCgkJ
CXBlcmNlbnRhZ2UgPSB0aGlzLl9wZXJjZW50YWdlKCk7CgoJCXRoaXMudmFsdWVEaXYKCQkJLnRv
Z2dsZSggdGhpcy5pbmRldGVybWluYXRlIHx8IHZhbHVlID4gdGhpcy5taW4gKQoJCQkud2lkdGgo
IHBlcmNlbnRhZ2UudG9GaXhlZCggMCApICsgIiUiICk7CgoJCXRoaXMKCQkJLl90b2dnbGVDbGFz
cyggdGhpcy52YWx1ZURpdiwgInVpLXByb2dyZXNzYmFyLWNvbXBsZXRlIiwgbnVsbCwKCQkJCXZh
bHVlID09PSB0aGlzLm9wdGlvbnMubWF4ICkKCQkJLl90b2dnbGVDbGFzcyggInVpLXByb2dyZXNz
YmFyLWluZGV0ZXJtaW5hdGUiLCBudWxsLCB0aGlzLmluZGV0ZXJtaW5hdGUgKTsKCgkJaWYgKCB0
aGlzLmluZGV0ZXJtaW5hdGUgKSB7CgkJCXRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKCAiYXJpYS12
YWx1ZW5vdyIgKTsKCQkJaWYgKCAhdGhpcy5vdmVybGF5RGl2ICkgewoJCQkJdGhpcy5vdmVybGF5
RGl2ID0gJCggIjxkaXY+IiApLmFwcGVuZFRvKCB0aGlzLnZhbHVlRGl2ICk7CgkJCQl0aGlzLl9h
ZGRDbGFzcyggdGhpcy5vdmVybGF5RGl2LCAidWktcHJvZ3Jlc3NiYXItb3ZlcmxheSIgKTsKCQkJ
fQoJCX0gZWxzZSB7CgkJCXRoaXMuZWxlbWVudC5hdHRyKCB7CgkJCQkiYXJpYS12YWx1ZW1heCI6
IHRoaXMub3B0aW9ucy5tYXgsCgkJCQkiYXJpYS12YWx1ZW5vdyI6IHZhbHVlCgkJCX0gKTsKCQkJ
aWYgKCB0aGlzLm92ZXJsYXlEaXYgKSB7CgkJCQl0aGlzLm92ZXJsYXlEaXYucmVtb3ZlKCk7CgkJ
CQl0aGlzLm92ZXJsYXlEaXYgPSBudWxsOwoJCQl9CgkJfQoKCQlpZiAoIHRoaXMub2xkVmFsdWUg
IT09IHZhbHVlICkgewoJCQl0aGlzLm9sZFZhbHVlID0gdmFsdWU7CgkJCXRoaXMuX3RyaWdnZXIo
ICJjaGFuZ2UiICk7CgkJfQoJCWlmICggdmFsdWUgPT09IHRoaXMub3B0aW9ucy5tYXggKSB7CgkJ
CXRoaXMuX3RyaWdnZXIoICJjb21wbGV0ZSIgKTsKCQl9Cgl9Cn0gKTsKCgovKiEKICogalF1ZXJ5
IFVJIFNlbGVjdGFibGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJp
Z2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQg
dW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoK
Ly8+PmxhYmVsOiBTZWxlY3RhYmxlCi8vPj5ncm91cDogSW50ZXJhY3Rpb25zCi8vPj5kZXNjcmlw
dGlvbjogQWxsb3dzIGdyb3VwcyBvZiBlbGVtZW50cyB0byBiZSBzZWxlY3RlZCB3aXRoIHRoZSBt
b3VzZS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NlbGVjdGFibGUvCi8vPj5k
ZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9zZWxlY3RhYmxlLwovLz4+Y3NzLnN0cnVjdHVyZTog
Li4vLi4vdGhlbWVzL2Jhc2Uvc2VsZWN0YWJsZS5jc3MKCgoKdmFyIHdpZGdldHNTZWxlY3RhYmxl
ID0gJC53aWRnZXQoICJ1aS5zZWxlY3RhYmxlIiwgJC51aS5tb3VzZSwgewoJdmVyc2lvbjogIjEu
MTIuMSIsCglvcHRpb25zOiB7CgkJYXBwZW5kVG86ICJib2R5IiwKCQlhdXRvUmVmcmVzaDogdHJ1
ZSwKCQlkaXN0YW5jZTogMCwKCQlmaWx0ZXI6ICIqIiwKCQl0b2xlcmFuY2U6ICJ0b3VjaCIsCgoJ
CS8vIENhbGxiYWNrcwoJCXNlbGVjdGVkOiBudWxsLAoJCXNlbGVjdGluZzogbnVsbCwKCQlzdGFy
dDogbnVsbCwKCQlzdG9wOiBudWxsLAoJCXVuc2VsZWN0ZWQ6IG51bGwsCgkJdW5zZWxlY3Rpbmc6
IG51bGwKCX0sCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCXRo
aXMuX2FkZENsYXNzKCAidWktc2VsZWN0YWJsZSIgKTsKCgkJdGhpcy5kcmFnZ2VkID0gZmFsc2U7
CgoJCS8vIENhY2hlIHNlbGVjdGVlIGNoaWxkcmVuIGJhc2VkIG9uIGZpbHRlcgoJCXRoaXMucmVm
cmVzaCA9IGZ1bmN0aW9uKCkgewoJCQl0aGF0LmVsZW1lbnRQb3MgPSAkKCB0aGF0LmVsZW1lbnRb
IDAgXSApLm9mZnNldCgpOwoJCQl0aGF0LnNlbGVjdGVlcyA9ICQoIHRoYXQub3B0aW9ucy5maWx0
ZXIsIHRoYXQuZWxlbWVudFsgMCBdICk7CgkJCXRoYXQuX2FkZENsYXNzKCB0aGF0LnNlbGVjdGVl
cywgInVpLXNlbGVjdGVlIiApOwoJCQl0aGF0LnNlbGVjdGVlcy5lYWNoKCBmdW5jdGlvbigpIHsK
CQkJCXZhciAkdGhpcyA9ICQoIHRoaXMgKSwKCQkJCQlzZWxlY3RlZU9mZnNldCA9ICR0aGlzLm9m
ZnNldCgpLAoJCQkJCXBvcyA9IHsKCQkJCQkJbGVmdDogc2VsZWN0ZWVPZmZzZXQubGVmdCAtIHRo
YXQuZWxlbWVudFBvcy5sZWZ0LAoJCQkJCQl0b3A6IHNlbGVjdGVlT2Zmc2V0LnRvcCAtIHRoYXQu
ZWxlbWVudFBvcy50b3AKCQkJCQl9OwoJCQkJJC5kYXRhKCB0aGlzLCAic2VsZWN0YWJsZS1pdGVt
IiwgewoJCQkJCWVsZW1lbnQ6IHRoaXMsCgkJCQkJJGVsZW1lbnQ6ICR0aGlzLAoJCQkJCWxlZnQ6
IHBvcy5sZWZ0LAoJCQkJCXRvcDogcG9zLnRvcCwKCQkJCQlyaWdodDogcG9zLmxlZnQgKyAkdGhp
cy5vdXRlcldpZHRoKCksCgkJCQkJYm90dG9tOiBwb3MudG9wICsgJHRoaXMub3V0ZXJIZWlnaHQo
KSwKCQkJCQlzdGFydHNlbGVjdGVkOiBmYWxzZSwKCQkJCQlzZWxlY3RlZDogJHRoaXMuaGFzQ2xh
c3MoICJ1aS1zZWxlY3RlZCIgKSwKCQkJCQlzZWxlY3Rpbmc6ICR0aGlzLmhhc0NsYXNzKCAidWkt
c2VsZWN0aW5nIiApLAoJCQkJCXVuc2VsZWN0aW5nOiAkdGhpcy5oYXNDbGFzcyggInVpLXVuc2Vs
ZWN0aW5nIiApCgkJCQl9ICk7CgkJCX0gKTsKCQl9OwoJCXRoaXMucmVmcmVzaCgpOwoKCQl0aGlz
Ll9tb3VzZUluaXQoKTsKCgkJdGhpcy5oZWxwZXIgPSAkKCAiPGRpdj4iICk7CgkJdGhpcy5fYWRk
Q2xhc3MoIHRoaXMuaGVscGVyLCAidWktc2VsZWN0YWJsZS1oZWxwZXIiICk7Cgl9LAoKCV9kZXN0
cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLnNlbGVjdGVlcy5yZW1vdmVEYXRhKCAic2VsZWN0YWJs
ZS1pdGVtIiApOwoJCXRoaXMuX21vdXNlRGVzdHJveSgpOwoJfSwKCglfbW91c2VTdGFydDogZnVu
Y3Rpb24oIGV2ZW50ICkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJb3B0aW9ucyA9IHRoaXMub3B0
aW9uczsKCgkJdGhpcy5vcG9zID0gWyBldmVudC5wYWdlWCwgZXZlbnQucGFnZVkgXTsKCQl0aGlz
LmVsZW1lbnRQb3MgPSAkKCB0aGlzLmVsZW1lbnRbIDAgXSApLm9mZnNldCgpOwoKCQlpZiAoIHRo
aXMub3B0aW9ucy5kaXNhYmxlZCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5zZWxlY3RlZXMg
PSAkKCBvcHRpb25zLmZpbHRlciwgdGhpcy5lbGVtZW50WyAwIF0gKTsKCgkJdGhpcy5fdHJpZ2dl
ciggInN0YXJ0IiwgZXZlbnQgKTsKCgkJJCggb3B0aW9ucy5hcHBlbmRUbyApLmFwcGVuZCggdGhp
cy5oZWxwZXIgKTsKCgkJLy8gcG9zaXRpb24gaGVscGVyIChsYXNzbykKCQl0aGlzLmhlbHBlci5j
c3MoIHsKCQkJImxlZnQiOiBldmVudC5wYWdlWCwKCQkJInRvcCI6IGV2ZW50LnBhZ2VZLAoJCQki
d2lkdGgiOiAwLAoJCQkiaGVpZ2h0IjogMAoJCX0gKTsKCgkJaWYgKCBvcHRpb25zLmF1dG9SZWZy
ZXNoICkgewoJCQl0aGlzLnJlZnJlc2goKTsKCQl9CgoJCXRoaXMuc2VsZWN0ZWVzLmZpbHRlcigg
Ii51aS1zZWxlY3RlZCIgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIHNlbGVjdGVlID0gJC5k
YXRhKCB0aGlzLCAic2VsZWN0YWJsZS1pdGVtIiApOwoJCQlzZWxlY3RlZS5zdGFydHNlbGVjdGVk
ID0gdHJ1ZTsKCQkJaWYgKCAhZXZlbnQubWV0YUtleSAmJiAhZXZlbnQuY3RybEtleSApIHsKCQkJ
CXRoYXQuX3JlbW92ZUNsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXNlbGVjdGVkIiApOwoJ
CQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSBmYWxzZTsKCQkJCXRoYXQuX2FkZENsYXNzKCBzZWxlY3Rl
ZS4kZWxlbWVudCwgInVpLXVuc2VsZWN0aW5nIiApOwoJCQkJc2VsZWN0ZWUudW5zZWxlY3Rpbmcg
PSB0cnVlOwoKCQkJCS8vIHNlbGVjdGFibGUgVU5TRUxFQ1RJTkcgY2FsbGJhY2sKCQkJCXRoYXQu
X3RyaWdnZXIoICJ1bnNlbGVjdGluZyIsIGV2ZW50LCB7CgkJCQkJdW5zZWxlY3Rpbmc6IHNlbGVj
dGVlLmVsZW1lbnQKCQkJCX0gKTsKCQkJfQoJCX0gKTsKCgkJJCggZXZlbnQudGFyZ2V0ICkucGFy
ZW50cygpLmFkZEJhY2soKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIGRvU2VsZWN0LAoJCQkJ
c2VsZWN0ZWUgPSAkLmRhdGEoIHRoaXMsICJzZWxlY3RhYmxlLWl0ZW0iICk7CgkJCWlmICggc2Vs
ZWN0ZWUgKSB7CgkJCQlkb1NlbGVjdCA=</Default>
</Parameter>

<Parameter name="Frag6980641884580383308896162">
<Default>LmRvY3VtZW50WyAwIF0gKS5hcHBlbmRUbyggZWxlbWVudCApCgkJCQkJCSk7CgkJCQkJfSBlbHNl
IGlmICggbm9kZU5hbWUgPT09ICJ0ciIgKSB7CgkJCQkJCXRoYXQuX2NyZWF0ZVRyUGxhY2Vob2xk
ZXIoIHRoYXQuY3VycmVudEl0ZW0sIGVsZW1lbnQgKTsKCQkJCQl9IGVsc2UgaWYgKCBub2RlTmFt
ZSA9PT0gImltZyIgKSB7CgkJCQkJCWVsZW1lbnQuYXR0ciggInNyYyIsIHRoYXQuY3VycmVudEl0
ZW0uYXR0ciggInNyYyIgKSApOwoJCQkJCX0KCgkJCQkJaWYgKCAhY2xhc3NOYW1lICkgewoJCQkJ
CQllbGVtZW50LmNzcyggInZpc2liaWxpdHkiLCAiaGlkZGVuIiApOwoJCQkJCX0KCgkJCQkJcmV0
dXJuIGVsZW1lbnQ7CgkJCQl9LAoJCQkJdXBkYXRlOiBmdW5jdGlvbiggY29udGFpbmVyLCBwICkg
ewoKCQkJCQkvLyAxLiBJZiBhIGNsYXNzTmFtZSBpcyBzZXQgYXMgJ3BsYWNlaG9sZGVyIG9wdGlv
biwgd2UgZG9uJ3QgZm9yY2Ugc2l6ZXMgLQoJCQkJCS8vIHRoZSBjbGFzcyBpcyByZXNwb25zaWJs
ZSBmb3IgdGhhdAoJCQkJCS8vIDIuIFRoZSBvcHRpb24gJ2ZvcmNlUGxhY2Vob2xkZXJTaXplIGNh
biBiZSBlbmFibGVkIHRvIGZvcmNlIGl0IGV2ZW4gaWYgYQoJCQkJCS8vIGNsYXNzIG5hbWUgaXMg
c3BlY2lmaWVkCgkJCQkJaWYgKCBjbGFzc05hbWUgJiYgIW8uZm9yY2VQbGFjZWhvbGRlclNpemUg
KSB7CgkJCQkJCXJldHVybjsKCQkJCQl9CgoJCQkJCS8vSWYgdGhlIGVsZW1lbnQgZG9lc24ndCBo
YXZlIGEgYWN0dWFsIGhlaWdodCBieSBpdHNlbGYgKHdpdGhvdXQgc3R5bGVzIGNvbWluZwoJCQkJ
CS8vIGZyb20gYSBzdHlsZXNoZWV0KSwgaXQgcmVjZWl2ZXMgdGhlIGlubGluZSBoZWlnaHQgZnJv
bSB0aGUgZHJhZ2dlZCBpdGVtCgkJCQkJaWYgKCAhcC5oZWlnaHQoKSApIHsKCQkJCQkJcC5oZWln
aHQoCgkJCQkJCQl0aGF0LmN1cnJlbnRJdGVtLmlubmVySGVpZ2h0KCkgLQoJCQkJCQkJcGFyc2VJ
bnQoIHRoYXQuY3VycmVudEl0ZW0uY3NzKCAicGFkZGluZ1RvcCIgKSB8fCAwLCAxMCApIC0KCQkJ
CQkJCXBhcnNlSW50KCB0aGF0LmN1cnJlbnRJdGVtLmNzcyggInBhZGRpbmdCb3R0b20iICkgfHwg
MCwgMTAgKSApOwoJCQkJCX0KCQkJCQlpZiAoICFwLndpZHRoKCkgKSB7CgkJCQkJCXAud2lkdGgo
CgkJCQkJCQl0aGF0LmN1cnJlbnRJdGVtLmlubmVyV2lkdGgoKSAtCgkJCQkJCQlwYXJzZUludCgg
dGhhdC5jdXJyZW50SXRlbS5jc3MoICJwYWRkaW5nTGVmdCIgKSB8fCAwLCAxMCApIC0KCQkJCQkJ
CXBhcnNlSW50KCB0aGF0LmN1cnJlbnRJdGVtLmNzcyggInBhZGRpbmdSaWdodCIgKSB8fCAwLCAx
MCApICk7CgkJCQkJfQoJCQkJfQoJCQl9OwoJCX0KCgkJLy9DcmVhdGUgdGhlIHBsYWNlaG9sZGVy
CgkJdGhhdC5wbGFjZWhvbGRlciA9ICQoIG8ucGxhY2Vob2xkZXIuZWxlbWVudC5jYWxsKCB0aGF0
LmVsZW1lbnQsIHRoYXQuY3VycmVudEl0ZW0gKSApOwoKCQkvL0FwcGVuZCBpdCBhZnRlciB0aGUg
YWN0dWFsIGN1cnJlbnQgaXRlbQoJCXRoYXQuY3VycmVudEl0ZW0uYWZ0ZXIoIHRoYXQucGxhY2Vo
b2xkZXIgKTsKCgkJLy9VcGRhdGUgdGhlIHNpemUgb2YgdGhlIHBsYWNlaG9sZGVyIChUT0RPOiBM
b2dpYyB0byBmdXp6eSwgc2VlIGxpbmUgMzE2LzMxNykKCQlvLnBsYWNlaG9sZGVyLnVwZGF0ZSgg
dGhhdCwgdGhhdC5wbGFjZWhvbGRlciApOwoKCX0sCgoJX2NyZWF0ZVRyUGxhY2Vob2xkZXI6IGZ1
bmN0aW9uKCBzb3VyY2VUciwgdGFyZ2V0VHIgKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoKCQlzb3Vy
Y2VUci5jaGlsZHJlbigpLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkkKCAiPHRkPiYjMTYwOzwvdGQ+
IiwgdGhhdC5kb2N1bWVudFsgMCBdICkKCQkJCS5hdHRyKCAiY29sc3BhbiIsICQoIHRoaXMgKS5h
dHRyKCAiY29sc3BhbiIgKSB8fCAxICkKCQkJCS5hcHBlbmRUbyggdGFyZ2V0VHIgKTsKCQl9ICk7
Cgl9LAoKCV9jb250YWN0Q29udGFpbmVyczogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBpLCBq
LCBkaXN0LCBpdGVtV2l0aExlYXN0RGlzdGFuY2UsIHBvc1Byb3BlcnR5LCBzaXplUHJvcGVydHks
IGN1ciwgbmVhckJvdHRvbSwKCQkJZmxvYXRpbmcsIGF4aXMsCgkJCWlubmVybW9zdENvbnRhaW5l
ciA9IG51bGwsCgkJCWlubmVybW9zdEluZGV4ID0gbnVsbDsKCgkJLy8gR2V0IGlubmVybW9zdCBj
b250YWluZXIgdGhhdCBpbnRlcnNlY3RzIHdpdGggaXRlbQoJCWZvciAoIGkgPSB0aGlzLmNvbnRh
aW5lcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7CgoJCQkvLyBOZXZlciBjb25zaWRlciBh
IGNvbnRhaW5lciB0aGF0J3MgbG9jYXRlZCB3aXRoaW4gdGhlIGl0ZW0gaXRzZWxmCgkJCWlmICgg
JC5jb250YWlucyggdGhpcy5jdXJyZW50SXRlbVsgMCBdLCB0aGlzLmNvbnRhaW5lcnNbIGkgXS5l
bGVtZW50WyAwIF0gKSApIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQlpZiAoIHRoaXMuX2ludGVy
c2VjdHNXaXRoKCB0aGlzLmNvbnRhaW5lcnNbIGkgXS5jb250YWluZXJDYWNoZSApICkgewoKCQkJ
CS8vIElmIHdlJ3ZlIGFscmVhZHkgZm91bmQgYSBjb250YWluZXIgYW5kIGl0J3MgbW9yZSAiaW5u
ZXIiIHRoYW4gdGhpcywgdGhlbiBjb250aW51ZQoJCQkJaWYgKCBpbm5lcm1vc3RDb250YWluZXIg
JiYKCQkJCQkJJC5jb250YWlucygKCQkJCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmVsZW1lbnRb
IDAgXSwKCQkJCQkJCWlubmVybW9zdENvbnRhaW5lci5lbGVtZW50WyAwIF0gKSApIHsKCQkJCQlj
b250aW51ZTsKCQkJCX0KCgkJCQlpbm5lcm1vc3RDb250YWluZXIgPSB0aGlzLmNvbnRhaW5lcnNb
IGkgXTsKCQkJCWlubmVybW9zdEluZGV4ID0gaTsKCgkJCX0gZWxzZSB7CgoJCQkJLy8gY29udGFp
bmVyIGRvZXNuJ3QgaW50ZXJzZWN0LiB0cmlnZ2VyICJvdXQiIGV2ZW50IGlmIG5lY2Vzc2FyeQoJ
CQkJaWYgKCB0aGlzLmNvbnRhaW5lcnNbIGkgXS5jb250YWluZXJDYWNoZS5vdmVyICkgewoJCQkJ
CXRoaXMuY29udGFpbmVyc1sgaSBdLl90cmlnZ2VyKCAib3V0IiwgZXZlbnQsIHRoaXMuX3VpSGFz
aCggdGhpcyApICk7CgkJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3Zl
ciA9IDA7CgkJCQl9CgkJCX0KCgkJfQoKCQkvLyBJZiBubyBpbnRlcnNlY3RpbmcgY29udGFpbmVy
cyBmb3VuZCwgcmV0dXJuCgkJaWYgKCAhaW5uZXJtb3N0Q29udGFpbmVyICkgewoJCQlyZXR1cm47
CgkJfQoKCQkvLyBNb3ZlIHRoZSBpdGVtIGludG8gdGhlIGNvbnRhaW5lciBpZiBpdCdzIG5vdCB0
aGVyZSBhbHJlYWR5CgkJaWYgKCB0aGlzLmNvbnRhaW5lcnMubGVuZ3RoID09PSAxICkgewoJCQlp
ZiAoICF0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uY29udGFpbmVyQ2FjaGUub3Zl
ciApIHsKCQkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0SW5kZXggXS5fdHJpZ2dlciggIm92
ZXIiLCBldmVudCwgdGhpcy5fdWlIYXNoKCB0aGlzICkgKTsKCQkJCXRoaXMuY29udGFpbmVyc1sg
aW5uZXJtb3N0SW5kZXggXS5jb250YWluZXJDYWNoZS5vdmVyID0gMTsKCQkJfQoJCX0gZWxzZSB7
CgoJCQkvLyBXaGVuIGVudGVyaW5nIGEgbmV3IGNvbnRhaW5lciwgd2Ugd2lsbCBmaW5kIHRoZSBp
dGVtIHdpdGggdGhlIGxlYXN0IGRpc3RhbmNlIGFuZAoJCQkvLyBhcHBlbmQgb3VyIGl0ZW0gbmVh
ciBpdAoJCQlkaXN0ID0gMTAwMDA7CgkJCWl0ZW1XaXRoTGVhc3REaXN0YW5jZSA9IG51bGw7CgkJ
CWZsb2F0aW5nID0gaW5uZXJtb3N0Q29udGFpbmVyLmZsb2F0aW5nIHx8IHRoaXMuX2lzRmxvYXRp
bmcoIHRoaXMuY3VycmVudEl0ZW0gKTsKCQkJcG9zUHJvcGVydHkgPSBmbG9hdGluZyA/ICJsZWZ0
IiA6ICJ0b3AiOwoJCQlzaXplUHJvcGVydHkgPSBmbG9hdGluZyA/ICJ3aWR0aCIgOiAiaGVpZ2h0
IjsKCQkJYXhpcyA9IGZsb2F0aW5nID8gInBhZ2VYIiA6ICJwYWdlWSI7CgoJCQlmb3IgKCBqID0g
dGhpcy5pdGVtcy5sZW5ndGggLSAxOyBqID49IDA7IGotLSApIHsKCQkJCWlmICggISQuY29udGFp
bnMoCgkJCQkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0SW5kZXggXS5lbGVtZW50WyAwIF0s
IHRoaXMuaXRlbXNbIGogXS5pdGVtWyAwIF0gKQoJCQkJKSB7CgkJCQkJY29udGludWU7CgkJCQl9
CgkJCQlpZiAoIHRoaXMuaXRlbXNbIGogXS5pdGVtWyAwIF0gPT09IHRoaXMuY3VycmVudEl0ZW1b
IDAgXSApIHsKCQkJCQljb250aW51ZTsKCQkJCX0KCgkJCQljdXIgPSB0aGlzLml0ZW1zWyBqIF0u
aXRlbS5vZmZzZXQoKVsgcG9zUHJvcGVydHkgXTsKCQkJCW5lYXJCb3R0b20gPSBmYWxzZTsKCQkJ
CWlmICggZXZlbnRbIGF4aXMgXSAtIGN1ciA+IHRoaXMuaXRlbXNbIGogXVsgc2l6ZVByb3BlcnR5
IF0gLyAyICkgewoJCQkJCW5lYXJCb3R0b20gPSB0cnVlOwoJCQkJfQoKCQkJCWlmICggTWF0aC5h
YnMoIGV2ZW50WyBheGlzIF0gLSBjdXIgKSA8IGRpc3QgKSB7CgkJCQkJZGlzdCA9IE1hdGguYWJz
KCBldmVudFsgYXhpcyBdIC0gY3VyICk7CgkJCQkJaXRlbVdpdGhMZWFzdERpc3RhbmNlID0gdGhp
cy5pdGVtc1sgaiBdOwoJCQkJCXRoaXMuZGlyZWN0aW9uID0gbmVhckJvdHRvbSA/ICJ1cCIgOiAi
ZG93biI7CgkJCQl9CgkJCX0KCgkJCS8vQ2hlY2sgaWYgZHJvcE9uRW1wdHkgaXMgZW5hYmxlZAoJ
CQlpZiAoICFpdGVtV2l0aExlYXN0RGlzdGFuY2UgJiYgIXRoaXMub3B0aW9ucy5kcm9wT25FbXB0
eSApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJaWYgKCB0aGlzLmN1cnJlbnRDb250YWluZXIgPT09
IHRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0SW5kZXggXSApIHsKCQkJCWlmICggIXRoaXMuY3Vy
cmVudENvbnRhaW5lci5jb250YWluZXJDYWNoZS5vdmVyICkgewoJCQkJCXRoaXMuY29udGFpbmVy
c1sgaW5uZXJtb3N0SW5kZXggXS5fdHJpZ2dlciggIm92ZXIiLCBldmVudCwgdGhpcy5fdWlIYXNo
KCkgKTsKCQkJCQl0aGlzLmN1cnJlbnRDb250YWluZXIuY29udGFpbmVyQ2FjaGUub3ZlciA9IDE7
CgkJCQl9CgkJCQlyZXR1cm47CgkJCX0KCgkJCWl0ZW1XaXRoTGVhc3REaXN0YW5jZSA/CgkJCQl0
aGlzLl9yZWFycmFuZ2UoIGV2ZW50LCBpdGVtV2l0aExlYXN0RGlzdGFuY2UsIG51bGwsIHRydWUg
KSA6CgkJCQl0aGlzLl9yZWFycmFuZ2UoIGV2ZW50LCBudWxsLCB0aGlzLmNvbnRhaW5lcnNbIGlu
bmVybW9zdEluZGV4IF0uZWxlbWVudCwgdHJ1ZSApOwoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdl
IiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7CgkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJtb3N0
SW5kZXggXS5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goIHRoaXMgKSAp
OwoJCQl0aGlzLmN1cnJlbnRDb250YWluZXIgPSB0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdElu
ZGV4IF07CgoJCQkvL1VwZGF0ZSB0aGUgcGxhY2Vob2xkZXIKCQkJdGhpcy5vcHRpb25zLnBsYWNl
aG9sZGVyLnVwZGF0ZSggdGhpcy5jdXJyZW50Q29udGFpbmVyLCB0aGlzLnBsYWNlaG9sZGVyICk7
CgoJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uX3RyaWdnZXIoICJvdmVyIiwg
ZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7CgkJCXRoaXMuY29udGFpbmVyc1sgaW5uZXJt
b3N0SW5kZXggXS5jb250YWluZXJDYWNoZS5vdmVyID0gMTsKCQl9CgoJfSwKCglfY3JlYXRlSGVs
cGVyOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBvID0gdGhpcy5vcHRpb25zLAoJCQloZWxw
ZXIgPSAkLmlzRnVuY3Rpb24oIG8uaGVscGVyICkgPwoJCQkJJCggby5oZWxwZXIuYXBwbHkoIHRo
aXMuZWxlbWVudFsgMCBdLCBbIGV2ZW50LCB0aGlzLmN1cnJlbnRJdGVtIF0gKSApIDoKCQkJCSgg
by5oZWxwZXIgPT09ICJjbG9uZSIgPyB0aGlzLmN1cnJlbnRJdGVtLmNsb25lKCkgOiB0aGlzLmN1
cnJlbnRJdGVtICk7CgoJCS8vQWRkIHRoZSBoZWxwZXIgdG8gdGhlIERPTSBpZiB0aGF0IGRpZG4n
dCBoYXBwZW4gYWxyZWFkeQoJCWlmICggIWhlbHBlci5wYXJlbnRzKCAiYm9keSIgKS5sZW5ndGgg
KSB7CgkJCSQoIG8uYXBwZW5kVG8gIT09ICJwYXJlbnQiID8KCQkJCW8uYXBwZW5kVG8gOgoJCQkJ
dGhpcy5jdXJyZW50SXRlbVsgMCBdLnBhcmVudE5vZGUgKVsgMCBdLmFwcGVuZENoaWxkKCBoZWxw
ZXJbIDAgXSApOwoJCX0KCgkJaWYgKCBoZWxwZXJbIDAgXSA9PT0gdGhpcy5jdXJyZW50SXRlbVsg
MCBdICkgewoJCQl0aGlzLl9zdG9yZWRDU1MgPSB7CgkJCQl3aWR0aDogdGhpcy5jdXJyZW50SXRl
bVsgMCBdLnN0eWxlLndpZHRoLAoJCQkJaGVpZ2h0OiB0aGlzLmN1cnJlbnRJdGVtWyAwIF0uc3R5
bGUuaGVpZ2h0LAoJCQkJcG9zaXRpb246IHRoaXMuY3VycmVudEl0ZW0uY3NzKCAicG9zaXRpb24i
ICksCgkJCQl0b3A6IHRoaXMuY3VycmVudEl0ZW0uY3NzKCAidG9wIiApLAoJCQkJbGVmdDogdGhp
cy5jdXJyZW50SXRlbS5jc3MoICJsZWZ0IiApCgkJCX07CgkJfQoKCQlpZiAoICFoZWxwZXJbIDAg
XS5zdHlsZS53aWR0aCB8fCBvLmZvcmNlSGVscGVyU2l6ZSApIHsKCQkJaGVscGVyLndpZHRoKCB0
aGlzLmN1cnJlbnRJdGVtLndpZHRoKCkgKTsKCQl9CgkJaWYgKCAhaGVscGVyWyAwIF0uc3R5bGUu
aGVpZ2h0IHx8IG8uZm9yY2VIZWxwZXJTaXplICkgewoJCQloZWxwZXIuaGVpZ2h0KCB0aGlzLmN1
cnJlbnRJdGVtLmhlaWdodCgpICk7CgkJfQoKCQlyZXR1cm4gaGVscGVyOwoKCX0sCgoJX2FkanVz
dE9mZnNldEZyb21IZWxwZXI6IGZ1bmN0aW9uKCBvYmogKSB7CgkJaWYgKCB0eXBlb2Ygb2JqID09
PSAic3RyaW5nIiApIHsKCQkJb2JqID0gb2JqLnNwbGl0KCAiICIgKTsKCQl9CgkJaWYgKCAkLmlz
QXJyYXkoIG9iaiApICkgewoJCQlvYmogPSB7IGxlZnQ6ICtvYmpbIDAgXSwgdG9wOiArb2JqWyAx
IF0gfHwgMCB9OwoJCX0KCQlpZiAoICJsZWZ0IiBpbiBvYmogKSB7CgkJCXRoaXMub2Zmc2V0LmNs
aWNrLmxlZnQgPSBvYmoubGVmdCArIHRoaXMubWFyZ2lucy5sZWZ0OwoJCX0KCQlpZiAoICJyaWdo
dCIgaW4gb2JqICkgewoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gdGhpcy5oZWxwZXJQcm9w
b3J0aW9ucy53aWR0aCAtIG9iai5yaWdodCArIHRoaXMubWFyZ2lucy5sZWZ0OwoJCX0KCQlpZiAo
ICJ0b3AiIGluIG9iaiApIHsKCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0gb2JqLnRvcCArIHRo
aXMubWFyZ2lucy50b3A7CgkJfQoJCWlmICggImJvdHRvbSIgaW4gb2JqICkgewoJCQl0aGlzLm9m
ZnNldC5jbGljay50b3AgPSB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtIG9iai5ib3R0
b20gKyB0aGlzLm1hcmdpbnMudG9wOwoJCX0KCX0sCgoJX2dldFBhcmVudE9mZnNldDogZnVuY3Rp
b24oKSB7CgoJCS8vR2V0IHRoZSBvZmZzZXRQYXJlbnQgYW5kIGNhY2hlIGl0cyBwb3NpdGlvbgoJ
CXRoaXMub2Zmc2V0UGFyZW50ID0gdGhpcy5oZWxwZXIub2Zmc2V0UGFyZW50KCk7CgkJdmFyIHBv
ID0gdGhpcy5vZmZzZXRQYXJlbnQub2Zmc2V0KCk7CgoJCS8vIFRoaXMgaXMgYSBzcGVjaWFsIGNh
c2Ugd2hlcmUgd2UgbmVlZCB0byBtb2RpZnkgYSBvZmZzZXQgY2FsY3VsYXRlZCBvbiBzdGFydCwg
c2luY2UgdGhlCgkJLy8gZm9sbG93aW5nIGhhcHBlbmVkOgoJCS8vIDEuIFRoZSBwb3NpdGlvbiBv
ZiB0aGUgaGVscGVyIGlzIGFic29sdXRlLCBzbyBpdCdzIHBvc2l0aW9uIGlzIGNhbGN1bGF0ZWQg
YmFzZWQgb24gdGhlCgkJLy8gbmV4dCBwb3NpdGlvbmVkIHBhcmVudAoJCS8vIDIuIFRoZSBhY3R1
YWwgb2Zmc2V0IHBhcmVudCBpcyBhIGNoaWxkIG9mIHRoZSBzY3JvbGwgcGFyZW50LCBhbmQgdGhl
IHNjcm9sbCBwYXJlbnQgaXNuJ3QKCQkvLyB0aGUgZG9jdW1lbnQsIHdoaWNoIG1lYW5zIHRoYXQg
dGhlIHNjcm9sbCBpcyBpbmNsdWRlZCBpbiB0aGUgaW5pdGlhbCBjYWxjdWxhdGlvbiBvZiB0aGUK
CQkvLyBvZmZzZXQgb2YgdGhlIHBhcmVudCwgYW5kIG5ldmVyIHJlY2FsY3VsYXRlZCB1cG9uIGRy
YWcKCQlpZiAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgJiYgdGhpcy5zY3JvbGxQ
YXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmCgkJCQkkLmNvbnRhaW5zKCB0aGlz
LnNjcm9sbFBhcmVudFsgMCBdLCB0aGlzLm9mZnNldFBhcmVudFsgMCBdICkgKSB7CgkJCXBvLmxl
ZnQgKz0gdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpOwoJCQlwby50b3AgKz0gdGhpcy5z
Y3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCk7CgkJfQoKCQkvLyBUaGlzIG5lZWRzIHRvIGJlIGFjdHVh
bGx5IGRvbmUgZm9yIGFsbCBicm93c2Vycywgc2luY2UgcGFnZVgvcGFnZVkgaW5jbHVkZXMgdGhp
cwoJCS8vIGluZm9ybWF0aW9uIHdpdGggYW4gdWdseSBJRSBmaXgKCQlpZiAoIHRoaXMub2Zmc2V0
UGFyZW50WyAwIF0gPT09IHRoaXMuZG9jdW1lbnRbIDAgXS5ib2R5IHx8CgkJCQkoIHRoaXMub2Zm
c2V0UGFyZW50WyAwIF0udGFnTmFtZSAmJgoJCQkJdGhpcy5vZmZzZXRQYXJlbnRbIDAgXS50YWdO
YW1lLnRvTG93ZXJDYXNlKCkgPT09ICJodG1sIiAmJiAkLnVpLmllICkgKSB7CgkJCXBvID0geyB0
b3A6IDAsIGxlZnQ6IDAgfTsKCQl9CgoJCXJldHVybiB7CgkJCXRvcDogcG8udG9wICsgKCBwYXJz
ZUludCggdGhpcy5vZmZzZXRQYXJlbnQuY3NzKCAiYm9yZGVyVG9wV2lkdGgiICksIDEwICkgfHwg
MCApLAoJCQlsZWZ0OiBwby5sZWZ0ICsgKCBwYXJzZUludCggdGhpcy5vZmZzZXRQYXJlbnQuY3Nz
KCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKQoJCX07CgoJfSwKCglfZ2V0UmVsYXRp
dmVPZmZzZXQ6IGZ1bmN0aW9uKCkgewoKCQlpZiAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJyZWxh
dGl2ZSIgKSB7CgkJCXZhciBwID0gdGhpcy5jdXJyZW50SXRlbS5wb3NpdGlvbigpOwoJCQlyZXR1
cm4gewoJCQkJdG9wOiBwLnRvcCAtICggcGFyc2VJbnQoIHRoaXMuaGVscGVyLmNzcyggInRvcCIg
KSwgMTAgKSB8fCAwICkgKwoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpLAoJCQkJ
bGVmdDogcC5sZWZ0IC0gKCBwYXJzZUludCggdGhpcy5oZWxwZXIuY3NzKCAibGVmdCIgKSwgMTAg
KSB8fCAwICkgKwoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKQoJCQl9OwoJCX0g
ZWxzZSB7CgkJCXJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9OwoJCX0KCgl9LAoKCV9jYWNoZU1h
cmdpbnM6IGZ1bmN0aW9uKCkgewoJCXRoaXMubWFyZ2lucyA9IHsKCQkJbGVmdDogKCBwYXJzZUlu
dCggdGhpcy5jdXJyZW50SXRlbS5jc3MoICJtYXJnaW5MZWZ0IiApLCAxMCApIHx8IDAgKSwKCQkJ
dG9wOiAoIHBhcnNlSW50KCB0aGlzLmN1cnJlbnRJdGVtLmNzcyggIm1hcmdpblRvcCIgKSwgMTAg
KSB8fCAwICkKCQl9OwoJfSwKCglfY2FjaGVIZWxwZXJQcm9wb3J0aW9uczogZnVuY3Rpb24oKSB7
CgkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucyA9IHsKCQkJd2lkdGg6IHRoaXMuaGVscGVyLm91dGVy
V2lkdGgoKSwKCQkJaGVpZ2h0OiB0aGlzLmhlbHBlci5vdXRlckhlaWdodCgpCgkJfTsKCX0sCgoJ
X3NldENvbnRhaW5tZW50OiBmdW5jdGlvbigpIHsKCgkJdmFyIGNlLCBjbywgb3ZlciwKCQkJbyA9
IHRoaXMub3B0aW9uczsKCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJwYXJlbnQiICkgewoJCQlv
LmNvbnRhaW5tZW50ID0gdGhpcy5oZWxwZXJbIDAgXS5wYXJlbnROb2RlOwoJCX0KCQlpZiAoIG8u
Y29udGFpbm1lbnQgPT09ICJkb2N1bWVudCIgfHwgby5jb250YWlubWVudCA9PT0gIndpbmRvdyIg
KSB7CgkJCXRoaXMuY29udGFpbm1lbnQgPSBbCgkJCQkwIC0gdGhpcy5vZmZzZXQucmVsYXRpdmUu
bGVmdCAtIHRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0LAoJCQkJMCAtIHRoaXMub2Zmc2V0LnJlbGF0
aXZlLnRvcCAtIHRoaXMub2Zmc2V0LnBhcmVudC50b3AsCgkJCQlvLmNvbnRhaW5tZW50ID09PSAi
ZG9jdW1lbnQiID8KCQkJCQl0aGlzLmRvY3VtZW50LndpZHRoKCkgOgoJCQkJCXRoaXMud2luZG93
LndpZHRoKCkgLSB0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC0gdGhpcy5tYXJnaW5zLmxl
ZnQsCgkJCQkoIG8uY29udGFpbm1lbnQgPT09ICJkb2N1bWVudCIgPwoJCQkJCSggdGhpcy5kb2N1
bWVudC5oZWlnaHQoKSB8fCBkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0ICkg
OgoJCQkJCXRoaXMud2luZG93LmhlaWdodCgpIHx8IHRoaXMuZG9jdW1lbnRbIDAgXS5ib2R5LnBh
cmVudE5vZGUuc2Nyb2xsSGVpZ2h0CgkJCQkpIC0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWln
aHQgLSB0aGlzLm1hcmdpbnMudG9wCgkJCV07CgkJfQoKCQlpZiAoICEoIC9eKGRvY3VtZW50fHdp
bmRvd3xwYXJlbnQpJC8gKS50ZXN0KCBvLmNvbnRhaW5tZW50ICkgKSB7CgkJCWNlID0gJCggby5j
b250YWlubWVudCApWyAwIF07CgkJCWNvID0gJCggby5jb250YWlubWVudCApLm9mZnNldCgpOwoJ
CQlvdmVyID0gKCAkKCBjZSApLmNzcyggIm92ZXJmbG93IiApICE9PSAiaGlkZGVuIiApOwoKCQkJ
dGhpcy5jb250YWlubWVudCA9IFsKCQkJCWNvLmxlZnQgKyAoIHBhcnNlSW50KCAkKCBjZSApLmNz
cyggImJvcmRlckxlZnRXaWR0aCIgKSwgMTAgKSB8fCAwICkgKwoJCQkJCSggcGFyc2VJbnQoICQo
IGNlICkuY3NzKCAicGFkZGluZ0xlZnQiICksIDEwICkgfHwgMCApIC0gdGhpcy5tYXJnaW5zLmxl
ZnQsCgkJCQljby50b3AgKyAoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggImJvcmRlclRvcFdpZHRo
IiApLCAxMCApIHx8IDAgKSArCgkJCQkJKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJwYWRkaW5n
VG9wIiApLCAxMCApIHx8IDAgKSAtIHRoaXMubWFyZ2lucy50b3AsCgkJCQljby5sZWZ0ICsgKCBv
dmVyID8gTWF0aC5tYXgoIGNlLnNjcm9sbFdpZHRoLCBjZS5vZmZzZXRXaWR0aCApIDogY2Uub2Zm
c2V0V2lkdGggKSAtCgkJCQkJKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJib3JkZXJMZWZ0V2lk
dGgiICksIDEwICkgfHwgMCApIC0KCQkJCQkoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggInBhZGRp
bmdSaWdodCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lk
dGggLSB0aGlzLm1hcmdpbnMubGVmdCwKCQkJCWNvLnRvcCArICggb3ZlciA/IE1hdGgubWF4KCBj
ZS5zY3JvbGxIZWlnaHQsIGNlLm9mZnNldEhlaWdodCApIDogY2Uub2Zmc2V0SGVpZ2h0ICkgLQoJ
CQkJCSggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAiYm9yZGVyVG9wV2lkdGgiICksIDEwICkgfHwg
MCApIC0KCQkJCQkoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggInBhZGRpbmdCb3R0b20iICksIDEw
ICkgfHwgMCApIC0KCQkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtIHRoaXMubWFy
Z2lucy50b3AKCQkJXTsKCQl9CgoJfSwKCglfY29udmVydFBvc2l0aW9uVG86IGZ1bmN0aW9uKCBk
LCBwb3MgKSB7CgoJCWlmICggIXBvcyApIHsKCQkJcG9zID0gdGhpcy5wb3NpdGlvbjsKCQl9CgkJ
dmFyIG1vZCA9IGQgPT09ICJhYnNvbHV0ZSIgPyAxIDogLTEsCgkJCXNjcm9sbCA9IHRoaXMuY3Nz
UG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgJiYKCQkJCSEoIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0g
IT09IHRoaXMuZG9jdW1lbnRbIDAgXSAmJgoJCQkJJC5jb250YWlucyggdGhpcy5zY3JvbGxQYXJl
bnRbIDAgXSwgdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgPwoJCQkJCXRoaXMub2Zmc2V0UGFy
ZW50IDoKCQkJCQl0aGlzLnNjcm9sbFBhcmVudCwKCQkJc2Nyb2xsSXNSb290Tm9kZSA9ICggLyho
dG1sfGJvZHkpL2kgKS50ZXN0KCBzY3JvbGxbIDAgXS50YWdOYW1lICk7CgoJCXJldHVybiB7CgkJ
CXRvcDogKAoKCQkJCS8vIFRoZSBhYnNvbHV0ZSBtb3VzZSBwb3NpdGlvbgoJCQkJcG9zLnRvcAkr
CgoJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zm
c2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50CgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2
ZS50b3AgKiBtb2QgKwoKCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBi
b3JkZXJzIChvZmZzZXQgKyBib3JkZXIpCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICogbW9k
IC0KCQkJCSggKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiZml4ZWQiID8KCQkJCQktdGhpcy5zY3Jv
bGxQYXJlbnQuc2Nyb2xsVG9wKCkgOgoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiBzY3Jv
bGwuc2Nyb2xsVG9wKCkgKSApICogbW9kICkKCQkJKSwKCQkJbGVmdDogKAoKCQkJCS8vIFRoZSBh
YnNvbHV0ZSBtb3VzZSBwb3NpdGlvbgoJCQkJcG9zLmxlZnQgKwoKCQkJCS8vIE9ubHkgZm9yIHJl
bGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJlbGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8g
b2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAqIG1vZCArCgoJCQkJ
Ly8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJv
cmRlcikKCQkJCXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0ICogbW9kCS0KCQkJCSggKCB0aGlzLmNz
c1Bvc2l0aW9uID09PSAiZml4ZWQiID8KCQkJCQktdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVm
dCgpIDogc2Nyb2xsSXNSb290Tm9kZSA/IDAgOgoJCQkJCXNjcm9sbC5zY3JvbGxMZWZ0KCkgKSAq
IG1vZCApCgkJCSkKCQl9OwoKCX0sCgoJX2dlbmVyYXRlUG9zaXRpb246IGZ1bmN0aW9uKCBldmVu
dCApIHsKCgkJdmFyIHRvcCwgbGVmdCwKCQkJbyA9IHRoaXMub3B0aW9ucywKCQkJcGFnZVggPSBl
dmVudC5wYWdlWCwKCQkJcGFnZVkgPSBldmVudC5wYWdlWSwKCQkJc2Nyb2xsID0gdGhpcy5jc3NQ
b3NpdGlvbiA9PT0gImFic29sdXRlIiAmJgoJCQkJISggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAh
PT0gdGhpcy5kb2N1bWVudFsgMCBdICYmCgkJCQkkLmNvbnRhaW5zKCB0aGlzLnNjcm9sbFBhcmVu
dFsgMCBdLCB0aGlzLm9mZnNldFBhcmVudFsgMCBdICkgKSA/CgkJCQkJdGhpcy5vZmZzZXRQYXJl
bnQgOgoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50LAoJCQkJc2Nyb2xsSXNSb290Tm9kZSA9ICggLyho
dG1sfGJvZHkpL2kgKS50ZXN0KCBzY3JvbGxbIDAgXS50YWdOYW1lICk7CgoJCS8vIFRoaXMgaXMg
YW5vdGhlciB2ZXJ5IHdlaXJkIHNwZWNpYWwgY2FzZSB0aGF0IG9ubHkgaGFwcGVucyBmb3IgcmVs
YXRpdmUgZWxlbWVudHM6CgkJLy8gMS4gSWYgdGhlIGNzcyBwb3NpdGlvbiBpcyByZWxhdGl2ZQoJ
CS8vIDIuIGFuZCB0aGUgc2Nyb2xsIHBhcmVudCBpcyB0aGUgZG9jdW1lbnQgb3Igc2ltaWxhciB0
byB0aGUgb2Zmc2V0IHBhcmVudAoJCS8vIHdlIGhhdmUgdG8gcmVmcmVzaCB0aGUgcmVsYXRpdmUg
b2Zmc2V0IGR1cmluZyB0aGUgc2Nyb2xsIHNvIHRoZXJlIGFyZSBubyBqdW1wcwoJCWlmICggdGhp
cy5jc3NQb3NpdGlvbiA9PT0gInJlbGF0aXZlIiAmJiAhKCB0aGlzLnNjcm9sbFBhcmVudFsgMCBd
ICE9PSB0aGlzLmRvY3VtZW50WyAwIF0gJiYKCQkJCXRoaXMuc2Nyb2xsUGFyZW50WyAwIF0gIT09
IHRoaXMub2Zmc2V0UGFyZW50WyAwIF0gKSApIHsKCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUgPSB0
aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpOwoJCX0KCgkJLyoKCQkgKiAtIFBvc2l0aW9uIGNvbnN0
cmFpbmluZyAtCgkJICogQ29uc3RyYWluIHRoZSBwb3NpdGlvbiB0byBhIG1peCBvZiBncmlkLCBj
b250YWlubWVudC4KCQkgKi8KCgkJaWYgKCB0aGlzLm9yaWdpbmFsUG9zaXRpb24gKSB7IC8vSWYg
d2UgYXJlIG5vdCBkcmFnZ2luZyB5ZXQsIHdlIHdvbid0IGNoZWNrIGZvciBvcHRpb25zCgoJCQlp
ZiAoIHRoaXMuY29udGFpbm1lbnQgKSB7CgkJCQlpZiAoIGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZz
ZXQuY2xpY2subGVmdCA8IHRoaXMuY29udGFpbm1lbnRbIDAgXSApIHsKCQkJCQlwYWdlWCA9IHRo
aXMuY29udGFpbm1lbnRbIDAgXSArIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ7CgkJCQl9CgkJCQlp
ZiAoIGV2ZW50LnBhZ2VZIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wIDwgdGhpcy5jb250YWlubWVu
dFsgMSBdICkgewoJCQkJCXBhZ2VZID0gdGhpcy5jb250YWlubWVudFsgMSBdICsgdGhpcy5vZmZz
ZXQuY2xpY2sudG9wOwoJCQkJfQoJCQkJaWYgKCBldmVudC5wYWdlWCAtIHRoaXMub2Zmc2V0LmNs
aWNrLmxlZnQgPiB0aGlzLmNvbnRhaW5tZW50WyAyIF0gKSB7CgkJCQkJcGFnZVggPSB0aGlzLmNv
bnRhaW5tZW50WyAyIF0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0OwoJCQkJfQoJCQkJaWYgKCBl
dmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+IHRoaXMuY29udGFpbm1lbnRbIDMg
XSApIHsKCQkJCQlwYWdlWSA9IHRoaXMuY29udGFpbm1lbnRbIDMgXSArIHRoaXMub2Zmc2V0LmNs
aWNrLnRvcDsKCQkJCX0KCQkJfQoKCQkJaWYgKCBvLmdyaWQgKSB7CgkJCQl0b3AgPSB0aGlzLm9y
aWdpbmFsUGFnZVkgKyBNYXRoLnJvdW5kKCAoIHBhZ2VZIC0gdGhpcy5vcmlnaW5hbFBhZ2VZICkg
LwoJCQkJCW8uZ3JpZFsgMSBdICkgKiBvLmdyaWRbIDEgXTsKCQkJCXBhZ2VZID0gdGhpcy5jb250
YWlubWVudCA/CgkJCQkJKCAoIHRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+PSB0aGlzLmNv
bnRhaW5tZW50WyAxIF0gJiYKCQkJCQkJdG9wIC0gdGhpcy5vZmZzZXQuY2xpY2sudG9wIDw9IHRo
aXMuY29udGFpbm1lbnRbIDMgXSApID8KCQkJCQkJCXRvcCA6CgkJCQkJCQkoICggdG9wIC0gdGhp
cy5vZmZzZXQuY2xpY2sudG9wID49IHRoaXMuY29udGFpbm1lbnRbIDEgXSApID8KCQkJCQkJCQl0
b3AgLSBvLmdyaWRbIDEgXSA6IHRvcCArIG8uZ3JpZFsgMSBdICkgKSA6CgkJCQkJCQkJdG9wOwoK
CQkJCWxlZnQgPSB0aGlzLm9yaWdpbmFsUGFnZVggKyBNYXRoLnJvdW5kKCAoIHBhZ2VYIC0gdGhp
cy5vcmlnaW5hbFBhZ2VYICkgLwoJCQkJCW8uZ3JpZFsgMCBdICkgKiBvLmdyaWRbIDAgXTsKCQkJ
CXBhZ2VYID0gdGhpcy5jb250YWlubWVudCA/CgkJCQkJKCAoIGxlZnQgLSB0aGlzLm9mZnNldC5j
bGljay5sZWZ0ID49IHRoaXMuY29udGFpbm1lbnRbIDAgXSAmJgoJCQkJCQlsZWZ0IC0gdGhpcy5v
ZmZzZXQuY2xpY2subGVmdCA8PSB0aGlzLmNvbnRhaW5tZW50WyAyIF0gKSA/CgkJCQkJCQlsZWZ0
IDoKCQkJCQkJCSggKCBsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+PSB0aGlzLmNvbnRh
aW5tZW50WyAwIF0gKSA/CgkJCQkJCQkJbGVmdCAtIG8uZ3JpZFsgMCBdIDogbGVmdCArIG8uZ3Jp
ZFsgMCBdICkgKSA6CgkJCQkJCQkJbGVmdDsKCQkJfQoKCQl9CgoJCXJldHVybiB7CgkJCXRvcDog
KAoKCQkJCS8vIFRoZSBhYnNvbHV0ZSBtb3VzZSBwb3NpdGlvbgoJCQkJcGFnZVkgLQoKCQkJCS8v
IENsaWNrIG9mZnNldCAocmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQpCgkJCQl0aGlzLm9mZnNldC5j
bGljay50b3AgLQoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJl
bGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZz
ZXQucmVsYXRpdmUudG9wIC0KCgkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhv
dXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LnRvcCAr
CgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMuc2Nyb2xs
UGFyZW50LnNjcm9sbFRvcCgpIDoKCQkJCQkoIHNjcm9sbElzUm9vdE5vZGUgPyAwIDogc2Nyb2xs
LnNjcm9sbFRvcCgpICkgKSApCgkJCSksCgkJCWxlZnQ6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUg
bW91c2UgcG9zaXRpb24KCQkJCXBhZ2VYIC0KCgkJCQkvLyBDbGljayBvZmZzZXQgKHJlbGF0aXZl
IHRvIHRoZSBlbGVtZW50KQoJCQkJdGhpcy5vZmZzZXQuY2xpY2subGVmdCAtCgoJCQkJLy8gT25s
eSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxl
bWVudCB0byBvZmZzZXQgcGFyZW50CgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0IC0KCgkJ
CQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsg
Ym9yZGVyKQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LmxlZnQgKwoJCQkJKCAoIHRoaXMuY3NzUG9z
aXRpb24gPT09ICJmaXhlZCIgPwoJCQkJCS10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkg
OgoJCQkJCXNjcm9sbElzUm9vdE5vZGUgPyAwIDogc2Nyb2xsLnNjcm9sbExlZnQoKSApICkKCQkJ
KQoJCX07CgoJfSwKCglfcmVhcnJhbmdlOiBmdW5jdGlvbiggZXZlbnQsIGksIGEsIGhhcmRSZWZy
ZXNoICkgewoKCQlhID8gYVsgMCBdLmFwcGVuZENoaWxkKCB0aGlzLnBsYWNlaG9sZGVyWyAwIF0g
KSA6CgkJCWkuaXRlbVsgMCBdLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCB0aGlzLnBsYWNlaG9s
ZGVyWyAwIF0sCgkJCQkoIHRoaXMuZGlyZWN0aW9uID09PSAiZG93biIgPyBpLml0ZW1bIDAgXSA6
IGkuaXRlbVsgMCBdLm5leHRTaWJsaW5nICkgKTsKCgkJLy9WYXJpb3VzIHRoaW5ncyBkb25lIGhl
cmUgdG8gaW1wcm92ZSB0aGUgcGVyZm9ybWFuY2U6CgkJLy8gMS4gd2UgY3JlYXRlIGEgc2V0VGlt
ZW91dCwgdGhhdCBjYWxscyByZWZyZXNoUG9zaXRpb25zCgkJLy8gMi4gb24gdGhlIGluc3RhbmNl
LCB3ZSBoYXZlIGEgY291bnRlciB2YXJpYWJsZSwgdGhhdCBnZXQncyBoaWdoZXIgYWZ0ZXIgZXZl
cnkgYXBwZW5kCgkJLy8gMy4gb24gdGhlIGxvY2FsIHNjb3BlLCB3ZSBjb3B5IHRoZSBjb3VudGVy
IHZhcmlhYmxlLCBhbmQgY2hlY2sgaW4gdGhlIHRpbWVvdXQsCgkJLy8gaWYgaXQncyBzdGlsbCB0
aGUgc2FtZQoJCS8vIDQuIHRoaXMgbGV0cyBvbmx5IHRoZSBsYXN0IGFkZGl0aW9uIHRvIHRoZSB0
aW1lb3V0IHN0YWNrIHRocm91Z2gKCQl0aGlzLmNvdW50ZXIgPSB0aGlzLmNvdW50ZXIgPyArK3Ro
aXMuY291bnRlciA6IDE7CgkJdmFyIGNvdW50ZXIgPSB0aGlzLmNvdW50ZXI7CgoJCXRoaXMuX2Rl
bGF5KCBmdW5jdGlvbigpIHsKCQkJaWYgKCBjb3VudGVyID09PSB0aGlzLmNvdW50ZXIgKSB7CgoJ
CQkJLy9QcmVjb21wdXRlIGFmdGVyIGVhY2ggRE9NIGluc2VydGlvbiwgTk9UIG9uIG1vdXNlbW92
ZQoJCQkJdGhpcy5yZWZyZXNoUG9zaXRpb25zKCAhaGFyZFJlZnJlc2ggKTsKCQkJfQoJCX0gKTsK
Cgl9LAoKCV9jbGVhcjogZnVuY3Rpb24oIGV2ZW50LCBub1Byb3BhZ2F0aW9uICkgewoKCQl0aGlz
LnJldmVydGluZyA9IGZhbHNlOwoKCQkvLyBXZSBkZWxheSBhbGwgZXZlbnRzIHRoYXQgaGF2ZSB0
byBiZSB0cmlnZ2VyZWQgdG8gYWZ0ZXIgdGhlIHBvaW50IHdoZXJlIHRoZSBwbGFjZWhvbGRlcgoJ
CS8vIGhhcyBiZWVuIHJlbW92ZWQgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBub3JtYWxpemVkIGFnYWlu
CgkJdmFyIGksCgkJCWRlbGF5ZWRUcmlnZ2VycyA9IFtdOwoKCQkvLyBXZSBmaXJzdCBoYXZlIHRv
IHVwZGF0ZSB0aGUgZG9tIHBvc2l0aW9uIG9mIHRoZSBhY3R1YWwgY3VycmVudEl0ZW0KCQkvLyBO
b3RlOiBkb24ndCBkbyBpdCBpZiB0aGUgY3VycmVudCBpdGVtIGlzIGFscmVhZHkgcmVtb3ZlZCAo
YnkgYSB1c2VyKSwgb3IgaXQgZ2V0cwoJCS8vIHJlYXBwZW5kZWQgKHNlZSAjNDA4OCkKCQlpZiAo
ICF0aGlzLl9ub0ZpbmFsU29ydCAmJiB0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpLmxlbmd0aCAp
IHsKCQkJdGhpcy5wbGFjZWhvbGRlci5iZWZvcmUoIHRoaXMuY3VycmVudEl0ZW0gKTsKCQl9CgkJ
dGhpcy5fbm9GaW5hbFNvcnQgPSBudWxsOwoKCQlpZiAoIHRoaXMuaGVscGVyWyAwIF0gPT09IHRo
aXMuY3VycmVudEl0ZW1bIDAgXSApIHsKCQkJZm9yICggaSBpbiB0aGlzLl9zdG9yZWRDU1MgKSB7
CgkJCQlpZiAoIHRoaXMuX3N0b3JlZENTU1sgaSBdID09PSAiYXV0byIgfHwgdGhpcy5fc3RvcmVk
Q1NTWyBpIF0gPT09ICJzdGF0aWMiICkgewoJCQkJCXRoaXMuX3N0b3JlZENTU1sgaSBdID0gIiI7
CgkJCQl9CgkJCX0KCQkJdGhpcy5jdXJyZW50SXRlbS5jc3MoIHRoaXMuX3N0b3JlZENTUyApOwoJ
CQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5jdXJyZW50SXRlbSwgInVpLXNvcnRhYmxlLWhlbHBl
ciIgKTsKCQl9IGVsc2UgewoJCQl0aGlzLmN1cnJlbnRJdGVtLnNob3coKTsKCQl9CgoJCWlmICgg
dGhpcy5mcm9tT3V0c2lkZSAmJiAhbm9Qcm9wYWdhdGlvbiApIHsKCQkJZGVsYXllZFRyaWdnZXJz
LnB1c2goIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX3RyaWdnZXIoICJyZWNlaXZlIiwg
ZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcy5mcm9tT3V0c2lkZSApICk7CgkJCX0gKTsKCQl9CgkJ
aWYgKCAoIHRoaXMuZnJvbU91dHNpZGUgfHwKCQkJCXRoaXMuZG9tUG9zaXRpb24ucHJldiAhPT0K
CQkJCXRoaXMuY3VycmVudEl0ZW0ucHJldigpLm5vdCggIi51aS1zb3J0YWJsZS1oZWxwZXIiIClb
IDAgXSB8fAoJCQkJdGhpcy5kb21Qb3NpdGlvbi5wYXJlbnQgIT09IHRoaXMuY3VycmVudEl0ZW0u
cGFyZW50KClbIDAgXSApICYmICFub1Byb3BhZ2F0aW9uICkgewoKCQkJLy8gVHJpZ2dlciB1cGRh
dGUgY2FsbGJhY2sgaWYgdGhlIERPTSBwb3NpdGlvbiBoYXMgY2hhbmdlZAoJCQlkZWxheWVkVHJp
Z2dlcnMucHVzaCggZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJdGhpcy5fdHJpZ2dlciggInVwZGF0
ZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOwoJCQl9ICk7CgkJfQoKCQkvLyBDaGVjayBpZiB0
aGUgaXRlbXMgQ29udGFpbmVyIGhhcyBDaGFuZ2VkIGFuZCB0cmlnZ2VyIGFwcHJvcHJpYXRlCgkJ
Ly8gZXZlbnRzLgoJCWlmICggdGhpcyAhPT0gdGhpcy5jdXJyZW50Q29udGFpbmVyICkgewoJCQlp
ZiAoICFub1Byb3BhZ2F0aW9uICkgewoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGZ1bmN0aW9u
KCBldmVudCApIHsKCQkJCQl0aGlzLl90cmlnZ2VyKCAicmVtb3ZlIiwgZXZlbnQsIHRoaXMuX3Vp
SGFzaCgpICk7CgkJCQl9ICk7CgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggKCBmdW5jdGlvbigg
YyApIHsKCQkJCQlyZXR1cm4gZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJCQljLl90cmlnZ2VyKCAi
cmVjZWl2ZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goIHRoaXMgKSApOwoJCQkJCX07CgkJCQl9ICku
Y2FsbCggdGhpcywgdGhpcy5jdXJyZW50Q29udGFpbmVyICkgKTsKCQkJCWRlbGF5ZWRUcmlnZ2Vy
cy5wdXNoKCAoIGZ1bmN0aW9uKCBjICkgewoJCQkJCXJldHVybiBmdW5jdGlvbiggZXZlbnQgKSB7
CgkJCQkJCWMuX3RyaWdnZXIoICJ1cGRhdGUiLCBldmVudCwgdGhpcy5fdWlIYXNoKCB0aGlzICkg
KTsKCQkJCQl9OwoJCQkJfSApLmNhbGwoIHRoaXMsIHRoaXMuY3VycmVudENvbnRhaW5lciApICk7
CgkJCX0KCQl9CgoJCS8vUG9zdCBldmVudHMgdG8gY29udGFpbmVycwoJCWZ1bmN0aW9uIGRlbGF5
RXZlbnQoIHR5cGUsIGluc3RhbmNlLCBjb250YWluZXIgKSB7CgkJCXJldHVybiBmdW5jdGlvbigg
ZXZlbnQgKSB7CgkJCQljb250YWluZXIuX3RyaWdnZXIoIHR5cGUsIGV2ZW50LCBpbnN0YW5jZS5f
dWlIYXNoKCBpbnN0YW5jZSApICk7CgkJCX07CgkJfQoJCWZvciAoIGkgPSB0aGlzLmNvbnRhaW5l
cnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7CgkJCWlmICggIW5vUHJvcGFnYXRpb24gKSB7
CgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggZGVsYXlFdmVudCggImRlYWN0aXZhdGUiLCB0aGlz
LCB0aGlzLmNvbnRhaW5lcnNbIGkgXSApICk7CgkJCX0KCQkJaWYgKCB0aGlzLmNvbnRhaW5lcnNb
IGkgXS5jb250YWluZXJDYWNoZS5vdmVyICkgewoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGRl
bGF5RXZlbnQoICJvdXQiLCB0aGlzLCB0aGlzLmNvbnRhaW5lcnNbIGkgXSApICk7CgkJCQl0aGlz
LmNvbnRhaW5lcnNbIGkgXS5jb250YWluZXJDYWNoZS5vdmVyID0gMDsKCQkJfQoJCX0KCgkJLy9E
byB3aGF0IHdhcyBvcmlnaW5hbGx5IGluIHBsdWdpbnMKCQlpZiAoIHRoaXMuc3RvcmVkQ3Vyc29y
ICkgewoJCQl0aGlzLmRvY3VtZW50LmZpbmQoICJib2R5IiApLmNzcyggImN1cnNvciIsIHRoaXMu
c3RvcmVkQ3Vyc29yICk7CgkJCXRoaXMuc3RvcmVkU3R5bGVzaGVldC5yZW1vdmUoKTsKCQl9CgkJ
aWYgKCB0aGlzLl9zdG9yZWRPcGFjaXR5ICkgewoJCQl0aGlzLmhlbHBlci5jc3MoICJvcGFjaXR5
IiwgdGhpcy5fc3RvcmVkT3BhY2l0eSApOwoJCX0KCQlpZiAoIHRoaXMuX3N0b3JlZFpJbmRleCAp
IHsKCQkJdGhpcy5oZWxwZXIuY3NzKCAiekluZGV4IiwgdGhpcy5fc3RvcmVkWkluZGV4ID09PSAi
YXV0byIgPyAiIiA6IHRoaXMuX3N0b3JlZFpJbmRleCApOwoJCX0KCgkJdGhpcy5kcmFnZ2luZyA9
IGZhbHNlOwoKCQlpZiAoICFub1Byb3BhZ2F0aW9uICkgewoJCQl0aGlzLl90cmlnZ2VyKCAiYmVm
b3JlU3RvcCIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOwoJCX0KCgkJLy8kKHRoaXMucGxhY2Vo
b2xkZXJbMF0pLnJlbW92ZSgpOyB3b3VsZCBoYXZlIGJlZW4gdGhlIGpRdWVyeSB3YXkgLSB1bmZv
cnR1bmF0ZWx5LAoJCS8vIGl0IHVuYmluZHMgQUxMIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCBu
b2RlIQoJCXRoaXMucGxhY2Vob2xkZXJbIDAgXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0aGlz
LnBsYWNlaG9sZGVyWyAwIF0gKTsKCgkJaWYgKCAhdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsICkg
ewoJCQlpZiAoIHRoaXMuaGVscGVyWyAwIF0gIT09IHRoaXMuY3VycmVudEl0ZW1bIDAgXSApIHsK
CQkJCXRoaXMuaGVscGVyLnJlbW92ZSgpOwoJCQl9CgkJCXRoaXMuaGVscGVyID0gbnVsbDsKCQl9
CgoJCWlmICggIW5vUHJvcGFnYXRpb24gKSB7CgkJCWZvciAoIGkgPSAwOyBpIDwgZGVsYXllZFRy
aWdnZXJzLmxlbmd0aDsgaSsrICkgewoKCQkJCS8vIFRyaWdnZXIgYWxsIGRlbGF5ZWQgZXZlbnRz
CgkJCQlkZWxheWVkVHJpZ2dlcnNbIGkgXS5jYWxsKCB0aGlzLCBldmVudCApOwoJCQl9CgkJCXRo
aXMuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7CgkJfQoKCQl0aGlz
LmZyb21PdXRzaWRlID0gZmFsc2U7CgkJcmV0dXJuICF0aGlzLmNhbmNlbEhlbHBlclJlbW92YWw7
CgoJfSwKCglfdHJpZ2dlcjogZnVuY3Rpb24oKSB7CgkJaWYgKCAkLldpZGdldC5wcm90b3R5cGUu
X3RyaWdnZXIuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApID09PSBmYWxzZSApIHsKCQkJdGhpcy5j
YW5jZWwoKTsKCQl9Cgl9LAoKCV91aUhhc2g6IGZ1bmN0aW9uKCBfaW5zdCApIHsKCQl2YXIgaW5z
dCA9IF9pbnN0IHx8IHRoaXM7CgkJcmV0dXJuIHsKCQkJaGVscGVyOiBpbnN0LmhlbHBlciwKCQkJ
cGxhY2Vob2xkZXI6IGluc3QucGxhY2Vob2xkZXIgfHwgJCggW10gKSwKCQkJcG9zaXRpb246IGlu
c3QucG9zaXRpb24sCgkJCW9yaWdpbmFsUG9zaXRpb246IGluc3Qub3JpZ2luYWxQb3NpdGlvbiwK
CQkJb2Zmc2V0OiBpbnN0LnBvc2l0aW9uQWJzLAoJCQlpdGVtOiBpbnN0LmN1cnJlbnRJdGVtLAoJ
CQlzZW5kZXI6IF9pbnN0ID8gX2luc3QuZWxlbWVudCA6IG51bGwKCQl9OwoJfQoKfSApOwoKCi8q
IQogKiBqUXVlcnkgVUkgU3Bpbm5lciAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgog
KiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBS
ZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vu
c2UKICovCgovLz4+bGFiZWw6IFNwaW5uZXIKLy8+Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlw
dGlvbjogRGlzcGxheXMgYnV0dG9ucyB0byBlYXNpbHkgaW5wdXQgbnVtYmVycyB2aWEgdGhlIGtl
eWJvYXJkIG9yIG1vdXNlLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc3Bpbm5l
ci8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL3NwaW5uZXIvCi8vPj5jc3Muc3RydWN0
dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4v
dGhlbWVzL2Jhc2Uvc3Bpbm5lci5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2Uv
dGhlbWUuY3NzCgoKCmZ1bmN0aW9uIHNwaW5uZXJNb2RpZmVyKCBmbiApIHsKCXJldHVybiBmdW5j
dGlvbigpIHsKCQl2YXIgcHJldmlvdXMgPSB0aGlzLmVsZW1lbnQudmFsKCk7CgkJZm4uYXBwbHko
IHRoaXMsIGFyZ3VtZW50cyApOwoJCXRoaXMuX3JlZnJlc2goKTsKCQlpZiAoIHByZXZpb3VzICE9
PSB0aGlzLmVsZW1lbnQudmFsKCkgKSB7CgkJCXRoaXMuX3RyaWdnZXIoICJjaGFuZ2UiICk7CgkJ
fQoJfTsKfQoKJC53aWRnZXQoICJ1aS5zcGlubmVyIiwgewoJdmVyc2lvbjogIjEuMTIuMSIsCglk
ZWZhdWx0RWxlbWVudDogIjxpbnB1dD4iLAoJd2lkZ2V0RXZlbnRQcmVmaXg6ICJzcGluIiwKCW9w
dGlvbnM6IHsKCQljbGFzc2VzOiB7CgkJCSJ1aS1zcGlubmVyIjogInVpLWNvcm5lci1hbGwiLAoJ
CQkidWktc3Bpbm5lci1kb3duIjogInVpLWNvcm5lci1iciIsCgkJCSJ1aS1zcGlubmVyLXVwIjog
InVpLWNvcm5lci10ciIKCQl9LAoJCWN1bHR1cmU6IG51bGwsCgkJaWNvbnM6IHsKCQkJZG93bjog
InVpLWljb24tdHJpYW5nbGUtMS1zIiwKCQkJdXA6ICJ1aS1pY29uLXRyaWFuZ2xlLTEtbiIKCQl9
LAoJCWluY3JlbWVudGFsOiB0cnVlLAoJCW1heDogbnVsbCwKCQltaW46IG51bGwsCgkJbnVtYmVy
Rm9ybWF0OiBudWxsLAoJCXBhZ2U6IDEwLAoJCXN0ZXA6IDEsCgoJCWNoYW5nZTogbnVsbCwKCQlz
cGluOiBudWxsLAoJCXN0YXJ0OiBudWxsLAoJCXN0b3A6IG51bGwKCX0sCgoJX2NyZWF0ZTogZnVu
Y3Rpb24oKSB7CgoJCS8vIGhhbmRsZSBzdHJpbmcgdmFsdWVzIHRoYXQgbmVlZCB0byBiZSBwYXJz
ZWQKCQl0aGlzLl9zZXRPcHRpb24oICJtYXgiLCB0aGlzLm9wdGlvbnMubWF4ICk7CgkJdGhpcy5f
c2V0T3B0aW9uKCAibWluIiwgdGhpcy5vcHRpb25zLm1pbiApOwoJCXRoaXMuX3NldE9wdGlvbigg
InN0ZXAiLCB0aGlzLm9wdGlvbnMuc3RlcCApOwoKCQkvLyBPbmx5IGZvcm1hdCBpZiB0aGVyZSBp
cyBhIHZhbHVlLCBwcmV2ZW50cyB0aGUgZmllbGQgZnJvbSBiZWluZyBtYXJrZWQKCQkvLyBhcyBp
bnZhbGlkIGluIEZpcmVmb3gsIHNlZSAjOTU3My4KCQlpZiAoIHRoaXMudmFsdWUoKSAhPT0gIiIg
KSB7CgoJCQkvLyBGb3JtYXQgdGhlIHZhbHVlLCBidXQgZG9uJ3QgY29uc3RyYWluLgoJCQl0aGlz
Ll92YWx1ZSggdGhpcy5lbGVtZW50LnZhbCgpLCB0cnVlICk7CgkJfQoKCQl0aGlzLl9kcmF3KCk7
CgkJdGhpcy5fb24oIHRoaXMuX2V2ZW50cyApOwoJCXRoaXMuX3JlZnJlc2goKTsKCgkJLy8gVHVy
bmluZyBvZmYgYXV0b2NvbXBsZXRlIHByZXZlbnRzIHRoZSBicm93c2VyIGZyb20gcmVtZW1iZXJp
bmcgdGhlCgkJLy8gdmFsdWUgd2hlbiBuYXZpZ2F0aW5nIHRocm91Z2ggaGlzdG9yeSwgc28gd2Ug
cmUtZW5hYmxlIGF1dG9jb21wbGV0ZQoJCS8vIGlmIHRoZSBwYWdlIGlzIHVubG9hZGVkIGJlZm9y
ZSB0aGUgd2lkZ2V0IGlzIGRlc3Ryb3llZC4gIzc3OTAKCQl0aGlzLl9vbiggdGhpcy53aW5kb3cs
IHsKCQkJYmVmb3JldW5sb2FkOiBmdW5jdGlvbigpIHsKCQkJCXRoaXMuZWxlbWVudC5yZW1vdmVB
dHRyKCAiYXV0b2NvbXBsZXRlIiApOwoJCQl9CgkJfSApOwoJfSwKCglfZ2V0Q3JlYXRlT3B0aW9u
czogZnVuY3Rpb24oKSB7CgkJdmFyIG9wdGlvbnMgPSB0aGlzLl9zdXBlcigpOwoJCXZhciBlbGVt
ZW50ID0gdGhpcy5lbGVtZW50OwoKCQkkLmVhY2goIFsgIm1pbiIsICJtYXgiLCAic3RlcCIgXSwg
ZnVuY3Rpb24oIGksIG9wdGlvbiApIHsKCQkJdmFyIHZhbHVlID0gZWxlbWVudC5hdHRyKCBvcHRp
b24gKTsKCQkJaWYgKCB2YWx1ZSAhPSBudWxsICYmIHZhbHVlLmxlbmd0aCApIHsKCQkJCW9wdGlv
bnNbIG9wdGlvbiBdID0gdmFsdWU7CgkJCX0KCQl9ICk7CgoJCXJldHVybiBvcHRpb25zOwoJfSwK
CglfZXZlbnRzOiB7CgkJa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQlpZiAoIHRoaXMu
X3N0YXJ0KCBldmVudCApICYmIHRoaXMuX2tleWRvd24oIGV2ZW50ICkgKSB7CgkJCQlldmVudC5w
cmV2ZW50RGVmYXVsdCgpOwoJCQl9CgkJfSwKCQlrZXl1cDogIl9zdG9wIiwKCQlmb2N1czogZnVu
Y3Rpb24oKSB7CgkJCXRoaXMucHJldmlvdXMgPSB0aGlzLmVsZW1lbnQudmFsKCk7CgkJfSwKCQli
bHVyOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCWlmICggdGhpcy5jYW5jZWxCbHVyICkgewoJCQkJ
ZGVsZXRlIHRoaXMuY2FuY2VsQmx1cjsKCQkJCXJldHVybjsKCQkJfQoKCQkJdGhpcy5fc3RvcCgp
OwoJCQl0aGlzLl9yZWZyZXNoKCk7CgkJCWlmICggdGhpcy5wcmV2aW91cyAhPT0gdGhpcy5lbGVt
ZW50LnZhbCgpICkgewoJCQkJdGhpcy5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50ICk7CgkJCX0K
CQl9LAoJCW1vdXNld2hlZWw6IGZ1bmN0aW9uKCBldmVudCwgZGVsdGEgKSB7CgkJCWlmICggIWRl
bHRhICkgewoJCQkJcmV0dXJuOwoJCQl9CgkJCWlmICggIXRoaXMuc3Bpbm5pbmcgJiYgIXRoaXMu
X3N0YXJ0KCBldmVudCApICkgewoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgoJCQl0aGlzLl9zcGlu
KCAoIGRlbHRhID4gMCA/IDEgOiAtMSApICogdGhpcy5vcHRpb25zLnN0ZXAsIGV2ZW50ICk7CgkJ
CWNsZWFyVGltZW91dCggdGhpcy5tb3VzZXdoZWVsVGltZXIgKTsKCQkJdGhpcy5tb3VzZXdoZWVs
VGltZXIgPSB0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgkJCQlpZiAoIHRoaXMuc3Bpbm5pbmcg
KSB7CgkJCQkJdGhpcy5fc3RvcCggZXZlbnQgKTsKCQkJCX0KCQkJfSwgMTAwICk7CgkJCWV2ZW50
LnByZXZlbnREZWZhdWx0KCk7CgkJfSwKCQkibW91c2Vkb3duIC51aS1zcGlubmVyLWJ1dHRvbiI6
IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJdmFyIHByZXZpb3VzOwoKCQkJLy8gV2UgbmV2ZXIgd2Fu
dCB0aGUgYnV0dG9ucyB0byBoYXZlIGZvY3VzOyB3aGVuZXZlciB0aGUgdXNlciBpcwoJCQkvLyBp
bnRlcmFjdGluZyB3aXRoIHRoZSBzcGlubmVyLCB0aGUgZm9jdXMgc2hvdWxkIGJlIG9uIHRoZSBp
bnB1dC4KCQkJLy8gSWYgdGhlIGlucHV0IGlzIGZvY3VzZWQgdGhlbiB0aGlzLnByZXZpb3VzIGlz
IHByb3Blcmx5IHNldCBmcm9tCgkJCS8vIHdoZW4gdGhlIGlucHV0IGZpcnN0IHJlY2VpdmVkIGZv
Y3VzLiBJZiB0aGUgaW5wdXQgaXMgbm90IGZvY3VzZWQKCQkJLy8gdGhlbiB3ZSBuZWVkIHRvIHNl
dCB0aGlzLnByZXZpb3VzIGJhc2VkIG9uIHRoZSB2YWx1ZSBiZWZvcmUgc3Bpbm5pbmcuCgkJCXBy
ZXZpb3VzID0gdGhpcy5lbGVtZW50WyAwIF0gPT09ICQudWkuc2FmZUFjdGl2ZUVsZW1lbnQoIHRo
aXMuZG9jdW1lbnRbIDAgXSApID8KCQkJCXRoaXMucHJldmlvdXMgOiB0aGlzLmVsZW1lbnQudmFs
KCk7CgkJCWZ1bmN0aW9uIGNoZWNrRm9jdXMoKSB7CgkJCQl2YXIgaXNBY3RpdmUgPSB0aGlzLmVs
ZW1lbnRbIDAgXSA9PT0gJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBd
ICk7CgkJCQlpZiAoICFpc0FjdGl2ZSApIHsKCQkJCQl0aGlzLmVsZW1lbnQudHJpZ2dlciggImZv
Y3VzIiApOwoJCQkJCXRoaXMucHJldmlvdXMgPSBwcmV2aW91czsKCgkJCQkJLy8gc3VwcG9ydDog
SUUKCQkJCQkvLyBJRSBzZXRzIGZvY3VzIGFzeW5jaHJvbm91c2x5LCBzbyB3ZSBuZWVkIHRvIGNo
ZWNrIGlmIGZvY3VzCgkJCQkJLy8gbW92ZWQgb2ZmIG9mIHRoZSBpbnB1dCBiZWNhdXNlIHRoZSB1
c2VyIGNsaWNrZWQgb24gdGhlIGJ1dHRvbi4KCQkJCQl0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7
CgkJCQkJCXRoaXMucHJldmlvdXMgPSBwcmV2aW91czsKCQkJCQl9ICk7CgkJCQl9CgkJCX0KCgkJ
CS8vIEVuc3VyZSBmb2N1cyBpcyBvbiAob3Igc3RheXMgb24pIHRoZSB0ZXh0IGZpZWxkCgkJCWV2
ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCWNoZWNrRm9jdXMuY2FsbCggdGhpcyApOwoKCQkJLy8g
U3VwcG9ydDogSUUKCQkJLy8gSUUgZG9lc24ndCBwcmV2ZW50IG1vdmluZyBmb2N1cyBldmVuIHdp
dGggZXZlbnQucHJldmVudERlZmF1bHQoKQoJCQkvLyBzbyB3ZSBzZXQgYSBmbGFnIHRvIGtub3cg
d2hlbiB3ZSBzaG91bGQgaWdub3JlIHRoZSBibHVyIGV2ZW50CgkJCS8vIGFuZCBjaGVjayAoYWdh
aW4pIGlmIGZvY3VzIG1vdmVkIG9mZiBvZiB0aGUgaW5wdXQuCgkJCXRoaXMuY2FuY2VsQmx1ciA9
IHRydWU7CgkJCXRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCWRlbGV0ZSB0aGlzLmNhbmNl
bEJsdXI7CgkJCQljaGVja0ZvY3VzLmNhbGwoIHRoaXMgKTsKCQkJfSApOwoKCQkJaWYgKCB0aGlz
Ll9zdGFydCggZXZlbnQgKSA9PT0gZmFsc2UgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCXRoaXMu
X3JlcGVhdCggbnVsbCwgJCggZXZlbnQuY3VycmVudFRhcmdldCApCgkJCQkuaGFzQ2xhc3MoICJ1
aS1zcGlubmVyLXVwIiApID8gMSA6IC0xLCBldmVudCApOwoJCX0sCgkJIm1vdXNldXAgLnVpLXNw
aW5uZXItYnV0dG9uIjogIl9zdG9wIiwKCQkibW91c2VlbnRlciAudWktc3Bpbm5lci1idXR0b24i
OiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCQkvLyBidXR0b24gd2lsbCBhZGQgdWktc3RhdGUtYWN0
aXZlIGlmIG1vdXNlIHdhcyBkb3duIHdoaWxlIG1vdXNlbGVhdmUgYW5kIGtlcHQgZG93bgoJCQlp
ZiAoICEkKCBldmVudC5jdXJyZW50VGFyZ2V0ICkuaGFzQ2xhc3MoICJ1aS1zdGF0ZS1hY3RpdmUi
ICkgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCWlmICggdGhpcy5fc3RhcnQoIGV2ZW50ICkgPT09
IGZhbHNlICkgewoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgkJCXRoaXMuX3JlcGVhdCggbnVsbCwg
JCggZXZlbnQuY3VycmVudFRhcmdldCApCgkJCQkuaGFzQ2xhc3MoICJ1aS1zcGlubmVyLXVwIiAp
ID8gMSA6IC0xLCBldmVudCApOwoJCX0sCgoJCS8vIFRPRE86IGRvIHdlIHJlYWxseSB3YW50IHRv
IGNvbnNpZGVyIHRoaXMgYSBzdG9wPwoJCS8vIHNob3VsZG4ndCB3ZSBqdXN0IHN0b3AgdGhlIHJl
cGVhdGVyIGFuZCB3YWl0IHVudGlsIG1vdXNldXAgYmVmb3JlCgkJLy8gd2UgdHJpZ2dlciB0aGUg
c3RvcCBldmVudD8KCQkibW91c2VsZWF2ZSAudWktc3Bpbm5lci1idXR0b24iOiAiX3N0b3AiCgl9
LAoKCS8vIFN1cHBvcnQgbW9iaWxlIGVuaGFuY2VkIG9wdGlvbiBhbmQgbWFrZSBiYWNrY29tcGF0
IG1vcmUgc2FuZQoJX2VuaGFuY2U6IGZ1bmN0aW9uKCkgewoJCXRoaXMudWlTcGlubmVyID0gdGhp
cy5lbGVtZW50CgkJCS5hdHRyKCAiYXV0b2NvbXBsZXRlIiwgIm9mZiIgKQoJCQkud3JhcCggIjxz
cGFuPiIgKQoJCQkucGFyZW50KCkKCgkJCQkvLyBBZGQgYnV0dG9ucwoJCQkJLmFwcGVuZCgKCQkJ
CQkiPGE+PC9hPjxhPjwvYT4iCgkJCQkpOwoJfSwKCglfZHJhdzogZnVuY3Rpb24oKSB7CgkJdGhp
cy5fZW5oYW5jZSgpOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aVNwaW5uZXIsICJ1aS1zcGlu
bmVyIiwgInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCIgKTsKCQl0aGlzLl9hZGRDbGFzcygg
InVpLXNwaW5uZXItaW5wdXQiICk7CgoJCXRoaXMuZWxlbWVudC5hdHRyKCAicm9sZSIsICJzcGlu
YnV0dG9uIiApOwoKCQkvLyBCdXR0b24gYmluZGluZ3MKCQl0aGlzLmJ1dHRvbnMgPSB0aGlzLnVp
U3Bpbm5lci5jaGlsZHJlbiggImEiICkKCQkJLmF0dHIoICJ0YWJJbmRleCIsIC0xICkKCQkJLmF0
dHIoICJhcmlhLWhpZGRlbiIsIHRydWUgKQoJCQkuYnV0dG9uKCB7CgkJCQljbGFzc2VzOiB7CgkJ
CQkJInVpLWJ1dHRvbiI6ICIiCgkJCQl9CgkJCX0gKTsKCgkJLy8gVE9ETzogUmlnaHQgbm93IGJ1
dHRvbiBkb2VzIG5vdCBzdXBwb3J0IGNsYXNzZXMgdGhpcyBpcyBhbHJlYWR5IHVwZGF0ZWQgaW4g
YnV0dG9uIFBSCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuYnV0dG9ucywgInVpLWNvcm5lci1h
bGwiICk7CgoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmJ1dHRvbnMuZmlyc3QoKSwgInVpLXNwaW5u
ZXItYnV0dG9uIHVpLXNwaW5uZXItdXAiICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuYnV0dG9u
cy5sYXN0KCksICJ1aS1zcGlubmVyLWJ1dHRvbiB1aS1zcGlubmVyLWRvd24iICk7CgkJdGhpcy5i
dXR0b25zLmZpcnN0KCkuYnV0dG9uKCB7CgkJCSJpY29uIjogdGhpcy5vcHRpb25zLmljb25zLnVw
LAoJCQkic2hvd0xhYmVsIjogZmFsc2UKCQl9ICk7CgkJdGhpcy5idXR0b25zLmxhc3QoKS5idXR0
b24oIHsKCQkJImljb24iOiB0aGlzLm9wdGlvbnMuaWNvbnMuZG93biwKCQkJInNob3dMYWJlbCI6
IGZhbHNlCgkJfSApOwoKCQkvLyBJRSA2IGRvZXNuJ3QgdW5kZXJzdGFuZCBoZWlnaHQ6IDUwJSBm
b3IgdGhlIGJ1dHRvbnMKCQkvLyB1bmxlc3MgdGhlIHdyYXBwZXIgaGFzIGFuIGV4cGxpY2l0IGhl
aWdodAoJCWlmICggdGhpcy5idXR0b25zLmhlaWdodCgpID4gTWF0aC5jZWlsKCB0aGlzLnVpU3Bp
bm5lci5oZWlnaHQoKSAqIDAuNSApICYmCgkJCQl0aGlzLnVpU3Bpbm5lci5oZWlnaHQoKSA+IDAg
KSB7CgkJCXRoaXMudWlTcGlubmVyLmhlaWdodCggdGhpcy51aVNwaW5uZXIuaGVpZ2h0KCkgKTsK
CQl9Cgl9LAoKCV9rZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIG9wdGlvbnMgPSB0
aGlzLm9wdGlvbnMsCgkJCWtleUNvZGUgPSAkLnVpLmtleUNvZGU7CgoJCXN3aXRjaCAoIGV2ZW50
LmtleUNvZGUgKSB7CgkJY2FzZSBrZXlDb2RlLlVQOgoJCQl0aGlzLl9yZXBlYXQoIG51bGwsIDEs
IGV2ZW50ICk7CgkJCXJldHVybiB0cnVlOwoJCWNhc2Uga2V5Q29kZS5ET1dOOgoJCQl0aGlzLl9y
ZXBlYXQoIG51bGwsIC0xLCBldmVudCApOwoJCQlyZXR1cm4gdHJ1ZTsKCQljYXNlIGtleUNvZGUu
UEFHRV9VUDoKCQkJdGhpcy5fcmVwZWF0KCBudWxsLCBvcHRpb25zLnBhZ2UsIGV2ZW50ICk7CgkJ
CXJldHVybiB0cnVlOwoJCWNhc2Uga2V5Q29kZS5QQUdFX0RPV046CgkJCXRoaXMuX3JlcGVhdCgg
bnVsbCwgLW9wdGlvbnMucGFnZSwgZXZlbnQgKTsKCQkJcmV0dXJuIHRydWU7CgkJfQoKCQlyZXR1
cm4gZmFsc2U7Cgl9LAoKCV9zdGFydDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCWlmICggIXRoaXMu
c3Bpbm5pbmcgJiYgdGhpcy5fdHJpZ2dlciggInN0YXJ0IiwgZXZlbnQgKSA9PT0gZmFsc2UgKSB7
CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCWlmICggIXRoaXMuY291bnRlciApIHsKCQkJdGhpcy5j
b3VudGVyID0gMTsKCQl9CgkJdGhpcy5zcGlubmluZyA9IHRydWU7CgkJcmV0dXJuIHRydWU7Cgl9
LAoKCV9yZXBlYXQ6IGZ1bmN0aW9uKCBpLCBzdGVwcywgZXZlbnQgKSB7CgkJaSA9IGkgfHwgNTAw
OwoKCQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsKCQl0aGlzLnRpbWVyID0gdGhpcy5fZGVs
YXkoIGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9yZXBlYXQoIDQwLCBzdGVwcywgZXZlbnQgKTsKCQl9
LCBpICk7CgoJCXRoaXMuX3NwaW4oIHN0ZXBzICogdGhpcy5vcHRpb25zLnN0ZXAsIGV2ZW50ICk7
Cgl9LAoKCV9zcGluOiBmdW5jdGlvbiggc3RlcCwgZXZlbnQgKSB7CgkJdmFyIHZhbHVlID0gdGhp
cy52YWx1ZSgpIHx8IDA7CgoJCWlmICggIXRoaXMuY291bnRlciApIHsKCQkJdGhpcy5jb3VudGVy
ID0gMTsKCQl9CgoJCXZhbHVlID0gdGhpcy5fYWRqdXN0VmFsdWUoIHZhbHVlICsgc3RlcCAqIHRo
aXMuX2luY3JlbWVudCggdGhpcy5jb3VudGVyICkgKTsKCgkJaWYgKCAhdGhpcy5zcGlubmluZyB8
fCB0aGlzLl90cmlnZ2VyKCAic3BpbiIsIGV2ZW50LCB7IHZhbHVlOiB2YWx1ZSB9ICkgIT09IGZh
bHNlICkgewoJCQl0aGlzLl92YWx1ZSggdmFsdWUgKTsKCQkJdGhpcy5jb3VudGVyKys7CgkJfQoJ
fSwKCglfaW5jcmVtZW50OiBmdW5jdGlvbiggaSApIHsKCQl2YXIgaW5jcmVtZW50YWwgPSB0aGlz
Lm9wdGlvbnMuaW5jcmVtZW50YWw7CgoJCWlmICggaW5jcmVtZW50YWwgKSB7CgkJCXJldHVybiAk
LmlzRnVuY3Rpb24oIGluY3JlbWVudGFsICkgPwoJCQkJaW5jcmVtZW50YWwoIGkgKSA6CgkJCQlN
YXRoLmZsb29yKCBpICogaSAqIGkgLyA1MDAwMCAtIGkgKiBpIC8gNTAwICsgMTcgKiBpIC8gMjAw
ICsgMSApOwoJCX0KCgkJcmV0dXJuIDE7Cgl9LAoKCV9wcmVjaXNpb246IGZ1bmN0aW9uKCkgewoJ
CXZhciBwcmVjaXNpb24gPSB0aGlzLl9wcmVjaXNpb25PZiggdGhpcy5vcHRpb25zLnN0ZXAgKTsK
CQlpZiAoIHRoaXMub3B0aW9ucy5taW4gIT09IG51bGwgKSB7CgkJCXByZWNpc2lvbiA9IE1hdGgu
bWF4KCBwcmVjaXNpb24sIHRoaXMuX3ByZWNpc2lvbk9mKCB0aGlzLm9wdGlvbnMubWluICkgKTsK
CQl9CgkJcmV0dXJuIHByZWNpc2lvbjsKCX0sCgoJX3ByZWNpc2lvbk9mOiBmdW5jdGlvbiggbnVt
ICkgewoJCXZhciBzdHIgPSBudW0udG9TdHJpbmcoKSwKCQkJZGVjaW1hbCA9IHN0ci5pbmRleE9m
KCAiLiIgKTsKCQlyZXR1cm4gZGVjaW1hbCA9PT0gLTEgPyAwIDogc3RyLmxlbmd0aCAtIGRlY2lt
YWwgLSAxOwoJfSwKCglfYWRqdXN0VmFsdWU6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQl2YXIgYmFz
ZSwgYWJvdmVNaW4sCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7CgoJCS8vIE1ha2Ugc3VyZSB3
ZSdyZSBhdCBhIHZhbGlkIHN0ZXAKCQkvLyAtIGZpbmQgb3V0IHdoZXJlIHdlIGFyZSByZWxhdGl2
ZSB0byB0aGUgYmFzZSAobWluIG9yIDApCgkJYmFzZSA9IG9wdGlvbnMubWluICE9PSBudWxsID8g
b3B0aW9ucy5taW4gOiAwOwoJCWFib3ZlTWluID0gdmFsdWUgLSBiYXNlOwoKCQkvLyAtIHJvdW5k
IHRvIHRoZSBuZWFyZXN0IHN0ZXAKCQlhYm92ZU1pbiA9IE1hdGgucm91bmQoIGFib3ZlTWluIC8g
b3B0aW9ucy5zdGVwICkgKiBvcHRpb25zLnN0ZXA7CgoJCS8vIC0gcm91bmRpbmcgaXMgYmFzZWQg
b24gMCwgc28gYWRqdXN0IGJhY2sgdG8gb3VyIGJhc2UKCQl2YWx1ZSA9IGJhc2UgKyBhYm92ZU1p
bjsKCgkJLy8gRml4IHByZWNpc2lvbiBmcm9tIGJhZCBKUyBmbG9hdGluZyBwb2ludCBtYXRoCgkJ
dmFsdWUgPSBwYXJzZUZsb2F0KCB2YWx1ZS50b0ZpeGVkKCB0aGlzLl9wcmVjaXNpb24oKSApICk7
CgoJCS8vIENsYW1wIHRoZSB2YWx1ZQoJCWlmICggb3B0aW9ucy5tYXggIT09IG51bGwgJiYgdmFs
dWUgPiBvcHRpb25zLm1heCApIHsKCQkJcmV0dXJuIG9wdGlvbnMubWF4OwoJCX0KCQlpZiAoIG9w
dGlvbnMubWluICE9PSBudWxsICYmIHZhbHVlIDwgb3B0aW9ucy5taW4gKSB7CgkJCXJldHVybiBv
cHRpb25zLm1pbjsKCQl9CgoJCXJldHVybiB2YWx1ZTsKCX0sCgoJX3N0b3A6IGZ1bmN0aW9uKCBl
dmVudCApIHsKCQlpZiAoICF0aGlzLnNwaW5uaW5nICkgewoJCQlyZXR1cm47CgkJfQoKCQljbGVh
clRpbWVvdXQoIHRoaXMudGltZXIgKTsKCQljbGVhclRpbWVvdXQoIHRoaXMubW91c2V3aGVlbFRp
bWVyICk7CgkJdGhpcy5jb3VudGVyID0gMDsKCQl0aGlzLnNwaW5uaW5nID0gZmFsc2U7CgkJdGhp
cy5fdHJpZ2dlciggInN0b3AiLCBldmVudCApOwoJfSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigg
a2V5LCB2YWx1ZSApIHsKCQl2YXIgcHJldlZhbHVlLCBmaXJzdCwgbGFzdDsKCgkJaWYgKCBrZXkg
PT09ICJjdWx0dXJlIiB8fCBrZXkgPT09ICJudW1iZXJGb3JtYXQiICkgewoJCQlwcmV2VmFsdWUg
PSB0aGlzLl9wYXJzZSggdGhpcy5lbGVtZW50LnZhbCgpICk7CgkJCXRoaXMub3B0aW9uc1sga2V5
IF0gPSB2YWx1ZTsKCQkJdGhpcy5lbGVtZW50LnZhbCggdGhpcy5fZm9ybWF0KCBwcmV2VmFsdWUg
KSApOwoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIGtleSA9PT0gIm1heCIgfHwga2V5ID09PSAibWlu
IiB8fCBrZXkgPT09ICJzdGVwIiApIHsKCQkJaWYgKCB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmci
ICkgewoJCQkJdmFsdWUgPSB0aGlzLl9wYXJzZSggdmFsdWUgKTsKCQkJfQoJCX0KCQlpZiAoIGtl
eSA9PT0gImljb25zIiApIHsKCQkJZmlyc3QgPSB0aGlzLmJ1dHRvbnMuZmlyc3QoKS5maW5kKCAi
LnVpLWljb24iICk7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBmaXJzdCwgbnVsbCwgdGhpcy5vcHRp
b25zLmljb25zLnVwICk7CgkJCXRoaXMuX2FkZENsYXNzKCBmaXJzdCwgbnVsbCwgdmFsdWUudXAg
KTsKCQkJbGFzdCA9IHRoaXMuYnV0dG9ucy5sYXN0KCkuZmluZCggIi51aS1pY29uIiApOwoJCQl0
aGlzLl9yZW1vdmVDbGFzcyggbGFzdCwgbnVsbCwgdGhpcy5vcHRpb25zLmljb25zLmRvd24gKTsK
CQkJdGhpcy5fYWRkQ2xhc3MoIGxhc3Q=</Default>
</Parameter>

<Parameter name="Frag6980641884580390635850462">
<Default>LCBudWxsLCB2YWx1ZS5kb3duICk7CgkJfQoKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoJ
fSwKCglfc2V0T3B0aW9uRGlzYWJsZWQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQl0aGlzLl9zdXBl
ciggdmFsdWUgKTsKCgkJdGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMudWlTcGlubmVyLCBudWxsLCAi
dWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7CgkJdGhpcy5lbGVtZW50LnByb3AoICJkaXNh
YmxlZCIsICEhdmFsdWUgKTsKCQl0aGlzLmJ1dHRvbnMuYnV0dG9uKCB2YWx1ZSA/ICJkaXNhYmxl
IiA6ICJlbmFibGUiICk7Cgl9LAoKCV9zZXRPcHRpb25zOiBzcGlubmVyTW9kaWZlciggZnVuY3Rp
b24oIG9wdGlvbnMgKSB7CgkJdGhpcy5fc3VwZXIoIG9wdGlvbnMgKTsKCX0gKSwKCglfcGFyc2U6
IGZ1bmN0aW9uKCB2YWwgKSB7CgkJaWYgKCB0eXBlb2YgdmFsID09PSAic3RyaW5nIiAmJiB2YWwg
IT09ICIiICkgewoJCQl2YWwgPSB3aW5kb3cuR2xvYmFsaXplICYmIHRoaXMub3B0aW9ucy5udW1i
ZXJGb3JtYXQgPwoJCQkJR2xvYmFsaXplLnBhcnNlRmxvYXQoIHZhbCwgMTAsIHRoaXMub3B0aW9u
cy5jdWx0dXJlICkgOiArdmFsOwoJCX0KCQlyZXR1cm4gdmFsID09PSAiIiB8fCBpc05hTiggdmFs
ICkgPyBudWxsIDogdmFsOwoJfSwKCglfZm9ybWF0OiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJaWYg
KCB2YWx1ZSA9PT0gIiIgKSB7CgkJCXJldHVybiAiIjsKCQl9CgkJcmV0dXJuIHdpbmRvdy5HbG9i
YWxpemUgJiYgdGhpcy5vcHRpb25zLm51bWJlckZvcm1hdCA/CgkJCUdsb2JhbGl6ZS5mb3JtYXQo
IHZhbHVlLCB0aGlzLm9wdGlvbnMubnVtYmVyRm9ybWF0LCB0aGlzLm9wdGlvbnMuY3VsdHVyZSAp
IDoKCQkJdmFsdWU7Cgl9LAoKCV9yZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl0aGlzLmVsZW1lbnQu
YXR0ciggewoJCQkiYXJpYS12YWx1ZW1pbiI6IHRoaXMub3B0aW9ucy5taW4sCgkJCSJhcmlhLXZh
bHVlbWF4IjogdGhpcy5vcHRpb25zLm1heCwKCgkJCS8vIFRPRE86IHdoYXQgc2hvdWxkIHdlIGRv
IHdpdGggdmFsdWVzIHRoYXQgY2FuJ3QgYmUgcGFyc2VkPwoJCQkiYXJpYS12YWx1ZW5vdyI6IHRo
aXMuX3BhcnNlKCB0aGlzLmVsZW1lbnQudmFsKCkgKQoJCX0gKTsKCX0sCgoJaXNWYWxpZDogZnVu
Y3Rpb24oKSB7CgkJdmFyIHZhbHVlID0gdGhpcy52YWx1ZSgpOwoKCQkvLyBOdWxsIGlzIGludmFs
aWQKCQlpZiAoIHZhbHVlID09PSBudWxsICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQkvLyBJ
ZiB2YWx1ZSBnZXRzIGFkanVzdGVkLCBpdCdzIGludmFsaWQKCQlyZXR1cm4gdmFsdWUgPT09IHRo
aXMuX2FkanVzdFZhbHVlKCB2YWx1ZSApOwoJfSwKCgkvLyBVcGRhdGUgdGhlIHZhbHVlIHdpdGhv
dXQgdHJpZ2dlcmluZyBjaGFuZ2UKCV92YWx1ZTogZnVuY3Rpb24oIHZhbHVlLCBhbGxvd0FueSAp
IHsKCQl2YXIgcGFyc2VkOwoJCWlmICggdmFsdWUgIT09ICIiICkgewoJCQlwYXJzZWQgPSB0aGlz
Ll9wYXJzZSggdmFsdWUgKTsKCQkJaWYgKCBwYXJzZWQgIT09IG51bGwgKSB7CgkJCQlpZiAoICFh
bGxvd0FueSApIHsKCQkJCQlwYXJzZWQgPSB0aGlzLl9hZGp1c3RWYWx1ZSggcGFyc2VkICk7CgkJ
CQl9CgkJCQl2YWx1ZSA9IHRoaXMuX2Zvcm1hdCggcGFyc2VkICk7CgkJCX0KCQl9CgkJdGhpcy5l
bGVtZW50LnZhbCggdmFsdWUgKTsKCQl0aGlzLl9yZWZyZXNoKCk7Cgl9LAoKCV9kZXN0cm95OiBm
dW5jdGlvbigpIHsKCQl0aGlzLmVsZW1lbnQKCQkJLnByb3AoICJkaXNhYmxlZCIsIGZhbHNlICkK
CQkJLnJlbW92ZUF0dHIoICJhdXRvY29tcGxldGUgcm9sZSBhcmlhLXZhbHVlbWluIGFyaWEtdmFs
dWVtYXggYXJpYS12YWx1ZW5vdyIgKTsKCgkJdGhpcy51aVNwaW5uZXIucmVwbGFjZVdpdGgoIHRo
aXMuZWxlbWVudCApOwoJfSwKCglzdGVwVXA6IHNwaW5uZXJNb2RpZmVyKCBmdW5jdGlvbiggc3Rl
cHMgKSB7CgkJdGhpcy5fc3RlcFVwKCBzdGVwcyApOwoJfSApLAoJX3N0ZXBVcDogZnVuY3Rpb24o
IHN0ZXBzICkgewoJCWlmICggdGhpcy5fc3RhcnQoKSApIHsKCQkJdGhpcy5fc3BpbiggKCBzdGVw
cyB8fCAxICkgKiB0aGlzLm9wdGlvbnMuc3RlcCApOwoJCQl0aGlzLl9zdG9wKCk7CgkJfQoJfSwK
CglzdGVwRG93bjogc3Bpbm5lck1vZGlmZXIoIGZ1bmN0aW9uKCBzdGVwcyApIHsKCQl0aGlzLl9z
dGVwRG93biggc3RlcHMgKTsKCX0gKSwKCV9zdGVwRG93bjogZnVuY3Rpb24oIHN0ZXBzICkgewoJ
CWlmICggdGhpcy5fc3RhcnQoKSApIHsKCQkJdGhpcy5fc3BpbiggKCBzdGVwcyB8fCAxICkgKiAt
dGhpcy5vcHRpb25zLnN0ZXAgKTsKCQkJdGhpcy5fc3RvcCgpOwoJCX0KCX0sCgoJcGFnZVVwOiBz
cGlubmVyTW9kaWZlciggZnVuY3Rpb24oIHBhZ2VzICkgewoJCXRoaXMuX3N0ZXBVcCggKCBwYWdl
cyB8fCAxICkgKiB0aGlzLm9wdGlvbnMucGFnZSApOwoJfSApLAoKCXBhZ2VEb3duOiBzcGlubmVy
TW9kaWZlciggZnVuY3Rpb24oIHBhZ2VzICkgewoJCXRoaXMuX3N0ZXBEb3duKCAoIHBhZ2VzIHx8
IDEgKSAqIHRoaXMub3B0aW9ucy5wYWdlICk7Cgl9ICksCgoJdmFsdWU6IGZ1bmN0aW9uKCBuZXdW
YWwgKSB7CgkJaWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRoaXMuX3BhcnNl
KCB0aGlzLmVsZW1lbnQudmFsKCkgKTsKCQl9CgkJc3Bpbm5lck1vZGlmZXIoIHRoaXMuX3ZhbHVl
ICkuY2FsbCggdGhpcywgbmV3VmFsICk7Cgl9LAoKCXdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0
dXJuIHRoaXMudWlTcGlubmVyOwoJfQp9ICk7CgovLyBERVBSRUNBVEVECi8vIFRPRE86IHN3aXRj
aCByZXR1cm4gYmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0
aGlzIGlzIHJlbW92ZWQKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgoJLy8gQmFj
a2NvbXBhdCBmb3Igc3Bpbm5lciBodG1sIGV4dGVuc2lvbiBwb2ludHMKCSQud2lkZ2V0KCAidWku
c3Bpbm5lciIsICQudWkuc3Bpbm5lciwgewoJCV9lbmhhbmNlOiBmdW5jdGlvbigpIHsKCQkJdGhp
cy51aVNwaW5uZXIgPSB0aGlzLmVsZW1lbnQKCQkJCS5hdHRyKCAiYXV0b2NvbXBsZXRlIiwgIm9m
ZiIgKQoJCQkJLndyYXAoIHRoaXMuX3VpU3Bpbm5lckh0bWwoKSApCgkJCQkucGFyZW50KCkKCgkJ
CQkJLy8gQWRkIGJ1dHRvbnMKCQkJCQkuYXBwZW5kKCB0aGlzLl9idXR0b25IdG1sKCkgKTsKCQl9
LAoJCV91aVNwaW5uZXJIdG1sOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuICI8c3Bhbj4iOwoJCX0s
CgoJCV9idXR0b25IdG1sOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuICI8YT48L2E+PGE+PC9hPiI7
CgkJfQoJfSApOwp9Cgp2YXIgd2lkZ2V0c1NwaW5uZXIgPSAkLnVpLnNwaW5uZXI7CgoKLyohCiAq
IGpRdWVyeSBVSSBUYWJzIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHly
aWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2Vk
IHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8K
Ci8vPj5sYWJlbDogVGFicwovLz4+Z3JvdXA6IFdpZGdldHMKLy8+PmRlc2NyaXB0aW9uOiBUcmFu
c2Zvcm1zIGEgc2V0IG9mIGNvbnRhaW5lciBlbGVtZW50cyBpbnRvIGEgdGFiIHN0cnVjdHVyZS4K
Ly8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3RhYnMvCi8vPj5kZW1vczogaHR0cDov
L2pxdWVyeXVpLmNvbS90YWJzLwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2Uv
Y29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL3RhYnMuY3NzCi8v
Pj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgokLndpZGdldCggInVp
LnRhYnMiLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCWRlbGF5OiAzMDAsCglvcHRpb25zOiB7CgkJ
YWN0aXZlOiBudWxsLAoJCWNsYXNzZXM6IHsKCQkJInVpLXRhYnMiOiAidWktY29ybmVyLWFsbCIs
CgkJCSJ1aS10YWJzLW5hdiI6ICJ1aS1jb3JuZXItYWxsIiwKCQkJInVpLXRhYnMtcGFuZWwiOiAi
dWktY29ybmVyLWJvdHRvbSIsCgkJCSJ1aS10YWJzLXRhYiI6ICJ1aS1jb3JuZXItdG9wIgoJCX0s
CgkJY29sbGFwc2libGU6IGZhbHNlLAoJCWV2ZW50OiAiY2xpY2siLAoJCWhlaWdodFN0eWxlOiAi
Y29udGVudCIsCgkJaGlkZTogbnVsbCwKCQlzaG93OiBudWxsLAoKCQkvLyBDYWxsYmFja3MKCQlh
Y3RpdmF0ZTogbnVsbCwKCQliZWZvcmVBY3RpdmF0ZTogbnVsbCwKCQliZWZvcmVMb2FkOiBudWxs
LAoJCWxvYWQ6IG51bGwKCX0sCgoJX2lzTG9jYWw6ICggZnVuY3Rpb24oKSB7CgkJdmFyIHJoYXNo
ID0gLyMuKiQvOwoKCQlyZXR1cm4gZnVuY3Rpb24oIGFuY2hvciApIHsKCQkJdmFyIGFuY2hvclVy
bCwgbG9jYXRpb25Vcmw7CgoJCQlhbmNob3JVcmwgPSBhbmNob3IuaHJlZi5yZXBsYWNlKCByaGFz
aCwgIiIgKTsKCQkJbG9jYXRpb25VcmwgPSBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoIHJoYXNoLCAi
IiApOwoKCQkJLy8gRGVjb2RpbmcgbWF5IHRocm93IGFuIGVycm9yIGlmIHRoZSBVUkwgaXNuJ3Qg
VVRGLTggKCM5NTE4KQoJCQl0cnkgewoJCQkJYW5jaG9yVXJsID0gZGVjb2RlVVJJQ29tcG9uZW50
KCBhbmNob3JVcmwgKTsKCQkJfSBjYXRjaCAoIGVycm9yICkge30KCQkJdHJ5IHsKCQkJCWxvY2F0
aW9uVXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KCBsb2NhdGlvblVybCApOwoJCQl9IGNhdGNoICgg
ZXJyb3IgKSB7fQoKCQkJcmV0dXJuIGFuY2hvci5oYXNoLmxlbmd0aCA+IDEgJiYgYW5jaG9yVXJs
ID09PSBsb2NhdGlvblVybDsKCQl9OwoJfSApKCksCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJ
dmFyIHRoYXQgPSB0aGlzLAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQl0aGlzLnJ1bm5p
bmcgPSBmYWxzZTsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS10YWJzIiwgInVpLXdpZGdldCB1aS13
aWRnZXQtY29udGVudCIgKTsKCQl0aGlzLl90b2dnbGVDbGFzcyggInVpLXRhYnMtY29sbGFwc2li
bGUiLCBudWxsLCBvcHRpb25zLmNvbGxhcHNpYmxlICk7CgoJCXRoaXMuX3Byb2Nlc3NUYWJzKCk7
CgkJb3B0aW9ucy5hY3RpdmUgPSB0aGlzLl9pbml0aWFsQWN0aXZlKCk7CgoJCS8vIFRha2UgZGlz
YWJsaW5nIHRhYnMgdmlhIGNsYXNzIGF0dHJpYnV0ZSBmcm9tIEhUTUwKCQkvLyBpbnRvIGFjY291
bnQgYW5kIHVwZGF0ZSBvcHRpb24gcHJvcGVybHkuCgkJaWYgKCAkLmlzQXJyYXkoIG9wdGlvbnMu
ZGlzYWJsZWQgKSApIHsKCQkJb3B0aW9ucy5kaXNhYmxlZCA9ICQudW5pcXVlKCBvcHRpb25zLmRp
c2FibGVkLmNvbmNhdCgKCQkJCSQubWFwKCB0aGlzLnRhYnMuZmlsdGVyKCAiLnVpLXN0YXRlLWRp
c2FibGVkIiApLCBmdW5jdGlvbiggbGkgKSB7CgkJCQkJcmV0dXJuIHRoYXQudGFicy5pbmRleCgg
bGkgKTsKCQkJCX0gKQoJCQkpICkuc29ydCgpOwoJCX0KCgkJLy8gQ2hlY2sgZm9yIGxlbmd0aCBh
dm9pZHMgZXJyb3Igd2hlbiBpbml0aWFsaXppbmcgZW1wdHkgbGlzdAoJCWlmICggdGhpcy5vcHRp
b25zLmFjdGl2ZSAhPT0gZmFsc2UgJiYgdGhpcy5hbmNob3JzLmxlbmd0aCApIHsKCQkJdGhpcy5h
Y3RpdmUgPSB0aGlzLl9maW5kQWN0aXZlKCBvcHRpb25zLmFjdGl2ZSApOwoJCX0gZWxzZSB7CgkJ
CXRoaXMuYWN0aXZlID0gJCgpOwoJCX0KCgkJdGhpcy5fcmVmcmVzaCgpOwoKCQlpZiAoIHRoaXMu
YWN0aXZlLmxlbmd0aCApIHsKCQkJdGhpcy5sb2FkKCBvcHRpb25zLmFjdGl2ZSApOwoJCX0KCX0s
CgoJX2luaXRpYWxBY3RpdmU6IGZ1bmN0aW9uKCkgewoJCXZhciBhY3RpdmUgPSB0aGlzLm9wdGlv
bnMuYWN0aXZlLAoJCQljb2xsYXBzaWJsZSA9IHRoaXMub3B0aW9ucy5jb2xsYXBzaWJsZSwKCQkJ
bG9jYXRpb25IYXNoID0gbG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoIDEgKTsKCgkJaWYgKCBhY3Rp
dmUgPT09IG51bGwgKSB7CgoJCQkvLyBjaGVjayB0aGUgZnJhZ21lbnQgaWRlbnRpZmllciBpbiB0
aGUgVVJMCgkJCWlmICggbG9jYXRpb25IYXNoICkgewoJCQkJdGhpcy50YWJzLmVhY2goIGZ1bmN0
aW9uKCBpLCB0YWIgKSB7CgkJCQkJaWYgKCAkKCB0YWIgKS5hdHRyKCAiYXJpYS1jb250cm9scyIg
KSA9PT0gbG9jYXRpb25IYXNoICkgewoJCQkJCQlhY3RpdmUgPSBpOwoJCQkJCQlyZXR1cm4gZmFs
c2U7CgkJCQkJfQoJCQkJfSApOwoJCQl9CgoJCQkvLyBDaGVjayBmb3IgYSB0YWIgbWFya2VkIGFj
dGl2ZSB2aWEgYSBjbGFzcwoJCQlpZiAoIGFjdGl2ZSA9PT0gbnVsbCApIHsKCQkJCWFjdGl2ZSA9
IHRoaXMudGFicy5pbmRleCggdGhpcy50YWJzLmZpbHRlciggIi51aS10YWJzLWFjdGl2ZSIgKSAp
OwoJCQl9CgoJCQkvLyBObyBhY3RpdmUgdGFiLCBzZXQgdG8gZmFsc2UKCQkJaWYgKCBhY3RpdmUg
PT09IG51bGwgfHwgYWN0aXZlID09PSAtMSApIHsKCQkJCWFjdGl2ZSA9IHRoaXMudGFicy5sZW5n
dGggPyAwIDogZmFsc2U7CgkJCX0KCQl9CgoJCS8vIEhhbmRsZSBudW1iZXJzOiBuZWdhdGl2ZSwg
b3V0IG9mIHJhbmdlCgkJaWYgKCBhY3RpdmUgIT09IGZhbHNlICkgewoJCQlhY3RpdmUgPSB0aGlz
LnRhYnMuaW5kZXgoIHRoaXMudGFicy5lcSggYWN0aXZlICkgKTsKCQkJaWYgKCBhY3RpdmUgPT09
IC0xICkgewoJCQkJYWN0aXZlID0gY29sbGFwc2libGUgPyBmYWxzZSA6IDA7CgkJCX0KCQl9CgoJ
CS8vIERvbid0IGFsbG93IGNvbGxhcHNpYmxlOiBmYWxzZSBhbmQgYWN0aXZlOiBmYWxzZQoJCWlm
ICggIWNvbGxhcHNpYmxlICYmIGFjdGl2ZSA9PT0gZmFsc2UgJiYgdGhpcy5hbmNob3JzLmxlbmd0
aCApIHsKCQkJYWN0aXZlID0gMDsKCQl9CgoJCXJldHVybiBhY3RpdmU7Cgl9LAoKCV9nZXRDcmVh
dGVFdmVudERhdGE6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB7CgkJCXRhYjogdGhpcy5hY3RpdmUs
CgkJCXBhbmVsOiAhdGhpcy5hY3RpdmUubGVuZ3RoID8gJCgpIDogdGhpcy5fZ2V0UGFuZWxGb3JU
YWIoIHRoaXMuYWN0aXZlICkKCQl9OwoJfSwKCglfdGFiS2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50
ICkgewoJCXZhciBmb2N1c2VkVGFiID0gJCggJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5k
b2N1bWVudFsgMCBdICkgKS5jbG9zZXN0KCAibGkiICksCgkJCXNlbGVjdGVkSW5kZXggPSB0aGlz
LnRhYnMuaW5kZXgoIGZvY3VzZWRUYWIgKSwKCQkJZ29pbmdGb3J3YXJkID0gdHJ1ZTsKCgkJaWYg
KCB0aGlzLl9oYW5kbGVQYWdlTmF2KCBldmVudCApICkgewoJCQlyZXR1cm47CgkJfQoKCQlzd2l0
Y2ggKCBldmVudC5rZXlDb2RlICkgewoJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCWNhc2Ug
JC51aS5rZXlDb2RlLkRPV046CgkJCXNlbGVjdGVkSW5kZXgrKzsKCQkJYnJlYWs7CgkJY2FzZSAk
LnVpLmtleUNvZGUuVVA6CgkJY2FzZSAkLnVpLmtleUNvZGUuTEVGVDoKCQkJZ29pbmdGb3J3YXJk
ID0gZmFsc2U7CgkJCXNlbGVjdGVkSW5kZXgtLTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNv
ZGUuRU5EOgoJCQlzZWxlY3RlZEluZGV4ID0gdGhpcy5hbmNob3JzLmxlbmd0aCAtIDE7CgkJCWJy
ZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLkhPTUU6CgkJCXNlbGVjdGVkSW5kZXggPSAwOwoJCQli
cmVhazsKCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToKCgkJCS8vIEFjdGl2YXRlIG9ubHksIG5v
IGNvbGxhcHNpbmcKCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJY2xlYXJUaW1lb3V0KCB0
aGlzLmFjdGl2YXRpbmcgKTsKCQkJdGhpcy5fYWN0aXZhdGUoIHNlbGVjdGVkSW5kZXggKTsKCQkJ
cmV0dXJuOwoJCWNhc2UgJC51aS5rZXlDb2RlLkVOVEVSOgoKCQkJLy8gVG9nZ2xlIChjYW5jZWwg
ZGVsYXllZCBhY3RpdmF0aW9uLCBhbGxvdyBjb2xsYXBzaW5nKQoJCQlldmVudC5wcmV2ZW50RGVm
YXVsdCgpOwoJCQljbGVhclRpbWVvdXQoIHRoaXMuYWN0aXZhdGluZyApOwoKCQkJLy8gRGV0ZXJt
aW5lIGlmIHdlIHNob3VsZCBjb2xsYXBzZSBvciBhY3RpdmF0ZQoJCQl0aGlzLl9hY3RpdmF0ZSgg
c2VsZWN0ZWRJbmRleCA9PT0gdGhpcy5vcHRpb25zLmFjdGl2ZSA/IGZhbHNlIDogc2VsZWN0ZWRJ
bmRleCApOwoJCQlyZXR1cm47CgkJZGVmYXVsdDoKCQkJcmV0dXJuOwoJCX0KCgkJLy8gRm9jdXMg
dGhlIGFwcHJvcHJpYXRlIHRhYiwgYmFzZWQgb24gd2hpY2gga2V5IHdhcyBwcmVzc2VkCgkJZXZl
bnQucHJldmVudERlZmF1bHQoKTsKCQljbGVhclRpbWVvdXQoIHRoaXMuYWN0aXZhdGluZyApOwoJ
CXNlbGVjdGVkSW5kZXggPSB0aGlzLl9mb2N1c05leHRUYWIoIHNlbGVjdGVkSW5kZXgsIGdvaW5n
Rm9yd2FyZCApOwoKCQkvLyBOYXZpZ2F0aW5nIHdpdGggY29udHJvbC9jb21tYW5kIGtleSB3aWxs
IHByZXZlbnQgYXV0b21hdGljIGFjdGl2YXRpb24KCQlpZiAoICFldmVudC5jdHJsS2V5ICYmICFl
dmVudC5tZXRhS2V5ICkgewoKCQkJLy8gVXBkYXRlIGFyaWEtc2VsZWN0ZWQgaW1tZWRpYXRlbHkg
c28gdGhhdCBBVCB0aGluayB0aGUgdGFiIGlzIGFscmVhZHkgc2VsZWN0ZWQuCgkJCS8vIE90aGVy
d2lzZSBBVCBtYXkgY29uZnVzZSB0aGUgdXNlciBieSBzdGF0aW5nIHRoYXQgdGhleSBuZWVkIHRv
IGFjdGl2YXRlIHRoZSB0YWIsCgkJCS8vIGJ1dCB0aGUgdGFiIHdpbGwgYWxyZWFkeSBiZSBhY3Rp
dmF0ZWQgYnkgdGhlIHRpbWUgdGhlIGFubm91bmNlbWVudCBmaW5pc2hlcy4KCQkJZm9jdXNlZFRh
Yi5hdHRyKCAiYXJpYS1zZWxlY3RlZCIsICJmYWxzZSIgKTsKCQkJdGhpcy50YWJzLmVxKCBzZWxl
Y3RlZEluZGV4ICkuYXR0ciggImFyaWEtc2VsZWN0ZWQiLCAidHJ1ZSIgKTsKCgkJCXRoaXMuYWN0
aXZhdGluZyA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCXRoaXMub3B0aW9uKCAiYWN0
aXZlIiwgc2VsZWN0ZWRJbmRleCApOwoJCQl9LCB0aGlzLmRlbGF5ICk7CgkJfQoJfSwKCglfcGFu
ZWxLZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCB0aGlzLl9oYW5kbGVQYWdlTmF2
KCBldmVudCApICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBDdHJsK3VwIG1vdmVzIGZvY3VzIHRv
IHRoZSBjdXJyZW50IHRhYgoJCWlmICggZXZlbnQuY3RybEtleSAmJiBldmVudC5rZXlDb2RlID09
PSAkLnVpLmtleUNvZGUuVVAgKSB7CgkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCXRoaXMu
YWN0aXZlLnRyaWdnZXIoICJmb2N1cyIgKTsKCQl9Cgl9LAoKCS8vIEFsdCtwYWdlIHVwL2Rvd24g
bW92ZXMgZm9jdXMgdG8gdGhlIHByZXZpb3VzL25leHQgdGFiIChhbmQgYWN0aXZhdGVzKQoJX2hh
bmRsZVBhZ2VOYXY6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoIGV2ZW50LmFsdEtleSAmJiBl
dmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuUEFHRV9VUCApIHsKCQkJdGhpcy5fYWN0aXZh
dGUoIHRoaXMuX2ZvY3VzTmV4dFRhYiggdGhpcy5vcHRpb25zLmFjdGl2ZSAtIDEsIGZhbHNlICkg
KTsKCQkJcmV0dXJuIHRydWU7CgkJfQoJCWlmICggZXZlbnQuYWx0S2V5ICYmIGV2ZW50LmtleUNv
ZGUgPT09ICQudWkua2V5Q29kZS5QQUdFX0RPV04gKSB7CgkJCXRoaXMuX2FjdGl2YXRlKCB0aGlz
Ll9mb2N1c05leHRUYWIoIHRoaXMub3B0aW9ucy5hY3RpdmUgKyAxLCB0cnVlICkgKTsKCQkJcmV0
dXJuIHRydWU7CgkJfQoJfSwKCglfZmluZE5leHRUYWI6IGZ1bmN0aW9uKCBpbmRleCwgZ29pbmdG
b3J3YXJkICkgewoJCXZhciBsYXN0VGFiSW5kZXggPSB0aGlzLnRhYnMubGVuZ3RoIC0gMTsKCgkJ
ZnVuY3Rpb24gY29uc3RyYWluKCkgewoJCQlpZiAoIGluZGV4ID4gbGFzdFRhYkluZGV4ICkgewoJ
CQkJaW5kZXggPSAwOwoJCQl9CgkJCWlmICggaW5kZXggPCAwICkgewoJCQkJaW5kZXggPSBsYXN0
VGFiSW5kZXg7CgkJCX0KCQkJcmV0dXJuIGluZGV4OwoJCX0KCgkJd2hpbGUgKCAkLmluQXJyYXko
IGNvbnN0cmFpbigpLCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSAhPT0gLTEgKSB7CgkJCWluZGV4
ID0gZ29pbmdGb3J3YXJkID8gaW5kZXggKyAxIDogaW5kZXggLSAxOwoJCX0KCgkJcmV0dXJuIGlu
ZGV4OwoJfSwKCglfZm9jdXNOZXh0VGFiOiBmdW5jdGlvbiggaW5kZXgsIGdvaW5nRm9yd2FyZCAp
IHsKCQlpbmRleCA9IHRoaXMuX2ZpbmROZXh0VGFiKCBpbmRleCwgZ29pbmdGb3J3YXJkICk7CgkJ
dGhpcy50YWJzLmVxKCBpbmRleCApLnRyaWdnZXIoICJmb2N1cyIgKTsKCQlyZXR1cm4gaW5kZXg7
Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09
PSAiYWN0aXZlIiApIHsKCgkJCS8vIF9hY3RpdmF0ZSgpIHdpbGwgaGFuZGxlIGludmFsaWQgdmFs
dWVzIGFuZCB1cGRhdGUgdGhpcy5vcHRpb25zCgkJCXRoaXMuX2FjdGl2YXRlKCB2YWx1ZSApOwoJ
CQlyZXR1cm47CgkJfQoKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoKCQlpZiAoIGtleSA9
PT0gImNvbGxhcHNpYmxlIiApIHsKCQkJdGhpcy5fdG9nZ2xlQ2xhc3MoICJ1aS10YWJzLWNvbGxh
cHNpYmxlIiwgbnVsbCwgdmFsdWUgKTsKCgkJCS8vIFNldHRpbmcgY29sbGFwc2libGU6IGZhbHNl
IHdoaWxlIGNvbGxhcHNlZDsgb3BlbiBmaXJzdCBwYW5lbAoJCQlpZiAoICF2YWx1ZSAmJiB0aGlz
Lm9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSApIHsKCQkJCXRoaXMuX2FjdGl2YXRlKCAwICk7CgkJ
CX0KCQl9CgoJCWlmICgga2V5ID09PSAiZXZlbnQiICkgewoJCQl0aGlzLl9zZXR1cEV2ZW50cygg
dmFsdWUgKTsKCQl9CgoJCWlmICgga2V5ID09PSAiaGVpZ2h0U3R5bGUiICkgewoJCQl0aGlzLl9z
ZXR1cEhlaWdodFN0eWxlKCB2YWx1ZSApOwoJCX0KCX0sCgoJX3Nhbml0aXplU2VsZWN0b3I6IGZ1
bmN0aW9uKCBoYXNoICkgewoJCXJldHVybiBoYXNoID8gaGFzaC5yZXBsYWNlKCAvWyEiJCUmJygp
KissLlwvOjs8PT4/QFxbXF1cXmB7fH1+XS9nLCAiXFwkJiIgKSA6ICIiOwoJfSwKCglyZWZyZXNo
OiBmdW5jdGlvbigpIHsKCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucywKCQkJbGlzID0gdGhp
cy50YWJsaXN0LmNoaWxkcmVuKCAiOmhhcyhhW2hyZWZdKSIgKTsKCgkJLy8gR2V0IGRpc2FibGVk
IHRhYnMgZnJvbSBjbGFzcyBhdHRyaWJ1dGUgZnJvbSBIVE1MCgkJLy8gdGhpcyB3aWxsIGdldCBj
b252ZXJ0ZWQgdG8gYSBib29sZWFuIGlmIG5lZWRlZCBpbiBfcmVmcmVzaCgpCgkJb3B0aW9ucy5k
aXNhYmxlZCA9ICQubWFwKCBsaXMuZmlsdGVyKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLCBmdW5j
dGlvbiggdGFiICkgewoJCQlyZXR1cm4gbGlzLmluZGV4KCB0YWIgKTsKCQl9ICk7CgoJCXRoaXMu
X3Byb2Nlc3NUYWJzKCk7CgoJCS8vIFdhcyBjb2xsYXBzZWQgb3Igbm8gdGFicwoJCWlmICggb3B0
aW9ucy5hY3RpdmUgPT09IGZhbHNlIHx8ICF0aGlzLmFuY2hvcnMubGVuZ3RoICkgewoJCQlvcHRp
b25zLmFjdGl2ZSA9IGZhbHNlOwoJCQl0aGlzLmFjdGl2ZSA9ICQoKTsKCgkJLy8gd2FzIGFjdGl2
ZSwgYnV0IGFjdGl2ZSB0YWIgaXMgZ29uZQoJCX0gZWxzZSBpZiAoIHRoaXMuYWN0aXZlLmxlbmd0
aCAmJiAhJC5jb250YWlucyggdGhpcy50YWJsaXN0WyAwIF0sIHRoaXMuYWN0aXZlWyAwIF0gKSAp
IHsKCgkJCS8vIGFsbCByZW1haW5pbmcgdGFicyBhcmUgZGlzYWJsZWQKCQkJaWYgKCB0aGlzLnRh
YnMubGVuZ3RoID09PSBvcHRpb25zLmRpc2FibGVkLmxlbmd0aCApIHsKCQkJCW9wdGlvbnMuYWN0
aXZlID0gZmFsc2U7CgkJCQl0aGlzLmFjdGl2ZSA9ICQoKTsKCgkJCS8vIGFjdGl2YXRlIHByZXZp
b3VzIHRhYgoJCQl9IGVsc2UgewoJCQkJdGhpcy5fYWN0aXZhdGUoIHRoaXMuX2ZpbmROZXh0VGFi
KCBNYXRoLm1heCggMCwgb3B0aW9ucy5hY3RpdmUgLSAxICksIGZhbHNlICkgKTsKCQkJfQoKCQkv
LyB3YXMgYWN0aXZlLCBhY3RpdmUgdGFiIHN0aWxsIGV4aXN0cwoJCX0gZWxzZSB7CgoJCQkvLyBt
YWtlIHN1cmUgYWN0aXZlIGluZGV4IGlzIGNvcnJlY3QKCQkJb3B0aW9ucy5hY3RpdmUgPSB0aGlz
LnRhYnMuaW5kZXgoIHRoaXMuYWN0aXZlICk7CgkJfQoKCQl0aGlzLl9yZWZyZXNoKCk7Cgl9LAoK
CV9yZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCggdGhpcy5v
cHRpb25zLmRpc2FibGVkICk7CgkJdGhpcy5fc2V0dXBFdmVudHMoIHRoaXMub3B0aW9ucy5ldmVu
dCApOwoJCXRoaXMuX3NldHVwSGVpZ2h0U3R5bGUoIHRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSAp
OwoKCQl0aGlzLnRhYnMubm90KCB0aGlzLmFjdGl2ZSApLmF0dHIoIHsKCQkJImFyaWEtc2VsZWN0
ZWQiOiAiZmFsc2UiLAoJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIsCgkJCXRhYkluZGV4OiAt
MQoJCX0gKTsKCQl0aGlzLnBhbmVscy5ub3QoIHRoaXMuX2dldFBhbmVsRm9yVGFiKCB0aGlzLmFj
dGl2ZSApICkKCQkJLmhpZGUoKQoJCQkuYXR0ciggewoJCQkJImFyaWEtaGlkZGVuIjogInRydWUi
CgkJCX0gKTsKCgkJLy8gTWFrZSBzdXJlIG9uZSB0YWIgaXMgaW4gdGhlIHRhYiBvcmRlcgoJCWlm
ICggIXRoaXMuYWN0aXZlLmxlbmd0aCApIHsKCQkJdGhpcy50YWJzLmVxKCAwICkuYXR0ciggInRh
YkluZGV4IiwgMCApOwoJCX0gZWxzZSB7CgkJCXRoaXMuYWN0aXZlCgkJCQkuYXR0ciggewoJCQkJ
CSJhcmlhLXNlbGVjdGVkIjogInRydWUiLAoJCQkJCSJhcmlhLWV4cGFuZGVkIjogInRydWUiLAoJ
CQkJCXRhYkluZGV4OiAwCgkJCQl9ICk7CgkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmFjdGl2ZSwg
InVpLXRhYnMtYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQkJdGhpcy5fZ2V0UGFuZWxG
b3JUYWIoIHRoaXMuYWN0aXZlICkKCQkJCS5zaG93KCkKCQkJCS5hdHRyKCB7CgkJCQkJImFyaWEt
aGlkZGVuIjogImZhbHNlIgoJCQkJfSApOwoJCX0KCX0sCgoJX3Byb2Nlc3NUYWJzOiBmdW5jdGlv
bigpIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCXByZXZUYWJzID0gdGhpcy50YWJzLAoJCQlwcmV2
QW5jaG9ycyA9IHRoaXMuYW5jaG9ycywKCQkJcHJldlBhbmVscyA9IHRoaXMucGFuZWxzOwoKCQl0
aGlzLnRhYmxpc3QgPSB0aGlzLl9nZXRMaXN0KCkuYXR0ciggInJvbGUiLCAidGFibGlzdCIgKTsK
CQl0aGlzLl9hZGRDbGFzcyggdGhpcy50YWJsaXN0LCAidWktdGFicy1uYXYiLAoJCQkidWktaGVs
cGVyLXJlc2V0IHVpLWhlbHBlci1jbGVhcmZpeCB1aS13aWRnZXQtaGVhZGVyIiApOwoKCQkvLyBQ
cmV2ZW50IHVzZXJzIGZyb20gZm9jdXNpbmcgZGlzYWJsZWQgdGFicyB2aWEgY2xpY2sKCQl0aGlz
LnRhYmxpc3QKCQkJLm9uKCAibW91c2Vkb3duIiArIHRoaXMuZXZlbnROYW1lc3BhY2UsICI+IGxp
IiwgZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCAkKCB0aGlzICkuaXMoICIudWktc3RhdGUt
ZGlzYWJsZWQiICkgKSB7CgkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCX0KCQkJfSAp
CgoJCQkvLyBTdXBwb3J0OiBJRSA8OQoJCQkvLyBQcmV2ZW50aW5nIHRoZSBkZWZhdWx0IGFjdGlv
biBpbiBtb3VzZWRvd24gZG9lc24ndCBwcmV2ZW50IElFCgkJCS8vIGZyb20gZm9jdXNpbmcgdGhl
IGVsZW1lbnQsIHNvIGlmIHRoZSBhbmNob3IgZ2V0cyBmb2N1c2VkLCBibHVyLgoJCQkvLyBXZSBk
b24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IGZvY3VzaW5nIHRoZSBwcmV2aW91c2x5IGZvY3VzZWQK
CQkJLy8gZWxlbWVudCBzaW5jZSBjbGlja2luZyBvbiBhIG5vbi1mb2N1c2FibGUgZWxlbWVudCBz
aG91bGQgZm9jdXMKCQkJLy8gdGhlIGJvZHkgYW55d2F5LgoJCQkub24oICJmb2N1cyIgKyB0aGlz
LmV2ZW50TmFtZXNwYWNlLCAiLnVpLXRhYnMtYW5jaG9yIiwgZnVuY3Rpb24oKSB7CgkJCQlpZiAo
ICQoIHRoaXMgKS5jbG9zZXN0KCAibGkiICkuaXMoICIudWktc3RhdGUtZGlzYWJsZWQiICkgKSB7
CgkJCQkJdGhpcy5ibHVyKCk7CgkJCQl9CgkJCX0gKTsKCgkJdGhpcy50YWJzID0gdGhpcy50YWJs
aXN0LmZpbmQoICI+IGxpOmhhcyhhW2hyZWZdKSIgKQoJCQkuYXR0ciggewoJCQkJcm9sZTogInRh
YiIsCgkJCQl0YWJJbmRleDogLTEKCQkJfSApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLnRhYnMs
ICJ1aS10YWJzLXRhYiIsICJ1aS1zdGF0ZS1kZWZhdWx0IiApOwoKCQl0aGlzLmFuY2hvcnMgPSB0
aGlzLnRhYnMubWFwKCBmdW5jdGlvbigpIHsKCQkJcmV0dXJuICQoICJhIiwgdGhpcyApWyAwIF07
CgkJfSApCgkJCS5hdHRyKCB7CgkJCQlyb2xlOiAicHJlc2VudGF0aW9uIiwKCQkJCXRhYkluZGV4
OiAtMQoJCQl9ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuYW5jaG9ycywgInVpLXRhYnMtYW5j
aG9yIiApOwoKCQl0aGlzLnBhbmVscyA9ICQoKTsKCgkJdGhpcy5hbmNob3JzLmVhY2goIGZ1bmN0
aW9uKCBpLCBhbmNob3IgKSB7CgkJCXZhciBzZWxlY3RvciwgcGFuZWwsIHBhbmVsSWQsCgkJCQlh
bmNob3JJZCA9ICQoIGFuY2hvciApLnVuaXF1ZUlkKCkuYXR0ciggImlkIiApLAoJCQkJdGFiID0g
JCggYW5jaG9yICkuY2xvc2VzdCggImxpIiApLAoJCQkJb3JpZ2luYWxBcmlhQ29udHJvbHMgPSB0
YWIuYXR0ciggImFyaWEtY29udHJvbHMiICk7CgoJCQkvLyBJbmxpbmUgdGFiCgkJCWlmICggdGhh
dC5faXNMb2NhbCggYW5jaG9yICkgKSB7CgkJCQlzZWxlY3RvciA9IGFuY2hvci5oYXNoOwoJCQkJ
cGFuZWxJZCA9IHNlbGVjdG9yLnN1YnN0cmluZyggMSApOwoJCQkJcGFuZWwgPSB0aGF0LmVsZW1l
bnQuZmluZCggdGhhdC5fc2FuaXRpemVTZWxlY3Rvciggc2VsZWN0b3IgKSApOwoKCQkJLy8gcmVt
b3RlIHRhYgoJCQl9IGVsc2UgewoKCQkJCS8vIElmIHRoZSB0YWIgZG9lc24ndCBhbHJlYWR5IGhh
dmUgYXJpYS1jb250cm9scywKCQkJCS8vIGdlbmVyYXRlIGFuIGlkIGJ5IHVzaW5nIGEgdGhyb3ct
YXdheSBlbGVtZW50CgkJCQlwYW5lbElkID0gdGFiLmF0dHIoICJhcmlhLWNvbnRyb2xzIiApIHx8
ICQoIHt9ICkudW5pcXVlSWQoKVsgMCBdLmlkOwoJCQkJc2VsZWN0b3IgPSAiIyIgKyBwYW5lbElk
OwoJCQkJcGFuZWwgPSB0aGF0LmVsZW1lbnQuZmluZCggc2VsZWN0b3IgKTsKCQkJCWlmICggIXBh
bmVsLmxlbmd0aCApIHsKCQkJCQlwYW5lbCA9IHRoYXQuX2NyZWF0ZVBhbmVsKCBwYW5lbElkICk7
CgkJCQkJcGFuZWwuaW5zZXJ0QWZ0ZXIoIHRoYXQucGFuZWxzWyBpIC0gMSBdIHx8IHRoYXQudGFi
bGlzdCApOwoJCQkJfQoJCQkJcGFuZWwuYXR0ciggImFyaWEtbGl2ZSIsICJwb2xpdGUiICk7CgkJ
CX0KCgkJCWlmICggcGFuZWwubGVuZ3RoICkgewoJCQkJdGhhdC5wYW5lbHMgPSB0aGF0LnBhbmVs
cy5hZGQoIHBhbmVsICk7CgkJCX0KCQkJaWYgKCBvcmlnaW5hbEFyaWFDb250cm9scyApIHsKCQkJ
CXRhYi5kYXRhKCAidWktdGFicy1hcmlhLWNvbnRyb2xzIiwgb3JpZ2luYWxBcmlhQ29udHJvbHMg
KTsKCQkJfQoJCQl0YWIuYXR0ciggewoJCQkJImFyaWEtY29udHJvbHMiOiBwYW5lbElkLAoJCQkJ
ImFyaWEtbGFiZWxsZWRieSI6IGFuY2hvcklkCgkJCX0gKTsKCQkJcGFuZWwuYXR0ciggImFyaWEt
bGFiZWxsZWRieSIsIGFuY2hvcklkICk7CgkJfSApOwoKCQl0aGlzLnBhbmVscy5hdHRyKCAicm9s
ZSIsICJ0YWJwYW5lbCIgKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5wYW5lbHMsICJ1aS10YWJz
LXBhbmVsIiwgInVpLXdpZGdldC1jb250ZW50IiApOwoKCQkvLyBBdm9pZCBtZW1vcnkgbGVha3Mg
KCMxMDA1NikKCQlpZiAoIHByZXZUYWJzICkgewoJCQl0aGlzLl9vZmYoIHByZXZUYWJzLm5vdCgg
dGhpcy50YWJzICkgKTsKCQkJdGhpcy5fb2ZmKCBwcmV2QW5jaG9ycy5ub3QoIHRoaXMuYW5jaG9y
cyApICk7CgkJCXRoaXMuX29mZiggcHJldlBhbmVscy5ub3QoIHRoaXMucGFuZWxzICkgKTsKCQl9
Cgl9LAoKCS8vIEFsbG93IG92ZXJyaWRpbmcgaG93IHRvIGZpbmQgdGhlIGxpc3QgZm9yIHJhcmUg
dXNhZ2Ugc2NlbmFyaW9zICgjNzcxNSkKCV9nZXRMaXN0OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4g
dGhpcy50YWJsaXN0IHx8IHRoaXMuZWxlbWVudC5maW5kKCAib2wsIHVsIiApLmVxKCAwICk7Cgl9
LAoKCV9jcmVhdGVQYW5lbDogZnVuY3Rpb24oIGlkICkgewoJCXJldHVybiAkKCAiPGRpdj4iICkK
CQkJLmF0dHIoICJpZCIsIGlkICkKCQkJLmRhdGEoICJ1aS10YWJzLWRlc3Ryb3kiLCB0cnVlICk7
Cgl9LAoKCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIGRpc2FibGVkICkgewoJCXZhciBj
dXJyZW50SXRlbSwgbGksIGk7CgoJCWlmICggJC5pc0FycmF5KCBkaXNhYmxlZCApICkgewoJCQlp
ZiAoICFkaXNhYmxlZC5sZW5ndGggKSB7CgkJCQlkaXNhYmxlZCA9IGZhbHNlOwoJCQl9IGVsc2Ug
aWYgKCBkaXNhYmxlZC5sZW5ndGggPT09IHRoaXMuYW5jaG9ycy5sZW5ndGggKSB7CgkJCQlkaXNh
YmxlZCA9IHRydWU7CgkJCX0KCQl9CgoJCS8vIERpc2FibGUgdGFicwoJCWZvciAoIGkgPSAwOyAo
IGxpID0gdGhpcy50YWJzWyBpIF0gKTsgaSsrICkgewoJCQljdXJyZW50SXRlbSA9ICQoIGxpICk7
CgkJCWlmICggZGlzYWJsZWQgPT09IHRydWUgfHwgJC5pbkFycmF5KCBpLCBkaXNhYmxlZCApICE9
PSAtMSApIHsKCQkJCWN1cnJlbnRJdGVtLmF0dHIoICJhcmlhLWRpc2FibGVkIiwgInRydWUiICk7
CgkJCQl0aGlzLl9hZGRDbGFzcyggY3VycmVudEl0ZW0sIG51bGwsICJ1aS1zdGF0ZS1kaXNhYmxl
ZCIgKTsKCQkJfSBlbHNlIHsKCQkJCWN1cnJlbnRJdGVtLnJlbW92ZUF0dHIoICJhcmlhLWRpc2Fi
bGVkIiApOwoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGN1cnJlbnRJdGVtLCBudWxsLCAidWktc3Rh
dGUtZGlzYWJsZWQiICk7CgkJCX0KCQl9CgoJCXRoaXMub3B0aW9ucy5kaXNhYmxlZCA9IGRpc2Fi
bGVkOwoKCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy53aWRnZXQoKSwgdGhpcy53aWRnZXRGdWxs
TmFtZSArICItZGlzYWJsZWQiLCBudWxsLAoJCQlkaXNhYmxlZCA9PT0gdHJ1ZSApOwoJfSwKCglf
c2V0dXBFdmVudHM6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgZXZlbnRzID0ge307CgkJaWYg
KCBldmVudCApIHsKCQkJJC5lYWNoKCBldmVudC5zcGxpdCggIiAiICksIGZ1bmN0aW9uKCBpbmRl
eCwgZXZlbnROYW1lICkgewoJCQkJZXZlbnRzWyBldmVudE5hbWUgXSA9ICJfZXZlbnRIYW5kbGVy
IjsKCQkJfSApOwoJCX0KCgkJdGhpcy5fb2ZmKCB0aGlzLmFuY2hvcnMuYWRkKCB0aGlzLnRhYnMg
KS5hZGQoIHRoaXMucGFuZWxzICkgKTsKCgkJLy8gQWx3YXlzIHByZXZlbnQgdGhlIGRlZmF1bHQg
YWN0aW9uLCBldmVuIHdoZW4gZGlzYWJsZWQKCQl0aGlzLl9vbiggdHJ1ZSwgdGhpcy5hbmNob3Jz
LCB7CgkJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVs
dCgpOwoJCQl9CgkJfSApOwoJCXRoaXMuX29uKCB0aGlzLmFuY2hvcnMsIGV2ZW50cyApOwoJCXRo
aXMuX29uKCB0aGlzLnRhYnMsIHsga2V5ZG93bjogIl90YWJLZXlkb3duIiB9ICk7CgkJdGhpcy5f
b24oIHRoaXMucGFuZWxzLCB7IGtleWRvd246ICJfcGFuZWxLZXlkb3duIiB9ICk7CgoJCXRoaXMu
X2ZvY3VzYWJsZSggdGhpcy50YWJzICk7CgkJdGhpcy5faG92ZXJhYmxlKCB0aGlzLnRhYnMgKTsK
CX0sCgoJX3NldHVwSGVpZ2h0U3R5bGU6IGZ1bmN0aW9uKCBoZWlnaHRTdHlsZSApIHsKCQl2YXIg
bWF4SGVpZ2h0LAoJCQlwYXJlbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50KCk7CgoJCWlmICggaGVp
Z2h0U3R5bGUgPT09ICJmaWxsIiApIHsKCQkJbWF4SGVpZ2h0ID0gcGFyZW50LmhlaWdodCgpOwoJ
CQltYXhIZWlnaHQgLT0gdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCkgLSB0aGlzLmVsZW1lbnQu
aGVpZ2h0KCk7CgoJCQl0aGlzLmVsZW1lbnQuc2libGluZ3MoICI6dmlzaWJsZSIgKS5lYWNoKCBm
dW5jdGlvbigpIHsKCQkJCXZhciBlbGVtID0gJCggdGhpcyApLAoJCQkJCXBvc2l0aW9uID0gZWxl
bS5jc3MoICJwb3NpdGlvbiIgKTsKCgkJCQlpZiAoIHBvc2l0aW9uID09PSAiYWJzb2x1dGUiIHx8
IHBvc2l0aW9uID09PSAiZml4ZWQiICkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCW1heEhlaWdo
dCAtPSBlbGVtLm91dGVySGVpZ2h0KCB0cnVlICk7CgkJCX0gKTsKCgkJCXRoaXMuZWxlbWVudC5j
aGlsZHJlbigpLm5vdCggdGhpcy5wYW5lbHMgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCW1heEhl
aWdodCAtPSAkKCB0aGlzICkub3V0ZXJIZWlnaHQoIHRydWUgKTsKCQkJfSApOwoKCQkJdGhpcy5w
YW5lbHMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkkKCB0aGlzICkuaGVpZ2h0KCBNYXRoLm1heCgg
MCwgbWF4SGVpZ2h0IC0KCQkJCQkkKCB0aGlzICkuaW5uZXJIZWlnaHQoKSArICQoIHRoaXMgKS5o
ZWlnaHQoKSApICk7CgkJCX0gKQoJCQkJLmNzcyggIm92ZXJmbG93IiwgImF1dG8iICk7CgkJfSBl
bHNlIGlmICggaGVpZ2h0U3R5bGUgPT09ICJhdXRvIiApIHsKCQkJbWF4SGVpZ2h0ID0gMDsKCQkJ
dGhpcy5wYW5lbHMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQltYXhIZWlnaHQgPSBNYXRoLm1heCgg
bWF4SGVpZ2h0LCAkKCB0aGlzICkuaGVpZ2h0KCAiIiApLmhlaWdodCgpICk7CgkJCX0gKS5oZWln
aHQoIG1heEhlaWdodCApOwoJCX0KCX0sCgoJX2V2ZW50SGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50
ICkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLAoJCQlhY3RpdmUgPSB0aGlzLmFjdGl2
ZSwKCQkJYW5jaG9yID0gJCggZXZlbnQuY3VycmVudFRhcmdldCApLAoJCQl0YWIgPSBhbmNob3Iu
Y2xvc2VzdCggImxpIiApLAoJCQljbGlja2VkSXNBY3RpdmUgPSB0YWJbIDAgXSA9PT0gYWN0aXZl
WyAwIF0sCgkJCWNvbGxhcHNpbmcgPSBjbGlja2VkSXNBY3RpdmUgJiYgb3B0aW9ucy5jb2xsYXBz
aWJsZSwKCQkJdG9TaG93ID0gY29sbGFwc2luZyA/ICQoKSA6IHRoaXMuX2dldFBhbmVsRm9yVGFi
KCB0YWIgKSwKCQkJdG9IaWRlID0gIWFjdGl2ZS5sZW5ndGggPyAkKCkgOiB0aGlzLl9nZXRQYW5l
bEZvclRhYiggYWN0aXZlICksCgkJCWV2ZW50RGF0YSA9IHsKCQkJCW9sZFRhYjogYWN0aXZlLAoJ
CQkJb2xkUGFuZWw6IHRvSGlkZSwKCQkJCW5ld1RhYjogY29sbGFwc2luZyA/ICQoKSA6IHRhYiwK
CQkJCW5ld1BhbmVsOiB0b1Nob3cKCQkJfTsKCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCgkJ
aWYgKCB0YWIuaGFzQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKSB8fAoKCQkJCS8vIHRhYiBp
cyBhbHJlYWR5IGxvYWRpbmcKCQkJCXRhYi5oYXNDbGFzcyggInVpLXRhYnMtbG9hZGluZyIgKSB8
fAoKCQkJCS8vIGNhbid0IHN3aXRjaCBkdXJuaW5nIGFuIGFuaW1hdGlvbgoJCQkJdGhpcy5ydW5u
aW5nIHx8CgoJCQkJLy8gY2xpY2sgb24gYWN0aXZlIGhlYWRlciwgYnV0IG5vdCBjb2xsYXBzaWJs
ZQoJCQkJKCBjbGlja2VkSXNBY3RpdmUgJiYgIW9wdGlvbnMuY29sbGFwc2libGUgKSB8fAoKCQkJ
CS8vIGFsbG93IGNhbmNlbGluZyBhY3RpdmF0aW9uCgkJCQkoIHRoaXMuX3RyaWdnZXIoICJiZWZv
cmVBY3RpdmF0ZSIsIGV2ZW50LCBldmVudERhdGEgKSA9PT0gZmFsc2UgKSApIHsKCQkJcmV0dXJu
OwoJCX0KCgkJb3B0aW9ucy5hY3RpdmUgPSBjb2xsYXBzaW5nID8gZmFsc2UgOiB0aGlzLnRhYnMu
aW5kZXgoIHRhYiApOwoKCQl0aGlzLmFjdGl2ZSA9IGNsaWNrZWRJc0FjdGl2ZSA/ICQoKSA6IHRh
YjsKCQlpZiAoIHRoaXMueGhyICkgewoJCQl0aGlzLnhoci5hYm9ydCgpOwoJCX0KCgkJaWYgKCAh
dG9IaWRlLmxlbmd0aCAmJiAhdG9TaG93Lmxlbmd0aCApIHsKCQkJJC5lcnJvciggImpRdWVyeSBV
SSBUYWJzOiBNaXNtYXRjaGluZyBmcmFnbWVudCBpZGVudGlmaWVyLiIgKTsKCQl9CgoJCWlmICgg
dG9TaG93Lmxlbmd0aCApIHsKCQkJdGhpcy5sb2FkKCB0aGlzLnRhYnMuaW5kZXgoIHRhYiApLCBl
dmVudCApOwoJCX0KCQl0aGlzLl90b2dnbGUoIGV2ZW50LCBldmVudERhdGEgKTsKCX0sCgoJLy8g
SGFuZGxlcyBzaG93L2hpZGUgZm9yIHNlbGVjdGluZyB0YWJzCglfdG9nZ2xlOiBmdW5jdGlvbigg
ZXZlbnQsIGV2ZW50RGF0YSApIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCXRvU2hvdyA9IGV2ZW50
RGF0YS5uZXdQYW5lbCwKCQkJdG9IaWRlID0gZXZlbnREYXRhLm9sZFBhbmVsOwoKCQl0aGlzLnJ1
bm5pbmcgPSB0cnVlOwoKCQlmdW5jdGlvbiBjb21wbGV0ZSgpIHsKCQkJdGhhdC5ydW5uaW5nID0g
ZmFsc2U7CgkJCXRoYXQuX3RyaWdnZXIoICJhY3RpdmF0ZSIsIGV2ZW50LCBldmVudERhdGEgKTsK
CQl9CgoJCWZ1bmN0aW9uIHNob3coKSB7CgkJCXRoYXQuX2FkZENsYXNzKCBldmVudERhdGEubmV3
VGFiLmNsb3Nlc3QoICJsaSIgKSwgInVpLXRhYnMtYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIg
KTsKCgkJCWlmICggdG9TaG93Lmxlbmd0aCAmJiB0aGF0Lm9wdGlvbnMuc2hvdyApIHsKCQkJCXRo
YXQuX3Nob3coIHRvU2hvdywgdGhhdC5vcHRpb25zLnNob3csIGNvbXBsZXRlICk7CgkJCX0gZWxz
ZSB7CgkJCQl0b1Nob3cuc2hvdygpOwoJCQkJY29tcGxldGUoKTsKCQkJfQoJCX0KCgkJLy8gU3Rh
cnQgb3V0IGJ5IGhpZGluZywgdGhlbiBzaG93aW5nLCB0aGVuIGNvbXBsZXRpbmcKCQlpZiAoIHRv
SGlkZS5sZW5ndGggJiYgdGhpcy5vcHRpb25zLmhpZGUgKSB7CgkJCXRoaXMuX2hpZGUoIHRvSGlk
ZSwgdGhpcy5vcHRpb25zLmhpZGUsIGZ1bmN0aW9uKCkgewoJCQkJdGhhdC5fcmVtb3ZlQ2xhc3Mo
IGV2ZW50RGF0YS5vbGRUYWIuY2xvc2VzdCggImxpIiApLAoJCQkJCSJ1aS10YWJzLWFjdGl2ZSIs
ICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCQlzaG93KCk7CgkJCX0gKTsKCQl9IGVsc2UgewoJCQl0
aGlzLl9yZW1vdmVDbGFzcyggZXZlbnREYXRhLm9sZFRhYi5jbG9zZXN0KCAibGkiICksCgkJCQki
dWktdGFicy1hY3RpdmUiLCAidWktc3RhdGUtYWN0aXZlIiApOwoJCQl0b0hpZGUuaGlkZSgpOwoJ
CQlzaG93KCk7CgkJfQoKCQl0b0hpZGUuYXR0ciggImFyaWEtaGlkZGVuIiwgInRydWUiICk7CgkJ
ZXZlbnREYXRhLm9sZFRhYi5hdHRyKCB7CgkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwKCQkJ
ImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiCgkJfSApOwoKCQkvLyBJZiB3ZSdyZSBzd2l0Y2hpbmcg
dGFicywgcmVtb3ZlIHRoZSBvbGQgdGFiIGZyb20gdGhlIHRhYiBvcmRlci4KCQkvLyBJZiB3ZSdy
ZSBvcGVuaW5nIGZyb20gY29sbGFwc2VkIHN0YXRlLCByZW1vdmUgdGhlIHByZXZpb3VzIHRhYiBm
cm9tIHRoZSB0YWIgb3JkZXIuCgkJLy8gSWYgd2UncmUgY29sbGFwc2luZywgdGhlbiBrZWVwIHRo
ZSBjb2xsYXBzaW5nIHRhYiBpbiB0aGUgdGFiIG9yZGVyLgoJCWlmICggdG9TaG93Lmxlbmd0aCAm
JiB0b0hpZGUubGVuZ3RoICkgewoJCQlldmVudERhdGEub2xkVGFiLmF0dHIoICJ0YWJJbmRleCIs
IC0xICk7CgkJfSBlbHNlIGlmICggdG9TaG93Lmxlbmd0aCApIHsKCQkJdGhpcy50YWJzLmZpbHRl
ciggZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gJCggdGhpcyApLmF0dHIoICJ0YWJJbmRleCIgKSA9
PT0gMDsKCQkJfSApCgkJCQkuYXR0ciggInRhYkluZGV4IiwgLTEgKTsKCQl9CgoJCXRvU2hvdy5h
dHRyKCAiYXJpYS1oaWRkZW4iLCAiZmFsc2UiICk7CgkJZXZlbnREYXRhLm5ld1RhYi5hdHRyKCB7
CgkJCSJhcmlhLXNlbGVjdGVkIjogInRydWUiLAoJCQkiYXJpYS1leHBhbmRlZCI6ICJ0cnVlIiwK
CQkJdGFiSW5kZXg6IDAKCQl9ICk7Cgl9LAoKCV9hY3RpdmF0ZTogZnVuY3Rpb24oIGluZGV4ICkg
ewoJCXZhciBhbmNob3IsCgkJCWFjdGl2ZSA9IHRoaXMuX2ZpbmRBY3RpdmUoIGluZGV4ICk7CgoJ
CS8vIFRyeWluZyB0byBhY3RpdmF0ZSB0aGUgYWxyZWFkeSBhY3RpdmUgcGFuZWwKCQlpZiAoIGFj
dGl2ZVsgMCBdID09PSB0aGlzLmFjdGl2ZVsgMCBdICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBU
cnlpbmcgdG8gY29sbGFwc2UsIHNpbXVsYXRlIGEgY2xpY2sgb24gdGhlIGN1cnJlbnQgYWN0aXZl
IGhlYWRlcgoJCWlmICggIWFjdGl2ZS5sZW5ndGggKSB7CgkJCWFjdGl2ZSA9IHRoaXMuYWN0aXZl
OwoJCX0KCgkJYW5jaG9yID0gYWN0aXZlLmZpbmQoICIudWktdGFicy1hbmNob3IiIClbIDAgXTsK
CQl0aGlzLl9ldmVudEhhbmRsZXIoIHsKCQkJdGFyZ2V0OiBhbmNob3IsCgkJCWN1cnJlbnRUYXJn
ZXQ6IGFuY2hvciwKCQkJcHJldmVudERlZmF1bHQ6ICQubm9vcAoJCX0gKTsKCX0sCgoJX2ZpbmRB
Y3RpdmU6IGZ1bmN0aW9uKCBpbmRleCApIHsKCQlyZXR1cm4gaW5kZXggPT09IGZhbHNlID8gJCgp
IDogdGhpcy50YWJzLmVxKCBpbmRleCApOwoJfSwKCglfZ2V0SW5kZXg6IGZ1bmN0aW9uKCBpbmRl
eCApIHsKCgkJLy8gbWV0YS1mdW5jdGlvbiB0byBnaXZlIHVzZXJzIG9wdGlvbiB0byBwcm92aWRl
IGEgaHJlZiBzdHJpbmcgaW5zdGVhZCBvZiBhIG51bWVyaWNhbCBpbmRleC4KCQlpZiAoIHR5cGVv
ZiBpbmRleCA9PT0gInN0cmluZyIgKSB7CgkJCWluZGV4ID0gdGhpcy5hbmNob3JzLmluZGV4KCB0
aGlzLmFuY2hvcnMuZmlsdGVyKCAiW2hyZWYkPSciICsKCQkJCSQudWkuZXNjYXBlU2VsZWN0b3Io
IGluZGV4ICkgKyAiJ10iICkgKTsKCQl9CgoJCXJldHVybiBpbmRleDsKCX0sCgoJX2Rlc3Ryb3k6
IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy54aHIgKSB7CgkJCXRoaXMueGhyLmFib3J0KCk7CgkJ
fQoKCQl0aGlzLnRhYmxpc3QKCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApCgkJCS5vZmYoIHRoaXMu
ZXZlbnROYW1lc3BhY2UgKTsKCgkJdGhpcy5hbmNob3JzCgkJCS5yZW1vdmVBdHRyKCAicm9sZSB0
YWJJbmRleCIgKQoJCQkucmVtb3ZlVW5pcXVlSWQoKTsKCgkJdGhpcy50YWJzLmFkZCggdGhpcy5w
YW5lbHMgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJaWYgKCAkLmRhdGEoIHRoaXMsICJ1aS10YWJz
LWRlc3Ryb3kiICkgKSB7CgkJCQkkKCB0aGlzICkucmVtb3ZlKCk7CgkJCX0gZWxzZSB7CgkJCQkk
KCB0aGlzICkucmVtb3ZlQXR0ciggInJvbGUgdGFiSW5kZXggIiArCgkJCQkJImFyaWEtbGl2ZSBh
cmlhLWJ1c3kgYXJpYS1zZWxlY3RlZCBhcmlhLWxhYmVsbGVkYnkgYXJpYS1oaWRkZW4gYXJpYS1l
eHBhbmRlZCIgKTsKCQkJfQoJCX0gKTsKCgkJdGhpcy50YWJzLmVhY2goIGZ1bmN0aW9uKCkgewoJ
CQl2YXIgbGkgPSAkKCB0aGlzICksCgkJCQlwcmV2ID0gbGkuZGF0YSggInVpLXRhYnMtYXJpYS1j
b250cm9scyIgKTsKCQkJaWYgKCBwcmV2ICkgewoJCQkJbGkKCQkJCQkuYXR0ciggImFyaWEtY29u
dHJvbHMiLCBwcmV2ICkKCQkJCQkucmVtb3ZlRGF0YSggInVpLXRhYnMtYXJpYS1jb250cm9scyIg
KTsKCQkJfSBlbHNlIHsKCQkJCWxpLnJlbW92ZUF0dHIoICJhcmlhLWNvbnRyb2xzIiApOwoJCQl9
CgkJfSApOwoKCQl0aGlzLnBhbmVscy5zaG93KCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmhlaWdo
dFN0eWxlICE9PSAiY29udGVudCIgKSB7CgkJCXRoaXMucGFuZWxzLmNzcyggImhlaWdodCIsICIi
ICk7CgkJfQoJfSwKCgllbmFibGU6IGZ1bmN0aW9uKCBpbmRleCApIHsKCQl2YXIgZGlzYWJsZWQg
PSB0aGlzLm9wdGlvbnMuZGlzYWJsZWQ7CgkJaWYgKCBkaXNhYmxlZCA9PT0gZmFsc2UgKSB7CgkJ
CXJldHVybjsKCQl9CgoJCWlmICggaW5kZXggPT09IHVuZGVmaW5lZCApIHsKCQkJZGlzYWJsZWQg
PSBmYWxzZTsKCQl9IGVsc2UgewoJCQlpbmRleCA9IHRoaXMuX2dldEluZGV4KCBpbmRleCApOwoJ
CQlpZiAoICQuaXNBcnJheSggZGlzYWJsZWQgKSApIHsKCQkJCWRpc2FibGVkID0gJC5tYXAoIGRp
c2FibGVkLCBmdW5jdGlvbiggbnVtICkgewoJCQkJCXJldHVybiBudW0gIT09IGluZGV4ID8gbnVt
IDogbnVsbDsKCQkJCX0gKTsKCQkJfSBlbHNlIHsKCQkJCWRpc2FibGVkID0gJC5tYXAoIHRoaXMu
dGFicywgZnVuY3Rpb24oIGxpLCBudW0gKSB7CgkJCQkJcmV0dXJuIG51bSAhPT0gaW5kZXggPyBu
dW0gOiBudWxsOwoJCQkJfSApOwoJCQl9CgkJfQoJCXRoaXMuX3NldE9wdGlvbkRpc2FibGVkKCBk
aXNhYmxlZCApOwoJfSwKCglkaXNhYmxlOiBmdW5jdGlvbiggaW5kZXggKSB7CgkJdmFyIGRpc2Fi
bGVkID0gdGhpcy5vcHRpb25zLmRpc2FibGVkOwoJCWlmICggZGlzYWJsZWQgPT09IHRydWUgKSB7
CgkJCXJldHVybjsKCQl9CgoJCWlmICggaW5kZXggPT09IHVuZGVmaW5lZCApIHsKCQkJZGlzYWJs
ZWQgPSB0cnVlOwoJCX0gZWxzZSB7CgkJCWluZGV4ID0gdGhpcy5fZ2V0SW5kZXgoIGluZGV4ICk7
CgkJCWlmICggJC5pbkFycmF5KCBpbmRleCwgZGlzYWJsZWQgKSAhPT0gLTEgKSB7CgkJCQlyZXR1
cm47CgkJCX0KCQkJaWYgKCAkLmlzQXJyYXkoIGRpc2FibGVkICkgKSB7CgkJCQlkaXNhYmxlZCA9
ICQubWVyZ2UoIFsgaW5kZXggXSwgZGlzYWJsZWQgKS5zb3J0KCk7CgkJCX0gZWxzZSB7CgkJCQlk
aXNhYmxlZCA9IFsgaW5kZXggXTsKCQkJfQoJCX0KCQl0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCgg
ZGlzYWJsZWQgKTsKCX0sCgoJbG9hZDogZnVuY3Rpb24oIGluZGV4LCBldmVudCApIHsKCQlpbmRl
eCA9IHRoaXMuX2dldEluZGV4KCBpbmRleCApOwoJCXZhciB0aGF0ID0gdGhpcywKCQkJdGFiID0g
dGhpcy50YWJzLmVxKCBpbmRleCApLAoJCQlhbmNob3IgPSB0YWIuZmluZCggIi51aS10YWJzLWFu
Y2hvciIgKSwKCQkJcGFuZWwgPSB0aGlzLl9nZXRQYW5lbEZvclRhYiggdGFiICksCgkJCWV2ZW50
RGF0YSA9IHsKCQkJCXRhYjogdGFiLAoJCQkJcGFuZWw6IHBhbmVsCgkJCX0sCgkJCWNvbXBsZXRl
ID0gZnVuY3Rpb24oIGpxWEhSLCBzdGF0dXMgKSB7CgkJCQlpZiAoIHN0YXR1cyA9PT0gImFib3J0
IiApIHsKCQkJCQl0aGF0LnBhbmVscy5zdG9wKCBmYWxzZSwgdHJ1ZSApOwoJCQkJfQoKCQkJCXRo
YXQuX3JlbW92ZUNsYXNzKCB0YWIsICJ1aS10YWJzLWxvYWRpbmciICk7CgkJCQlwYW5lbC5yZW1v
dmVBdHRyKCAiYXJpYS1idXN5IiApOwoKCQkJCWlmICgganFYSFIgPT09IHRoYXQueGhyICkgewoJ
CQkJCWRlbGV0ZSB0aGF0LnhocjsKCQkJCX0KCQkJfTsKCgkJLy8gTm90IHJlbW90ZQoJCWlmICgg
dGhpcy5faXNMb2NhbCggYW5jaG9yWyAwIF0gKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy54
aHIgPSAkLmFqYXgoIHRoaXMuX2FqYXhTZXR0aW5ncyggYW5jaG9yLCBldmVudCwgZXZlbnREYXRh
ICkgKTsKCgkJLy8gU3VwcG9ydDogalF1ZXJ5IDwxLjgKCQkvLyBqUXVlcnkgPDEuOCByZXR1cm5z
IGZhbHNlIGlmIHRoZSByZXF1ZXN0IGlzIGNhbmNlbGVkIGluIGJlZm9yZVNlbmQsCgkJLy8gYnV0
IGFzIG9mIDEuOCwgJC5hamF4KCkgYWx3YXlzIHJldHVybnMgYSBqcVhIUiBvYmplY3QuCgkJaWYg
KCB0aGlzLnhociAmJiB0aGlzLnhoci5zdGF0dXNUZXh0ICE9PSAiY2FuY2VsZWQiICkgewoJCQl0
aGlzLl9hZGRDbGFzcyggdGFiLCAidWktdGFicy1sb2FkaW5nIiApOwoJCQlwYW5lbC5hdHRyKCAi
YXJpYS1idXN5IiwgInRydWUiICk7CgoJCQl0aGlzLnhocgoJCQkJLmRvbmUoIGZ1bmN0aW9uKCBy
ZXNwb25zZSwgc3RhdHVzLCBqcVhIUiApIHsKCgkJCQkJLy8gc3VwcG9ydDogalF1ZXJ5IDwxLjgK
CQkJCQkvLyBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMTc3OAoJCQkJCXNldFRpbWVv
dXQoIGZ1bmN0aW9uKCkgewoJCQkJCQlwYW5lbC5odG1sKCByZXNwb25zZSApOwoJCQkJCQl0aGF0
Ll90cmlnZ2VyKCAibG9hZCIsIGV2ZW50LCBldmVudERhdGEgKTsKCgkJCQkJCWNvbXBsZXRlKCBq
cVhIUiwgc3RhdHVzICk7CgkJCQkJfSwgMSApOwoJCQkJfSApCgkJCQkuZmFpbCggZnVuY3Rpb24o
IGpxWEhSLCBzdGF0dXMgKSB7CgoJCQkJCS8vIHN1cHBvcnQ6IGpRdWVyeSA8MS44CgkJCQkJLy8g
aHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTE3NzgKCQkJCQlzZXRUaW1lb3V0KCBmdW5j
dGlvbigpIHsKCQkJCQkJY29tcGxldGUoIGpxWEhSLCBzdGF0dXMgKTsKCQkJCQl9LCAxICk7CgkJ
CQl9ICk7CgkJfQoJfSwKCglfYWpheFNldHRpbmdzOiBmdW5jdGlvbiggYW5jaG9yLCBldmVudCwg
ZXZlbnREYXRhICkgewoJCXZhciB0aGF0ID0gdGhpczsKCQlyZXR1cm4gewoKCQkJLy8gU3VwcG9y
dDogSUUgPDExIG9ubHkKCQkJLy8gU3RyaXAgYW55IGhhc2ggdGhhdCBleGlzdHMgdG8gcHJldmVu
dCBlcnJvcnMgd2l0aCB0aGUgQWpheCByZXF1ZXN0CgkJCXVybDogYW5jaG9yLmF0dHIoICJocmVm
IiApLnJlcGxhY2UoIC8jLiokLywgIiIgKSwKCQkJYmVmb3JlU2VuZDogZnVuY3Rpb24oIGpxWEhS
LCBzZXR0aW5ncyApIHsKCQkJCXJldHVybiB0aGF0Ll90cmlnZ2VyKCAiYmVmb3JlTG9hZCIsIGV2
ZW50LAoJCQkJCSQuZXh0ZW5kKCB7IGpxWEhSOiBqcVhIUiwgYWpheFNldHRpbmdzOiBzZXR0aW5n
cyB9LCBldmVudERhdGEgKSApOwoJCQl9CgkJfTsKCX0sCgoJX2dldFBhbmVsRm9yVGFiOiBmdW5j
dGlvbiggdGFiICkgewoJCXZhciBpZCA9ICQoIHRhYiApLmF0dHIoICJhcmlhLWNvbnRyb2xzIiAp
OwoJCXJldHVybiB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5fc2FuaXRpemVTZWxlY3RvciggIiMi
ICsgaWQgKSApOwoJfQp9ICk7CgovLyBERVBSRUNBVEVECi8vIFRPRE86IFN3aXRjaCByZXR1cm4g
YmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0aGlzIGlzIHJl
bW92ZWQKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgoJLy8gQmFja2NvbXBhdCBm
b3IgdWktdGFiIGNsYXNzIChub3cgdWktdGFicy10YWIpCgkkLndpZGdldCggInVpLnRhYnMiLCAk
LnVpLnRhYnMsIHsKCQlfcHJvY2Vzc1RhYnM6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlckFw
cGx5KCBhcmd1bWVudHMgKTsKCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudGFicywgInVpLXRhYiIg
KTsKCQl9Cgl9ICk7Cn0KCnZhciB3aWRnZXRzVGFicyA9ICQudWkudGFiczsKCgovKiEKICogalF1
ZXJ5IFVJIFRvb2x0aXAgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJp
Z2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQg
dW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoK
Ly8+PmxhYmVsOiBUb29sdGlwCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IFNo
b3dzIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gZm9yIGFueSBlbGVtZW50IG9uIGhvdmVyIG9yIGZv
Y3VzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vdG9vbHRpcC8KLy8+PmRlbW9z
OiBodHRwOi8vanF1ZXJ5dWkuY29tL3Rvb2x0aXAvCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90
aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2Uv
dG9vbHRpcC5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoK
CiQud2lkZ2V0KCAidWkudG9vbHRpcCIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0aW9uczog
ewoJCWNsYXNzZXM6IHsKCQkJInVpLXRvb2x0aXAiOiAidWktY29ybmVyLWFsbCB1aS13aWRnZXQt
c2hhZG93IgoJCX0sCgkJY29udGVudDogZnVuY3Rpb24oKSB7CgoJCQkvLyBzdXBwb3J0OiBJRTw5
LCBPcGVyYSBpbiBqUXVlcnkgPDEuNwoJCQkvLyAudGV4dCgpIGNhbid0IGFjY2VwdCB1bmRlZmlu
ZWQsIHNvIGNvZXJjZSB0byBhIHN0cmluZwoJCQl2YXIgdGl0bGUgPSAkKCB0aGlzICkuYXR0cigg
InRpdGxlIiApIHx8ICIiOwoKCQkJLy8gRXNjYXBlIHRpdGxlLCBzaW5jZSB3ZSdyZSBnb2luZyBm
cm9tIGFuIGF0dHJpYnV0ZSB0byByYXcgSFRNTAoJCQlyZXR1cm4gJCggIjxhPiIgKS50ZXh0KCB0
aXRsZSApLmh0bWwoKTsKCQl9LAoJCWhpZGU6IHRydWUsCgoJCS8vIERpc2FibGVkIGVsZW1lbnRz
IGhhdmUgaW5jb25zaXN0ZW50IGJlaGF2aW9yIGFjcm9zcyBicm93c2VycyAoIzg2NjEpCgkJaXRl
bXM6ICJbdGl0bGVdOm5vdChbZGlzYWJsZWRdKSIsCgkJcG9zaXRpb246IHsKCQkJbXk6ICJsZWZ0
IHRvcCsxNSIsCgkJCWF0OiAibGVmdCBib3R0b20iLAoJCQljb2xsaXNpb246ICJmbGlwZml0IGZs
aXAiCgkJfSwKCQlzaG93OiB0cnVlLAoJCXRyYWNrOiBmYWxzZSwKCgkJLy8gQ2FsbGJhY2tzCgkJ
Y2xvc2U6IG51bGwsCgkJb3BlbjogbnVsbAoJfSwKCglfYWRkRGVzY3JpYmVkQnk6IGZ1bmN0aW9u
KCBlbGVtLCBpZCApIHsKCQl2YXIgZGVzY3JpYmVkYnkgPSAoIGVsZW0uYXR0ciggImFyaWEtZGVz
Y3JpYmVkYnkiICkgfHwgIiIgKS5zcGxpdCggL1xzKy8gKTsKCQlkZXNjcmliZWRieS5wdXNoKCBp
ZCApOwoJCWVsZW0KCQkJLmRhdGEoICJ1aS10b29sdGlwLWlkIiwgaWQgKQoJCQkuYXR0ciggImFy
aWEtZGVzY3JpYmVkYnkiLCAkLnRyaW0oIGRlc2NyaWJlZGJ5LmpvaW4oICIgIiApICkgKTsKCX0s
CgoJX3JlbW92ZURlc2NyaWJlZEJ5OiBmdW5jdGlvbiggZWxlbSApIHsKCQl2YXIgaWQgPSBlbGVt
LmRhdGEoICJ1aS10b29sdGlwLWlkIiApLAoJCQlkZXNjcmliZWRieSA9ICggZWxlbS5hdHRyKCAi
YXJpYS1kZXNjcmliZWRieSIgKSB8fCAiIiApLnNwbGl0KCAvXHMrLyApLAoJCQlpbmRleCA9ICQu
aW5BcnJheSggaWQsIGRlc2NyaWJlZGJ5ICk7CgoJCWlmICggaW5kZXggIT09IC0xICkgewoJCQlk
ZXNjcmliZWRieS5zcGxpY2UoIGluZGV4LCAxICk7CgkJfQoKCQllbGVtLnJlbW92ZURhdGEoICJ1
aS10b29sdGlwLWlkIiApOwoJCWRlc2NyaWJlZGJ5ID0gJC50cmltKCBkZXNjcmliZWRieS5qb2lu
KCAiICIgKSApOwoJCWlmICggZGVzY3JpYmVkYnkgKSB7CgkJCWVsZW0uYXR0ciggImFyaWEtZGVz
Y3JpYmVkYnkiLCBkZXNjcmliZWRieSApOwoJCX0gZWxzZSB7CgkJCWVsZW0ucmVtb3ZlQXR0cigg
ImFyaWEtZGVzY3JpYmVkYnkiICk7CgkJfQoJfSwKCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQl0
aGlzLl9vbiggewoJCQltb3VzZW92ZXI6ICJvcGVuIiwKCQkJZm9jdXNpbjogIm9wZW4iCgkJfSAp
OwoKCQkvLyBJRHMgb2YgZ2VuZXJhdGVkIHRvb2x0aXBzLCBuZWVkZWQgZm9yIGRlc3Ryb3kKCQl0
aGlzLnRvb2x0aXBzID0ge307CgoJCS8vIElEcyBvZiBwYXJlbnQgdG9vbHRpcHMgd2hlcmUgd2Ug
cmVtb3ZlZCB0aGUgdGl0bGUgYXR0cmlidXRlCgkJdGhpcy5wYXJlbnRzID0ge307CgoJCS8vIEFw
cGVuZCB0aGUgYXJpYS1saXZlIHJlZ2lvbiBzbyB0b29sdGlwcyBhbm5vdW5jZSBjb3JyZWN0bHkK
CQl0aGlzLmxpdmVSZWdpb24gPSAkKCAiPGRpdj4iICkKCQkJLmF0dHIoIHsKCQkJCXJvbGU6ICJs
b2ciLAoJCQkJImFyaWEtbGl2ZSI6ICJhc3NlcnRpdmUiLAoJCQkJImFyaWEtcmVsZXZhbnQiOiAi
YWRkaXRpb25zIgoJCQl9ICkKCQkJLmFwcGVuZFRvKCB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSAp
OwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmxpdmVSZWdpb24sIG51bGwsICJ1aS1oZWxwZXItaGlk
ZGVuLWFjY2Vzc2libGUiICk7CgoJCXRoaXMuZGlzYWJsZWRUaXRsZXMgPSAkKCBbXSApOwoJfSwK
Cglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgdGhhdCA9IHRoaXM7
CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCWlmICgga2V5ID09PSAiY29udGVudCIg
KSB7CgkJCSQuZWFjaCggdGhpcy50b29sdGlwcywgZnVuY3Rpb24oIGlkLCB0b29sdGlwRGF0YSAp
IHsKCQkJCXRoYXQuX3VwZGF0ZUNvbnRlbnQoIHRvb2x0aXBEYXRhLmVsZW1lbnQgKTsKCQkJfSAp
OwoJCX0KCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhp
c1sgdmFsdWUgPyAiX2Rpc2FibGUiIDogIl9lbmFibGUiIF0oKTsKCX0sCgoJX2Rpc2FibGU6IGZ1
bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpczsKCgkJLy8gQ2xvc2Ugb3BlbiB0b29sdGlwcwoJ
CSQuZWFjaCggdGhpcy50b29sdGlwcywgZnVuY3Rpb24oIGlkLCB0b29sdGlwRGF0YSApIHsKCQkJ
dmFyIGV2ZW50ID0gJC5FdmVudCggImJsdXIiICk7CgkJCWV2ZW50LnRhcmdldCA9IGV2ZW50LmN1
cnJlbnRUYXJnZXQgPSB0b29sdGlwRGF0YS5lbGVtZW50WyAwIF07CgkJCXRoYXQuY2xvc2UoIGV2
ZW50LCB0cnVlICk7CgkJfSApOwoKCQkvLyBSZW1vdmUgdGl0bGUgYXR0cmlidXRlcyB0byBwcmV2
ZW50IG5hdGl2ZSB0b29sdGlwcwoJCXRoaXMuZGlzYWJsZWRUaXRsZXMgPSB0aGlzLmRpc2FibGVk
VGl0bGVzLmFkZCgKCQkJdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApLmFk
ZEJhY2soKQoJCQkJLmZpbHRlciggZnVuY3Rpb24oKSB7CgkJCQkJdmFyIGVsZW1lbnQgPSAkKCB0
aGlzICk7CgkJCQkJaWYgKCBlbGVtZW50LmlzKCAiW3RpdGxlXSIgKSApIHsKCQkJCQkJcmV0dXJu
IGVsZW1lbnQKCQkJCQkJCS5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIsIGVsZW1lbnQuYXR0cigg
InRpdGxlIiApICkKCQkJCQkJCS5yZW1vdmVBdHRyKCAidGl0bGUiICk7CgkJCQkJfQoJCQkJfSAp
CgkJKTsKCX0sCgoJX2VuYWJsZTogZnVuY3Rpb24oKSB7CgoJCS8vIHJlc3RvcmUgdGl0bGUgYXR0
cmlidXRlcwoJCXRoaXMuZGlzYWJsZWRUaXRsZXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBl
bGVtZW50ID0gJCggdGhpcyApOwoJCQlpZiAoIGVsZW1lbnQuZGF0YSggInVpLXRvb2x0aXAtdGl0
bGUiICkgKSB7CgkJCQllbGVtZW50LmF0dHIoICJ0aXRsZSIsIGVsZW1lbnQuZGF0YSggInVpLXRv
b2x0aXAtdGl0bGUiICkgKTsKCQkJfQoJCX0gKTsKCQl0aGlzLmRpc2FibGVkVGl0bGVzID0gJCgg
W10gKTsKCX0sCgoJb3BlbjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciB0aGF0ID0gdGhpcywK
CQkJdGFyZ2V0ID0gJCggZXZlbnQgPyBldmVudC50YXJnZXQgOiB0aGlzLmVsZW1lbnQgKQoKCQkJ
CS8vIHdlIG5lZWQgY2xvc2VzdCBoZXJlIGR1ZSB0byBtb3VzZW92ZXIgYnViYmxpbmcsCgkJCQkv
LyBidXQgYWx3YXlzIHBvaW50aW5nIGF0IHRoZSBzYW1lIGV2ZW50IHRhcmdldAoJCQkJLmNsb3Nl
c3QoIHRoaXMub3B0aW9ucy5pdGVtcyApOwoKCQkvLyBObyBlbGVtZW50IHRvIHNob3cgYSB0b29s
dGlwIGZvciBvciB0aGUgdG9vbHRpcCBpcyBhbHJlYWR5IG9wZW4KCQlpZiAoICF0YXJnZXQubGVu
Z3RoIHx8IHRhcmdldC5kYXRhKCAidWktdG9vbHRpcC1pZCIgKSApIHsKCQkJcmV0dXJuOwoJCX0K
CgkJaWYgKCB0YXJnZXQuYXR0ciggInRpdGxlIiApICkgewoJCQl0YXJnZXQuZGF0YSggInVpLXRv
b2x0aXAtdGl0bGUiLCB0YXJnZXQuYXR0ciggInRpdGxlIiApICk7CgkJfQoKCQl0YXJnZXQuZGF0
YSggInVpLXRvb2x0aXAtb3BlbiIsIHRydWUgKTsKCgkJLy8gS2lsbCBwYXJlbnQgdG9vbHRpcHMs
IGN1c3RvbSBvciBuYXRpdmUsIGZvciBob3ZlcgoJCWlmICggZXZlbnQgJiYgZXZlbnQudHlwZSA9
PT0gIm1vdXNlb3ZlciIgKSB7CgkJCXRhcmdldC5wYXJlbnRzKCkuZWFjaCggZnVuY3Rpb24oKSB7
CgkJCQl2YXIgcGFyZW50ID0gJCggdGhpcyApLAoJCQkJCWJsdXJFdmVudDsKCQkJCWlmICggcGFy
ZW50LmRhdGEoICJ1aS10b29sdGlwLW9wZW4iICkgKSB7CgkJCQkJYmx1ckV2ZW50ID0gJC5FdmVu
dCggImJsdXIiICk7CgkJCQkJYmx1ckV2ZW50LnRhcmdldCA9IGJsdXJFdmVudC5jdXJyZW50VGFy
Z2V0ID0gdGhpczsKCQkJCQl0aGF0LmNsb3NlKCBibHVyRXZlbnQsIHRydWUgKTsKCQkJCX0KCQkJ
CWlmICggcGFyZW50LmF0dHIoICJ0aXRsZSIgKSApIHsKCQkJCQlwYXJlbnQudW5pcXVlSWQoKTsK
CQkJCQl0aGF0LnBhcmVudHNbIHRoaXMuaWQgXSA9IHsKCQkJCQkJZWxlbWVudDogdGhpcywKCQkJ
CQkJdGl0bGU6IHBhcmVudC5hdHRyKCAidGl0bGUiICkKCQkJCQl9OwoJCQkJCXBhcmVudC5hdHRy
KCAidGl0bGUiLCAiIiApOwoJCQkJfQoJCQl9ICk7CgkJfQoKCQl0aGlzLl9yZWdpc3RlckNsb3Nl
SGFuZGxlcnMoIGV2ZW50LCB0YXJnZXQgKTsKCQl0aGlzLl91cGRhdGVDb250ZW50KCB0YXJnZXQs
IGV2ZW50ICk7Cgl9LAoKCV91cGRhdGVDb250ZW50OiBmdW5jdGlvbiggdGFyZ2V0LCBldmVudCAp
IHsKCQl2YXIgY29udGVudCwKCQkJY29udGVudE9wdGlvbiA9IHRoaXMub3B0aW9ucy5jb250ZW50
LAoJCQl0aGF0ID0gdGhpcywKCQkJZXZlbnRUeXBlID0gZXZlbnQgPyBldmVudC50eXBlIDogbnVs
bDsKCgkJaWYgKCB0eXBlb2YgY29udGVudE9wdGlvbiA9PT0gInN0cmluZyIgfHwgY29udGVudE9w
dGlvbi5ub2RlVHlwZSB8fAoJCQkJY29udGVudE9wdGlvbi5qcXVlcnkgKSB7CgkJCXJldHVybiB0
aGlzLl9vcGVuKCBldmVudCwgdGFyZ2U=</Default>
</Parameter>

<Parameter name="Frag6980641884580392665369402">
<Default>ZUNsYXNzKCB0b0hpZGUsICJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUiICk7CgkJdGhpcy5f
cmVtb3ZlQ2xhc3MoIHByZXYsICJ1aS1hY2NvcmRpb24taGVhZGVyLWFjdGl2ZSIgKQoJCQkuX2Fk
ZENsYXNzKCBwcmV2LCAidWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWQiICk7CgoJCS8vIFdv
cmsgYXJvdW5kIGZvciByZW5kZXJpbmcgYnVnIGluIElFICgjNTQyMSkKCQlpZiAoIHRvSGlkZS5s
ZW5ndGggKSB7CgkJCXRvSGlkZS5wYXJlbnQoKVsgMCBdLmNsYXNzTmFtZSA9IHRvSGlkZS5wYXJl
bnQoKVsgMCBdLmNsYXNzTmFtZTsKCQl9CgkJdGhpcy5fdHJpZ2dlciggImFjdGl2YXRlIiwgbnVs
bCwgZGF0YSApOwoJfQp9ICk7CgoKCnZhciBzYWZlQWN0aXZlRWxlbWVudCA9ICQudWkuc2FmZUFj
dGl2ZUVsZW1lbnQgPSBmdW5jdGlvbiggZG9jdW1lbnQgKSB7Cgl2YXIgYWN0aXZlRWxlbWVudDsK
CgkvLyBTdXBwb3J0OiBJRSA5IG9ubHkKCS8vIElFOSB0aHJvd3MgYW4gIlVuc3BlY2lmaWVkIGVy
cm9yIiBhY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBmcm9tIGFuIDxpZnJhbWU+Cgl0
cnkgewoJCWFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50OwoJfSBjYXRjaCAo
IGVycm9yICkgewoJCWFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5ib2R5OwoJfQoKCS8vIFN1cHBv
cnQ6IElFIDkgLSAxMSBvbmx5CgkvLyBJRSBtYXkgcmV0dXJuIG51bGwgaW5zdGVhZCBvZiBhbiBl
bGVtZW50CgkvLyBJbnRlcmVzdGluZ2x5LCB0aGlzIG9ubHkgc2VlbXMgdG8gb2NjdXIgd2hlbiBO
T1QgaW4gYW4gaWZyYW1lCglpZiAoICFhY3RpdmVFbGVtZW50ICkgewoJCWFjdGl2ZUVsZW1lbnQg
PSBkb2N1bWVudC5ib2R5OwoJfQoKCS8vIFN1cHBvcnQ6IElFIDExIG9ubHkKCS8vIElFMTEgcmV0
dXJucyBhIHNlZW1pbmdseSBlbXB0eSBvYmplY3QgaW4gc29tZSBjYXNlcyB3aGVuIGFjY2Vzc2lu
ZwoJLy8gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBmcm9tIGFuIDxpZnJhbWU+CglpZiAoICFhY3Rp
dmVFbGVtZW50Lm5vZGVOYW1lICkgewoJCWFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5ib2R5OwoJ
fQoKCXJldHVybiBhY3RpdmVFbGVtZW50Owp9OwoKCi8qIQogKiBqUXVlcnkgVUkgTWVudSAxLjEy
LjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRp
b24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vu
c2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IE1lbnUKLy8+
Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogQ3JlYXRlcyBuZXN0YWJsZSBtZW51cy4K
Ly8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL21lbnUvCi8vPj5kZW1vczogaHR0cDov
L2pxdWVyeXVpLmNvbS9tZW51LwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2Uv
Y29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL21lbnUuY3NzCi8v
Pj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgp2YXIgd2lkZ2V0c01l
bnUgPSAkLndpZGdldCggInVpLm1lbnUiLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCWRlZmF1bHRF
bGVtZW50OiAiPHVsPiIsCglkZWxheTogMzAwLAoJb3B0aW9uczogewoJCWljb25zOiB7CgkJCXN1
Ym1lbnU6ICJ1aS1pY29uLWNhcmV0LTEtZSIKCQl9LAoJCWl0ZW1zOiAiPiAqIiwKCQltZW51czog
InVsIiwKCQlwb3NpdGlvbjogewoJCQlteTogImxlZnQgdG9wIiwKCQkJYXQ6ICJyaWdodCB0b3Ai
CgkJfSwKCQlyb2xlOiAibWVudSIsCgoJCS8vIENhbGxiYWNrcwoJCWJsdXI6IG51bGwsCgkJZm9j
dXM6IG51bGwsCgkJc2VsZWN0OiBudWxsCgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXRo
aXMuYWN0aXZlTWVudSA9IHRoaXMuZWxlbWVudDsKCgkJLy8gRmxhZyB1c2VkIHRvIHByZXZlbnQg
ZmlyaW5nIG9mIHRoZSBjbGljayBoYW5kbGVyCgkJLy8gYXMgdGhlIGV2ZW50IGJ1YmJsZXMgdXAg
dGhyb3VnaCBuZXN0ZWQgbWVudXMKCQl0aGlzLm1vdXNlSGFuZGxlZCA9IGZhbHNlOwoJCXRoaXMu
ZWxlbWVudAoJCQkudW5pcXVlSWQoKQoJCQkuYXR0ciggewoJCQkJcm9sZTogdGhpcy5vcHRpb25z
LnJvbGUsCgkJCQl0YWJJbmRleDogMAoJCQl9ICk7CgoJCXRoaXMuX2FkZENsYXNzKCAidWktbWVu
dSIsICJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQiICk7CgkJdGhpcy5fb24oIHsKCgkJCS8v
IFByZXZlbnQgZm9jdXMgZnJvbSBzdGlja2luZyB0byBsaW5rcyBpbnNpZGUgbWVudSBhZnRlciBj
bGlja2luZwoJCQkvLyB0aGVtIChmb2N1cyBzaG91bGQgYWx3YXlzIHN0YXkgb24gVUwgZHVyaW5n
IG5hdmlnYXRpb24pLgoJCQkibW91c2Vkb3duIC51aS1tZW51LWl0ZW0iOiBmdW5jdGlvbiggZXZl
bnQgKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQl9LAoJCQkiY2xpY2sgLnVpLW1l
bnUtaXRlbSI6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXZhciB0YXJnZXQgPSAkKCBldmVudC50
YXJnZXQgKTsKCQkJCXZhciBhY3RpdmUgPSAkKCAkLnVpLnNhZmVBY3RpdmVFbGVtZW50KCB0aGlz
LmRvY3VtZW50WyAwIF0gKSApOwoJCQkJaWYgKCAhdGhpcy5tb3VzZUhhbmRsZWQgJiYgdGFyZ2V0
Lm5vdCggIi51aS1zdGF0ZS1kaXNhYmxlZCIgKS5sZW5ndGggKSB7CgkJCQkJdGhpcy5zZWxlY3Qo
IGV2ZW50ICk7CgoJCQkJCS8vIE9ubHkgc2V0IHRoZSBtb3VzZUhhbmRsZWQgZmxhZyBpZiB0aGUg
ZXZlbnQgd2lsbCBidWJibGUsIHNlZSAjOTQ2OS4KCQkJCQlpZiAoICFldmVudC5pc1Byb3BhZ2F0
aW9uU3RvcHBlZCgpICkgewoJCQkJCQl0aGlzLm1vdXNlSGFuZGxlZCA9IHRydWU7CgkJCQkJfQoK
CQkJCQkvLyBPcGVuIHN1Ym1lbnUgb24gY2xpY2sKCQkJCQlpZiAoIHRhcmdldC5oYXMoICIudWkt
bWVudSIgKS5sZW5ndGggKSB7CgkJCQkJCXRoaXMuZXhwYW5kKCBldmVudCApOwoJCQkJCX0gZWxz
ZSBpZiAoICF0aGlzLmVsZW1lbnQuaXMoICI6Zm9jdXMiICkgJiYKCQkJCQkJCWFjdGl2ZS5jbG9z
ZXN0KCAiLnVpLW1lbnUiICkubGVuZ3RoICkgewoKCQkJCQkJLy8gUmVkaXJlY3QgZm9jdXMgdG8g
dGhlIG1lbnUKCQkJCQkJdGhpcy5lbGVtZW50LnRyaWdnZXIoICJmb2N1cyIsIFsgdHJ1ZSBdICk7
CgoJCQkJCQkvLyBJZiB0aGUgYWN0aXZlIGl0ZW0gaXMgb24gdGhlIHRvcCBsZXZlbCwgbGV0IGl0
IHN0YXkgYWN0aXZlLgoJCQkJCQkvLyBPdGhlcndpc2UsIGJsdXIgdGhlIGFjdGl2ZSBpdGVtIHNp
bmNlIGl0IGlzIG5vIGxvbmdlciB2aXNpYmxlLgoJCQkJCQlpZiAoIHRoaXMuYWN0aXZlICYmIHRo
aXMuYWN0aXZlLnBhcmVudHMoICIudWktbWVudSIgKS5sZW5ndGggPT09IDEgKSB7CgkJCQkJCQlj
bGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfSwKCQkJ
Im1vdXNlZW50ZXIgLnVpLW1lbnUtaXRlbSI6IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJCQkvLyBJ
Z25vcmUgbW91c2UgZXZlbnRzIHdoaWxlIHR5cGVhaGVhZCBpcyBhY3RpdmUsIHNlZSAjMTA0NTgu
CgkJCQkvLyBQcmV2ZW50cyBmb2N1c2luZyB0aGUgd3JvbmcgaXRlbSB3aGVuIHR5cGVhaGVhZCBj
YXVzZXMgYSBzY3JvbGwgd2hpbGUgdGhlIG1vdXNlCgkJCQkvLyBpcyBvdmVyIGFuIGl0ZW0gaW4g
dGhlIG1lbnUKCQkJCWlmICggdGhpcy5wcmV2aW91c0ZpbHRlciApIHsKCQkJCQlyZXR1cm47CgkJ
CQl9CgoJCQkJdmFyIGFjdHVhbFRhcmdldCA9ICQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIu
dWktbWVudS1pdGVtIiApLAoJCQkJCXRhcmdldCA9ICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKTsK
CgkJCQkvLyBJZ25vcmUgYnViYmxlZCBldmVudHMgb24gcGFyZW50IGl0ZW1zLCBzZWUgIzExNjQx
CgkJCQlpZiAoIGFjdHVhbFRhcmdldFsgMCBdICE9PSB0YXJnZXRbIDAgXSApIHsKCQkJCQlyZXR1
cm47CgkJCQl9CgoJCQkJLy8gUmVtb3ZlIHVpLXN0YXRlLWFjdGl2ZSBjbGFzcyBmcm9tIHNpYmxp
bmdzIG9mIHRoZSBuZXdseSBmb2N1c2VkIG1lbnUgaXRlbQoJCQkJLy8gdG8gYXZvaWQgYSBqdW1w
IGNhdXNlZCBieSBhZGphY2VudCBlbGVtZW50cyBib3RoIGhhdmluZyBhIGNsYXNzIHdpdGggYSBi
b3JkZXIKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0YXJnZXQuc2libGluZ3MoKS5jaGlsZHJlbigg
Ii51aS1zdGF0ZS1hY3RpdmUiICksCgkJCQkJbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQkJ
CXRoaXMuZm9jdXMoIGV2ZW50LCB0YXJnZXQgKTsKCQkJfSwKCQkJbW91c2VsZWF2ZTogImNvbGxh
cHNlQWxsIiwKCQkJIm1vdXNlbGVhdmUgLnVpLW1lbnUiOiAiY29sbGFwc2VBbGwiLAoJCQlmb2N1
czogZnVuY3Rpb24oIGV2ZW50LCBrZWVwQWN0aXZlSXRlbSApIHsKCgkJCQkvLyBJZiB0aGVyZSdz
IGFscmVhZHkgYW4gYWN0aXZlIGl0ZW0sIGtlZXAgaXQgYWN0aXZlCgkJCQkvLyBJZiBub3QsIGFj
dGl2YXRlIHRoZSBmaXJzdCBpdGVtCgkJCQl2YXIgaXRlbSA9IHRoaXMuYWN0aXZlIHx8IHRoaXMu
ZWxlbWVudC5maW5kKCB0aGlzLm9wdGlvbnMuaXRlbXMgKS5lcSggMCApOwoKCQkJCWlmICggIWtl
ZXBBY3RpdmVJdGVtICkgewoJCQkJCXRoaXMuZm9jdXMoIGV2ZW50LCBpdGVtICk7CgkJCQl9CgkJ
CX0sCgkJCWJsdXI6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX2RlbGF5KCBmdW5jdGlv
bigpIHsKCQkJCQl2YXIgbm90Q29udGFpbmVkID0gISQuY29udGFpbnMoCgkJCQkJCXRoaXMuZWxl
bWVudFsgMCBdLAoJCQkJCQkkLnVpLnNhZmVBY3RpdmVFbGVtZW50KCB0aGlzLmRvY3VtZW50WyAw
IF0gKQoJCQkJCSk7CgkJCQkJaWYgKCBub3RDb250YWluZWQgKSB7CgkJCQkJCXRoaXMuY29sbGFw
c2VBbGwoIGV2ZW50ICk7CgkJCQkJfQoJCQkJfSApOwoJCQl9LAoJCQlrZXlkb3duOiAiX2tleWRv
d24iCgkJfSApOwoKCQl0aGlzLnJlZnJlc2goKTsKCgkJLy8gQ2xpY2tzIG91dHNpZGUgb2YgYSBt
ZW51IGNvbGxhcHNlIGFueSBvcGVuIG1lbnVzCgkJdGhpcy5fb24oIHRoaXMuZG9jdW1lbnQsIHsK
CQkJY2xpY2s6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWlmICggdGhpcy5fY2xvc2VPbkRvY3Vt
ZW50Q2xpY2soIGV2ZW50ICkgKSB7CgkJCQkJdGhpcy5jb2xsYXBzZUFsbCggZXZlbnQgKTsKCQkJ
CX0KCgkJCQkvLyBSZXNldCB0aGUgbW91c2VIYW5kbGVkIGZsYWcKCQkJCXRoaXMubW91c2VIYW5k
bGVkID0gZmFsc2U7CgkJCX0KCQl9ICk7Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl2
YXIgaXRlbXMgPSB0aGlzLmVsZW1lbnQuZmluZCggIi51aS1tZW51LWl0ZW0iICkKCQkJCS5yZW1v
dmVBdHRyKCAicm9sZSBhcmlhLWRpc2FibGVkIiApLAoJCQlzdWJtZW51cyA9IGl0ZW1zLmNoaWxk
cmVuKCAiLnVpLW1lbnUtaXRlbS13cmFwcGVyIiApCgkJCQkucmVtb3ZlVW5pcXVlSWQoKQoJCQkJ
LnJlbW92ZUF0dHIoICJ0YWJJbmRleCByb2xlIGFyaWEtaGFzcG9wdXAiICk7CgoJCS8vIERlc3Ry
b3kgKHN1YiltZW51cwoJCXRoaXMuZWxlbWVudAoJCQkucmVtb3ZlQXR0ciggImFyaWEtYWN0aXZl
ZGVzY2VuZGFudCIgKQoJCQkuZmluZCggIi51aS1tZW51IiApLmFkZEJhY2soKQoJCQkJLnJlbW92
ZUF0dHIoICJyb2xlIGFyaWEtbGFiZWxsZWRieSBhcmlhLWV4cGFuZGVkIGFyaWEtaGlkZGVuIGFy
aWEtZGlzYWJsZWQgIiArCgkJCQkJInRhYkluZGV4IiApCgkJCQkucmVtb3ZlVW5pcXVlSWQoKQoJ
CQkJLnNob3coKTsKCgkJc3VibWVudXMuY2hpbGRyZW4oKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJ
dmFyIGVsZW0gPSAkKCB0aGlzICk7CgkJCWlmICggZWxlbS5kYXRhKCAidWktbWVudS1zdWJtZW51
LWNhcmV0IiApICkgewoJCQkJZWxlbS5yZW1vdmUoKTsKCQkJfQoJCX0gKTsKCX0sCgoJX2tleWRv
d246IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgbWF0Y2gsIHByZXYsIGNoYXJhY3Rlciwgc2tp
cCwKCQkJcHJldmVudERlZmF1bHQgPSB0cnVlOwoKCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkg
ewoJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfVVA6CgkJCXRoaXMucHJldmlvdXNQYWdlKCBldmVu
dCApOwoJCQlicmVhazsKCQljYXNlICQudWkua2V5Q29kZS5QQUdFX0RPV046CgkJCXRoaXMubmV4
dFBhZ2UoIGV2ZW50ICk7CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLkhPTUU6CgkJCXRo
aXMuX21vdmUoICJmaXJzdCIsICJmaXJzdCIsIGV2ZW50ICk7CgkJCWJyZWFrOwoJCWNhc2UgJC51
aS5rZXlDb2RlLkVORDoKCQkJdGhpcy5fbW92ZSggImxhc3QiLCAibGFzdCIsIGV2ZW50ICk7CgkJ
CWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLlVQOgoJCQl0aGlzLnByZXZpb3VzKCBldmVudCAp
OwoJCQlicmVhazsKCQljYXNlICQudWkua2V5Q29kZS5ET1dOOgoJCQl0aGlzLm5leHQoIGV2ZW50
ICk7CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLkxFRlQ6CgkJCXRoaXMuY29sbGFwc2Uo
IGV2ZW50ICk7CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCQlpZiAoIHRo
aXMuYWN0aXZlICYmICF0aGlzLmFjdGl2ZS5pcyggIi51aS1zdGF0ZS1kaXNhYmxlZCIgKSApIHsK
CQkJCXRoaXMuZXhwYW5kKCBldmVudCApOwoJCQl9CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlD
b2RlLkVOVEVSOgoJCWNhc2UgJC51aS5rZXlDb2RlLlNQQUNFOgoJCQl0aGlzLl9hY3RpdmF0ZSgg
ZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuRVNDQVBFOgoJCQl0aGlzLmNv
bGxhcHNlKCBldmVudCApOwoJCQlicmVhazsKCQlkZWZhdWx0OgoJCQlwcmV2ZW50RGVmYXVsdCA9
IGZhbHNlOwoJCQlwcmV2ID0gdGhpcy5wcmV2aW91c0ZpbHRlciB8fCAiIjsKCQkJc2tpcCA9IGZh
bHNlOwoKCQkJLy8gU3VwcG9ydCBudW1iZXIgcGFkIHZhbHVlcwoJCQljaGFyYWN0ZXIgPSBldmVu
dC5rZXlDb2RlID49IDk2ICYmIGV2ZW50LmtleUNvZGUgPD0gMTA1ID8KCQkJCSggZXZlbnQua2V5
Q29kZSAtIDk2ICkudG9TdHJpbmcoKSA6IFN0cmluZy5mcm9tQ2hhckNvZGUoIGV2ZW50LmtleUNv
ZGUgKTsKCgkJCWNsZWFyVGltZW91dCggdGhpcy5maWx0ZXJUaW1lciApOwoKCQkJaWYgKCBjaGFy
YWN0ZXIgPT09IHByZXYgKSB7CgkJCQlza2lwID0gdHJ1ZTsKCQkJfSBlbHNlIHsKCQkJCWNoYXJh
Y3RlciA9IHByZXYgKyBjaGFyYWN0ZXI7CgkJCX0KCgkJCW1hdGNoID0gdGhpcy5fZmlsdGVyTWVu
dUl0ZW1zKCBjaGFyYWN0ZXIgKTsKCQkJbWF0Y2ggPSBza2lwICYmIG1hdGNoLmluZGV4KCB0aGlz
LmFjdGl2ZS5uZXh0KCkgKSAhPT0gLTEgPwoJCQkJdGhpcy5hY3RpdmUubmV4dEFsbCggIi51aS1t
ZW51LWl0ZW0iICkgOgoJCQkJbWF0Y2g7CgoJCQkvLyBJZiBubyBtYXRjaGVzIG9uIHRoZSBjdXJy
ZW50IGZpbHRlciwgcmVzZXQgdG8gdGhlIGxhc3QgY2hhcmFjdGVyIHByZXNzZWQKCQkJLy8gdG8g
bW92ZSBkb3duIHRoZSBtZW51IHRvIHRoZSBmaXJzdCBpdGVtIHRoYXQgc3RhcnRzIHdpdGggdGhh
dCBjaGFyYWN0ZXIKCQkJaWYgKCAhbWF0Y2gubGVuZ3RoICkgewoJCQkJY2hhcmFjdGVyID0gU3Ry
aW5nLmZyb21DaGFyQ29kZSggZXZlbnQua2V5Q29kZSApOwoJCQkJbWF0Y2ggPSB0aGlzLl9maWx0
ZXJNZW51SXRlbXMoIGNoYXJhY3RlciApOwoJCQl9CgoJCQlpZiAoIG1hdGNoLmxlbmd0aCApIHsK
CQkJCXRoaXMuZm9jdXMoIGV2ZW50LCBtYXRjaCApOwoJCQkJdGhpcy5wcmV2aW91c0ZpbHRlciA9
IGNoYXJhY3RlcjsKCQkJCXRoaXMuZmlsdGVyVGltZXIgPSB0aGlzLl9kZWxheSggZnVuY3Rpb24o
KSB7CgkJCQkJZGVsZXRlIHRoaXMucHJldmlvdXNGaWx0ZXI7CgkJCQl9LCAxMDAwICk7CgkJCX0g
ZWxzZSB7CgkJCQlkZWxldGUgdGhpcy5wcmV2aW91c0ZpbHRlcjsKCQkJfQoJCX0KCgkJaWYgKCBw
cmV2ZW50RGVmYXVsdCApIHsKCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQl9Cgl9LAoKCV9h
Y3RpdmF0ZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCWlmICggdGhpcy5hY3RpdmUgJiYgIXRoaXMu
YWN0aXZlLmlzKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApICkgewoJCQlpZiAoIHRoaXMuYWN0aXZl
LmNoaWxkcmVuKCAiW2FyaWEtaGFzcG9wdXA9J3RydWUnXSIgKS5sZW5ndGggKSB7CgkJCQl0aGlz
LmV4cGFuZCggZXZlbnQgKTsKCQkJfSBlbHNlIHsKCQkJCXRoaXMuc2VsZWN0KCBldmVudCApOwoJ
CQl9CgkJfQoJfSwKCglyZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl2YXIgbWVudXMsIGl0ZW1zLCBu
ZXdTdWJtZW51cywgbmV3SXRlbXMsIG5ld1dyYXBwZXJzLAoJCQl0aGF0ID0gdGhpcywKCQkJaWNv
biA9IHRoaXMub3B0aW9ucy5pY29ucy5zdWJtZW51LAoJCQlzdWJtZW51cyA9IHRoaXMuZWxlbWVu
dC5maW5kKCB0aGlzLm9wdGlvbnMubWVudXMgKTsKCgkJdGhpcy5fdG9nZ2xlQ2xhc3MoICJ1aS1t
ZW51LWljb25zIiwgbnVsbCwgISF0aGlzLmVsZW1lbnQuZmluZCggIi51aS1pY29uIiApLmxlbmd0
aCApOwoKCQkvLyBJbml0aWFsaXplIG5lc3RlZCBtZW51cwoJCW5ld1N1Ym1lbnVzID0gc3VibWVu
dXMuZmlsdGVyKCAiOm5vdCgudWktbWVudSkiICkKCQkJLmhpZGUoKQoJCQkuYXR0ciggewoJCQkJ
cm9sZTogdGhpcy5vcHRpb25zLnJvbGUsCgkJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIsCgkJCQki
YXJpYS1leHBhbmRlZCI6ICJmYWxzZSIKCQkJfSApCgkJCS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJ
CXZhciBtZW51ID0gJCggdGhpcyApLAoJCQkJCWl0ZW0gPSBtZW51LnByZXYoKSwKCQkJCQlzdWJt
ZW51Q2FyZXQgPSAkKCAiPHNwYW4+IiApLmRhdGEoICJ1aS1tZW51LXN1Ym1lbnUtY2FyZXQiLCB0
cnVlICk7CgoJCQkJdGhhdC5fYWRkQ2xhc3MoIHN1Ym1lbnVDYXJldCwgInVpLW1lbnUtaWNvbiIs
ICJ1aS1pY29uICIgKyBpY29uICk7CgkJCQlpdGVtCgkJCQkJLmF0dHIoICJhcmlhLWhhc3BvcHVw
IiwgInRydWUiICkKCQkJCQkucHJlcGVuZCggc3VibWVudUNhcmV0ICk7CgkJCQltZW51LmF0dHIo
ICJhcmlhLWxhYmVsbGVkYnkiLCBpdGVtLmF0dHIoICJpZCIgKSApOwoJCQl9ICk7CgoJCXRoaXMu
X2FkZENsYXNzKCBuZXdTdWJtZW51cywgInVpLW1lbnUiLCAidWktd2lkZ2V0IHVpLXdpZGdldC1j
b250ZW50IHVpLWZyb250IiApOwoKCQltZW51cyA9IHN1Ym1lbnVzLmFkZCggdGhpcy5lbGVtZW50
ICk7CgkJaXRlbXMgPSBtZW51cy5maW5kKCB0aGlzLm9wdGlvbnMuaXRlbXMgKTsKCgkJLy8gSW5p
dGlhbGl6ZSBtZW51LWl0ZW1zIGNvbnRhaW5pbmcgc3BhY2VzIGFuZC9vciBkYXNoZXMgb25seSBh
cyBkaXZpZGVycwoJCWl0ZW1zLm5vdCggIi51aS1tZW51LWl0ZW0iICkuZWFjaCggZnVuY3Rpb24o
KSB7CgkJCXZhciBpdGVtID0gJCggdGhpcyApOwoJCQlpZiAoIHRoYXQuX2lzRGl2aWRlciggaXRl
bSApICkgewoJCQkJdGhhdC5fYWRkQ2xhc3MoIGl0ZW0sICJ1aS1tZW51LWRpdmlkZXIiLCAidWkt
d2lkZ2V0LWNvbnRlbnQiICk7CgkJCX0KCQl9ICk7CgoJCS8vIERvbid0IHJlZnJlc2ggbGlzdCBp
dGVtcyB0aGF0IGFyZSBhbHJlYWR5IGFkYXB0ZWQKCQluZXdJdGVtcyA9IGl0ZW1zLm5vdCggIi51
aS1tZW51LWl0ZW0sIC51aS1tZW51LWRpdmlkZXIiICk7CgkJbmV3V3JhcHBlcnMgPSBuZXdJdGVt
cy5jaGlsZHJlbigpCgkJCS5ub3QoICIudWktbWVudSIgKQoJCQkJLnVuaXF1ZUlkKCkKCQkJCS5h
dHRyKCB7CgkJCQkJdGFiSW5kZXg6IC0xLAoJCQkJCXJvbGU6IHRoaXMuX2l0ZW1Sb2xlKCkKCQkJ
CX0gKTsKCQl0aGlzLl9hZGRDbGFzcyggbmV3SXRlbXMsICJ1aS1tZW51LWl0ZW0iICkKCQkJLl9h
ZGRDbGFzcyggbmV3V3JhcHBlcnMsICJ1aS1tZW51LWl0ZW0td3JhcHBlciIgKTsKCgkJLy8gQWRk
IGFyaWEtZGlzYWJsZWQgYXR0cmlidXRlIHRvIGFueSBkaXNhYmxlZCBtZW51IGl0ZW0KCQlpdGVt
cy5maWx0ZXIoICIudWktc3RhdGUtZGlzYWJsZWQiICkuYXR0ciggImFyaWEtZGlzYWJsZWQiLCAi
dHJ1ZSIgKTsKCgkJLy8gSWYgdGhlIGFjdGl2ZSBpdGVtIGhhcyBiZWVuIHJlbW92ZWQsIGJsdXIg
dGhlIG1lbnUKCQlpZiAoIHRoaXMuYWN0aXZlICYmICEkLmNvbnRhaW5zKCB0aGlzLmVsZW1lbnRb
IDAgXSwgdGhpcy5hY3RpdmVbIDAgXSApICkgewoJCQl0aGlzLmJsdXIoKTsKCQl9Cgl9LAoKCV9p
dGVtUm9sZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHsKCQkJbWVudTogIm1lbnVpdGVtIiwKCQkJ
bGlzdGJveDogIm9wdGlvbiIKCQl9WyB0aGlzLm9wdGlvbnMucm9sZSBdOwoJfSwKCglfc2V0T3B0
aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQlpZiAoIGtleSA9PT0gImljb25zIiApIHsK
CQkJdmFyIGljb25zID0gdGhpcy5lbGVtZW50LmZpbmQoICIudWktbWVudS1pY29uIiApOwoJCQl0
aGlzLl9yZW1vdmVDbGFzcyggaWNvbnMsIG51bGwsIHRoaXMub3B0aW9ucy5pY29ucy5zdWJtZW51
ICkKCQkJCS5fYWRkQ2xhc3MoIGljb25zLCBudWxsLCB2YWx1ZS5zdWJtZW51ICk7CgkJfQoJCXRo
aXMuX3N1cGVyKCBrZXksIHZhbHVlICk7Cgl9LAoKCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rp
b24oIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCB2YWx1ZSApOwoKCQl0aGlzLmVsZW1lbnQuYXR0
ciggImFyaWEtZGlzYWJsZWQiLCBTdHJpbmcoIHZhbHVlICkgKTsKCQl0aGlzLl90b2dnbGVDbGFz
cyggbnVsbCwgInVpLXN0YXRlLWRpc2FibGVkIiwgISF2YWx1ZSApOwoJfSwKCglmb2N1czogZnVu
Y3Rpb24oIGV2ZW50LCBpdGVtICkgewoJCXZhciBuZXN0ZWQsIGZvY3VzZWQsIGFjdGl2ZVBhcmVu
dDsKCQl0aGlzLmJsdXIoIGV2ZW50LCBldmVudCAmJiBldmVudC50eXBlID09PSAiZm9jdXMiICk7
CgoJCXRoaXMuX3Njcm9sbEludG9WaWV3KCBpdGVtICk7CgoJCXRoaXMuYWN0aXZlID0gaXRlbS5m
aXJzdCgpOwoKCQlmb2N1c2VkID0gdGhpcy5hY3RpdmUuY2hpbGRyZW4oICIudWktbWVudS1pdGVt
LXdyYXBwZXIiICk7CgkJdGhpcy5fYWRkQ2xhc3MoIGZvY3VzZWQsIG51bGwsICJ1aS1zdGF0ZS1h
Y3RpdmUiICk7CgoJCS8vIE9ubHkgdXBkYXRlIGFyaWEtYWN0aXZlZGVzY2VuZGFudCBpZiB0aGVy
ZSdzIGEgcm9sZQoJCS8vIG90aGVyd2lzZSB3ZSBhc3N1bWUgZm9jdXMgaXMgbWFuYWdlZCBlbHNl
d2hlcmUKCQlpZiAoIHRoaXMub3B0aW9ucy5yb2xlICkgewoJCQl0aGlzLmVsZW1lbnQuYXR0cigg
ImFyaWEtYWN0aXZlZGVzY2VuZGFudCIsIGZvY3VzZWQuYXR0ciggImlkIiApICk7CgkJfQoKCQkv
LyBIaWdobGlnaHQgYWN0aXZlIHBhcmVudCBtZW51IGl0ZW0sIGlmIGFueQoJCWFjdGl2ZVBhcmVu
dCA9IHRoaXMuYWN0aXZlCgkJCS5wYXJlbnQoKQoJCQkJLmNsb3Nlc3QoICIudWktbWVudS1pdGVt
IiApCgkJCQkJLmNoaWxkcmVuKCAiLnVpLW1lbnUtaXRlbS13cmFwcGVyIiApOwoJCXRoaXMuX2Fk
ZENsYXNzKCBhY3RpdmVQYXJlbnQsIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgoJCWlmICgg
ZXZlbnQgJiYgZXZlbnQudHlwZSA9PT0gImtleWRvd24iICkgewoJCQl0aGlzLl9jbG9zZSgpOwoJ
CX0gZWxzZSB7CgkJCXRoaXMudGltZXIgPSB0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgkJCQl0
aGlzLl9jbG9zZSgpOwoJCQl9LCB0aGlzLmRlbGF5ICk7CgkJfQoKCQluZXN0ZWQgPSBpdGVtLmNo
aWxkcmVuKCAiLnVpLW1lbnUiICk7CgkJaWYgKCBuZXN0ZWQubGVuZ3RoICYmIGV2ZW50ICYmICgg
L15tb3VzZS8udGVzdCggZXZlbnQudHlwZSApICkgKSB7CgkJCXRoaXMuX3N0YXJ0T3BlbmluZygg
bmVzdGVkICk7CgkJfQoJCXRoaXMuYWN0aXZlTWVudSA9IGl0ZW0ucGFyZW50KCk7CgoJCXRoaXMu
X3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApOwoJfSwKCglfc2Nyb2xs
SW50b1ZpZXc6IGZ1bmN0aW9uKCBpdGVtICkgewoJCXZhciBib3JkZXJUb3AsIHBhZGRpbmdUb3As
IG9mZnNldCwgc2Nyb2xsLCBlbGVtZW50SGVpZ2h0LCBpdGVtSGVpZ2h0OwoJCWlmICggdGhpcy5f
aGFzU2Nyb2xsKCkgKSB7CgkJCWJvcmRlclRvcCA9IHBhcnNlRmxvYXQoICQuY3NzKCB0aGlzLmFj
dGl2ZU1lbnVbIDAgXSwgImJvcmRlclRvcFdpZHRoIiApICkgfHwgMDsKCQkJcGFkZGluZ1RvcCA9
IHBhcnNlRmxvYXQoICQuY3NzKCB0aGlzLmFjdGl2ZU1lbnVbIDAgXSwgInBhZGRpbmdUb3AiICkg
KSB8fCAwOwoJCQlvZmZzZXQgPSBpdGVtLm9mZnNldCgpLnRvcCAtIHRoaXMuYWN0aXZlTWVudS5v
ZmZzZXQoKS50b3AgLSBib3JkZXJUb3AgLSBwYWRkaW5nVG9wOwoJCQlzY3JvbGwgPSB0aGlzLmFj
dGl2ZU1lbnUuc2Nyb2xsVG9wKCk7CgkJCWVsZW1lbnRIZWlnaHQgPSB0aGlzLmFjdGl2ZU1lbnUu
aGVpZ2h0KCk7CgkJCWl0ZW1IZWlnaHQgPSBpdGVtLm91dGVySGVpZ2h0KCk7CgoJCQlpZiAoIG9m
ZnNldCA8IDAgKSB7CgkJCQl0aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKCBzY3JvbGwgKyBvZmZz
ZXQgKTsKCQkJfSBlbHNlIGlmICggb2Zmc2V0ICsgaXRlbUhlaWdodCA+IGVsZW1lbnRIZWlnaHQg
KSB7CgkJCQl0aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKCBzY3JvbGwgKyBvZmZzZXQgLSBlbGVt
ZW50SGVpZ2h0ICsgaXRlbUhlaWdodCApOwoJCQl9CgkJfQoJfSwKCglibHVyOiBmdW5jdGlvbigg
ZXZlbnQsIGZyb21Gb2N1cyApIHsKCQlpZiAoICFmcm9tRm9jdXMgKSB7CgkJCWNsZWFyVGltZW91
dCggdGhpcy50aW1lciApOwoJCX0KCgkJaWYgKCAhdGhpcy5hY3RpdmUgKSB7CgkJCXJldHVybjsK
CQl9CgoJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmFjdGl2ZS5jaGlsZHJlbiggIi51aS1tZW51
LWl0ZW0td3JhcHBlciIgKSwKCQkJbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCgkJdGhpcy5f
dHJpZ2dlciggImJsdXIiLCBldmVudCwgeyBpdGVtOiB0aGlzLmFjdGl2ZSB9ICk7CgkJdGhpcy5h
Y3RpdmUgPSBudWxsOwoJfSwKCglfc3RhcnRPcGVuaW5nOiBmdW5jdGlvbiggc3VibWVudSApIHsK
CQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsKCgkJLy8gRG9uJ3Qgb3BlbiBpZiBhbHJlYWR5
IG9wZW4gZml4ZXMgYSBGaXJlZm94IGJ1ZyB0aGF0IGNhdXNlZCBhIC41IHBpeGVsCgkJLy8gc2hp
ZnQgaW4gdGhlIHN1Ym1lbnUgcG9zaXRpb24gd2hlbiBtb3VzaW5nIG92ZXIgdGhlIGNhcmV0IGlj
b24KCQlpZiAoIHN1Ym1lbnUuYXR0ciggImFyaWEtaGlkZGVuIiApICE9PSAidHJ1ZSIgKSB7CgkJ
CXJldHVybjsKCQl9CgoJCXRoaXMudGltZXIgPSB0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgkJ
CXRoaXMuX2Nsb3NlKCk7CgkJCXRoaXMuX29wZW4oIHN1Ym1lbnUgKTsKCQl9LCB0aGlzLmRlbGF5
ICk7Cgl9LAoKCV9vcGVuOiBmdW5jdGlvbiggc3VibWVudSApIHsKCQl2YXIgcG9zaXRpb24gPSAk
LmV4dGVuZCggewoJCQlvZjogdGhpcy5hY3RpdmUKCQl9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24g
KTsKCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7CgkJdGhpcy5lbGVtZW50LmZpbmQoICIu
dWktbWVudSIgKS5ub3QoIHN1Ym1lbnUucGFyZW50cyggIi51aS1tZW51IiApICkKCQkJLmhpZGUo
KQoJCQkuYXR0ciggImFyaWEtaGlkZGVuIiwgInRydWUiICk7CgoJCXN1Ym1lbnUKCQkJLnNob3co
KQoJCQkucmVtb3ZlQXR0ciggImFyaWEtaGlkZGVuIiApCgkJCS5hdHRyKCAiYXJpYS1leHBhbmRl
ZCIsICJ0cnVlIiApCgkJCS5wb3NpdGlvbiggcG9zaXRpb24gKTsKCX0sCgoJY29sbGFwc2VBbGw6
IGZ1bmN0aW9uKCBldmVudCwgYWxsICkgewoJCWNsZWFyVGltZW91dCggdGhpcy50aW1lciApOwoJ
CXRoaXMudGltZXIgPSB0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgoJCQkvLyBJZiB3ZSB3ZXJl
IHBhc3NlZCBhbiBldmVudCwgbG9vayBmb3IgdGhlIHN1Ym1lbnUgdGhhdCBjb250YWlucyB0aGUg
ZXZlbnQKCQkJdmFyIGN1cnJlbnRNZW51ID0gYWxsID8gdGhpcy5lbGVtZW50IDoKCQkJCSQoIGV2
ZW50ICYmIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoIHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLW1l
bnUiICkgKTsKCgkJCS8vIElmIHdlIGZvdW5kIG5vIHZhbGlkIHN1Ym1lbnUgYW5jZXN0b3IsIHVz
ZSB0aGUgbWFpbiBtZW51IHRvIGNsb3NlIGFsbAoJCQkvLyBzdWIgbWVudXMgYW55d2F5CgkJCWlm
ICggIWN1cnJlbnRNZW51Lmxlbmd0aCApIHsKCQkJCWN1cnJlbnRNZW51ID0gdGhpcy5lbGVtZW50
OwoJCQl9CgoJCQl0aGlzLl9jbG9zZSggY3VycmVudE1lbnUgKTsKCgkJCXRoaXMuYmx1ciggZXZl
bnQgKTsKCgkJCS8vIFdvcmsgYXJvdW5kIGFjdGl2ZSBpdGVtIHN0YXlpbmcgYWN0aXZlIGFmdGVy
IG1lbnUgaXMgYmx1cnJlZAoJCQl0aGlzLl9yZW1vdmVDbGFzcyggY3VycmVudE1lbnUuZmluZCgg
Ii51aS1zdGF0ZS1hY3RpdmUiICksIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgoJCQl0aGlz
LmFjdGl2ZU1lbnUgPSBjdXJyZW50TWVudTsKCQl9LCB0aGlzLmRlbGF5ICk7Cgl9LAoKCS8vIFdp
dGggbm8gYXJndW1lbnRzLCBjbG9zZXMgdGhlIGN1cnJlbnRseSBhY3RpdmUgbWVudSAtIGlmIG5v
dGhpbmcgaXMgYWN0aXZlCgkvLyBpdCBjbG9zZXMgYWxsIG1lbnVzLiAgSWYgcGFzc2VkIGFuIGFy
Z3VtZW50LCBpdCB3aWxsIHNlYXJjaCBmb3IgbWVudXMgQkVMT1cKCV9jbG9zZTogZnVuY3Rpb24o
IHN0YXJ0TWVudSApIHsKCQlpZiAoICFzdGFydE1lbnUgKSB7CgkJCXN0YXJ0TWVudSA9IHRoaXMu
YWN0aXZlID8gdGhpcy5hY3RpdmUucGFyZW50KCkgOiB0aGlzLmVsZW1lbnQ7CgkJfQoKCQlzdGFy
dE1lbnUuZmluZCggIi51aS1tZW51IiApCgkJCS5oaWRlKCkKCQkJLmF0dHIoICJhcmlhLWhpZGRl
biIsICJ0cnVlIiApCgkJCS5hdHRyKCAiYXJpYS1leHBhbmRlZCIsICJmYWxzZSIgKTsKCX0sCgoJ
X2Nsb3NlT25Eb2N1bWVudENsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJcmV0dXJuICEkKCBl
dmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLW1lbnUiICkubGVuZ3RoOwoJfSwKCglfaXNEaXZp
ZGVyOiBmdW5jdGlvbiggaXRlbSApIHsKCgkJLy8gTWF0Y2ggaHlwaGVuLCBlbSBkYXNoLCBlbiBk
YXNoCgkJcmV0dXJuICEvW15cLVx1MjAxNFx1MjAxM1xzXS8udGVzdCggaXRlbS50ZXh0KCkgKTsK
CX0sCgoJY29sbGFwc2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgbmV3SXRlbSA9IHRoaXMu
YWN0aXZlICYmCgkJCXRoaXMuYWN0aXZlLnBhcmVudCgpLmNsb3Nlc3QoICIudWktbWVudS1pdGVt
IiwgdGhpcy5lbGVtZW50ICk7CgkJaWYgKCBuZXdJdGVtICYmIG5ld0l0ZW0ubGVuZ3RoICkgewoJ
CQl0aGlzLl9jbG9zZSgpOwoJCQl0aGlzLmZvY3VzKCBldmVudCwgbmV3SXRlbSApOwoJCX0KCX0s
CgoJZXhwYW5kOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIG5ld0l0ZW0gPSB0aGlzLmFjdGl2
ZSAmJgoJCQl0aGlzLmFjdGl2ZQoJCQkJLmNoaWxkcmVuKCAiLnVpLW1lbnUgIiApCgkJCQkJLmZp
bmQoIHRoaXMub3B0aW9ucy5pdGVtcyApCgkJCQkJCS5maXJzdCgpOwoKCQlpZiAoIG5ld0l0ZW0g
JiYgbmV3SXRlbS5sZW5ndGggKSB7CgkJCXRoaXMuX29wZW4oIG5ld0l0ZW0ucGFyZW50KCkgKTsK
CgkJCS8vIERlbGF5IHNvIEZpcmVmb3ggd2lsbCBub3QgaGlkZSBhY3RpdmVkZXNjZW5kYW50IGNo
YW5nZSBpbiBleHBhbmRpbmcgc3VibWVudSBmcm9tIEFUCgkJCXRoaXMuX2RlbGF5KCBmdW5jdGlv
bigpIHsKCQkJCXRoaXMuZm9jdXMoIGV2ZW50LCBuZXdJdGVtICk7CgkJCX0gKTsKCQl9Cgl9LAoK
CW5leHQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl0aGlzLl9tb3ZlKCAibmV4dCIsICJmaXJzdCIs
IGV2ZW50ICk7Cgl9LAoKCXByZXZpb3VzOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpcy5fbW92
ZSggInByZXYiLCAibGFzdCIsIGV2ZW50ICk7Cgl9LAoKCWlzRmlyc3RJdGVtOiBmdW5jdGlvbigp
IHsKCQlyZXR1cm4gdGhpcy5hY3RpdmUgJiYgIXRoaXMuYWN0aXZlLnByZXZBbGwoICIudWktbWVu
dS1pdGVtIiApLmxlbmd0aDsKCX0sCgoJaXNMYXN0SXRlbTogZnVuY3Rpb24oKSB7CgkJcmV0dXJu
IHRoaXMuYWN0aXZlICYmICF0aGlzLmFjdGl2ZS5uZXh0QWxsKCAiLnVpLW1lbnUtaXRlbSIgKS5s
ZW5ndGg7Cgl9LAoKCV9tb3ZlOiBmdW5jdGlvbiggZGlyZWN0aW9uLCBmaWx0ZXIsIGV2ZW50ICkg
ewoJCXZhciBuZXh0OwoJCWlmICggdGhpcy5hY3RpdmUgKSB7CgkJCWlmICggZGlyZWN0aW9uID09
PSAiZmlyc3QiIHx8IGRpcmVjdGlvbiA9PT0gImxhc3QiICkgewoJCQkJbmV4dCA9IHRoaXMuYWN0
aXZlCgkJCQkJWyBkaXJlY3Rpb24gPT09ICJmaXJzdCIgPyAicHJldkFsbCIgOiAibmV4dEFsbCIg
XSggIi51aS1tZW51LWl0ZW0iICkKCQkJCQkuZXEoIC0xICk7CgkJCX0gZWxzZSB7CgkJCQluZXh0
ID0gdGhpcy5hY3RpdmUKCQkJCQlbIGRpcmVjdGlvbiArICJBbGwiIF0oICIudWktbWVudS1pdGVt
IiApCgkJCQkJLmVxKCAwICk7CgkJCX0KCQl9CgkJaWYgKCAhbmV4dCB8fCAhbmV4dC5sZW5ndGgg
fHwgIXRoaXMuYWN0aXZlICkgewoJCQluZXh0ID0gdGhpcy5hY3RpdmVNZW51LmZpbmQoIHRoaXMu
b3B0aW9ucy5pdGVtcyApWyBmaWx0ZXIgXSgpOwoJCX0KCgkJdGhpcy5mb2N1cyggZXZlbnQsIG5l
eHQgKTsKCX0sCgoJbmV4dFBhZ2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgaXRlbSwgYmFz
ZSwgaGVpZ2h0OwoKCQlpZiAoICF0aGlzLmFjdGl2ZSApIHsKCQkJdGhpcy5uZXh0KCBldmVudCAp
OwoJCQlyZXR1cm47CgkJfQoJCWlmICggdGhpcy5pc0xhc3RJdGVtKCkgKSB7CgkJCXJldHVybjsK
CQl9CgkJaWYgKCB0aGlzLl9oYXNTY3JvbGwoKSApIHsKCQkJYmFzZSA9IHRoaXMuYWN0aXZlLm9m
ZnNldCgpLnRvcDsKCQkJaGVpZ2h0ID0gdGhpcy5lbGVtZW50LmhlaWdodCgpOwoJCQl0aGlzLmFj
dGl2ZS5uZXh0QWxsKCAiLnVpLW1lbnUtaXRlbSIgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCWl0
ZW0gPSAkKCB0aGlzICk7CgkJCQlyZXR1cm4gaXRlbS5vZmZzZXQoKS50b3AgLSBiYXNlIC0gaGVp
Z2h0IDwgMDsKCQkJfSApOwoKCQkJdGhpcy5mb2N1cyggZXZlbnQsIGl0ZW0gKTsKCQl9IGVsc2Ug
ewoJCQl0aGlzLmZvY3VzKCBldmVudCwgdGhpcy5hY3RpdmVNZW51LmZpbmQoIHRoaXMub3B0aW9u
cy5pdGVtcyApCgkJCQlbICF0aGlzLmFjdGl2ZSA/ICJmaXJzdCIgOiAibGFzdCIgXSgpICk7CgkJ
fQoJfSwKCglwcmV2aW91c1BhZ2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgaXRlbSwgYmFz
ZSwgaGVpZ2h0OwoJCWlmICggIXRoaXMuYWN0aXZlICkgewoJCQl0aGlzLm5leHQoIGV2ZW50ICk7
CgkJCXJldHVybjsKCQl9CgkJaWYgKCB0aGlzLmlzRmlyc3RJdGVtKCkgKSB7CgkJCXJldHVybjsK
CQl9CgkJaWYgKCB0aGlzLl9oYXNTY3JvbGwoKSApIHsKCQkJYmFzZSA9IHRoaXMuYWN0aXZlLm9m
ZnNldCgpLnRvcDsKCQkJaGVpZ2h0ID0gdGhpcy5lbGVtZW50LmhlaWdodCgpOwoJCQl0aGlzLmFj
dGl2ZS5wcmV2QWxsKCAiLnVpLW1lbnUtaXRlbSIgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCWl0
ZW0gPSAkKCB0aGlzICk7CgkJCQlyZXR1cm4gaXRlbS5vZmZzZXQoKS50b3AgLSBiYXNlICsgaGVp
Z2h0ID4gMDsKCQkJfSApOwoKCQkJdGhpcy5mb2N1cyggZXZlbnQsIGl0ZW0gKTsKCQl9IGVsc2Ug
ewoJCQl0aGlzLmZvY3VzKCBldmVudCwgdGhpcy5hY3RpdmVNZW51LmZpbmQoIHRoaXMub3B0aW9u
cy5pdGVtcyApLmZpcnN0KCkgKTsKCQl9Cgl9LAoKCV9oYXNTY3JvbGw6IGZ1bmN0aW9uKCkgewoJ
CXJldHVybiB0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSA8IHRoaXMuZWxlbWVudC5wcm9wKCAi
c2Nyb2xsSGVpZ2h0IiApOwoJfSwKCglzZWxlY3Q6IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJLy8g
VE9ETzogSXQgc2hvdWxkIG5ldmVyIGJlIHBvc3NpYmxlIHRvIG5vdCBoYXZlIGFuIGFjdGl2ZSBp
dGVtIGF0IHRoaXMKCQkvLyBwb2ludCwgYnV0IHRoZSB0ZXN0cyBkb24ndCB0cmlnZ2VyIG1vdXNl
ZW50ZXIgYmVmb3JlIGNsaWNrLgoJCXRoaXMuYWN0aXZlID0gdGhpcy5hY3RpdmUgfHwgJCggZXZl
bnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1tZW51LWl0ZW0iICk7CgkJdmFyIHVpID0geyBpdGVt
OiB0aGlzLmFjdGl2ZSB9OwoJCWlmICggIXRoaXMuYWN0aXZlLmhhcyggIi51aS1tZW51IiApLmxl
bmd0aCApIHsKCQkJdGhpcy5jb2xsYXBzZUFsbCggZXZlbnQsIHRydWUgKTsKCQl9CgkJdGhpcy5f
dHJpZ2dlciggInNlbGVjdCIsIGV2ZW50LCB1aSApOwoJfSwKCglfZmlsdGVyTWVudUl0ZW1zOiBm
dW5jdGlvbiggY2hhcmFjdGVyICkgewoJCXZhciBlc2NhcGVkQ2hhcmFjdGVyID0gY2hhcmFjdGVy
LnJlcGxhY2UoIC9bXC1cW1xde30oKSorPy4sXFxcXiR8I1xzXS9nLCAiXFwkJiIgKSwKCQkJcmVn
ZXggPSBuZXcgUmVnRXhwKCAiXiIgKyBlc2NhcGVkQ2hhcmFjdGVyLCAiaSIgKTsKCgkJcmV0dXJu
IHRoaXMuYWN0aXZlTWVudQoJCQkuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkKCgkJCQkvLyBP
bmx5IG1hdGNoIG9uIGl0ZW1zLCBub3QgZGl2aWRlcnMgb3Igb3RoZXIgY29udGVudCAoIzEwNTcx
KQoJCQkJLmZpbHRlciggIi51aS1tZW51LWl0ZW0iICkKCQkJCQkuZmlsdGVyKCBmdW5jdGlvbigp
IHsKCQkJCQkJcmV0dXJuIHJlZ2V4LnRlc3QoCgkJCQkJCQkkLnRyaW0oICQoIHRoaXMgKS5jaGls
ZHJlbiggIi51aS1tZW51LWl0ZW0td3JhcHBlciIgKS50ZXh0KCkgKSApOwoJCQkJCX0gKTsKCX0K
fSApOwoKCi8qIQogKiBqUXVlcnkgVUkgQXV0b2NvbXBsZXRlIDEuMTIuMQogKiBodHRwOi8vanF1
ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29u
dHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2px
dWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogQXV0b2NvbXBsZXRlCi8vPj5ncm91cDog
V2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IExpc3RzIHN1Z2dlc3RlZCB3b3JkcyBhcyB0aGUgdXNl
ciBpcyB0eXBpbmcuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9hdXRvY29tcGxl
dGUvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9hdXRvY29tcGxldGUvCi8vPj5jc3Mu
c3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTog
Li4vLi4vdGhlbWVzL2Jhc2UvYXV0b2NvbXBsZXRlLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90
aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKJC53aWRnZXQoICJ1aS5hdXRvY29tcGxldGUiLCB7Cgl2
ZXJzaW9uOiAiMS4xMi4xIiwKCWRlZmF1bHRFbGVtZW50OiAiPGlucHV0PiIsCglvcHRpb25zOiB7
CgkJYXBwZW5kVG86IG51bGwsCgkJYXV0b0ZvY3VzOiBmYWxzZSwKCQlkZWxheTogMzAwLAoJCW1p
bkxlbmd0aDogMSwKCQlwb3NpdGlvbjogewoJCQlteTogImxlZnQgdG9wIiwKCQkJYXQ6ICJsZWZ0
IGJvdHRvbSIsCgkJCWNvbGxpc2lvbjogIm5vbmUiCgkJfSwKCQlzb3VyY2U6IG51bGwsCgoJCS8v
IENhbGxiYWNrcwoJCWNoYW5nZTogbnVsbCwKCQljbG9zZTogbnVsbCwKCQlmb2N1czogbnVsbCwK
CQlvcGVuOiBudWxsLAoJCXJlc3BvbnNlOiBudWxsLAoJCXNlYXJjaDogbnVsbCwKCQlzZWxlY3Q6
IG51bGwKCX0sCgoJcmVxdWVzdEluZGV4OiAwLAoJcGVuZGluZzogMCwKCglfY3JlYXRlOiBmdW5j
dGlvbigpIHsKCgkJLy8gU29tZSBicm93c2VycyBvbmx5IHJlcGVhdCBrZXlkb3duIGV2ZW50cywg
bm90IGtleXByZXNzIGV2ZW50cywKCQkvLyBzbyB3ZSB1c2UgdGhlIHN1cHByZXNzS2V5UHJlc3Mg
ZmxhZyB0byBkZXRlcm1pbmUgaWYgd2UndmUgYWxyZWFkeQoJCS8vIGhhbmRsZWQgdGhlIGtleWRv
d24gZXZlbnQuICM3MjY5CgkJLy8gVW5mb3J0dW5hdGVseSB0aGUgY29kZSBmb3IgJiBpbiBrZXlw
cmVzcyBpcyB0aGUgc2FtZSBhcyB0aGUgdXAgYXJyb3csCgkJLy8gc28gd2UgdXNlIHRoZSBzdXBw
cmVzc0tleVByZXNzUmVwZWF0IGZsYWcgdG8gYXZvaWQgaGFuZGxpbmcga2V5cHJlc3MKCQkvLyBl
dmVudHMgd2hlbiB3ZSBrbm93IHRoZSBrZXlkb3duIGV2ZW50IHdhcyB1c2VkIHRvIG1vZGlmeSB0
aGUKCQkvLyBzZWFyY2ggdGVybS4gIzc3OTkKCQl2YXIgc3VwcHJlc3NLZXlQcmVzcywgc3VwcHJl
c3NLZXlQcmVzc1JlcGVhdCwgc3VwcHJlc3NJbnB1dCwKCQkJbm9kZU5hbWUgPSB0aGlzLmVsZW1l
bnRbIDAgXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLAoJCQlpc1RleHRhcmVhID0gbm9kZU5hbWUg
PT09ICJ0ZXh0YXJlYSIsCgkJCWlzSW5wdXQgPSBub2RlTmFtZSA9PT0gImlucHV0IjsKCgkJLy8g
VGV4dGFyZWFzIGFyZSBhbHdheXMgbXVsdGktbGluZQoJCS8vIElucHV0cyBhcmUgYWx3YXlzIHNp
bmdsZS1saW5lLCBldmVuIGlmIGluc2lkZSBhIGNvbnRlbnRFZGl0YWJsZSBlbGVtZW50CgkJLy8g
SUUgYWxzbyB0cmVhdHMgaW5wdXRzIGFzIGNvbnRlbnRFZGl0YWJsZQoJCS8vIEFsbCBvdGhlciBl
bGVtZW50IHR5cGVzIGFyZSBkZXRlcm1pbmVkIGJ5IHdoZXRoZXIgb3Igbm90IHRoZXkncmUgY29u
dGVudEVkaXRhYmxlCgkJdGhpcy5pc011bHRpTGluZSA9IGlzVGV4dGFyZWEgfHwgIWlzSW5wdXQg
JiYgdGhpcy5faXNDb250ZW50RWRpdGFibGUoIHRoaXMuZWxlbWVudCApOwoKCQl0aGlzLnZhbHVl
TWV0aG9kID0gdGhpcy5lbGVtZW50WyBpc1RleHRhcmVhIHx8IGlzSW5wdXQgPyAidmFsIiA6ICJ0
ZXh0IiBdOwoJCXRoaXMuaXNOZXdNZW51ID0gdHJ1ZTsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1h
dXRvY29tcGxldGUtaW5wdXQiICk7CgkJdGhpcy5lbGVtZW50LmF0dHIoICJhdXRvY29tcGxldGUi
LCAib2ZmIiApOwoKCQl0aGlzLl9vbiggdGhpcy5lbGVtZW50LCB7CgkJCWtleWRvd246IGZ1bmN0
aW9uKCBldmVudCApIHsKCQkJCWlmICggdGhpcy5lbGVtZW50LnByb3AoICJyZWFkT25seSIgKSAp
IHsKCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsKCQkJCQlzdXBwcmVzc0lucHV0ID0gdHJ1
ZTsKCQkJCQlzdXBwcmVzc0tleVByZXNzUmVwZWF0ID0gdHJ1ZTsKCQkJCQlyZXR1cm47CgkJCQl9
CgoJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IGZhbHNlOwoJCQkJc3VwcHJlc3NJbnB1dCA9IGZhbHNl
OwoJCQkJc3VwcHJlc3NLZXlQcmVzc1JlcGVhdCA9IGZhbHNlOwoJCQkJdmFyIGtleUNvZGUgPSAk
LnVpLmtleUNvZGU7CgkJCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgewoJCQkJY2FzZSBrZXlD
b2RlLlBBR0VfVVA6CgkJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IHRydWU7CgkJCQkJdGhpcy5fbW92
ZSggInByZXZpb3VzUGFnZSIsIGV2ZW50ICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlIGtleUNvZGUu
UEFHRV9ET1dOOgoJCQkJCXN1cHByZXNzS2V5UHJlc3MgPSB0cnVlOwoJCQkJCXRoaXMuX21vdmUo
ICJuZXh0UGFnZSIsIGV2ZW50ICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlIGtleUNvZGUuVVA6CgkJ
CQkJc3VwcHJlc3NLZXlQcmVzcyA9IHRydWU7CgkJCQkJdGhpcy5fa2V5RXZlbnQoICJwcmV2aW91
cyIsIGV2ZW50ICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlIGtleUNvZGUuRE9XTjoKCQkJCQlzdXBw
cmVzc0tleVByZXNzID0gdHJ1ZTsKCQkJCQl0aGlzLl9rZXlFdmVudCggIm5leHQiLCBldmVudCAp
OwoJCQkJCWJyZWFrOwoJCQkJY2FzZSBrZXlDb2RlLkVOVEVSOgoKCQkJCQkvLyB3aGVuIG1lbnUg
aXMgb3BlbiBhbmQgaGFzIGZvY3VzCgkJCQkJaWYgKCB0aGlzLm1lbnUuYWN0aXZlICkgewoKCQkJ
CQkJLy8gIzYwNTUgLSBPcGVyYSBzdGlsbCBhbGxvd3MgdGhlIGtleXByZXNzIHRvIG9jY3VyCgkJ
CQkJCS8vIHdoaWNoIGNhdXNlcyBmb3JtcyB0byBzdWJtaXQKCQkJCQkJc3VwcHJlc3NLZXlQcmVz
cyA9IHRydWU7CgkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJCXRoaXMubWVudS5z
ZWxlY3QoIGV2ZW50ICk7CgkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJY2FzZSBrZXlDb2RlLlRBQjoK
CQkJCQlpZiAoIHRoaXMubWVudS5hY3RpdmUgKSB7CgkJCQkJCXRoaXMubWVudS5zZWxlY3QoIGV2
ZW50ICk7CgkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJY2FzZSBrZXlDb2RlLkVTQ0FQRToKCQkJCQlp
ZiAoIHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7CgkJCQkJCWlmICggIXRo
aXMuaXNNdWx0aUxpbmUgKSB7CgkJCQkJCQl0aGlzLl92YWx1ZSggdGhpcy50ZXJtICk7CgkJCQkJ
CX0KCQkJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCgkJCQkJCS8vIERpZmZlcmVudCBicm93c2Vy
cyBoYXZlIGRpZmZlcmVudCBkZWZhdWx0IGJlaGF2aW9yIGZvciBlc2NhcGUKCQkJCQkJLy8gU2lu
Z2xlIHByZXNzIGNhbiBtZWFuIHVuZG8gb3IgY2xlYXIKCQkJCQkJLy8gRG91YmxlIHByZXNzIGlu
IElFIG1lYW5zIGNsZWFyIHRoZSB3aG9sZSBmb3JtCgkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0
KCk7CgkJCQkJfQoJCQkJCWJyZWFrOwoJCQkJZGVmYXVsdDoKCQkJCQlzdXBwcmVzc0tleVByZXNz
UmVwZWF0ID0gdHJ1ZTsKCgkJCQkJLy8gc2VhcmNoIHRpbWVvdXQgc2hvdWxkIGJlIHRyaWdnZXJl
ZCBiZWZvcmUgdGhlIGlucHV0IHZhbHVlIGlzIGNoYW5nZWQKCQkJCQl0aGlzLl9zZWFyY2hUaW1l
b3V0KCBldmVudCApOwoJCQkJCWJyZWFrOwoJCQkJfQoJCQl9LAoJCQlrZXlwcmVzczogZnVuY3Rp
b24oIGV2ZW50ICkgewoJCQkJaWYgKCBzdXBwcmVzc0tleVByZXNzICkgewoJCQkJCXN1cHByZXNz
S2V5UHJlc3MgPSBmYWxzZTsKCQkJCQlpZiAoICF0aGlzLmlzTXVsdGlMaW5lIHx8IHRoaXMubWVu
dS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7CgkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0
KCk7CgkJCQkJfQoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWlmICggc3VwcHJlc3NLZXlQcmVzc1Jl
cGVhdCApIHsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJLy8gUmVwbGljYXRlIHNvbWUga2V5IGhh
bmRsZXJzIHRvIGFsbG93IHRoZW0gdG8gcmVwZWF0IGluIEZpcmVmb3ggYW5kIE9wZXJhCgkJCQl2
YXIga2V5Q29kZSA9ICQudWkua2V5Q29kZTsKCQkJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7
CgkJCQljYXNlIGtleUNvZGUuUEFHRV9VUDoKCQkJCQl0aGlzLl9tb3ZlKCAicHJldmlvdXNQYWdl
IiwgZXZlbnQgKTsKCQkJCQlicmVhazsKCQkJCWNhc2Uga2V5Q29kZS5QQUdFX0RPV046CgkJCQkJ
dGhpcy5fbW92ZSggIm5leHRQYWdlIiwgZXZlbnQgKTsKCQkJCQlicmVhazsKCQkJCWNhc2Uga2V5
Q29kZS5VUDoKCQkJCQl0aGlzLl9rZXlFdmVudCggInByZXZpb3VzIiwgZXZlbnQgKTsKCQkJCQli
cmVhazsKCQkJCWNhc2Uga2V5Q29kZS5ET1dOOgoJCQkJCXRoaXMuX2tleUV2ZW50KCAibmV4dCIs
IGV2ZW50ICk7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0sCgkJCWlucHV0OiBmdW5jdGlvbiggZXZl
bnQgKSB7CgkJCQlpZiAoIHN1cHByZXNzSW5wdXQgKSB7CgkJCQkJc3VwcHJlc3NJbnB1dCA9IGZh
bHNlOwoJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJcmV0dXJuOwoJCQkJfQoJCQkJ
dGhpcy5fc2VhcmNoVGltZW91dCggZXZlbnQgKTsKCQkJfSwKCQkJZm9jdXM6IGZ1bmN0aW9uKCkg
ewoJCQkJdGhpcy5zZWxlY3RlZEl0ZW0gPSBudWxsOwoJCQkJdGhpcy5wcmV2aW91cyA9IHRoaXMu
X3ZhbHVlKCk7CgkJCX0sCgkJCWJsdXI6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWlmICggdGhp
cy5jYW5jZWxCbHVyICkgewoJCQkJCWRlbGV0ZSB0aGlzLmNhbmNlbEJsdXI7CgkJCQkJcmV0dXJu
OwoJCQkJfQoKCQkJCWNsZWFyVGltZW91dCggdGhpcy5zZWFyY2hpbmcgKTsKCQkJCXRoaXMuY2xv
c2UoIGV2ZW50ICk7CgkJCQl0aGlzLl9jaGFuZ2UoIGV2ZW50ICk7CgkJCX0KCQl9ICk7CgoJCXRo
aXMuX2luaXRTb3VyY2UoKTsKCQl0aGlzLm1lbnUgPSAkKCAiPHVsPiIgKQoJCQkuYXBwZW5kVG8o
IHRoaXMuX2FwcGVuZFRvKCkgKQoJCQkubWVudSggewoKCQkJCS8vIGRpc2FibGUgQVJJQSBzdXBw
b3J0LCB0aGUgbGl2ZSByZWdpb24gdGFrZXMgY2FyZSBvZiB0aGF0CgkJCQlyb2xlOiBudWxsCgkJ
CX0gKQoJCQkuaGlkZSgpCgkJCS5tZW51KCAiaW5zdGFuY2UiICk7CgoJCXRoaXMuX2FkZENsYXNz
KCB0aGlzLm1lbnUuZWxlbWVudCwgInVpLWF1dG9jb21wbGV0ZSIsICJ1aS1mcm9udCIgKTsKCQl0
aGlzLl9vbiggdGhpcy5tZW51LmVsZW1lbnQsIHsKCQkJbW91c2Vkb3duOiBmdW5jdGlvbiggZXZl
bnQgKSB7CgoJCQkJLy8gcHJldmVudCBtb3ZpbmcgZm9jdXMgb3V0IG9mIHRoZSB0ZXh0IGZpZWxk
CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKCQkJCS8vIElFIGRvZXNuJ3QgcHJldmVudCBt
b3ZpbmcgZm9jdXMgZXZlbiB3aXRoIGV2ZW50LnByZXZlbnREZWZhdWx0KCkKCQkJCS8vIHNvIHdl
IHNldCBhIGZsYWcgdG8ga25vdyB3aGVuIHdlIHNob3VsZCBpZ25vcmUgdGhlIGJsdXIgZXZlbnQK
CQkJCXRoaXMuY2FuY2VsQmx1ciA9IHRydWU7CgkJCQl0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7
CgkJCQkJZGVsZXRlIHRoaXMuY2FuY2VsQmx1cjsKCgkJCQkJLy8gU3VwcG9ydDogSUUgOCBvbmx5
CgkJCQkJLy8gUmlnaHQgY2xpY2tpbmcgYSBtZW51IGl0ZW0gb3Igc2VsZWN0aW5nIHRleHQgZnJv
bSB0aGUgbWVudSBpdGVtcyB3aWxsCgkJCQkJLy8gcmVzdWx0IGluIGZvY3VzIG1vdmluZyBvdXQg
b2YgdGhlIGlucHV0LiBIb3dldmVyLCB3ZSd2ZSBhbHJlYWR5IHJlY2VpdmVkCgkJCQkJLy8gYW5k
IGlnbm9yZWQgdGhlIGJsdXIgZXZlbnQgYmVjYXVzZSBvZiB0aGUgY2FuY2VsQmx1ciBmbGFnIHNl
dCBhYm92ZS4gU28KCQkJCQkvLyB3ZSByZXN0b3JlIGZvY3VzIHRvIGVuc3VyZSB0aGF0IHRoZSBt
ZW51IGNsb3NlcyBwcm9wZXJseSBiYXNlZCBvbiB0aGUgdXNlcidzCgkJCQkJLy8gbmV4dCBhY3Rp
b25zLgoJCQkJCWlmICggdGhpcy5lbGVtZW50WyAwIF0gIT09ICQudWkuc2FmZUFjdGl2ZUVsZW1l
bnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApICkgewoJCQkJCQl0aGlzLmVsZW1lbnQudHJpZ2dlcigg
ImZvY3VzIiApOwoJCQkJCX0KCQkJCX0gKTsKCQkJfSwKCQkJbWVudWZvY3VzOiBmdW5jdGlvbigg
ZXZlbnQsIHVpICkgewoJCQkJdmFyIGxhYmVsLCBpdGVtOwoKCQkJCS8vIHN1cHBvcnQ6IEZpcmVm
b3gKCQkJCS8vIFByZXZlbnQgYWNjaWRlbnRhbCBhY3RpdmF0aW9uIG9mIG1lbnUgaXRlbXMgaW4g
RmlyZWZveCAoIzcwMjQgIzkxMTgpCgkJCQlpZiAoIHRoaXMuaXNOZXdNZW51ICkgewoJCQkJCXRo
aXMuaXNOZXdNZW51ID0gZmFsc2U7CgkJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50ICYmIC9e
bW91c2UvLnRlc3QoIGV2ZW50Lm9yaWdpbmFsRXZlbnQudHlwZSApICkgewoJCQkJCQl0aGlzLm1l
bnUuYmx1cigpOwoKCQkJCQkJdGhpcy5kb2N1bWVudC5vbmUoICJtb3VzZW1vdmUiLCBmdW5jdGlv
bigpIHsKCQkJCQkJCSQoIGV2ZW50LnRhcmdldCApLnRyaWdnZXIoIGV2ZW50Lm9yaWdpbmFsRXZl
bnQgKTsKCQkJCQkJfSApOwoKCQkJCQkJcmV0dXJuOwoJCQkJCX0KCQkJCX0KCgkJCQlpdGVtID0g
dWkuaXRlbS5kYXRhKCAidWktYXV0b2NvbXBsZXRlLWl0ZW0iICk7CgkJCQlpZiAoIGZhbHNlICE9
PSB0aGlzLl90cmlnZ2VyKCAiZm9jdXMiLCBldmVudCwgeyBpdGVtOiBpdGVtIH0gKSApIHsKCgkJ
CQkJLy8gdXNlIHZhbHVlIHRvIG1hdGNoIHdoYXQgd2lsbCBlbmQgdXAgaW4gdGhlIGlucHV0LCBp
ZiBpdCB3YXMgYSBrZXkgZXZlbnQKCQkJCQlpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQgJiYgL15r
ZXkvLnRlc3QoIGV2ZW50Lm9yaWdpbmFsRXZlbnQudHlwZSApICkgewoJCQkJCQl0aGlzLl92YWx1
ZSggaXRlbS52YWx1ZSApOwoJCQkJCX0KCQkJCX0KCgkJCQkvLyBBbm5vdW5jZSB0aGUgdmFsdWUg
aW4gdGhlIGxpdmVSZWdpb24KCQkJCWxhYmVsID0gdWkuaXRlbS5hdHRyKCAiYXJpYS1sYWJlbCIg
KSB8fCBpdGVtLnZhbHVlOwoJCQkJaWYgKCBsYWJlbCAmJiAkLnRyaW0oIGxhYmVsICkubGVuZ3Ro
ICkgewoJCQkJCXRoaXMubGl2ZVJlZ2lvbi5jaGlsZHJlbigpLmhpZGUoKTsKCQkJCQkkKCAiPGRp
dj4iICkudGV4dCggbGFiZWwgKS5hcHBlbmRUbyggdGhpcy5saXZlUmVnaW9uICk7CgkJCQl9CgkJ
CX0sCgkJCW1lbnVzZWxlY3Q6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJCQl2YXIgaXRlbSA9
IHVpLml0ZW0uZGF0YSggInVpLWF1dG9jb21wbGV0ZS1pdGVtIiApLAoJCQkJCXByZXZpb3VzID0g
dGhpcy5wcmV2aW91czsKCgkJCQkvLyBPbmx5IHRyaWdnZXIgd2hlbiBmb2N1cyB3YXMgbG9zdCAo
Y2xpY2sgb24gbWVudSkKCQkJCWlmICggdGhpcy5lbGVtZW50WyAwIF0gIT09ICQudWkuc2FmZUFj
dGl2ZUVsZW1lbnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApICkgewoJCQkJCXRoaXMuZWxlbWVudC50
cmlnZ2VyKCAiZm9jdXMiICk7CgkJCQkJdGhpcy5wcmV2aW91cyA9IHByZXZpb3VzOwoKCQkJCQkv
LyAjNjEwOSAtIElFIHRyaWdnZXJzIHR3byBmb2N1cyBldmVudHMgYW5kIHRoZSBzZWNvbmQKCQkJ
CQkvLyBpcyBhc3luY2hyb25vdXMsIHNvIHdlIG5lZWQgdG8gcmVzZXQgdGhlIHByZXZpb3VzCgkJ
CQkJLy8gdGVybSBzeW5jaHJvbm91c2x5IGFuZCBhc3luY2hyb25vdXNseSA6LSgKCQkJCQl0aGlz
Ll9kZWxheSggZnVuY3Rpb24oKSB7CgkJCQkJCXRoaXMucHJldmlvdXMgPSBwcmV2aW91czsKCQkJ
CQkJdGhpcy5zZWxlY3RlZEl0ZW0gPSBpdGVtOwoJCQkJCX0gKTsKCQkJCX0KCgkJCQlpZiAoIGZh
bHNlICE9PSB0aGlzLl90cmlnZ2VyKCAic2VsZWN0IiwgZXZlbnQsIHsgaXRlbTogaXRlbSB9ICkg
KSB7CgkJCQkJdGhpcy5fdmFsdWUoIGl0ZW0udmFsdWUgKTsKCQkJCX0KCgkJCQkvLyByZXNldCB0
aGUgdGVybSBhZnRlciB0aGUgc2VsZWN0IGV2ZW50CgkJCQkvLyB0aGlzIGFsbG93cyBjdXN0b20g
c2VsZWN0IGhhbmRsaW5nIHRvIHdvcmsgcHJvcGVybHkKCQkJCXRoaXMudGVybSA9IHRoaXMuX3Zh
bHVlKCk7CgoJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCQkJCXRoaXMuc2VsZWN0ZWRJdGVtID0g
aXRlbTsKCQkJfQoJCX0gKTsKCgkJdGhpcy5saXZlUmVnaW9uID0gJCggIjxkaXY+IiwgewoJCQly
b2xlOiAic3RhdHVzIiwKCQkJImFyaWEtbGl2ZSI6ICJhc3NlcnRpdmUiLAoJCQkiYXJpYS1yZWxl
dmFudCI6ICJhZGRpdGlvbnMiCgkJfSApCgkJCS5hcHBlbmRUbyggdGhpcy5kb2N1bWVudFsgMCBd
LmJvZHkgKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMubGl2ZVJlZ2lvbiwgbnVsbCwgInVpLWhl
bHBlci1oaWRkZW4tYWNjZXNzaWJsZSIgKTsKCgkJLy8gVHVybmluZyBvZmYgYXV0b2NvbXBsZXRl
IHByZXZlbnRzIHRoZSBicm93c2VyIGZyb20gcmVtZW1iZXJpbmcgdGhlCgkJLy8gdmFsdWUgd2hl
biBuYXZpZ2F0aW5nIHRocm91Z2ggaGlzdG9yeSwgc28gd2UgcmUtZW5hYmxlIGF1dG9jb21wbGV0
ZQoJCS8vIGlmIHRoZSBwYWdlIGlzIHVubG9hZGVkIGJlZm9yZSB0aGUgd2lkZ2V0IGlzIGRlc3Ry
b3llZC4gIzc3OTAKCQl0aGlzLl9vbiggdGhpcy53aW5kb3csIHsKCQkJYmVmb3JldW5sb2FkOiBm
dW5jdGlvbigpIHsKCQkJCXRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKCAiYXV0b2NvbXBsZXRlIiAp
OwoJCQl9CgkJfSApOwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJY2xlYXJUaW1lb3V0
KCB0aGlzLnNlYXJjaGluZyApOwoJCXRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKCAiYXV0b2NvbXBs
ZXRlIiApOwoJCXRoaXMubWVudS5lbGVtZW50LnJlbW92ZSgpOwoJCXRoaXMubGl2ZVJlZ2lvbi5y
ZW1vdmUoKTsKCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJdGhp
cy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCQlpZiAoIGtleSA9PT0gInNvdXJjZSIgKSB7CgkJCXRo
aXMuX2luaXRTb3VyY2UoKTsKCQl9CgkJaWYgKCBrZXkgPT09ICJhcHBlbmRUbyIgKSB7CgkJCXRo
aXMubWVudS5lbGVtZW50LmFwcGVuZFRvKCB0aGlzLl9hcHBlbmRUbygpICk7CgkJfQoJCWlmICgg
a2V5ID09PSAiZGlzYWJsZWQiICYmIHZhbHVlICYmIHRoaXMueGhyICkgewoJCQl0aGlzLnhoci5h
Ym9ydCgpOwoJCX0KCX0sCgoJX2lzRXZlbnRUYXJnZXRJbldpZGdldDogZnVuY3Rpb24oIGV2ZW50
ICkgewoJCXZhciBtZW51RWxlbWVudCA9IHRoaXMubWVudS5lbGVtZW50WyAwIF07CgoJCXJldHVy
biBldmVudC50YXJnZXQgPT09IHRoaXMuZWxlbWVudFsgMCBdIHx8CgkJCWV2ZW50LnRhcmdldCA9
PT0gbWVudUVsZW1lbnQgfHwKCQkJJC5jb250YWlucyggbWVudUVsZW1lbnQsIGV2ZW50LnRhcmdl
dCApOwoJfSwKCglfY2xvc2VPbkNsaWNrT3V0c2lkZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCWlm
ICggIXRoaXMuX2lzRXZlbnRUYXJnZXRJbldpZGdldCggZXZlbnQgKSApIHsKCQkJdGhpcy5jbG9z
ZSgpOwoJCX0KCX0sCgoJX2FwcGVuZFRvOiBmdW5jdGlvbigpIHsKCQl2YXIgZWxlbWVudCA9IHRo
aXMub3B0aW9ucy5hcHBlbmRUbzsKCgkJaWYgKCBlbGVtZW50ICkgewoJCQllbGVtZW50ID0gZWxl
bWVudC5qcXVlcnkgfHwgZWxlbWVudC5ub2RlVHlwZSA/CgkJCQkkKCBlbGVtZW50ICkgOgoJCQkJ
dGhpcy5kb2N1bWVudC5maW5kKCBlbGVtZW50ICkuZXEoIDAgKTsKCQl9CgoJCWlmICggIWVsZW1l
bnQgfHwgIWVsZW1lbnRbIDAgXSApIHsKCQkJZWxlbWVudCA9IHRoaXMuZWxlbWVudC5jbG9zZXN0
KCAiLnVpLWZyb250LCBkaWFsb2ciICk7CgkJfQoKCQlpZiAoICFlbGVtZW50Lmxlbmd0aCApIHsK
CQkJZWxlbWVudCA9IHRoaXMuZG9jdW1lbnRbIDAgXS5ib2R5OwoJCX0KCgkJcmV0dXJuIGVsZW1l
bnQ7Cgl9LAoKCV9pbml0U291cmNlOiBmdW5jdGlvbigpIHsKCQl2YXIgYXJyYXksIHVybCwKCQkJ
dGhhdCA9IHRoaXM7CgkJaWYgKCAkLmlzQXJyYXkoIHRoaXMub3B0aW9ucy5zb3VyY2UgKSApIHsK
CQkJYXJyYXkgPSB0aGlzLm9wdGlvbnMuc291cmNlOwoJCQl0aGlzLnNvdXJjZSA9IGZ1bmN0aW9u
KCByZXF1ZXN0LCByZXNwb25zZSApIHsKCQkJCXJlc3BvbnNlKCAkLnVpLmF1dG9jb21wbGV0ZS5m
aWx0ZXIoIGFycmF5LCByZXF1ZXN0LnRlcm0gKSApOwoJCQl9OwoJCX0gZWxzZSBpZiAoIHR5cGVv
ZiB0aGlzLm9wdGlvbnMuc291cmNlID09PSAic3RyaW5nIiApIHsKCQkJdXJsID0gdGhpcy5vcHRp
b25zLnNvdXJjZTsKCQkJdGhpcy5zb3VyY2UgPSBmdW5jdGlvbiggcmVxdWVzdCwgcmVzcG9uc2Ug
KSB7CgkJCQlpZiAoIHRoYXQueGhyICkgewoJCQkJCXRoYXQueGhyLmFib3J0KCk7CgkJCQl9CgkJ
CQl0aGF0LnhociA9ICQuYWpheCggewoJCQkJCXVybDogdXJsLAoJCQkJCWRhdGE6IHJlcXVlc3Qs
CgkJCQkJZGF0YVR5cGU6ICJqc29uIiwKCQkJCQlzdWNjZXNzOiBmdW5jdGlvbiggZGF0YSApIHsK
CQkJCQkJcmVzcG9uc2UoIGRhdGEgKTsKCQkJCQl9LAoJCQkJCWVycm9yOiBmdW5jdGlvbigpIHsK
CQkJCQkJcmVzcG9uc2UoIFtdICk7CgkJCQkJfQoJCQkJfSApOwoJCQl9OwoJCX0gZWxzZSB7CgkJ
CXRoaXMuc291cmNlID0gdGhpcy5vcHRpb25zLnNvdXJjZTsKCQl9Cgl9LAoKCV9zZWFyY2hUaW1l
b3V0OiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJY2xlYXJUaW1lb3V0KCB0aGlzLnNlYXJjaGluZyAp
OwoJCXRoaXMuc2VhcmNoaW5nID0gdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoKCQkJLy8gU2Vh
cmNoIGlmIHRoZSB2YWx1ZSBoYXMgY2hhbmdlZCwgb3IgaWYgdGhlIHVzZXIgcmV0eXBlcyB0aGUg
c2FtZSB2YWx1ZSAoc2VlICM3NDM0KQoJCQl2YXIgZXF1YWxWYWx1ZXMgPSB0aGlzLnRlcm0gPT09
IHRoaXMuX3ZhbHVlKCksCgkJCQltZW51VmlzaWJsZSA9IHRoaXMubWVudS5lbGVtZW50LmlzKCAi
OnZpc2libGUiICksCgkJCQltb2RpZmllcktleSA9IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJs
S2V5IHx8IGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuc2hpZnRLZXk7CgoJCQlpZiAoICFlcXVhbFZh
bHVlcyB8fCAoIGVxdWFsVmFsdWVzICYmICFtZW51VmlzaWJsZSAmJiAhbW9kaWZpZXJLZXkgKSAp
IHsKCQkJCXRoaXMuc2VsZWN0ZWRJdGVtID0gbnVsbDsKCQkJCXRoaXMuc2VhcmNoKCBudWxsLCBl
dmVudCApOwoJCQl9CgkJfSwgdGhpcy5vcHRpb25zLmRlbGF5ICk7Cgl9LAoKCXNlYXJjaDogZnVu
Y3Rpb24oIHZhbHVlLCBldmVudCApIHsKCQl2YWx1ZSA9IHZhbHVlICE9IG51bGwgPyB2YWx1ZSA6
IHRoaXMuX3ZhbHVlKCk7CgoJCS8vIEFsd2F5cyBzYXZlIHRoZSBhY3R1YWwgdmFsdWUsIG5vdCB0
aGUgb25lIHBhc3NlZCBhcyBhbiBhcmd1bWVudAoJCXRoaXMudGVybSA9IHRoaXMuX3ZhbHVlKCk7
CgoJCWlmICggdmFsdWUubGVuZ3RoIDwgdGhpcy5vcHRpb25zLm1pbkxlbmd0aCApIHsKCQkJcmV0
dXJuIHRoaXMuY2xvc2UoIGV2ZW50ICk7CgkJfQoKCQlpZiAoIHRoaXMuX3RyaWdnZXIoICJzZWFy
Y2giLCBldmVudCApID09PSBmYWxzZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJcmV0dXJuIHRoaXMu
X3NlYXJjaCggdmFsdWUgKTsKCX0sCgoJX3NlYXJjaDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXRo
aXMucGVuZGluZysrOwoJCXRoaXMuX2FkZENsYXNzKCAidWktYXV0b2NvbXBsZXRlLWxvYWRpbmci
ICk7CgkJdGhpcy5jYW5jZWxTZWFyY2ggPSBmYWxzZTsKCgkJdGhpcy5zb3VyY2UoIHsgdGVybTog
dmFsdWUgfSwgdGhpcy5fcmVzcG9uc2UoKSApOwoJfSwKCglfcmVzcG9uc2U6IGZ1bmN0aW9uKCkg
ewoJCXZhciBpbmRleCA9ICsrdGhpcy5yZXF1ZXN0SW5kZXg7CgoJCXJldHVybiAkLnByb3h5KCBm
dW5jdGlvbiggY29udGVudCApIHsKCQkJaWYgKCBpbmRleCA9PT0gdGhpcy5yZXF1ZXN0SW5kZXgg
KSB7CgkJCQl0aGlzLl9fcmVzcG9uc2UoIGNvbnRlbnQgKTsKCQkJfQoKCQkJdGhpcy5wZW5kaW5n
LS07CgkJCWlmICggIXRoaXMucGVuZGluZyApIHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCAidWkt
YXV0b2NvbXBsZXRlLWxvYWRpbmciICk7CgkJCX0KCQl9LCB0aGlzICk7Cgl9LAoKCV9fcmVzcG9u
c2U6IGZ1bmN0aW9uKCBjb250ZW50ICkgewoJCWlmICggY29udGVudCApIHsKCQkJY29udGVudCA9
IHRoaXMuX25vcm1hbGl6ZSggY29udGVudCApOwoJCX0KCQl0aGlzLl90cmlnZ2VyKCAicmVzcG9u
c2UiLCBudWxsLCB7IGNvbnRlbnQ6IGNvbnRlbnQgfSApOwoJCWlmICggIXRoaXMub3B0aW9ucy5k
aXNhYmxlZCAmJiBjb250ZW50ICYmIGNvbnRlbnQubGVuZ3RoICYmICF0aGlzLmNhbmNlbFNlYXJj
aCApIHsKCQkJdGhpcy5fc3VnZ2VzdCggY29udGVudCApOwoJCQl0aGlzLl90cmlnZ2VyKCAib3Bl
biIgKTsKCQl9IGVsc2UgewoKCQkJLy8gdXNlIC5fY2xvc2UoKSBpbnN0ZWFkIG9mIC5jbG9zZSgp
IHNvIHdlIGRvbid0IGNhbmNlbCBmdXR1cmUgc2VhcmNoZXMKCQkJdGhpcy5fY2xvc2UoKTsKCQl9
Cgl9LAoKCWNsb3NlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpcy5jYW5jZWxTZWFyY2ggPSB0
cnVlOwoJCXRoaXMuX2Nsb3NlKCBldmVudCApOwoJfSwKCglfY2xvc2U6IGZ1bmN0aW9uKCBldmVu
dCApIHsKCgkJLy8gUmVtb3ZlIHRoZSBoYW5kbGVyIHRoYXQgY2xvc2VzIHRoZSBtZW51IG9uIG91
dHNpZGUgY2xpY2tzCgkJdGhpcy5fb2ZmKCB0aGlzLmRvY3VtZW50LCAibW91c2Vkb3duIiApOwoK
CQlpZiAoIHRoaXMubWVudS5lbGVtZW50LmlzKCAiOnZpc2libGUiICkgKSB7CgkJCXRoaXMubWVu
dS5lbGVtZW50LmhpZGUoKTsKCQkJdGhpcy5tZW51LmJsdXIoKTsKCQkJdGhpcy5pc05ld01lbnUg
PSB0cnVlOwoJCQl0aGlzLl90cmlnZ2VyKCAiY2xvc2UiLCBldmVudCApOwoJCX0KCX0sCgoJX2No
YW5nZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCWlmICggdGhpcy5wcmV2aW91cyAhPT0gdGhpcy5f
dmFsdWUoKSApIHsKCQkJdGhpcy5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50LCB7IGl0ZW06IHRo
aXMuc2VsZWN0ZWRJdGVtIH0gKTsKCQl9Cgl9LAoKCV9ub3JtYWxpemU6IGZ1bmN0aW9uKCBpdGVt
cyApIHsKCgkJLy8gYXNzdW1lIGFsbCBpdGVtcyBoYXZlIHRoZSByaWdodCBmb3JtYXQgd2hlbiB0
aGUgZmlyc3QgaXRlbSBpcyBjb21wbGV0ZQoJCWlmICggaXRlbXMubGVuZ3RoICYmIGl0ZW1zWyAw
IF0ubGFiZWwgJiYgaXRlbXNbIDAgXS52YWx1ZSApIHsKCQkJcmV0dXJuIGl0ZW1zOwoJCX0KCQly
ZXR1cm4gJC5tYXAoIGl0ZW1zLCBmdW4=</Default>
</Parameter>

<Method name="ContentType">
<ClassMethod>1</ClassMethod>
<FormalSpec>FileName</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
     s rashirenie=$p(FileName ,".", $l(FileName,"."))
     q:rashirenie="html" "text/html"
     q:rashirenie="htm" "text/html"
     q:rashirenie="css" "text/css"
     q:rashirenie="js" "application/javascript"
     q:rashirenie="xml" "text/xml"
     q:rashirenie="txt" "text/plain"
     q:rashirenie="tiff" "image/tiff"
     q:rashirenie="tif" "image/x-tiff"
     q:rashirenie="jpeg" "image/jpeg"
     q:rashirenie="jpg" "image/jpeg"
     q:rashirenie="ico" "image/ico"
     q:rashirenie="bmp" "image/bmp"
     q "application/octet-stream"
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
27/09/2016  12:43:23</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
  ;  w "/*"
  ;  zw %response
  ;  w "*/"
   
   
   w $system.Encryption.Base64Decode(..#Frag698064188458032765987386)

   w $system.Encryption.Base64Decode(..#Frag6980641884580322348081360)

   w $system.Encryption.Base64Decode(..#Frag6980641884580351713692968)

   w $system.Encryption.Base64Decode(..#Frag6980641884580315844883907)

   w $system.Encryption.Base64Decode(..#Frag6980641884580392665369402)

   w $system.Encryption.Base64Decode(..#Frag6980641884580331707806236)

   w $system.Encryption.Base64Decode(..#Frag6980641884580381696867754)

   w $system.Encryption.Base64Decode(..#Frag698064188458031339150884)

   w $system.Encryption.Base64Decode(..#Frag6980641884580349596189617)

   w $system.Encryption.Base64Decode(..#Frag6980641884580382854271225)

   w $system.Encryption.Base64Decode(..#Frag6980641884580311395830626)

   w $system.Encryption.Base64Decode(..#Frag6980641884580382862203514)

   w $system.Encryption.Base64Decode(..#Frag6980641884580333078251241)

   w $system.Encryption.Base64Decode(..#Frag6980641884580323083787576)

   w $system.Encryption.Base64Decode(..#Frag6980641884580383308896162)

   w $system.Encryption.Base64Decode(..#Frag6980641884580390635850462)

   w $system.Encryption.Base64Decode(..#Frag6980641884580351053792260)

     Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    s typ="js" 
    if $d(%request.Data("typ",1))
    {
       s typ=%request.Data("typ",1)  
    }
    Do %response.SetHeader("Content-Type",..ContentType(typ))   
    q 1
]]></Implementation>
</Method>
</Class>
</Export>
